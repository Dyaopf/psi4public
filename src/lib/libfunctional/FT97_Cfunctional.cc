#include <libmints/vector.h>
#include "FT97_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

FT97_CFunctional::FT97_CFunctional()
{
    name_ = "FT97_C";
    description_ = "    FT97 Correlation (Involves Ei functions)\n";
    citation_ = "    M. Filatov and W. Theil, Int. J. Quant. Chem., 62, 603-616, 1997\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["c0"] =   3.1090690869654901E-02;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["tspi_m13"] =   2.0678349696646670E-01;
    parameters_["a1"] =   1.6221187669999999E+00;
    parameters_["a2"] =   4.8995807600000002E-01;
    parameters_["a3"] =   1.3790219410000000E+00;
    parameters_["a4"] =   4.9462813529999998E+00;
    parameters_["a5"] =   3.6006120589999999E+00;
    parameters_["kaa0"] =   1.2008017740000001E+00;
    parameters_["kaa1"] =  -8.1290434499999997E-01;
    parameters_["kaa2"] =   8.5961444499999995E-01;
    parameters_["raa1"] =   6.5563882299999998E-01;
    parameters_["raa2"] =   1.0893388479999999E+00;
    parameters_["kab0"] =   1.2915510740000000E+00;
    parameters_["kab1"] =  -3.4906417299999998E-01;
    parameters_["rab1"] =   8.3275879999999997E-02;
    parameters_["k1"] =   9.3901599999999996E-01;
    parameters_["k2"] =   1.7331700000000001E+00;
}
FT97_CFunctional::~FT97_CFunctional()
{
}
void FT97_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double c0 = parameters_["c0"];
    double c = parameters_["c"];
    double tspi_m13 = parameters_["tspi_m13"];
    double a1 = parameters_["a1"];
    double a2 = parameters_["a2"];
    double a3 = parameters_["a3"];
    double a4 = parameters_["a4"];
    double a5 = parameters_["a5"];
    double kaa0 = parameters_["kaa0"];
    double kaa1 = parameters_["kaa1"];
    double kaa2 = parameters_["kaa2"];
    double raa1 = parameters_["raa1"];
    double raa2 = parameters_["raa2"];
    double kab0 = parameters_["kab0"];
    double kab1 = parameters_["kab1"];
    double rab1 = parameters_["rab1"];
    double k1 = parameters_["k1"];
    double k2 = parameters_["k2"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t53913 = tspi_m13*tspi_m13;
                double t53914 = 1.0/pow(rho_b,1.0/3.0);
                double t53915 = a2*a2;
                double t53916 = gamma_bb*gamma_bb;
                double t53917 = 1.0/pow(rho_b,1.6E1/3.0);
                double t53918 = t53913*t53913;
                double t53919 = c*t53914;
                double t53920 = a4*a4;
                double t53921 = 1.0/c;
                double t53922 = 1.0/pow(rho_b,7.0/3.0);
                double t53923 = sqrt(t53919);
                double t53924 = t53920*t53916*t53917*t53918*2.0;
                double t53925 = exp(t53924);
                double t53926 = t53920*t53916*t53917*t53918;
                double t53927 = t53926+1.0;
                double t53928 = 1.0/(t53927*t53927);
                double t53929 = a5*gamma_bb*t53921*t53913*t53922;
                double t53930 = t53929+1.0;
                double t53941 = raa2*t53923;
                double t53931 = exp(-t53941);
                double t53932 = t53931-1.0;
                double t53933 = kaa2*t53932;
                double t53934 = pow(t53919,2.0/5.0);
                double t53942 = raa1*t53934;
                double t53935 = exp(-t53942);
                double t53936 = t53935-1.0;
                double t53937 = kaa1*t53936;
                double t53938 = -kaa0+t53933+t53937;
                double t53939 = 1.0/(t53938*t53938);
                double t53940 = c*c0*t53930*t53914*t53925*t53928*t53939*(2.0/3.0);
                double t53943 = exp(t53940);
                double t53944 = Ei(-t53940);
                double t53945 = 1.0/t53927;
                double t53946 = c*c0*t53930*t53914*t53925*t53939*(2.0/3.0);
                double t53947 = sqrt(t53946);
                v[Q] += scale * c0*rho_b*exp(-(c*c)*1.0/pow(rho_b,2.0/3.0)*1.0/pow(k1*t53923+c*k2*t53914,2.0))*heaviside(c*c0*t53914*(-2.0/3.0)+exp(-t53915*t53916*t53917*t53918)*1.0/sqrt(a3*gamma_bb*t53921*t53913*t53922+1.0)*(kab0-kab1*(exp(-rab1*pow(t53919,4.0/5.0))-1.0))*(t53915*t53916*t53917*t53918+a1*gamma_bb*1.0/pow(rho_b,8.0/3.0)*t53913+1.0)*1.0E5)*(t53943*t53944+((c*c0*t53930*t53914*t53925*t53943*t53944*t53928*t53939*(2.0/3.0)+1.0)*(t53945*t53947*4.0+c*c0*t53930*t53914*t53925*t53928*t53939*(8.0/3.0)+6.0))/(t53945*t53947*6.0+c*c0*t53930*t53914*t53925*t53928*t53939*4.0+3.0))*(1.0/2.0);
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t53950 = tspi_m13*tspi_m13;
                double t53951 = 1.0/pow(rho_b,1.0/3.0);
                double t53952 = a2*a2;
                double t53953 = gamma_bb*gamma_bb;
                double t53954 = 1.0/pow(rho_b,1.6E1/3.0);
                double t53955 = t53950*t53950;
                double t53956 = c*t53951;
                double t53957 = a4*a4;
                double t53958 = 1.0/c;
                double t53959 = 1.0/pow(rho_b,7.0/3.0);
                double t53960 = sqrt(t53956);
                double t53961 = t53953*t53954*t53955*t53957*2.0;
                double t53962 = exp(t53961);
                double t53963 = t53953*t53954*t53955*t53957;
                double t53964 = t53963+1.0;
                double t53965 = 1.0/(t53964*t53964);
                double t53966 = a5*gamma_bb*t53950*t53958*t53959;
                double t53967 = t53966+1.0;
                double t53978 = raa2*t53960;
                double t53968 = exp(-t53978);
                double t53969 = t53968-1.0;
                double t53970 = kaa2*t53969;
                double t53971 = pow(t53956,2.0/5.0);
                double t53979 = raa1*t53971;
                double t53972 = exp(-t53979);
                double t53973 = t53972-1.0;
                double t53974 = kaa1*t53973;
                double t53975 = -kaa0+t53970+t53974;
                double t53976 = 1.0/(t53975*t53975);
                double t53977 = c*c0*t53951*t53962*t53965*t53967*t53976*(2.0/3.0);
                double t53980 = exp(t53977);
                double t53981 = Ei(-t53977);
                double t53982 = 1.0/t53964;
                double t53983 = c*c0*t53951*t53962*t53967*t53976*(2.0/3.0);
                double t53984 = sqrt(t53983);
                double t53985 = t53952*t53953*t53954*t53955;
                double t53986 = pow(t53956,4.0/5.0);
                double t54036 = rab1*t53986;
                double t53987 = exp(-t54036);
                double t53988 = t53987-1.0;
                double t54037 = kab1*t53988;
                double t53989 = kab0-t54037;
                double t53990 = a3*gamma_bb*t53950*t53958*t53959;
                double t53991 = t53990+1.0;
                double t53992 = 1.0/sqrt(t53991);
                double t53993 = 1.0/pow(rho_b,8.0/3.0);
                double t53994 = a1*gamma_bb*t53950*t53993;
                double t53995 = t53985+t53994+1.0;
                double t53996 = c*c;
                double t53997 = 1.0/pow(rho_b,2.0/3.0);
                double t53998 = k1*t53960;
                double t53999 = c*k2*t53951;
                double t54000 = t53998+t53999;
                double t54001 = 1.0/(t54000*t54000);
                double t54041 = t53996*t53997*t54001;
                double t54002 = exp(-t54041);
                double t54003 = c*c0*t53951*t53962*t53980*t53981*t53965*t53967*t53976*(2.0/3.0);
                double t54004 = t54003+1.0;
                double t54005 = t53982*t53984*6.0;
                double t54006 = c*c0*t53951*t53962*t53965*t53967*t53976*4.0;
                double t54007 = t54005+t54006+3.0;
                double t54008 = 1.0/t54007;
                double t54009 = 1.0/pow(rho_b,4.0/3.0);
                double t54010 = 1.0/pow(rho_b,1.1E1/3.0);
                double t54011 = 1.0/sqrt(t53956);
                double t54012 = c*kaa2*raa2*t53968*t54011*t54009*(1.0/6.0);
                double t54013 = 1.0/pow(t53956,3.0/5.0);
                double t54014 = c*kaa1*raa1*t53972*t54013*t54009*(2.0/1.5E1);
                double t54015 = t54012+t54014;
                double t54016 = 1.0/(t53975*t53975*t53975);
                double t54017 = 1.0/pow(rho_b,2.0E1/3.0);
                double t54018 = 1.0/(t53964*t53964*t53964);
                double t54019 = t53982*t53984*4.0;
                double t54020 = c*c0*t53951*t53962*t53965*t53967*t53976*(8.0/3.0);
                double t54021 = t54020+t54019+6.0;
                double t54022 = c*c0*t53962*t53965*t53967*t53976*t54009*(2.0/9.0);
                double t54023 = a5*c0*gamma_bb*t53950*t53962*t53965*t53976*t54010*(1.4E1/9.0);
                double t54024 = c*c0*t53951*t53962*t53965*t53967*t54015*t54016*(4.0/3.0);
                double t54025 = c*c0*t53953*t53962*t53955*t53965*t53957*t53967*t53976*t54017*(6.4E1/9.0);
                double t54027 = c*c0*t53953*t53962*t53955*t53957*t53967*t53976*t54017*t54018*(6.4E1/9.0);
                double t54026 = t54022+t54023+t54024+t54025-t54027;
                double t54028 = c*c0*t53962*t53967*t53976*t54009*(2.0/9.0);
                double t54029 = a5*c0*gamma_bb*t53950*t53962*t53976*t54010*(1.4E1/9.0);
                double t54030 = c*c0*t53951*t53962*t53967*t54015*t54016*(4.0/3.0);
                double t54031 = c*c0*t53953*t53962*t53955*t53957*t53967*t53976*t54017*(6.4E1/9.0);
                double t54032 = t54030+t54031+t54028+t54029;
                double t54033 = 1.0/sqrt(t53983);
                double t54034 = 1.0/pow(rho_b,1.9E1/3.0);
                double t54035 = exp(-t53985);
                double t54038 = t53992*t53995*t53989*t54035*1.0E5;
                double t54045 = c*c0*t53951*(2.0/3.0);
                double t54039 = -t54045+t54038;
                double t54040 = heaviside(t54039);
                double t54042 = t53980*t53981;
                double t54043 = t54021*t54004*t54008;
                double t54044 = t54042+t54043;
                v_rho_b[Q] += scale * c0*t54002*t54044*heaviside(c*c0*t53951*(-2.0/3.0)+t53992*t53995*t53989*exp(-t53952*t53953*t53954*t53955)*1.0E5)*(1.0/2.0)-c0*rho_b*t54002*t54040*(t54004*t54008*(t53982*t54032*t54033*2.0-t53953*t53955*t53965*t53957*t53984*t54034*(6.4E1/3.0)+c*c0*t53962*t53965*t53967*t53976*t54009*(8.0/9.0)+a5*c0*gamma_bb*t53950*t53962*t53965*t53976*t54010*(5.6E1/9.0)+c*c0*t53951*t53962*t53965*t53967*t54015*t54016*(1.6E1/3.0)+c*c0*t53953*t53962*t53955*t53965*t53957*t53967*t53976*t54017*(2.56E2/9.0)-c*c0*t53953*t53962*t53955*t53957*t53967*t53976*t54017*t54018*(2.56E2/9.0))+t54021*t54008*(t54022+t54023+t54024+t54025-t54027+c*c0*t53962*t53980*t53981*t53965*t53967*t53976*t54009*(2.0/9.0)+a5*c0*gamma_bb*t53950*t53962*t53980*t53981*t53965*t53976*t54010*(1.4E1/9.0)+c*c0*t53951*t53962*t53980*t53981*t53965*t53967*t53976*t54026*(2.0/3.0)+c*c0*t53951*t53962*t53980*t53981*t53965*t53967*t54015*t54016*(4.0/3.0)+c*c0*t53953*t53962*t53980*t53981*t53955*t53965*t53957*t53967*t53976*t54017*(6.4E1/9.0)-c*c0*t53953*t53962*t53980*t53981*t53955*t53957*t53967*t53976*t54017*t54018*(6.4E1/9.0))+t53980*t53981*t54026-t54021*t54004*1.0/(t54007*t54007)*(t53982*t54032*t54033*3.0-t53953*t53955*t53965*t53957*t53984*t54034*3.2E1+c*c0*t53962*t53965*t53967*t53976*t54009*(4.0/3.0)+a5*c0*gamma_bb*t53950*t53962*t53965*t53976*t54010*(2.8E1/3.0)+c*c0*t53951*t53962*t53965*t53967*t54015*t54016*8.0+c*c0*t53953*t53962*t53955*t53965*t53957*t53967*t53976*t54017*(1.28E2/3.0)-c*c0*t53953*t53962*t53955*t53957*t53967*t53976*t54017*t54018*(1.28E2/3.0))+(pow(rho_b,1.0/3.0)*(t53964*t53964)*(t53975*t53975)*t53958*t54026*exp(-t53961)*(3.0/2.0))/(c0*t53967))*(1.0/2.0)+c0*rho_b*t54002*t54040*t54044*(1.0/pow(rho_b,5.0/3.0)*t53996*t54001*(2.0/3.0)-t53996*t53997*1.0/(t54000*t54000*t54000)*(c*k2*t54009*(1.0/3.0)+c*k1*t54011*t54009*(1.0/6.0))*2.0)*(1.0/2.0)+c0*rho_b*t54002*t54044*dirac(t54045-t54038)*(c*c0*t54009*(2.0/9.0)-t53992*t53989*t54035*(a1*gamma_bb*t53950*t54010*(8.0/3.0)+t53952*t53953*t53955*t54034*(1.6E1/3.0))*1.0E5+t53952*t53953*t53955*t53992*t53995*t53989*t54034*t54035*(1.6E6/3.0)+a3*gamma_bb*1.0/pow(rho_b,1.0E1/3.0)*t53950*1.0/pow(t53991,3.0/2.0)*t53958*t53995*t53989*t54035*(3.5E5/3.0)-c*kab1*rab1*1.0/pow(t53956,1.0/5.0)*t53992*t53995*t53987*t54035*t54009*(8.0E4/3.0))*(1.0/2.0);
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t54049 = tspi_m13*tspi_m13;
                double t54050 = 1.0/pow(rho_b,1.0/3.0);
                double t54051 = a2*a2;
                double t54052 = gamma_bb*gamma_bb;
                double t54053 = 1.0/pow(rho_b,1.6E1/3.0);
                double t54054 = t54049*t54049;
                double t54055 = c*t54050;
                double t54056 = a4*a4;
                double t54057 = 1.0/c;
                double t54058 = 1.0/pow(rho_b,7.0/3.0);
                double t54059 = sqrt(t54055);
                double t54060 = t54052*t54053*t54054*t54056*2.0;
                double t54061 = exp(t54060);
                double t54062 = t54052*t54053*t54054*t54056;
                double t54063 = t54062+1.0;
                double t54064 = 1.0/(t54063*t54063);
                double t54065 = a5*gamma_bb*t54057*t54049*t54058;
                double t54066 = t54065+1.0;
                double t54078 = raa2*t54059;
                double t54067 = exp(-t54078);
                double t54068 = t54067-1.0;
                double t54069 = kaa2*t54068;
                double t54070 = pow(t54055,2.0/5.0);
                double t54079 = raa1*t54070;
                double t54071 = exp(-t54079);
                double t54072 = t54071-1.0;
                double t54073 = kaa1*t54072;
                double t54074 = -kaa0+t54073+t54069;
                double t54075 = 1.0/(t54074*t54074);
                double t54076 = c*c0*t54050*t54061*t54064*t54066*t54075*(2.0/3.0);
                double t54077 = 1.0/pow(rho_b,8.0/3.0);
                double t54080 = 1.0/pow(rho_b,1.7E1/3.0);
                double t54081 = exp(t54076);
                double t54082 = Ei(-t54076);
                double t54083 = 1.0/t54063;
                double t54084 = c*c0*t54050*t54061*t54066*t54075*(2.0/3.0);
                double t54085 = sqrt(t54084);
                double t54086 = 1.0/(t54063*t54063*t54063);
                double t54087 = t54083*t54085*6.0;
                double t54088 = c*c0*t54050*t54061*t54064*t54066*t54075*4.0;
                double t54089 = t54087+t54088+3.0;
                double t54090 = 1.0/t54089;
                double t54091 = a5*c0*t54061*t54064*t54075*t54049*t54077*(2.0/3.0);
                double t54092 = c*c0*gamma_bb*t54061*t54080*t54054*t54064*t54056*t54066*t54075*(8.0/3.0);
                double t54103 = c*c0*gamma_bb*t54061*t54080*t54054*t54056*t54066*t54075*t54086*(8.0/3.0);
                double t54093 = -t54103+t54091+t54092;
                double t54094 = c*c0*t54050*t54061*t54081*t54064*t54082*t54066*t54075*(2.0/3.0);
                double t54095 = t54094+1.0;
                double t54096 = t54083*t54085*4.0;
                double t54097 = c*c0*t54050*t54061*t54064*t54066*t54075*(8.0/3.0);
                double t54098 = t54096+t54097+6.0;
                double t54099 = a5*c0*t54061*t54075*t54049*t54077*(2.0/3.0);
                double t54100 = c*c0*gamma_bb*t54061*t54080*t54054*t54056*t54066*t54075*(8.0/3.0);
                double t54101 = t54100+t54099;
                double t54102 = 1.0/sqrt(t54084);
                double t54104 = t54051*t54052*t54053*t54054;
                double t54105 = pow(t54055,4.0/5.0);
                double t54122 = rab1*t54105;
                double t54106 = exp(-t54122);
                double t54107 = t54106-1.0;
                double t54123 = kab1*t54107;
                double t54108 = kab0-t54123;
                double t54109 = a3*gamma_bb*t54057*t54049*t54058;
                double t54110 = t54109+1.0;
                double t54111 = 1.0/sqrt(t54110);
                double t54112 = a1*gamma_bb*t54049*t54077;
                double t54113 = t54112+t54104+1.0;
                double t54114 = c*c;
                double t54115 = 1.0/pow(rho_b,2.0/3.0);
                double t54116 = k1*t54059;
                double t54117 = c*k2*t54050;
                double t54118 = t54116+t54117;
                double t54119 = 1.0/(t54118*t54118);
                double t54120 = exp(-t54114*t54115*t54119);
                double t54121 = exp(-t54104);
                v_gamma_bb[Q] += scale * c0*rho_b*t54120*heaviside(c*c0*t54050*(-2.0/3.0)+t54111*t54113*t54108*exp(-t54051*t54052*t54053*t54054)*1.0E5)*(t54090*t54095*(t54101*t54102*t54083*2.0-gamma_bb*t54053*t54054*t54064*t54056*t54085*8.0+a5*c0*t54061*t54064*t54075*t54049*t54077*(8.0/3.0)+c*c0*gamma_bb*t54061*t54080*t54054*t54064*t54056*t54066*t54075*(3.2E1/3.0)-c*c0*gamma_bb*t54061*t54080*t54054*t54056*t54066*t54075*t54086*(3.2E1/3.0))+t54090*t54098*(t54091+t54092+a5*c0*t54061*t54081*t54064*t54082*t54075*t54049*t54077*(2.0/3.0)-c*c0*gamma_bb*t54061*t54080*t54054*t54056*t54066*t54075*t54086*(8.0/3.0)+c*c0*t54050*t54061*t54081*t54064*t54082*t54066*t54075*t54093*(2.0/3.0)+c*c0*gamma_bb*t54061*t54080*t54054*t54081*t54064*t54082*t54056*t54066*t54075*(8.0/3.0)-c*c0*gamma_bb*t54061*t54080*t54054*t54081*t54082*t54056*t54066*t54075*t54086*(8.0/3.0))+t54081*t54082*t54093-t54095*1.0/(t54089*t54089)*t54098*(t54101*t54102*t54083*3.0-gamma_bb*t54053*t54054*t54064*t54056*t54085*1.2E1+a5*c0*t54061*t54064*t54075*t54049*t54077*4.0+c*c0*gamma_bb*t54061*t54080*t54054*t54064*t54056*t54066*t54075*1.6E1-c*c0*gamma_bb*t54061*t54080*t54054*t54056*t54066*t54075*t54086*1.6E1)+(pow(rho_b,1.0/3.0)*(t54063*t54063)*(t54074*t54074)*t54057*t54093*exp(-t54060)*(3.0/2.0))/(c0*t54066))*(1.0/2.0)-c0*rho_b*t54120*dirac(c*c0*t54050*(2.0/3.0)-t54111*t54121*t54113*t54108*1.0E5)*(t54081*t54082+t54090*t54095*t54098)*(t54111*t54121*t54108*(a1*t54049*t54077+gamma_bb*t54051*t54053*t54054*2.0)*-1.0E5+a3*1.0/pow(t54110,3.0/2.0)*t54121*t54113*t54108*t54057*t54049*t54058*5.0E4+gamma_bb*t54111*t54121*t54113*t54051*t54053*t54054*t54108*2.0E5)*(1.0/2.0);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t54129 = tspi_m13*tspi_m13;
                double t54130 = 1.0/pow(rho_b,1.0/3.0);
                double t54131 = a2*a2;
                double t54132 = gamma_bb*gamma_bb;
                double t54133 = 1.0/pow(rho_b,1.6E1/3.0);
                double t54134 = t54129*t54129;
                double t54135 = c*t54130;
                double t54136 = a4*a4;
                double t54137 = t54132*t54133*t54134*t54136*2.0;
                double t54138 = exp(t54137);
                double t54139 = 1.0/c;
                double t54140 = 1.0/pow(rho_b,7.0/3.0);
                double t54141 = sqrt(t54135);
                double t54142 = t54132*t54133*t54134*t54136;
                double t54143 = t54142+1.0;
                double t54144 = 1.0/(t54143*t54143);
                double t54145 = a5*gamma_bb*t54140*t54129*t54139;
                double t54146 = t54145+1.0;
                double t54157 = raa2*t54141;
                double t54147 = exp(-t54157);
                double t54148 = t54147-1.0;
                double t54149 = kaa2*t54148;
                double t54150 = pow(t54135,2.0/5.0);
                double t54158 = raa1*t54150;
                double t54151 = exp(-t54158);
                double t54152 = t54151-1.0;
                double t54153 = kaa1*t54152;
                double t54154 = -kaa0+t54153+t54149;
                double t54155 = 1.0/(t54154*t54154);
                double t54156 = c*c0*t54130*t54144*t54146*t54155*t54138*(2.0/3.0);
                double t54159 = 1.0/t54143;
                double t54160 = 1.0/pow(rho_b,4.0/3.0);
                double t54161 = c*c0*t54130*t54146*t54155*t54138*(2.0/3.0);
                double t54162 = sqrt(t54161);
                double t54163 = 1.0/pow(rho_b,1.1E1/3.0);
                double t54164 = 1.0/sqrt(t54135);
                double t54165 = c*kaa2*raa2*t54160*t54164*t54147*(1.0/6.0);
                double t54166 = 1.0/pow(t54135,3.0/5.0);
                double t54167 = c*kaa1*raa1*t54151*t54160*t54166*(2.0/1.5E1);
                double t54168 = t54165+t54167;
                double t54169 = 1.0/(t54154*t54154*t54154);
                double t54170 = 1.0/pow(rho_b,2.0E1/3.0);
                double t54171 = exp(t54156);
                double t54172 = Ei(-t54156);
                double t54173 = 1.0/(t54143*t54143*t54143);
                double t54174 = t54162*t54159*6.0;
                double t54175 = c*c0*t54130*t54144*t54146*t54155*t54138*4.0;
                double t54176 = t54174+t54175+3.0;
                double t54177 = 1.0/t54176;
                double t54178 = c*c0*t54160*t54144*t54146*t54155*t54138*(2.0/9.0);
                double t54179 = a5*c0*gamma_bb*t54144*t54163*t54155*t54129*t54138*(1.4E1/9.0);
                double t54180 = c*c0*t54130*t54144*t54146*t54138*t54168*t54169*(4.0/3.0);
                double t54181 = c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54155*t54138*(6.4E1/9.0);
                double t54183 = c*c0*t54132*t54134*t54170*t54136*t54146*t54155*t54173*t54138*(6.4E1/9.0);
                double t54182 = t54180+t54181-t54183+t54178+t54179;
                double t54184 = c*c0*t54130*t54144*t54171*t54172*t54146*t54155*t54138*(2.0/3.0);
                double t54185 = t54184+1.0;
                double t54186 = t54162*t54159*4.0;
                double t54187 = c*c0*t54130*t54144*t54146*t54155*t54138*(8.0/3.0);
                double t54188 = t54186+t54187+6.0;
                double t54189 = c*c0*t54160*t54146*t54155*t54138*(2.0/9.0);
                double t54190 = a5*c0*gamma_bb*t54163*t54155*t54129*t54138*(1.4E1/9.0);
                double t54191 = c*c0*t54130*t54146*t54138*t54168*t54169*(4.0/3.0);
                double t54192 = c*c0*t54132*t54134*t54170*t54136*t54146*t54155*t54138*(6.4E1/9.0);
                double t54193 = t54190+t54191+t54192+t54189;
                double t54194 = 1.0/sqrt(t54161);
                double t54195 = 1.0/pow(rho_b,1.9E1/3.0);
                double t54196 = t54131*t54132*t54133*t54134;
                double t54197 = pow(t54135,4.0/5.0);
                double t54215 = rab1*t54197;
                double t54198 = exp(-t54215);
                double t54199 = t54198-1.0;
                double t54216 = kab1*t54199;
                double t54200 = kab0-t54216;
                double t54201 = a3*gamma_bb*t54140*t54129*t54139;
                double t54202 = t54201+1.0;
                double t54203 = 1.0/sqrt(t54202);
                double t54204 = 1.0/pow(rho_b,8.0/3.0);
                double t54205 = a1*gamma_bb*t54204*t54129;
                double t54206 = t54205+t54196+1.0;
                double t54207 = c*c;
                double t54208 = 1.0/pow(rho_b,2.0/3.0);
                double t54209 = k1*t54141;
                double t54210 = c*k2*t54130;
                double t54211 = t54210+t54209;
                double t54212 = 1.0/(t54211*t54211);
                double t54218 = t54212*t54207*t54208;
                double t54213 = exp(-t54218);
                double t54214 = exp(-t54196);
                double t54217 = c*c0*t54130*(2.0/3.0);
                double t54219 = t54193*t54194*t54159*2.0;
                double t54220 = c*c0*t54160*t54144*t54146*t54155*t54138*(8.0/9.0);
                double t54221 = a5*c0*gamma_bb*t54144*t54163*t54155*t54129*t54138*(5.6E1/9.0);
                double t54222 = c*c0*t54130*t54144*t54146*t54138*t54168*t54169*(1.6E1/3.0);
                double t54223 = c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54155*t54138*(2.56E2/9.0);
                double t54274 = t54132*t54134*t54144*t54162*t54136*t54195*(6.4E1/3.0);
                double t54275 = c*c0*t54132*t54134*t54170*t54136*t54146*t54155*t54173*t54138*(2.56E2/9.0);
                double t54224 = t54220+t54221+t54222+t54223+t54219-t54274-t54275;
                double t54225 = c*c0*t54160*t54144*t54171*t54172*t54146*t54155*t54138*(2.0/9.0);
                double t54226 = c*c0*t54130*t54144*t54171*t54172*t54146*t54138*t54168*t54169*(4.0/3.0);
                double t54227 = c*c0*t54130*t54144*t54171*t54172*t54146*t54155*t54182*t54138*(2.0/3.0);
                double t54228 = a5*c0*gamma_bb*t54144*t54171*t54163*t54172*t54155*t54129*t54138*(1.4E1/9.0);
                double t54229 = c*c0*t54132*t54134*t54170*t54144*t54171*t54136*t54172*t54146*t54155*t54138*(6.4E1/9.0);
                double t54278 = c*c0*t54132*t54134*t54170*t54171*t54136*t54172*t54146*t54155*t54173*t54138*(6.4E1/9.0);
                double t54230 = t54180+t54225+t54181+t54226+t54227-t54183+t54228+t54229+t54178+t54179-t54278;
                double t54231 = t54136*t54136;
                double t54232 = t54132*t54132;
                double t54233 = t54134*t54134;
                double t54234 = raa2*raa2;
                double t54235 = c*kaa2*t54140*t54234*t54147*(1.0/3.6E1);
                double t54236 = raa1*raa1;
                double t54237 = 1.0/pow(t54135,6.0/5.0);
                double t54238 = kaa1*t54204*t54151*t54207*t54236*t54237*(4.0/2.25E2);
                double t54239 = 1.0/pow(t54135,3.0/2.0);
                double t54240 = kaa2*raa2*t54204*t54207*t54147*t54239*(1.0/3.6E1);
                double t54241 = 1.0/pow(t54135,8.0/5.0);
                double t54242 = kaa1*raa1*t54204*t54151*t54241*t54207*(2.0/7.5E1);
                double t54252 = c*kaa2*raa2*t54140*t54164*t54147*(2.0/9.0);
                double t54253 = c*kaa1*raa1*t54140*t54151*t54166*(8.0/4.5E1);
                double t54243 = t54240+t54242-t54252+t54235-t54253+t54238;
                double t54244 = t54168*t54168;
                double t54245 = 1.0/(t54154*t54154*t54154*t54154);
                double t54246 = 1.0/pow(rho_b,1.4E1/3.0);
                double t54247 = 1.0/pow(rho_b,1.0E1);
                double t54248 = 1.0/pow(rho_b,1.3E1);
                double t54249 = 1.0/pow(rho_b,2.3E1/3.0);
                double t54250 = 1.0/pow(rho_b,1.0E1/3.0);
                double t54251 = 1.0/t54146;
                double t54254 = t54182*t54182;
                double t54255 = 1.0/(t54143*t54143*t54143*t54143);
                double t54256 = c*c0*t54140*t54144*t54146*t54155*t54138*(8.0/2.7E1);
                double t54257 = c*c0*t54130*t54144*t54244*t54146*t54245*t54138*4.0;
                double t54258 = a5*c0*gamma_bb*t54144*t54155*t54129*t54138*t54246*(5.6E1/9.0);
                double t54259 = c*c0*t54160*t54144*t54146*t54138*t54168*t54169*(8.0/9.0);
                double t54260 = a5*c0*gamma_bb*t54144*t54163*t54129*t54138*t54168*t54169*(5.6E1/9.0);
                double t54261 = a5*c0*gamma_bb*t54132*t54134*t54144*t54136*t54155*t54129*t54138*t54247*(8.96E2/2.7E1);
                double t54262 = c*c0*t54231*t54232*t54233*t54144*t54146*t54155*t54138*t54248*(2.048E3/2.7E1);
                double t54263 = c*c0*t54231*t54232*t54233*t54146*t54155*t54138*t54255*t54248*(1.024E3/9.0);
                double t54264 = c*c0*t54132*t54134*t54144*t54136*t54146*t54155*t54138*t54249*(4.48E2/9.0);
                double t54265 = c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54138*t54168*t54169*(2.56E2/9.0);
                double t54298 = c*c0*t54130*t54144*t54243*t54146*t54138*t54169*(4.0/3.0);
                double t54299 = a5*c0*gamma_bb*t54132*t54134*t54136*t54155*t54173*t54129*t54138*t54247*(8.96E2/2.7E1);
                double t54300 = c*c0*t54231*t54232*t54233*t54146*t54155*t54173*t54138*t54248*(4.096E3/2.7E1);
                double t54301 = c*c0*t54132*t54134*t54136*t54146*t54155*t54173*t54138*t54249*(4.48E2/9.0);
                double t54302 = c*c0*t54132*t54134*t54170*t54136*t54146*t54173*t54138*t54168*t54169*(2.56E2/9.0);
                double t54266 = -t54300-t54301-t54302+t54260+t54261+t54262+t54263+t54264+t54256+t54265+t54257+t54258+t54259-t54298-t54299;
                double t54267 = 1.0/(t54176*t54176);
                double t54268 = t54193*t54194*t54159*3.0;
                double t54269 = c*c0*t54160*t54144*t54146*t54155*t54138*(4.0/3.0);
                double t54270 = a5*c0*gamma_bb*t54144*t54163*t54155*t54129*t54138*(2.8E1/3.0);
                double t54271 = c*c0*t54130*t54144*t54146*t54138*t54168*t54169*8.0;
                double t54272 = c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54155*t54138*(1.28E2/3.0);
                double t54276 = t54132*t54134*t54144*t54162*t54136*t54195*3.2E1;
                double t54277 = c*c0*t54132*t54134*t54170*t54136*t54146*t54155*t54173*t54138*(1.28E2/3.0);
                double t54273 = t54270+t54271+t54272-t54276+t54268-t54277+t54269;
                double t54279 = c*c0*t54140*t54146*t54155*t54138*(8.0/2.7E1);
                double t54280 = a5*c0*gamma_bb*t54155*t54129*t54138*t54246*(5.6E1/9.0);
                double t54281 = c*c0*t54160*t54146*t54138*t54168*t54169*(8.0/9.0);
                double t54282 = c*c0*t54130*t54244*t54146*t54245*t54138*4.0;
                double t54283 = a5*c0*gamma_bb*t54132*t54134*t54136*t54155*t54129*t54138*t54247*(8.96E2/2.7E1);
                double t54284 = a5*c0*gamma_bb*t54163*t54129*t54138*t54168*t54169*(5.6E1/9.0);
                double t54285 = c*c0*t54231*t54232*t54233*t54146*t54155*t54138*t54248*(2.048E3/2.7E1);
                double t54286 = c*c0*t54132*t54134*t54136*t54146*t54155*t54138*t54249*(4.48E2/9.0);
                double t54287 = c*c0*t54132*t54134*t54170*t54136*t54146*t54138*t54168*t54169*(2.56E2/9.0);
                double t54288 = t54280+t54281+t54282+t54283+t54284+t54285+t54286+t54287+t54279-c*c0*t54130*t54243*t54146*t54138*t54169*(4.0/3.0);
                double t54289 = t54193*t54193;
                double t54290 = 1.0/pow(t54161,3.0/2.0);
                double t54291 = 1.0/pow(rho_b,2.2E1/3.0);
                double t54292 = 1.0/pow(rho_b,3.8E1/3.0);
                double t54293 = 1.0/c0;
                double t54294 = exp(-t54137);
                double t54295 = t54143*t54143;
                double t54296 = t54154*t54154;
                double t54297 = pow(rho_b,1.0/3.0);
                double t54303 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t54304 = t54200*t54203*t54214*t54206*1.0E5;
                double t54305 = t54304-t54217;
                double t54306 = heaviside(t54305);
                double t54307 = t54171*t54172;
                double t54308 = t54185*t54177*t54188;
                double t54309 = t54307+t54308;
                double t54310 = t54131*t54132*t54134*t54195*(1.6E1/3.0);
                double t54311 = a1*gamma_bb*t54163*t54129*(8.0/3.0);
                double t54312 = t54310+t54311;
                double t54313 = 1.0/(c*c);
                double t54314 = 1.0/pow(t54135,1.0/5.0);
                double t54315 = 1.0/pow(t54202,3.0/2.0);
                double t54316 = 1.0/pow(rho_b,5.0/3.0);
                double t54317 = t54212*t54207*t54316*(2.0/3.0);
                double t54318 = 1.0/(t54211*t54211*t54211);
                double t54319 = c*k2*t54160*(1.0/3.0);
                double t54320 = c*k1*t54160*t54164*(1.0/6.0);
                double t54321 = t54320+t54319;
                double t54335 = t54321*t54207*t54208*t54318*2.0;
                double t54322 = t54317-t54335;
                double t54323 = t54224*t54185*t54177;
                double t54324 = t54171*t54172*t54182;
                double t54325 = t54230*t54177*t54188;
                double t54326 = t54251*t54182*t54139*t54293*t54294*t54295*t54296*t54297*(3.0/2.0);
                double t54330 = t54273*t54185*t54267*t54188;
                double t54327 = -t54330+t54323+t54324+t54325+t54326;
                double t54328 = -t54304+t54217;
                double t54329 = dirac(t54328);
                double t54331 = c*c0*t54160*(2.0/9.0);
                double t54332 = t54200*t54131*t54203*t54132*t54214*t54134*t54206*t54195*(1.6E6/3.0);
                double t54333 = a3*gamma_bb*t54200*t54214*t54250*t54206*t54315*t54129*t54139*(3.5E5/3.0);
                double t54336 = t54200*t54203*t54312*t54214*1.0E5;
                double t54337 = c*kab1*rab1*t54203*t54160*t54214*t54206*t54314*t54198*(8.0E4/3.0);
                double t54334 = t54331+t54332+t54333-t54336-t54337;
                v_rho_b_rho_b[Q] += scale * -c0*t54213*t54327*heaviside(c*c0*t54130*(-2.0/3.0)+t54200*t54203*t54206*exp(-t54131*t54132*t54133*t54134)*1.0E5)+c0*t54213*t54334*t54309*dirac(t54217-t54200*t54203*t54214*t54206*1.0E5)+c0*t54213*t54322*t54306*t54309+c0*rho_b*t54213*t54306*(t54185*t54177*(-t54290*t54159*t54289+t54194*t54159*t54288*2.0-t54132*t54134*t54144*t54162*t54136*t54291*(1.216E3/9.0)+t54231*t54232*t54233*t54162*t54173*t54292*(2.048E3/9.0)+c*c0*t54140*t54144*t54146*t54155*t54138*(3.2E1/2.7E1)-t54132*t54134*t54144*t54136*t54193*t54194*t54195*(6.4E1/3.0)+a5*c0*gamma_bb*t54144*t54155*t54129*t54138*t54246*(2.24E2/9.0)+c*c0*t54130*t54144*t54244*t54146*t54245*t54138*1.6E1-c*c0*t54130*t54144*t54243*t54146*t54138*t54169*(1.6E1/3.0)+c*c0*t54160*t54144*t54146*t54138*t54168*t54169*(3.2E1/9.0)+a5*c0*gamma_bb*t54144*t54163*t54129*t54138*t54168*t54169*(2.24E2/9.0)+c*c0*t54231*t54232*t54233*t54144*t54146*t54155*t54138*t54248*(8.192E3/2.7E1)-c*c0*t54231*t54232*t54233*t54146*t54155*t54173*t54138*t54248*(1.6384E4/2.7E1)+c*c0*t54231*t54232*t54233*t54146*t54155*t54138*t54255*t54248*(4.096E3/9.0)+c*c0*t54132*t54134*t54144*t54136*t54146*t54155*t54138*t54249*(1.792E3/9.0)-c*c0*t54132*t54134*t54136*t54146*t54155*t54173*t54138*t54249*(1.792E3/9.0)+a5*c0*gamma_bb*t54132*t54134*t54144*t54136*t54155*t54129*t54138*t54247*(3.584E3/2.7E1)-a5*c0*gamma_bb*t54132*t54134*t54136*t54155*t54173*t54129*t54138*t54247*(3.584E3/2.7E1)+c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54138*t54168*t54169*(1.024E3/9.0)-c*c0*t54132*t54134*t54170*t54136*t54146*t54173*t54138*t54168*t54169*(1.024E3/9.0))+t54230*t54224*t54177*2.0+t54171*t54172*t54254+t54171*t54172*t54266+t54177*t54188*(t54260+t54261+t54262+t54254+t54263+t54264+t54256+t54265+t54257+t54258+t54259+(t54182*(1.0/3.0))/rho_b+(t54182*t54168*2.0)/t54154+t54132*t54134*t54136*t54182*t54195*(3.2E1/3.0)-t54132*t54134*t54136*t54182*t54159*t54195*(3.2E1/3.0)+a5*gamma_bb*t54250*t54251*t54182*t54129*t54139*(7.0/3.0)-c*c0*t54130*t54144*t54243*t54146*t54138*t54169*(4.0/3.0)+c*c0*t54140*t54144*t54171*t54172*t54146*t54155*t54138*(8.0/2.7E1)+a5*c0*gamma_bb*t54144*t54171*t54172*t54155*t54129*t54138*t54246*(5.6E1/9.0)+c*c0*t54130*t54144*t54171*t54172*t54244*t54146*t54245*t54138*4.0+c*c0*t54130*t54144*t54171*t54172*t54146*t54155*t54254*t54138*(2.0/3.0)-c*c0*t54130*t54144*t54171*t54243*t54172*t54146*t54138*t54169*(4.0/3.0)+c*c0*t54130*t54144*t54171*t54172*t54146*t54155*t54138*t54266*(2.0/3.0)-c*c0*t54231*t54232*t54233*t54146*t54155*t54173*t54138*t54248*(4.096E3/2.7E1)+c*c0*t54160*t54144*t54171*t54172*t54146*t54155*t54182*t54138*(4.0/9.0)-c*c0*t54132*t54134*t54136*t54146*t54155*t54173*t54138*t54249*(4.48E2/9.0)+c*c0*t54160*t54144*t54171*t54172*t54146*t54138*t54168*t54169*(8.0/9.0)-a5*c0*gamma_bb*t54132*t54134*t54136*t54155*t54173*t54129*t54138*t54247*(8.96E2/2.7E1)+a5*c0*gamma_bb*t54144*t54171*t54163*t54172*t54155*t54182*t54129*t54138*(2.8E1/9.0)+a5*c0*gamma_bb*t54144*t54171*t54163*t54172*t54129*t54138*t54168*t54169*(5.6E1/9.0)+c*c0*t54130*t54144*t54171*t54172*t54146*t54182*t54138*t54168*t54169*(8.0/3.0)-c*c0*t54132*t54134*t54170*t54136*t54146*t54173*t54138*t54168*t54169*(2.56E2/9.0)+c*c0*t54231*t54232*t54233*t54144*t54171*t54172*t54146*t54155*t54138*t54248*(2.048E3/2.7E1)-c*c0*t54231*t54232*t54233*t54171*t54172*t54146*t54155*t54173*t54138*t54248*(4.096E3/2.7E1)+c*c0*t54231*t54232*t54233*t54171*t54172*t54146*t54155*t54138*t54255*t54248*(1.024E3/9.0)+c*c0*t54132*t54134*t54144*t54171*t54136*t54172*t54146*t54155*t54138*t54249*(4.48E2/9.0)-c*c0*t54132*t54134*t54171*t54136*t54172*t54146*t54155*t54173*t54138*t54249*(4.48E2/9.0)+a5*c0*gamma_bb*t54132*t54134*t54144*t54171*t54136*t54172*t54155*t54129*t54138*t54247*(8.96E2/2.7E1)-a5*c0*gamma_bb*t54132*t54134*t54171*t54136*t54172*t54155*t54173*t54129*t54138*t54247*(8.96E2/2.7E1)+c*c0*t54132*t54134*t54170*t54144*t54171*t54136*t54172*t54146*t54155*t54182*t54138*(1.28E2/9.0)-c*c0*t54132*t54134*t54170*t54171*t54136*t54172*t54146*t54155*t54173*t54182*t54138*(1.28E2/9.0)+c*c0*t54132*t54134*t54170*t54144*t54171*t54136*t54172*t54146*t54138*t54168*t54169*(2.56E2/9.0)-c*c0*t54132*t54134*t54170*t54171*t54136*t54172*t54146*t54173*t54138*t54168*t54169*(2.56E2/9.0))-t54185*t54267*t54188*(t54290*t54159*t54289*(-3.0/2.0)+t54194*t54159*t54288*3.0-t54132*t54134*t54144*t54162*t54136*t54291*(6.08E2/3.0)+t54231*t54232*t54233*t54162*t54173*t54292*(1.024E3/3.0)+c*c0*t54140*t54144*t54146*t54155*t54138*(1.6E1/9.0)-t54132*t54134*t54144*t54136*t54193*t54194*t54195*3.2E1+a5*c0*gamma_bb*t54144*t54155*t54129*t54138*t54246*(1.12E2/3.0)+c*c0*t54130*t54144*t54244*t54146*t54245*t54138*2.4E1-c*c0*t54130*t54144*t54243*t54146*t54138*t54169*8.0+c*c0*t54160*t54144*t54146*t54138*t54168*t54169*(1.6E1/3.0)+a5*c0*gamma_bb*t54144*t54163*t54129*t54138*t54168*t54169*(1.12E2/3.0)+c*c0*t54231*t54232*t54233*t54144*t54146*t54155*t54138*t54248*(4.096E3/9.0)-c*c0*t54231*t54232*t54233*t54146*t54155*t54173*t54138*t54248*(8.192E3/9.0)+c*c0*t54231*t54232*t54233*t54146*t54155*t54138*t54255*t54248*(2.048E3/3.0)+c*c0*t54132*t54134*t54144*t54136*t54146*t54155*t54138*t54249*(8.96E2/3.0)-c*c0*t54132*t54134*t54136*t54146*t54155*t54173*t54138*t54249*(8.96E2/3.0)+a5*c0*gamma_bb*t54132*t54134*t54144*t54136*t54155*t54129*t54138*t54247*(1.792E3/9.0)-a5*c0*gamma_bb*t54132*t54134*t54136*t54155*t54173*t54129*t54138*t54247*(1.792E3/9.0)+c*c0*t54132*t54134*t54170*t54144*t54136*t54146*t54138*t54168*t54169*(5.12E2/3.0)-c*c0*t54132*t54134*t54170*t54136*t54146*t54173*t54138*t54168*t54169*(5.12E2/3.0))-t54230*t54273*t54267*t54188*2.0-t54224*t54273*t54185*t54267*2.0+(t54273*t54273)*1.0/(t54176*t54176*t54176)*t54185*t54188*2.0-t54251*t54208*t54182*t54139*t54293*t54294*t54295*t54296*(1.0/2.0)+t54251*t54254*t54139*t54293*t54294*t54295*t54296*t54297*(3.0/2.0)+t54251*t54139*t54266*t54293*t54294*t54295*t54296*t54297*(3.0/2.0)-t54251*t54154*t54182*t54139*t54293*t54168*t54294*t54295*t54297*3.0+t54132*t54303*t54134*t54143*t54251*t54136*t54182*t54139*t54293*t54294*t54296*1.6E1-t54132*t54303*t54134*t54251*t54136*t54182*t54139*t54293*t54294*t54295*t54296*1.6E1-a5*gamma_bb*1.0/(rho_b*rho_b*rho_b)*t54313*1.0/(t54146*t54146)*t54182*t54129*t54293*t54294*t54295*t54296*(7.0/2.0))*(1.0/2.0)-c0*rho_b*t54213*t54322*t54306*t54327-c0*rho_b*t54213*t54334*t54327*t54329+c0*rho_b*t54213*(t54322*t54322)*t54306*t54309*(1.0/2.0)-c0*rho_b*t54213*t54309*t54329*(c*c0*t54140*(8.0/2.7E1)-t54200*t54203*t54214*(a1*gamma_bb*t54129*t54246*(8.8E1/9.0)+t54131*t54132*t54134*t54291*(3.04E2/9.0))*1.0E5+t54200*t54131*t54203*t54132*t54214*t54134*t54206*t54291*(3.04E7/9.0)+t54200*t54131*t54203*t54132*t54312*t54214*t54134*t54195*(3.2E6/3.0)-t54200*(t54131*t54131)*t54203*t54214*t54232*t54206*t54233*t54292*(2.56E7/9.0)-(a3*a3)*t54200*1.0/pow(t54202,5.0/2.0)*t54132*t54214*t54313*t54134*t54170*t54206*(1.225E6/3.0)+kab1*(rab1*rab1)*t54203*t54204*t54214*t54206*1.0/pow(t54135,2.0/5.0)*t54207*t54198*(6.4E4/9.0)+a3*gamma_bb*t54200*t54312*t54214*t54250*t54315*t54129*t54139*(7.0E5/3.0)-c*kab1*rab1*t54140*t54203*t54214*t54206*t54314*t54198*(3.2E5/9.0)-c*kab1*rab1*t54203*t54312*t54160*t54214*t54314*t54198*(1.6E5/3.0)+kab1*rab1*t54203*t54204*t54214*t54206*t54207*t54237*t54198*(1.6E4/9.0)+a3*gamma_bb*1.0/pow(rho_b,1.3E1/3.0)*t54200*t54214*t54206*t54315*t54129*t54139*(3.5E6/9.0)+a3*gamma_bb*kab1*rab1*t54214*t54206*t54314*t54315*t54129*t54246*t54198*(5.6E5/9.0)-a3*gamma_bb*1.0/pow(rho_b,2.9E1/3.0)*t54200*t54131*t54132*t54214*t54134*t54206*t54315*t54129*t54139*(1.12E7/9.0)+c*kab1*rab1*t54131*t54203*t54132*t54214*t54134*t54206*t54314*t54249*t54198*(2.56E6/9.0))*(1.0/2.0)-c0*rho_b*t54213*t54306*t54309*(t54212*t54204*t54207*(1.0E1/9.0)-t54321*t54207*t54316*t54318*(8.0/3.0)+1.0/(t54211*t54211*t54211*t54211)*(t54321*t54321)*t54207*t54208*6.0-t54207*t54208*t54318*(c*k2*t54140*(4.0/9.0)+c*k1*t54140*t54164*(2.0/9.0)-k1*t54204*t54207*t54239*(1.0/3.6E1))*2.0)*(1.0/2.0)-c0*rho_b*t54213*(t54334*t54334)*t54309*dirac(t54328,1.0)*(1.0/2.0)+c0*rho_b*t54213*t54322*t54334*t54309*t54329;
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t54558 = tspi_m13*tspi_m13;
                double t54559 = 1.0/pow(rho_b,1.0/3.0);
                double t54560 = a2*a2;
                double t54561 = gamma_bb*gamma_bb;
                double t54562 = 1.0/pow(rho_b,1.6E1/3.0);
                double t54563 = t54558*t54558;
                double t54564 = c*t54559;
                double t54565 = a4*a4;
                double t54566 = t54561*t54562*t54563*t54565*2.0;
                double t54567 = exp(t54566);
                double t54568 = 1.0/c;
                double t54569 = 1.0/pow(rho_b,7.0/3.0);
                double t54570 = sqrt(t54564);
                double t54571 = t54561*t54562*t54563*t54565;
                double t54572 = t54571+1.0;
                double t54573 = 1.0/(t54572*t54572);
                double t54574 = a5*gamma_bb*t54558*t54568*t54569;
                double t54575 = t54574+1.0;
                double t54586 = raa2*t54570;
                double t54576 = exp(-t54586);
                double t54577 = t54576-1.0;
                double t54578 = kaa2*t54577;
                double t54579 = pow(t54564,2.0/5.0);
                double t54587 = raa1*t54579;
                double t54580 = exp(-t54587);
                double t54581 = t54580-1.0;
                double t54582 = kaa1*t54581;
                double t54583 = -kaa0+t54582+t54578;
                double t54584 = 1.0/(t54583*t54583);
                double t54585 = c*c0*t54573*t54575*t54584*t54567*t54559*(2.0/3.0);
                double t54588 = 1.0/t54572;
                double t54589 = c*c0*t54575*t54584*t54567*t54559*(2.0/3.0);
                double t54590 = 1.0/pow(rho_b,8.0/3.0);
                double t54591 = 1.0/pow(rho_b,1.7E1/3.0);
                double t54596 = a5*c0*t54590*t54584*t54558*t54567*(2.0/3.0);
                double t54597 = c*c0*gamma_bb*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54592 = t54596+t54597;
                double t54593 = sqrt(t54589);
                double t54594 = t54565*t54565;
                double t54595 = t54563*t54563;
                double t54598 = 1.0/sqrt(t54589);
                double t54599 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t54600 = 1.0/(t54572*t54572*t54572);
                double t54601 = 1.0/pow(rho_b,1.1E1);
                double t54602 = t54593*t54588*6.0;
                double t54603 = c*c0*t54573*t54575*t54584*t54567*t54559*4.0;
                double t54604 = t54602+t54603+3.0;
                double t54605 = 1.0/t54604;
                double t54607 = a5*c0*t54590*t54573*t54584*t54558*t54567*(2.0/3.0);
                double t54608 = c*c0*gamma_bb*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54609 = c*c0*gamma_bb*t54600*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54606 = t54607+t54608-t54609;
                double t54610 = exp(t54585);
                double t54611 = Ei(-t54585);
                double t54612 = t54606*t54606;
                double t54613 = 1.0/(t54572*t54572*t54572*t54572);
                double t54614 = a5*c0*gamma_bb*t54563*t54573*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0);
                double t54615 = c*c0*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54616 = c*c0*t54601*t54561*t54573*t54575*t54584*t54567*t54594*t54595*(3.2E1/3.0);
                double t54617 = c*c0*t54601*t54613*t54561*t54575*t54584*t54567*t54594*t54595*1.6E1;
                double t54652 = a5*c0*gamma_bb*t54600*t54563*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0);
                double t54653 = c*c0*t54600*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54654 = c*c0*t54600*t54601*t54561*t54575*t54584*t54567*t54594*t54595*(6.4E1/3.0);
                double t54618 = t54614+t54615+t54616-t54652+t54617-t54653-t54654;
                double t54619 = t54593*t54588*4.0;
                double t54620 = c*c0*t54573*t54575*t54584*t54567*t54559*(8.0/3.0);
                double t54621 = t54620+t54619+6.0;
                double t54622 = a5*c0*t54610*t54611*t54590*t54573*t54584*t54558*t54567*(2.0/3.0);
                double t54623 = c*c0*t54610*t54611*t54606*t54573*t54575*t54584*t54567*t54559*(2.0/3.0);
                double t54624 = c*c0*gamma_bb*t54610*t54611*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54689 = c*c0*gamma_bb*t54600*t54610*t54611*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54625 = t54622+t54623+t54624+t54607+t54608-t54609-t54689;
                double t54626 = c*c0*t54610*t54611*t54573*t54575*t54584*t54567*t54559*(2.0/3.0);
                double t54627 = t54626+1.0;
                double t54628 = t54592*t54588*t54598*3.0;
                double t54629 = a5*c0*t54590*t54573*t54584*t54558*t54567*4.0;
                double t54630 = c*c0*gamma_bb*t54563*t54573*t54591*t54565*t54575*t54584*t54567*1.6E1;
                double t54633 = gamma_bb*t54562*t54563*t54573*t54565*t54593*1.2E1;
                double t54634 = c*c0*gamma_bb*t54600*t54563*t54591*t54565*t54575*t54584*t54567*1.6E1;
                double t54631 = t54630-t54633-t54634+t54628+t54629;
                double t54632 = 1.0/(t54604*t54604);
                double t54635 = t54592*t54588*t54598*2.0;
                double t54636 = a5*c0*t54590*t54573*t54584*t54558*t54567*(8.0/3.0);
                double t54637 = c*c0*gamma_bb*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(3.2E1/3.0);
                double t54687 = gamma_bb*t54562*t54563*t54573*t54565*t54593*8.0;
                double t54688 = c*c0*gamma_bb*t54600*t54563*t54591*t54565*t54575*t54584*t54567*(3.2E1/3.0);
                double t54638 = t54635+t54636+t54637-t54687-t54688;
                double t54639 = a5*c0*gamma_bb*t54563*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0);
                double t54640 = c*c0*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0);
                double t54641 = c*c0*t54601*t54561*t54575*t54584*t54567*t54594*t54595*(3.2E1/3.0);
                double t54642 = t54640+t54641+t54639;
                double t54643 = t54592*t54592;
                double t54644 = 1.0/pow(t54589,3.0/2.0);
                double t54645 = 1.0/pow(rho_b,3.2E1/3.0);
                double t54646 = 1.0/t54575;
                double t54647 = 1.0/c0;
                double t54648 = pow(rho_b,1.0/3.0);
                double t54649 = exp(-t54566);
                double t54650 = t54572*t54572;
                double t54651 = t54583*t54583;
                double t54655 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b);
                double t54656 = c*c;
                double t54657 = 1.0/pow(rho_b,2.0/3.0);
                double t54658 = k1*t54570;
                double t54659 = c*k2*t54559;
                double t54660 = t54658+t54659;
                double t54661 = 1.0/(t54660*t54660);
                double t54679 = t54661*t54656*t54657;
                double t54662 = exp(-t54679);
                double t54663 = t54560*t54561*t54562*t54563;
                double t54664 = pow(t54564,4.0/5.0);
                double t54674 = rab1*t54664;
                double t54665 = exp(-t54674);
                double t54666 = t54665-1.0;
                double t54675 = kab1*t54666;
                double t54667 = kab0-t54675;
                double t54668 = a3*gamma_bb*t54558*t54568*t54569;
                double t54669 = t54668+1.0;
                double t54670 = 1.0/sqrt(t54669);
                double t54671 = a1*gamma_bb*t54590*t54558;
                double t54672 = t54671+t54663+1.0;
                double t54673 = exp(-t54663);
                double t54680 = a1*t54590*t54558;
                double t54681 = gamma_bb*t54560*t54562*t54563*2.0;
                double t54682 = t54680+t54681;
                double t54683 = t54670*t54673*t54682*t54667*1.0E5;
                double t54684 = 1.0/pow(t54669,3.0/2.0);
                double t54685 = a3*t54672*t54673*t54558*t54684*t54568*t54667*t54569*5.0E4;
                double t54686 = gamma_bb*t54560*t54562*t54670*t54563*t54672*t54673*t54667*2.0E5;
                double t54676 = -t54683+t54685+t54686;
                double t54677 = c*c0*t54559*(2.0/3.0);
                double t54690 = t54670*t54672*t54673*t54667*1.0E5;
                double t54678 = -t54690+t54677;
                double t54691 = dirac(t54678);
                double t54692 = t54610*t54611;
                double t54693 = t54621*t54605*t54627;
                double t54694 = t54692+t54693;
                double t54695 = 1.0/(c*c);
                v_gamma_bb_gamma_bb[Q] += scale * c0*rho_b*t54662*heaviside(c*c0*t54559*(-2.0/3.0)+t54670*t54672*t54667*exp(-t54560*t54561*t54562*t54563)*1.0E5)*(t54621*t54605*(t54612+t54614+t54615+t54616+t54617+gamma_bb*t54606*t54562*t54563*t54565*4.0+a5*t54606*t54646*t54558*t54568*t54569-gamma_bb*t54606*t54562*t54563*t54565*t54588*4.0-c*c0*t54600*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0)-a5*c0*gamma_bb*t54600*t54563*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0)+a5*c0*t54610*t54611*t54606*t54590*t54573*t54584*t54558*t54567*(4.0/3.0)+c*c0*t54610*t54611*t54612*t54573*t54575*t54584*t54567*t54559*(2.0/3.0)-c*c0*t54600*t54601*t54561*t54575*t54584*t54567*t54594*t54595*(6.4E1/3.0)+c*c0*t54610*t54611*t54573*t54618*t54575*t54584*t54567*t54559*(2.0/3.0)-c*c0*t54600*t54610*t54611*t54563*t54591*t54565*t54575*t54584*t54567*(8.0/3.0)+c*c0*t54610*t54611*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(8.0/3.0)-a5*c0*gamma_bb*t54600*t54610*t54611*t54563*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0)+a5*c0*gamma_bb*t54610*t54611*t54563*t54573*t54565*t54584*t54558*t54567*t54599*(1.6E1/3.0)-c*c0*t54600*t54601*t54610*t54611*t54561*t54575*t54584*t54567*t54594*t54595*(6.4E1/3.0)+c*c0*t54601*t54610*t54611*t54613*t54561*t54575*t54584*t54567*t54594*t54595*1.6E1+c*c0*t54601*t54610*t54611*t54561*t54573*t54575*t54584*t54567*t54594*t54595*(3.2E1/3.0)-c*c0*gamma_bb*t54600*t54610*t54611*t54606*t54563*t54591*t54565*t54575*t54584*t54567*(1.6E1/3.0)+c*c0*gamma_bb*t54610*t54611*t54606*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(1.6E1/3.0))+t54610*t54611*t54612+t54610*t54611*t54618+t54605*t54625*t54638*2.0-t54605*t54627*(t54643*t54644*t54588-t54642*t54588*t54598*2.0+t54562*t54563*t54573*t54565*t54593*8.0-t54600*t54561*t54645*t54593*t54594*t54595*3.2E1+gamma_bb*t54562*t54563*t54573*t54565*t54592*t54598*8.0+c*c0*t54600*t54563*t54591*t54565*t54575*t54584*t54567*(3.2E1/3.0)-c*c0*t54563*t54573*t54591*t54565*t54575*t54584*t54567*(3.2E1/3.0)+a5*c0*gamma_bb*t54600*t54563*t54565*t54584*t54558*t54567*t54599*(6.4E1/3.0)-a5*c0*gamma_bb*t54563*t54573*t54565*t54584*t54558*t54567*t54599*(6.4E1/3.0)+c*c0*t54600*t54601*t54561*t54575*t54584*t54567*t54594*t54595*(2.56E2/3.0)-c*c0*t54601*t54613*t54561*t54575*t54584*t54567*t54594*t54595*6.4E1-c*c0*t54601*t54561*t54573*t54575*t54584*t54567*t54594*t54595*(1.28E2/3.0))-t54621*t54631*t54632*t54625*2.0-t54631*t54632*t54627*t54638*2.0+t54621*t54632*t54627*(t54643*t54644*t54588*(3.0/2.0)-t54642*t54588*t54598*3.0+t54562*t54563*t54573*t54565*t54593*1.2E1-t54600*t54561*t54645*t54593*t54594*t54595*4.8E1+gamma_bb*t54562*t54563*t54573*t54565*t54592*t54598*1.2E1+c*c0*t54600*t54563*t54591*t54565*t54575*t54584*t54567*1.6E1-c*c0*t54563*t54573*t54591*t54565*t54575*t54584*t54567*1.6E1+a5*c0*gamma_bb*t54600*t54563*t54565*t54584*t54558*t54567*t54599*3.2E1-a5*c0*gamma_bb*t54563*t54573*t54565*t54584*t54558*t54567*t54599*3.2E1+c*c0*t54600*t54601*t54561*t54575*t54584*t54567*t54594*t54595*1.28E2-c*c0*t54601*t54613*t54561*t54575*t54584*t54567*t54594*t54595*9.6E1-c*c0*t54601*t54561*t54573*t54575*t54584*t54567*t54594*t54595*6.4E1)+t54621*1.0/(t54604*t54604*t54604)*(t54631*t54631)*t54627*2.0+t54612*t54650*t54651*t54646*t54647*t54648*t54568*t54649*(3.0/2.0)+t54650*t54651*t54618*t54646*t54647*t54648*t54568*t54649*(3.0/2.0)-a5*1.0/(rho_b*rho_b)*t54650*t54606*t54651*1.0/(t54575*t54575)*t54647*t54558*t54649*t54695*(3.0/2.0)-gamma_bb*t54650*t54606*t54651*t54563*t54565*t54646*t54655*t54647*t54568*t54649*6.0+gamma_bb*t54606*t54651*t54563*t54572*t54565*t54646*t54655*t54647*t54568*t54649*6.0)*(1.0/2.0)-c0*rho_b*t54662*t54691*t54676*(t54610*t54611*t54606+t54621*t54605*t54625+t54605*t54627*t54638-t54621*t54631*t54632*t54627+t54650*t54606*t54651*t54646*t54647*t54648*t54568*t54649*(3.0/2.0))+c0*rho_b*t54662*t54691*t54694*(t54560*t54562*t54670*t54563*t54673*t54667*2.0E5-t54560*t54562*t54670*t54563*t54672*t54673*t54667*2.0E5+(a3*a3)*1.0/pow(rho_b,1.4E1/3.0)*t54563*t54672*t54673*t54667*t54695*1.0/pow(t54669,5.0/2.0)*7.5E4+(t54560*t54560)*t54561*t54670*t54645*t54672*t54673*t54595*t54667*4.0E5-a3*t54673*t54682*t54558*t54684*t54568*t54667*t54569*1.0E5-gamma_bb*t54560*t54562*t54670*t54563*t54673*t54682*t54667*4.0E5+a3*gamma_bb*1.0/pow(rho_b,2.3E1/3.0)*t54560*t54563*t54672*t54673*t54558*t54684*t54568*t54667*2.0E5)*(1.0/2.0)-c0*rho_b*t54662*(t54676*t54676)*t54694*dirac(t54678,1.0)*(1.0/2.0);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t54344 = tspi_m13*tspi_m13;
                double t54345 = 1.0/pow(rho_b,1.0/3.0);
                double t54346 = a2*a2;
                double t54347 = gamma_bb*gamma_bb;
                double t54348 = 1.0/pow(rho_b,1.6E1/3.0);
                double t54349 = t54344*t54344;
                double t54350 = c*t54345;
                double t54351 = a4*a4;
                double t54352 = 1.0/c;
                double t54353 = 1.0/pow(rho_b,7.0/3.0);
                double t54354 = sqrt(t54350);
                double t54355 = t54351*t54347*t54348*t54349*2.0;
                double t54356 = exp(t54355);
                double t54357 = t54351*t54347*t54348*t54349;
                double t54358 = t54357+1.0;
                double t54359 = 1.0/(t54358*t54358);
                double t54360 = a5*gamma_bb*t54352*t54344*t54353;
                double t54361 = t54360+1.0;
                double t54373 = raa2*t54354;
                double t54362 = exp(-t54373);
                double t54363 = t54362-1.0;
                double t54364 = kaa2*t54363;
                double t54365 = pow(t54350,2.0/5.0);
                double t54374 = raa1*t54365;
                double t54366 = exp(-t54374);
                double t54367 = t54366-1.0;
                double t54368 = kaa1*t54367;
                double t54369 = -kaa0+t54364+t54368;
                double t54370 = 1.0/(t54369*t54369);
                double t54371 = c*c0*t54361*t54370*t54345*t54356*t54359*(2.0/3.0);
                double t54372 = 1.0/pow(rho_b,8.0/3.0);
                double t54375 = 1.0/pow(rho_b,1.7E1/3.0);
                double t54376 = exp(t54371);
                double t54377 = Ei(-t54371);
                double t54378 = 1.0/t54358;
                double t54379 = c*c0*t54361*t54370*t54345*t54356*(2.0/3.0);
                double t54380 = sqrt(t54379);
                double t54381 = 1.0/(t54358*t54358*t54358);
                double t54382 = t54380*t54378*6.0;
                double t54383 = c*c0*t54361*t54370*t54345*t54356*t54359*4.0;
                double t54384 = t54382+t54383+3.0;
                double t54385 = 1.0/t54384;
                double t54386 = a5*c0*t54370*t54344*t54372*t54356*t54359*(2.0/3.0);
                double t54387 = c*c0*gamma_bb*t54351*t54361*t54370*t54356*t54375*t54349*t54359*(8.0/3.0);
                double t54398 = c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*(8.0/3.0);
                double t54388 = t54386+t54387-t54398;
                double t54389 = c*c0*t54361*t54370*t54345*t54356*t54376*t54359*t54377*(2.0/3.0);
                double t54390 = t54389+1.0;
                double t54391 = t54380*t54378*4.0;
                double t54392 = c*c0*t54361*t54370*t54345*t54356*t54359*(8.0/3.0);
                double t54393 = t54391+t54392+6.0;
                double t54394 = a5*c0*t54370*t54344*t54372*t54356*(2.0/3.0);
                double t54395 = c*c0*gamma_bb*t54351*t54361*t54370*t54356*t54375*t54349*(8.0/3.0);
                double t54396 = t54394+t54395;
                double t54397 = 1.0/sqrt(t54379);
                double t54399 = t54346*t54347*t54348*t54349;
                double t54400 = pow(t54350,4.0/5.0);
                double t54508 = rab1*t54400;
                double t54401 = exp(-t54508);
                double t54402 = t54401-1.0;
                double t54509 = kab1*t54402;
                double t54403 = kab0-t54509;
                double t54404 = a3*gamma_bb*t54352*t54344*t54353;
                double t54405 = t54404+1.0;
                double t54406 = 1.0/sqrt(t54405);
                double t54407 = a1*gamma_bb*t54344*t54372;
                double t54408 = t54407+t54399+1.0;
                double t54409 = c*c;
                double t54410 = 1.0/pow(rho_b,2.0/3.0);
                double t54411 = k1*t54354;
                double t54412 = c*k2*t54345;
                double t54413 = t54411+t54412;
                double t54414 = 1.0/(t54413*t54413);
                double t54511 = t54410*t54414*t54409;
                double t54415 = exp(-t54511);
                double t54416 = 1.0/pow(rho_b,4.0/3.0);
                double t54417 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t54418 = 1.0/pow(rho_b,2.0E1/3.0);
                double t54419 = t54351*t54351;
                double t54420 = 1.0/pow(rho_b,1.2E1);
                double t54421 = t54349*t54349;
                double t54422 = 1.0/sqrt(t54350);
                double t54423 = c*kaa2*raa2*t54422*t54362*t54416*(1.0/6.0);
                double t54424 = 1.0/pow(t54350,3.0/5.0);
                double t54425 = c*kaa1*raa1*t54424*t54416*t54366*(2.0/1.5E1);
                double t54426 = t54423+t54425;
                double t54427 = 1.0/(t54369*t54369*t54369);
                double t54428 = t54378*t54396*t54397*2.0;
                double t54429 = a5*c0*t54370*t54344*t54372*t54356*t54359*(8.0/3.0);
                double t54430 = c*c0*gamma_bb*t54351*t54361*t54370*t54356*t54375*t54349*t54359*(3.2E1/3.0);
                double t54472 = gamma_bb*t54351*t54380*t54348*t54349*t54359*8.0;
                double t54473 = c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*(3.2E1/3.0);
                double t54431 = t54430-t54472+t54428-t54473+t54429;
                double t54432 = 1.0/pow(rho_b,1.1E1/3.0);
                double t54433 = c*c0*t54361*t54370*t54416*t54356*t54359*(2.0/9.0);
                double t54434 = a5*c0*gamma_bb*t54432*t54370*t54344*t54356*t54359*(1.4E1/9.0);
                double t54435 = c*c0*t54361*t54345*t54426*t54427*t54356*t54359*(4.0/3.0);
                double t54436 = c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*t54359*(6.4E1/9.0);
                double t54437 = a5*c0*t54370*t54344*t54372*t54356*t54376*t54359*t54377*(2.0/3.0);
                double t54438 = c*c0*t54361*t54370*t54345*t54356*t54376*t54359*t54377*t54388*(2.0/3.0);
                double t54439 = c*c0*gamma_bb*t54351*t54361*t54370*t54356*t54375*t54349*t54376*t54359*t54377*(8.0/3.0);
                double t54452 = c*c0*t54351*t54361*t54370*t54381*t54418*t54347*t54356*t54349*(6.4E1/9.0);
                double t54440 = t54433+t54434-t54452+t54435+t54436;
                double t54441 = 1.0/pow(rho_b,1.9E1/3.0);
                double t54442 = 1.0/t54361;
                double t54443 = a5*c0*t54432*t54370*t54344*t54356*t54359*(1.6E1/9.0);
                double t54444 = a5*c0*t54344*t54372*t54426*t54427*t54356*t54359*(4.0/3.0);
                double t54445 = a5*c0*t54351*t54370*t54344*t54417*t54347*t54356*t54349*t54359*(4.0E1/3.0);
                double t54446 = c*c0*gamma_bb*t54351*t54361*t54370*t54418*t54356*t54349*t54359*(1.36E2/9.0);
                double t54447 = c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54359*(2.56E2/9.0);
                double t54448 = 1.0/(t54358*t54358*t54358*t54358);
                double t54449 = c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54448*(1.28E2/3.0);
                double t54450 = c*c0*gamma_bb*t54351*t54361*t54426*t54427*t54356*t54375*t54349*t54359*(1.6E1/3.0);
                double t54453 = c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54418*t54356*t54349*(1.36E2/9.0);
                double t54454 = c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54381*t54347*t54356*t54419*(5.12E2/9.0);
                double t54455 = c*c0*gamma_bb*t54351*t54361*t54381*t54426*t54427*t54356*t54375*t54349*(1.6E1/3.0);
                double t54504 = a5*c0*t54351*t54370*t54344*t54381*t54417*t54347*t54356*t54349*(4.0E1/3.0);
                double t54451 = t54450-t54504+t54443+t54444-t54453+t54445-t54454+t54446-t54455+t54447+t54449;
                double t54456 = c*c0*t54361*t54370*t54416*t54356*(2.0/9.0);
                double t54457 = a5*c0*gamma_bb*t54432*t54370*t54344*t54356*(1.4E1/9.0);
                double t54458 = c*c0*t54361*t54345*t54426*t54427*t54356*(4.0/3.0);
                double t54459 = c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*(6.4E1/9.0);
                double t54460 = t54456+t54457+t54458+t54459;
                double t54461 = 1.0/(t54384*t54384);
                double t54527 = c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*t54376*t54377*(8.0/3.0);
                double t54462 = t54437-t54527+t54438+t54439+t54386+t54387-t54398;
                double t54463 = a5*c0*t54432*t54370*t54344*t54356*(1.6E1/9.0);
                double t54464 = a5*c0*t54344*t54372*t54426*t54427*t54356*(4.0/3.0);
                double t54465 = a5*c0*t54351*t54370*t54344*t54417*t54347*t54356*t54349*(4.0E1/3.0);
                double t54466 = c*c0*gamma_bb*t54351*t54361*t54370*t54418*t54356*t54349*(1.36E2/9.0);
                double t54467 = c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*(2.56E2/9.0);
                double t54468 = c*c0*gamma_bb*t54351*t54361*t54426*t54427*t54356*t54375*t54349*(1.6E1/3.0);
                double t54469 = t54463+t54464+t54465+t54466+t54467+t54468;
                double t54470 = 1.0/pow(t54379,3.0/2.0);
                double t54471 = 1.0/pow(rho_b,3.5E1/3.0);
                double t54474 = t54460*t54378*t54397*3.0;
                double t54475 = c*c0*t54361*t54370*t54416*t54356*t54359*(4.0/3.0);
                double t54476 = a5*c0*gamma_bb*t54432*t54370*t54344*t54356*t54359*(2.8E1/3.0);
                double t54477 = c*c0*t54361*t54345*t54426*t54427*t54356*t54359*8.0;
                double t54478 = c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*t54359*(1.28E2/3.0);
                double t54497 = t54351*t54441*t54380*t54347*t54349*t54359*3.2E1;
                double t54498 = c*c0*t54351*t54361*t54370*t54381*t54418*t54347*t54356*t54349*(1.28E2/3.0);
                double t54479 = t54474+t54475+t54476+t54477+t54478-t54497-t54498;
                double t54480 = t54378*t54396*t54397*3.0;
                double t54481 = a5*c0*t54370*t54344*t54372*t54356*t54359*4.0;
                double t54482 = c*c0*gamma_bb*t54351*t54361*t54370*t54356*t54375*t54349*t54359*1.6E1;
                double t54490 = gamma_bb*t54351*t54380*t54348*t54349*t54359*1.2E1;
                double t54491 = c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*1.6E1;
                double t54483 = t54480+t54481-t54490+t54482-t54491;
                double t54484 = t54460*t54378*t54397*2.0;
                double t54485 = c*c0*t54361*t54370*t54416*t54356*t54359*(8.0/9.0);
                double t54486 = a5*c0*gamma_bb*t54432*t54370*t54344*t54356*t54359*(5.6E1/9.0);
                double t54487 = c*c0*t54361*t54345*t54426*t54427*t54356*t54359*(1.6E1/3.0);
                double t54488 = c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*t54359*(2.56E2/9.0);
                double t54522 = t54351*t54441*t54380*t54347*t54349*t54359*(6.4E1/3.0);
                double t54523 = c*c0*t54351*t54361*t54370*t54381*t54418*t54347*t54356*t54349*(2.56E2/9.0);
                double t54489 = -t54522-t54523+t54484+t54485+t54486+t54487+t54488;
                double t54492 = c*c0*t54361*t54370*t54416*t54356*t54376*t54359*t54377*(2.0/9.0);
                double t54493 = c*c0*t54361*t54345*t54426*t54427*t54356*t54376*t54359*t54377*(4.0/3.0);
                double t54494 = c*c0*t54440*t54361*t54370*t54345*t54356*t54376*t54359*t54377*(2.0/3.0);
                double t54495 = a5*c0*gamma_bb*t54432*t54370*t54344*t54356*t54376*t54359*t54377*(1.4E1/9.0);
                double t54496 = c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*t54376*t54359*t54377*(6.4E1/9.0);
                double t54499 = 1.0/c0;
                double t54500 = pow(rho_b,1.0/3.0);
                double t54501 = exp(-t54355);
                double t54502 = t54358*t54358;
                double t54503 = t54369*t54369;
                double t54505 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b);
                double t54524 = c*c0*t54351*t54361*t54370*t54381*t54418*t54347*t54356*t54349*t54376*t54377*(6.4E1/9.0);
                double t54506 = t54433+t54434-t54452-t54524+t54435+t54436+t54492+t54493+t54494+t54495+t54496;
                double t54507 = exp(-t54399);
                double t54510 = t54403*t54406*t54408*t54507*1.0E5;
                double t54512 = c*c0*t54345*(2.0/3.0);
                double t54513 = -t54510+t54512;
                double t54514 = dirac(t54513);
                double t54515 = a1*t54344*t54372;
                double t54516 = gamma_bb*t54346*t54348*t54349*2.0;
                double t54517 = t54515+t54516;
                double t54518 = 1.0/pow(t54405,3.0/2.0);
                double t54519 = a3*t54403*t54352*t54344*t54353*t54408*t54507*t54518*5.0E4;
                double t54520 = gamma_bb*t54403*t54406*t54408*t54507*t54346*t54348*t54349*2.0E5;
                double t54547 = t54403*t54406*t54507*t54517*1.0E5;
                double t54521 = t54520+t54519-t54547;
                double t54525 = t54376*t54377*t54388;
                double t54526 = t54431*t54390*t54385;
                double t54528 = t54500*t54501*t54502*t54503*t54352*t54442*t54388*t54499*(3.0/2.0);
                double t54529 = t54376*t54377;
                double t54530 = t54390*t54393*t54385;
                double t54531 = t54530+t54529;
                double t54532 = 1.0/pow(rho_b,1.0E1/3.0);
                double t54533 = t54441*t54346*t54347*t54349*(1.6E1/3.0);
                double t54534 = a1*gamma_bb*t54432*t54344*(8.0/3.0);
                double t54535 = t54533+t54534;
                double t54536 = 1.0/(c*c);
                double t54537 = 1.0/pow(t54350,1.0/5.0);
                double t54538 = t54462*t54393*t54385;
                double t54539 = t54525+t54526+t54528+t54538-t54461*t54390*t54393*t54483;
                double t54540 = 1.0/pow(rho_b,5.0/3.0);
                double t54541 = t54414*t54540*t54409*(2.0/3.0);
                double t54542 = 1.0/(t54413*t54413*t54413);
                double t54543 = c*k2*t54416*(1.0/3.0);
                double t54544 = c*k1*t54422*t54416*(1.0/6.0);
                double t54545 = t54543+t54544;
                double t54546 = t54541-t54410*t54542*t54409*t54545*2.0;
                double t54548 = c*c0*t54416*(2.0/9.0);
                double t54549 = t54403*t54441*t54406*t54408*t54507*t54346*t54347*t54349*(1.6E6/3.0);
                double t54550 = a3*gamma_bb*t54403*t54352*t54532*t54344*t54408*t54507*t54518*(3.5E5/3.0);
                double t54551 = t54550+t54548+t54549-t54403*t54406*t54507*t54535*1.0E5-c*kab1*rab1*t54401*t54406*t54416*t54408*t54507*t54537*(8.0E4/3.0);
                v_rho_b_gamma_bb[Q] += scale * c0*t54415*heaviside(c*c0*t54345*(-2.0/3.0)+t54403*t54406*t54408*exp(-t54346*t54347*t54348*t54349)*1.0E5)*(t54525+t54526+t54528+t54393*t54385*(t54437+t54438+t54439+t54386+t54387-c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*(8.0/3.0)-c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54356*t54375*t54349*t54376*t54377*(8.0/3.0))-t54461*t54390*t54393*t54483)*(1.0/2.0)-c0*t54521*t54531*t54415*t54514*(1.0/2.0)-c0*rho_b*t54415*heaviside(t54510-c*c0*t54345*(2.0/3.0))*(t54390*t54385*(t54378*t54397*t54469*2.0-t54460*t54470*t54378*t54396-gamma_bb*t54351*t54441*t54380*t54349*t54359*(1.28E2/3.0)+a5*c0*t54432*t54370*t54344*t54356*t54359*(6.4E1/9.0)+gamma_bb*t54421*t54380*t54381*t54471*t54347*t54419*(2.56E2/3.0)-gamma_bb*t54351*t54460*t54348*t54349*t54359*t54397*4.0-t54351*t54441*t54347*t54349*t54359*t54396*t54397*(3.2E1/3.0)+a5*c0*t54344*t54372*t54426*t54427*t54356*t54359*(1.6E1/3.0)-c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54418*t54356*t54349*(5.44E2/9.0)+c*c0*gamma_bb*t54351*t54361*t54370*t54418*t54356*t54349*t54359*(5.44E2/9.0)-a5*c0*t54351*t54370*t54344*t54381*t54417*t54347*t54356*t54349*(1.6E2/3.0)+a5*c0*t54351*t54370*t54344*t54417*t54347*t54356*t54349*t54359*(1.6E2/3.0)-c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54381*t54347*t54356*t54419*(2.048E3/9.0)+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54448*(5.12E2/3.0)+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54359*(1.024E3/9.0)-c*c0*gamma_bb*t54351*t54361*t54381*t54426*t54427*t54356*t54375*t54349*(6.4E1/3.0)+c*c0*gamma_bb*t54351*t54361*t54426*t54427*t54356*t54375*t54349*t54359*(6.4E1/3.0))+t54431*t54506*t54385+t54451*t54376*t54377+t54462*t54385*t54489+t54393*t54385*(t54450-t54504+t54443+t54444-t54453+t54445-t54454+t54446-t54455+t54447+t54449+t54440*t54388+(t54388*(1.0/3.0))/rho_b+(t54426*t54388*2.0)/t54369+t54351*t54441*t54347*t54349*t54388*(3.2E1/3.0)-t54351*t54441*t54347*t54349*t54378*t54388*(3.2E1/3.0)+a5*gamma_bb*t54352*t54442*t54532*t54344*t54388*(7.0/3.0)+a5*c0*t54432*t54370*t54344*t54356*t54376*t54359*t54377*(1.6E1/9.0)+a5*c0*t54440*t54370*t54344*t54372*t54356*t54376*t54359*t54377*(2.0/3.0)+a5*c0*t54344*t54372*t54426*t54427*t54356*t54376*t54359*t54377*(4.0/3.0)+c*c0*t54361*t54370*t54451*t54345*t54356*t54376*t54359*t54377*(2.0/3.0)+c*c0*t54361*t54370*t54416*t54356*t54376*t54359*t54377*t54388*(2.0/9.0)+a5*c0*gamma_bb*t54432*t54370*t54344*t54356*t54376*t54359*t54377*t54388*(1.4E1/9.0)+c*c0*t54440*t54361*t54370*t54345*t54356*t54376*t54359*t54377*t54388*(2.0/3.0)+c*c0*t54361*t54345*t54426*t54427*t54356*t54376*t54359*t54377*t54388*(4.0/3.0)-c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54418*t54356*t54349*t54376*t54377*(1.36E2/9.0)+c*c0*gamma_bb*t54351*t54361*t54370*t54418*t54356*t54349*t54376*t54359*t54377*(1.36E2/9.0)-a5*c0*t54351*t54370*t54344*t54381*t54417*t54347*t54356*t54349*t54376*t54377*(4.0E1/3.0)+a5*c0*t54351*t54370*t54344*t54417*t54347*t54356*t54349*t54376*t54359*t54377*(4.0E1/3.0)-c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54381*t54347*t54356*t54419*t54376*t54377*(5.12E2/9.0)+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54376*t54448*t54377*(1.28E2/3.0)+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54376*t54359*t54377*(2.56E2/9.0)-c*c0*gamma_bb*t54440*t54351*t54361*t54370*t54381*t54356*t54375*t54349*t54376*t54377*(8.0/3.0)+c*c0*gamma_bb*t54440*t54351*t54361*t54370*t54356*t54375*t54349*t54376*t54359*t54377*(8.0/3.0)-c*c0*gamma_bb*t54351*t54361*t54381*t54426*t54427*t54356*t54375*t54349*t54376*t54377*(1.6E1/3.0)+c*c0*gamma_bb*t54351*t54361*t54426*t54427*t54356*t54375*t54349*t54376*t54359*t54377*(1.6E1/3.0)-c*c0*t54351*t54361*t54370*t54381*t54418*t54347*t54356*t54349*t54376*t54377*t54388*(6.4E1/9.0)+c*c0*t54351*t54361*t54370*t54418*t54347*t54356*t54349*t54376*t54359*t54377*t54388*(6.4E1/9.0))-t54431*t54461*t54390*t54479-t54461*t54506*t54393*t54483-t54461*t54462*t54393*t54479-t54461*t54390*t54483*t54489+t54440*t54376*t54377*t54388-t54461*t54390*t54393*(t54378*t54397*t54469*3.0-t54460*t54470*t54378*t54396*(3.0/2.0)-gamma_bb*t54351*t54441*t54380*t54349*t54359*6.4E1+a5*c0*t54432*t54370*t54344*t54356*t54359*(3.2E1/3.0)+gamma_bb*t54421*t54380*t54381*t54471*t54347*t54419*1.28E2-gamma_bb*t54351*t54460*t54348*t54349*t54359*t54397*6.0-t54351*t54441*t54347*t54349*t54359*t54396*t54397*1.6E1+a5*c0*t54344*t54372*t54426*t54427*t54356*t54359*8.0-c*c0*gamma_bb*t54351*t54361*t54370*t54381*t54418*t54356*t54349*(2.72E2/3.0)+c*c0*gamma_bb*t54351*t54361*t54370*t54418*t54356*t54349*t54359*(2.72E2/3.0)-a5*c0*t54351*t54370*t54344*t54381*t54417*t54347*t54356*t54349*8.0E1+a5*c0*t54351*t54370*t54344*t54417*t54347*t54356*t54349*t54359*8.0E1-c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54381*t54347*t54356*t54419*(1.024E3/3.0)+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54448*2.56E2+c*c0*gamma_bb*t54420*t54421*t54361*t54370*t54347*t54356*t54419*t54359*(5.12E2/3.0)-c*c0*gamma_bb*t54351*t54361*t54381*t54426*t54427*t54356*t54375*t54349*3.2E1+c*c0*gamma_bb*t54351*t54361*t54426*t54427*t54356*t54375*t54349*t54359*3.2E1)+t54390*1.0/(t54384*t54384*t54384)*t54393*t54483*t54479*2.0+t54500*t54501*t54502*t54503*t54352*t54442*t54451*t54499*(3.0/2.0)+t54500*t54501*t54502*t54440*t54503*t54352*t54442*t54388*t54499*(3.0/2.0)-a5*1.0/(rho_b*rho_b)*t54501*t54502*t54440*t54503*1.0/(t54361*t54361)*t54344*t54536*t54499*(3.0/2.0)-gamma_bb*t54501*t54502*t54440*t54503*t54351*t54352*t54442*t54505*t54349*t54499*6.0+gamma_bb*t54501*t54440*t54503*t54351*t54352*t54442*t54505*t54349*t54358*t54499*6.0)*(1.0/2.0)+c0*rho_b*t54415*t54514*t54551*t54539*(1.0/2.0)+c0*rho_b*t54531*t54415*t54514*(t54403*t54406*t54507*(a1*t54432*t54344*(8.0/3.0)+gamma_bb*t54441*t54346*t54349*(3.2E1/3.0))*-1.0E5+t54403*t54441*t54406*t54507*t54346*t54517*t54347*t54349*(1.6E6/3.0)+a3*t54403*t54352*t54532*t54344*t54408*t54507*t54518*(3.5E5/3.0)+a3*t54403*t54352*t54344*t54353*t54507*t54535*t54518*5.0E4+gamma_bb*t54403*t54441*t54406*t54408*t54507*t54346*t54349*(3.2E6/3.0)+gamma_bb*t54403*t54406*t54507*t54346*t54535*t54348*t54349*2.0E5-(a3*a3)*gamma_bb*t54403*1.0/pow(t54405,5.0/2.0)*t54408*t54507*t54536*t54375*t54349*1.75E5+a3*gamma_bb*t54403*t54352*t54532*t54344*t54507*t54517*t54518*(3.5E5/3.0)-c*kab1*rab1*t54401*t54406*t54416*t54507*t54517*t54537*(8.0E4/3.0)-gamma_bb*t54403*t54421*t54406*t54408*t54471*t54507*(t54346*t54346)*t54347*(3.2E6/3.0)+a3*kab1*rab1*t54401*t54432*t54344*t54408*t54507*t54518*t54537*(4.0E4/3.0)-a3*1.0/pow(rho_b,2.6E1/3.0)*t54403*t54352*t54344*t54408*t54507*t54346*t54347*t54518*t54349*5.0E5+c*gamma_bb*kab1*rab1*t54401*t54406*t54408*t54507*t54346*t54418*t54537*t54349*(1.6E5/3.0))*(1.0/2.0)+c0*rho_b*t54521*t54415*t54514*(t54440*t54376*t54377+t54506*t54393*t54385+t54390*t54385*t54489-t54461*t54390*t54393*t54479+t54500*t54501*t54502*t54440*t54503*t54352*t54442*t54499*(3.0/2.0))*(1.0/2.0)+c0*rho_b*t54415*t54546*t54539*heaviside(t54510-t54512)*(1.0/2.0)-c0*rho_b*t54521*t54531*t54415*t54514*t54546*(1.0/2.0)+c0*rho_b*t54521*t54531*t54415*t54551*dirac(t54513,1.0)*(1.0/2.0);
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t54710 = tspi_m13*tspi_m13;
                double t54711 = 1.0/pow(rho_a,1.0/3.0);
                double t54712 = a2*a2;
                double t54713 = gamma_aa*gamma_aa;
                double t54714 = 1.0/pow(rho_a,1.6E1/3.0);
                double t54715 = t54710*t54710;
                double t54716 = c*t54711;
                double t54717 = a4*a4;
                double t54718 = 1.0/c;
                double t54719 = 1.0/pow(rho_a,7.0/3.0);
                double t54720 = sqrt(t54716);
                double t54721 = t54713*t54714*t54715*t54717*2.0;
                double t54722 = exp(t54721);
                double t54723 = t54713*t54714*t54715*t54717;
                double t54724 = t54723+1.0;
                double t54725 = 1.0/(t54724*t54724);
                double t54726 = a5*gamma_aa*t54710*t54718*t54719;
                double t54727 = t54726+1.0;
                double t54738 = raa2*t54720;
                double t54728 = exp(-t54738);
                double t54729 = t54728-1.0;
                double t54730 = kaa2*t54729;
                double t54731 = pow(t54716,2.0/5.0);
                double t54739 = raa1*t54731;
                double t54732 = exp(-t54739);
                double t54733 = t54732-1.0;
                double t54734 = kaa1*t54733;
                double t54735 = -kaa0+t54730+t54734;
                double t54736 = 1.0/(t54735*t54735);
                double t54737 = c*c0*t54711*t54722*t54725*t54727*t54736*(2.0/3.0);
                double t54740 = exp(t54737);
                double t54741 = Ei(-t54737);
                double t54742 = 1.0/t54724;
                double t54743 = c*c0*t54711*t54722*t54727*t54736*(2.0/3.0);
                double t54744 = sqrt(t54743);
                v[Q] += scale * c0*rho_a*exp(-(c*c)*1.0/pow(rho_a,2.0/3.0)*1.0/pow(k1*t54720+c*k2*t54711,2.0))*heaviside(c*c0*t54711*(-2.0/3.0)+exp(-t54712*t54713*t54714*t54715)*1.0/sqrt(a3*gamma_aa*t54710*t54718*t54719+1.0)*(kab0-kab1*(exp(-rab1*pow(t54716,4.0/5.0))-1.0))*(t54712*t54713*t54714*t54715+a1*gamma_aa*1.0/pow(rho_a,8.0/3.0)*t54710+1.0)*1.0E5)*(t54740*t54741+((c*c0*t54711*t54722*t54740*t54741*t54725*t54727*t54736*(2.0/3.0)+1.0)*(t54742*t54744*4.0+c*c0*t54711*t54722*t54725*t54727*t54736*(8.0/3.0)+6.0))/(t54742*t54744*6.0+c*c0*t54711*t54722*t54725*t54727*t54736*4.0+3.0))*(1.0/2.0);
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t54746 = tspi_m13*tspi_m13;
                double t54747 = 1.0/pow(rho_a,1.0/3.0);
                double t54748 = a2*a2;
                double t54749 = gamma_aa*gamma_aa;
                double t54750 = 1.0/pow(rho_a,1.6E1/3.0);
                double t54751 = t54746*t54746;
                double t54752 = c*t54747;
                double t54753 = a4*a4;
                double t54754 = 1.0/c;
                double t54755 = 1.0/pow(rho_a,7.0/3.0);
                double t54756 = sqrt(t54752);
                double t54757 = t54750*t54751*t54753*t54749*2.0;
                double t54758 = exp(t54757);
                double t54759 = t54750*t54751*t54753*t54749;
                double t54760 = t54759+1.0;
                double t54761 = 1.0/(t54760*t54760);
                double t54762 = a5*gamma_aa*t54754*t54746*t54755;
                double t54763 = t54762+1.0;
                double t54774 = raa2*t54756;
                double t54764 = exp(-t54774);
                double t54765 = t54764-1.0;
                double t54766 = kaa2*t54765;
                double t54767 = pow(t54752,2.0/5.0);
                double t54775 = raa1*t54767;
                double t54768 = exp(-t54775);
                double t54769 = t54768-1.0;
                double t54770 = kaa1*t54769;
                double t54771 = -kaa0+t54770+t54766;
                double t54772 = 1.0/(t54771*t54771);
                double t54773 = c*c0*t54761*t54763*t54772*t54747*t54758*(2.0/3.0);
                double t54776 = exp(t54773);
                double t54777 = Ei(-t54773);
                double t54778 = 1.0/t54760;
                double t54779 = c*c0*t54763*t54772*t54747*t54758*(2.0/3.0);
                double t54780 = sqrt(t54779);
                double t54781 = t54750*t54751*t54748*t54749;
                double t54782 = pow(t54752,4.0/5.0);
                double t54832 = rab1*t54782;
                double t54783 = exp(-t54832);
                double t54784 = t54783-1.0;
                double t54833 = kab1*t54784;
                double t54785 = kab0-t54833;
                double t54786 = a3*gamma_aa*t54754*t54746*t54755;
                double t54787 = t54786+1.0;
                double t54788 = 1.0/sqrt(t54787);
                double t54789 = 1.0/pow(rho_a,8.0/3.0);
                double t54790 = a1*gamma_aa*t54746*t54789;
                double t54791 = t54781+t54790+1.0;
                double t54792 = c*c;
                double t54793 = 1.0/pow(rho_a,2.0/3.0);
                double t54794 = k1*t54756;
                double t54795 = c*k2*t54747;
                double t54796 = t54794+t54795;
                double t54797 = 1.0/(t54796*t54796);
                double t54837 = t54792*t54793*t54797;
                double t54798 = exp(-t54837);
                double t54799 = c*c0*t54761*t54763*t54772*t54747*t54758*t54776*t54777*(2.0/3.0);
                double t54800 = t54799+1.0;
                double t54801 = t54780*t54778*6.0;
                double t54802 = c*c0*t54761*t54763*t54772*t54747*t54758*4.0;
                double t54803 = t54801+t54802+3.0;
                double t54804 = 1.0/t54803;
                double t54805 = 1.0/pow(rho_a,4.0/3.0);
                double t54806 = 1.0/pow(rho_a,1.1E1/3.0);
                double t54807 = 1.0/sqrt(t54752);
                double t54808 = c*kaa2*raa2*t54805*t54807*t54764*(1.0/6.0);
                double t54809 = 1.0/pow(t54752,3.0/5.0);
                double t54810 = c*kaa1*raa1*t54805*t54809*t54768*(2.0/1.5E1);
                double t54811 = t54810+t54808;
                double t54812 = 1.0/(t54771*t54771*t54771);
                double t54813 = 1.0/pow(rho_a,2.0E1/3.0);
                double t54814 = 1.0/(t54760*t54760*t54760);
                double t54815 = t54780*t54778*4.0;
                double t54816 = c*c0*t54761*t54763*t54772*t54747*t54758*(8.0/3.0);
                double t54817 = t54815+t54816+6.0;
                double t54818 = c*c0*t54805*t54761*t54763*t54772*t54758*(2.0/9.0);
                double t54819 = a5*c0*gamma_aa*t54761*t54806*t54772*t54746*t54758*(1.4E1/9.0);
                double t54820 = c*c0*t54811*t54812*t54761*t54763*t54747*t54758*(4.0/3.0);
                double t54821 = c*c0*t54813*t54751*t54761*t54753*t54763*t54772*t54749*t54758*(6.4E1/9.0);
                double t54823 = c*c0*t54813*t54751*t54814*t54753*t54763*t54772*t54749*t54758*(6.4E1/9.0);
                double t54822 = t54820+t54821-t54823+t54818+t54819;
                double t54824 = c*c0*t54805*t54763*t54772*t54758*(2.0/9.0);
                double t54825 = a5*c0*gamma_aa*t54806*t54772*t54746*t54758*(1.4E1/9.0);
                double t54826 = c*c0*t54811*t54812*t54763*t54747*t54758*(4.0/3.0);
                double t54827 = c*c0*t54813*t54751*t54753*t54763*t54772*t54749*t54758*(6.4E1/9.0);
                double t54828 = t54824+t54825+t54826+t54827;
                double t54829 = 1.0/sqrt(t54779);
                double t54830 = 1.0/pow(rho_a,1.9E1/3.0);
                double t54831 = exp(-t54781);
                double t54834 = t54831*t54791*t54785*t54788*1.0E5;
                double t54841 = c*c0*t54747*(2.0/3.0);
                double t54835 = -t54841+t54834;
                double t54836 = heaviside(t54835);
                double t54838 = t54776*t54777;
                double t54839 = t54800*t54804*t54817;
                double t54840 = t54838+t54839;
                v_rho_a[Q] += scale * c0*t54840*t54798*heaviside(c*c0*t54747*(-2.0/3.0)+t54791*t54785*t54788*exp(-t54750*t54751*t54748*t54749)*1.0E5)*(1.0/2.0)-c0*rho_a*t54836*t54798*(t54800*t54804*(t54828*t54829*t54778*2.0-t54830*t54751*t54761*t54753*t54780*t54749*(6.4E1/3.0)+c*c0*t54805*t54761*t54763*t54772*t54758*(8.0/9.0)+a5*c0*gamma_aa*t54761*t54806*t54772*t54746*t54758*(5.6E1/9.0)+c*c0*t54811*t54812*t54761*t54763*t54747*t54758*(1.6E1/3.0)-c*c0*t54813*t54751*t54814*t54753*t54763*t54772*t54749*t54758*(2.56E2/9.0)+c*c0*t54813*t54751*t54761*t54753*t54763*t54772*t54749*t54758*(2.56E2/9.0))+t54804*t54817*(t54820+t54821-t54823+t54818+t54819+c*c0*t54805*t54761*t54763*t54772*t54758*t54776*t54777*(2.0/9.0)+a5*c0*gamma_aa*t54761*t54806*t54772*t54746*t54758*t54776*t54777*(1.4E1/9.0)+c*c0*t54811*t54812*t54761*t54763*t54747*t54758*t54776*t54777*(4.0/3.0)+c*c0*t54822*t54761*t54763*t54772*t54747*t54758*t54776*t54777*(2.0/3.0)-c*c0*t54813*t54751*t54814*t54753*t54763*t54772*t54749*t54758*t54776*t54777*(6.4E1/9.0)+c*c0*t54813*t54751*t54761*t54753*t54763*t54772*t54749*t54758*t54776*t54777*(6.4E1/9.0))+t54822*t54776*t54777-t54800*1.0/(t54803*t54803)*t54817*(t54828*t54829*t54778*3.0-t54830*t54751*t54761*t54753*t54780*t54749*3.2E1+c*c0*t54805*t54761*t54763*t54772*t54758*(4.0/3.0)+a5*c0*gamma_aa*t54761*t54806*t54772*t54746*t54758*(2.8E1/3.0)+c*c0*t54811*t54812*t54761*t54763*t54747*t54758*8.0-c*c0*t54813*t54751*t54814*t54753*t54763*t54772*t54749*t54758*(1.28E2/3.0)+c*c0*t54813*t54751*t54761*t54753*t54763*t54772*t54749*t54758*(1.28E2/3.0))+(pow(rho_a,1.0/3.0)*t54822*(t54760*t54760)*(t54771*t54771)*t54754*exp(-t54757)*(3.0/2.0))/(c0*t54763))*(1.0/2.0)+c0*rho_a*t54840*t54836*t54798*(1.0/pow(rho_a,5.0/3.0)*t54792*t54797*(2.0/3.0)-t54792*t54793*1.0/(t54796*t54796*t54796)*(c*k2*t54805*(1.0/3.0)+c*k1*t54805*t54807*(1.0/6.0))*2.0)*(1.0/2.0)+c0*rho_a*t54840*t54798*dirac(t54841-t54834)*(c*c0*t54805*(2.0/9.0)-t54831*t54785*t54788*(a1*gamma_aa*t54806*t54746*(8.0/3.0)+t54830*t54751*t54748*t54749*(1.6E1/3.0))*1.0E5+t54830*t54831*t54751*t54791*t54748*t54749*t54785*t54788*(1.6E6/3.0)+a3*gamma_aa*1.0/pow(rho_a,1.0E1/3.0)*t54831*t54754*t54746*t54791*t54785*1.0/pow(t54787,3.0/2.0)*(3.5E5/3.0)-c*kab1*rab1*t54831*t54805*1.0/pow(t54752,1.0/5.0)*t54791*t54783*t54788*(8.0E4/3.0))*(1.0/2.0);
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t54844 = tspi_m13*tspi_m13;
                double t54845 = 1.0/pow(rho_a,1.0/3.0);
                double t54846 = a2*a2;
                double t54847 = gamma_aa*gamma_aa;
                double t54848 = 1.0/pow(rho_a,1.6E1/3.0);
                double t54849 = t54844*t54844;
                double t54850 = c*t54845;
                double t54851 = a4*a4;
                double t54852 = 1.0/c;
                double t54853 = 1.0/pow(rho_a,7.0/3.0);
                double t54854 = sqrt(t54850);
                double t54855 = t54851*t54847*t54848*t54849*2.0;
                double t54856 = exp(t54855);
                double t54857 = t54851*t54847*t54848*t54849;
                double t54858 = t54857+1.0;
                double t54859 = 1.0/(t54858*t54858);
                double t54860 = a5*gamma_aa*t54852*t54844*t54853;
                double t54861 = t54860+1.0;
                double t54873 = raa2*t54854;
                double t54862 = exp(-t54873);
                double t54863 = t54862-1.0;
                double t54864 = kaa2*t54863;
                double t54865 = pow(t54850,2.0/5.0);
                double t54874 = raa1*t54865;
                double t54866 = exp(-t54874);
                double t54867 = t54866-1.0;
                double t54868 = kaa1*t54867;
                double t54869 = -kaa0+t54864+t54868;
                double t54870 = 1.0/(t54869*t54869);
                double t54871 = c*c0*t54861*t54870*t54845*t54856*t54859*(2.0/3.0);
                double t54872 = 1.0/pow(rho_a,8.0/3.0);
                double t54875 = 1.0/pow(rho_a,1.7E1/3.0);
                double t54876 = exp(t54871);
                double t54877 = Ei(-t54871);
                double t54878 = 1.0/t54858;
                double t54879 = c*c0*t54861*t54870*t54845*t54856*(2.0/3.0);
                double t54880 = sqrt(t54879);
                double t54881 = 1.0/(t54858*t54858*t54858);
                double t54882 = t54880*t54878*6.0;
                double t54883 = c*c0*t54861*t54870*t54845*t54856*t54859*4.0;
                double t54884 = t54882+t54883+3.0;
                double t54885 = 1.0/t54884;
                double t54886 = a5*c0*t54870*t54844*t54872*t54856*t54859*(2.0/3.0);
                double t54887 = c*c0*gamma_aa*t54851*t54861*t54870*t54856*t54875*t54849*t54859*(8.0/3.0);
                double t54898 = c*c0*gamma_aa*t54851*t54861*t54870*t54881*t54856*t54875*t54849*(8.0/3.0);
                double t54888 = t54886+t54887-t54898;
                double t54889 = c*c0*t54861*t54870*t54845*t54856*t54876*t54859*t54877*(2.0/3.0);
                double t54890 = t54889+1.0;
                double t54891 = t54880*t54878*4.0;
                double t54892 = c*c0*t54861*t54870*t54845*t54856*t54859*(8.0/3.0);
                double t54893 = t54891+t54892+6.0;
                double t54894 = a5*c0*t54870*t54844*t54872*t54856*(2.0/3.0);
                double t54895 = c*c0*gamma_aa*t54851*t54861*t54870*t54856*t54875*t54849*(8.0/3.0);
                double t54896 = t54894+t54895;
                double t54897 = 1.0/sqrt(t54879);
                double t54899 = t54846*t54847*t54848*t54849;
                double t54900 = pow(t54850,4.0/5.0);
                double t54917 = rab1*t54900;
                double t54901 = exp(-t54917);
                double t54902 = t54901-1.0;
                double t54918 = kab1*t54902;
                double t54903 = kab0-t54918;
                double t54904 = a3*gamma_aa*t54852*t54844*t54853;
                double t54905 = t54904+1.0;
                double t54906 = 1.0/sqrt(t54905);
                double t54907 = a1*gamma_aa*t54844*t54872;
                double t54908 = t54907+t54899+1.0;
                double t54909 = c*c;
                double t54910 = 1.0/pow(rho_a,2.0/3.0);
                double t54911 = k1*t54854;
                double t54912 = c*k2*t54845;
                double t54913 = t54911+t54912;
                double t54914 = 1.0/(t54913*t54913);
                double t54915 = exp(-t54910*t54914*t54909);
                double t54916 = exp(-t54899);
                v_gamma_aa[Q] += scale * c0*rho_a*t54915*heaviside(c*c0*t54845*(-2.0/3.0)+t54903*t54906*t54908*exp(-t54846*t54847*t54848*t54849)*1.0E5)*(t54890*t54885*(t54878*t54896*t54897*2.0-gamma_aa*t54851*t54880*t54848*t54849*t54859*8.0+a5*c0*t54870*t54844*t54872*t54856*t54859*(8.0/3.0)-c*c0*gamma_aa*t54851*t54861*t54870*t54881*t54856*t54875*t54849*(3.2E1/3.0)+c*c0*gamma_aa*t54851*t54861*t54870*t54856*t54875*t54849*t54859*(3.2E1/3.0))+t54893*t54885*(t54886+t54887+a5*c0*t54870*t54844*t54872*t54856*t54876*t54859*t54877*(2.0/3.0)-c*c0*gamma_aa*t54851*t54861*t54870*t54881*t54856*t54875*t54849*(8.0/3.0)+c*c0*t54861*t54870*t54845*t54856*t54876*t54859*t54877*t54888*(2.0/3.0)-c*c0*gamma_aa*t54851*t54861*t54870*t54881*t54856*t54875*t54849*t54876*t54877*(8.0/3.0)+c*c0*gamma_aa*t54851*t54861*t54870*t54856*t54875*t54849*t54876*t54859*t54877*(8.0/3.0))+t54876*t54877*t54888-t54890*1.0/(t54884*t54884)*t54893*(t54878*t54896*t54897*3.0-gamma_aa*t54851*t54880*t54848*t54849*t54859*1.2E1+a5*c0*t54870*t54844*t54872*t54856*t54859*4.0-c*c0*gamma_aa*t54851*t54861*t54870*t54881*t54856*t54875*t54849*1.6E1+c*c0*gamma_aa*t54851*t54861*t54870*t54856*t54875*t54849*t54859*1.6E1)+(pow(rho_a,1.0/3.0)*t54852*(t54858*t54858)*(t54869*t54869)*t54888*exp(-t54855)*(3.0/2.0))/(c0*t54861))*(1.0/2.0)-c0*rho_a*t54915*dirac(c*c0*t54845*(2.0/3.0)-t54903*t54906*t54916*t54908*1.0E5)*(t54876*t54877+t54890*t54893*t54885)*(t54903*t54906*t54916*(a1*t54844*t54872+gamma_aa*t54846*t54848*t54849*2.0)*-1.0E5+a3*t54903*1.0/pow(t54905,3.0/2.0)*t54852*t54844*t54853*t54916*t54908*5.0E4+gamma_aa*t54903*t54906*t54916*t54908*t54846*t54848*t54849*2.0E5)*(1.0/2.0);
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t54924 = tspi_m13*tspi_m13;
                double t54925 = 1.0/pow(rho_a,1.0/3.0);
                double t54926 = a2*a2;
                double t54927 = gamma_aa*gamma_aa;
                double t54928 = 1.0/pow(rho_a,1.6E1/3.0);
                double t54929 = t54924*t54924;
                double t54930 = c*t54925;
                double t54931 = a4*a4;
                double t54932 = t54931*t54927*t54928*t54929*2.0;
                double t54933 = exp(t54932);
                double t54934 = 1.0/c;
                double t54935 = 1.0/pow(rho_a,7.0/3.0);
                double t54936 = sqrt(t54930);
                double t54937 = t54931*t54927*t54928*t54929;
                double t54938 = t54937+1.0;
                double t54939 = 1.0/(t54938*t54938);
                double t54940 = a5*gamma_aa*t54924*t54934*t54935;
                double t54941 = t54940+1.0;
                double t54952 = raa2*t54936;
                double t54942 = exp(-t54952);
                double t54943 = t54942-1.0;
                double t54944 = kaa2*t54943;
                double t54945 = pow(t54930,2.0/5.0);
                double t54953 = raa1*t54945;
                double t54946 = exp(-t54953);
                double t54947 = t54946-1.0;
                double t54948 = kaa1*t54947;
                double t54949 = -kaa0+t54944+t54948;
                double t54950 = 1.0/(t54949*t54949);
                double t54951 = c*c0*t54941*t54950*t54933*t54925*t54939*(2.0/3.0);
                double t54954 = 1.0/t54938;
                double t54955 = 1.0/pow(rho_a,4.0/3.0);
                double t54956 = c*c0*t54941*t54950*t54933*t54925*(2.0/3.0);
                double t54957 = sqrt(t54956);
                double t54958 = 1.0/pow(rho_a,1.1E1/3.0);
                double t54959 = 1.0/sqrt(t54930);
                double t54960 = c*kaa2*raa2*t54942*t54955*t54959*(1.0/6.0);
                double t54961 = 1.0/pow(t54930,3.0/5.0);
                double t54962 = c*kaa1*raa1*t54961*t54946*t54955*(2.0/1.5E1);
                double t54963 = t54960+t54962;
                double t54964 = 1.0/(t54949*t54949*t54949);
                double t54965 = 1.0/pow(rho_a,2.0E1/3.0);
                double t54966 = exp(t54951);
                double t54967 = Ei(-t54951);
                double t54968 = 1.0/(t54938*t54938*t54938);
                double t54969 = t54954*t54957*6.0;
                double t54970 = c*c0*t54941*t54950*t54933*t54925*t54939*4.0;
                double t54971 = t54970+t54969+3.0;
                double t54972 = 1.0/t54971;
                double t54973 = c*c0*t54941*t54950*t54933*t54955*t54939*(2.0/9.0);
                double t54974 = a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54958*(1.4E1/9.0);
                double t54975 = c*c0*t54941*t54933*t54925*t54963*t54964*t54939*(4.0/3.0);
                double t54976 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54939*(6.4E1/9.0);
                double t54978 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54968*(6.4E1/9.0);
                double t54977 = t54973+t54974+t54975+t54976-t54978;
                double t54979 = c*c0*t54941*t54950*t54933*t54925*t54939*t54966*t54967*(2.0/3.0);
                double t54980 = t54979+1.0;
                double t54981 = t54954*t54957*4.0;
                double t54982 = c*c0*t54941*t54950*t54933*t54925*t54939*(8.0/3.0);
                double t54983 = t54981+t54982+6.0;
                double t54984 = c*c0*t54941*t54950*t54933*t54955*(2.0/9.0);
                double t54985 = a5*c0*gamma_aa*t54950*t54924*t54933*t54958*(1.4E1/9.0);
                double t54986 = c*c0*t54941*t54933*t54925*t54963*t54964*(4.0/3.0);
                double t54987 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*(6.4E1/9.0);
                double t54988 = t54984+t54985+t54986+t54987;
                double t54989 = 1.0/sqrt(t54956);
                double t54990 = 1.0/pow(rho_a,1.9E1/3.0);
                double t54991 = t54926*t54927*t54928*t54929;
                double t54992 = pow(t54930,4.0/5.0);
                double t55010 = rab1*t54992;
                double t54993 = exp(-t55010);
                double t54994 = t54993-1.0;
                double t55011 = kab1*t54994;
                double t54995 = kab0-t55011;
                double t54996 = a3*gamma_aa*t54924*t54934*t54935;
                double t54997 = t54996+1.0;
                double t54998 = 1.0/sqrt(t54997);
                double t54999 = 1.0/pow(rho_a,8.0/3.0);
                double t55000 = a1*gamma_aa*t54924*t54999;
                double t55001 = t54991+t55000+1.0;
                double t55002 = c*c;
                double t55003 = 1.0/pow(rho_a,2.0/3.0);
                double t55004 = k1*t54936;
                double t55005 = c*k2*t54925;
                double t55006 = t55004+t55005;
                double t55007 = 1.0/(t55006*t55006);
                double t55013 = t55002*t55003*t55007;
                double t55008 = exp(-t55013);
                double t55009 = exp(-t54991);
                double t55012 = c*c0*t54925*(2.0/3.0);
                double t55014 = t54954*t54988*t54989*2.0;
                double t55015 = c*c0*t54941*t54950*t54933*t54955*t54939*(8.0/9.0);
                double t55016 = a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54958*(5.6E1/9.0);
                double t55017 = c*c0*t54941*t54933*t54925*t54963*t54964*t54939*(1.6E1/3.0);
                double t55018 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54939*(2.56E2/9.0);
                double t55069 = t54931*t54927*t54990*t54929*t54939*t54957*(6.4E1/3.0);
                double t55070 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54968*(2.56E2/9.0);
                double t55019 = t55014+t55015+t55016-t55070+t55017+t55018-t55069;
                double t55020 = c*c0*t54941*t54950*t54933*t54955*t54939*t54966*t54967*(2.0/9.0);
                double t55021 = c*c0*t54941*t54933*t54925*t54963*t54964*t54939*t54966*t54967*(4.0/3.0);
                double t55022 = c*c0*t54941*t54950*t54933*t54925*t54939*t54966*t54967*t54977*(2.0/3.0);
                double t55023 = a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54966*t54958*t54967*(1.4E1/9.0);
                double t55024 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54939*t54966*t54967*(6.4E1/9.0);
                double t55073 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54966*t54967*t54968*(6.4E1/9.0);
                double t55025 = t54973+t54974+t54975+t54976-t54978+t55020+t55021+t55022+t55023+t55024-t55073;
                double t55026 = t54931*t54931;
                double t55027 = t54927*t54927;
                double t55028 = t54929*t54929;
                double t55029 = raa2*raa2;
                double t55030 = c*kaa2*t54942*t54935*t55029*(1.0/3.6E1);
                double t55031 = raa1*raa1;
                double t55032 = 1.0/pow(t54930,6.0/5.0);
                double t55033 = kaa1*t54946*t54999*t55002*t55031*t55032*(4.0/2.25E2);
                double t55034 = 1.0/pow(t54930,3.0/2.0);
                double t55035 = kaa2*raa2*t54942*t54999*t55002*t55034*(1.0/3.6E1);
                double t55036 = 1.0/pow(t54930,8.0/5.0);
                double t55037 = kaa1*raa1*t54946*t54999*t55002*t55036*(2.0/7.5E1);
                double t55047 = c*kaa2*raa2*t54942*t54935*t54959*(2.0/9.0);
                double t55048 = c*kaa1*raa1*t54961*t54935*t54946*(8.0/4.5E1);
                double t55038 = t55030+t55033+t55035+t55037-t55047-t55048;
                double t55039 = t54963*t54963;
                double t55040 = 1.0/(t54949*t54949*t54949*t54949);
                double t55041 = 1.0/pow(rho_a,1.4E1/3.0);
                double t55042 = 1.0/pow(rho_a,1.0E1);
                double t55043 = 1.0/pow(rho_a,1.3E1);
                double t55044 = 1.0/pow(rho_a,2.3E1/3.0);
                double t55045 = 1.0/pow(rho_a,1.0E1/3.0);
                double t55046 = 1.0/t54941;
                double t55049 = t54977*t54977;
                double t55050 = 1.0/(t54938*t54938*t54938*t54938);
                double t55051 = c*c0*t54941*t54950*t54933*t54935*t54939*(8.0/2.7E1);
                double t55052 = c*c0*t54941*t54933*t54925*t54939*t55040*t55039*4.0;
                double t55053 = a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t55041*(5.6E1/9.0);
                double t55054 = c*c0*t54941*t54933*t54963*t54955*t54964*t54939*(8.0/9.0);
                double t55055 = a5*c0*gamma_aa*t54924*t54933*t54963*t54964*t54939*t54958*(5.6E1/9.0);
                double t55056 = a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54939*t55042*(8.96E2/2.7E1);
                double t55057 = c*c0*t54941*t54950*t54933*t54939*t55043*t55026*t55027*t55028*(2.048E3/2.7E1);
                double t55058 = c*c0*t54941*t54950*t54933*t55050*t55043*t55026*t55027*t55028*(1.024E3/9.0);
                double t55059 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54939*t55044*(4.48E2/9.0);
                double t55060 = c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54939*(2.56E2/9.0);
                double t55093 = c*c0*t54941*t54933*t54925*t54964*t54939*t55038*(4.0/3.0);
                double t55094 = a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54968*t55042*(8.96E2/2.7E1);
                double t55095 = c*c0*t54941*t54950*t54933*t54968*t55043*t55026*t55027*t55028*(4.096E3/2.7E1);
                double t55096 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54968*t55044*(4.48E2/9.0);
                double t55097 = c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54968*(2.56E2/9.0);
                double t55061 = t55051+t55060+t55052+t55053+t55054+t55055+t55056+t55057-t55093+t55058-t55094+t55059-t55095-t55096-t55097;
                double t55062 = 1.0/(t54971*t54971);
                double t55063 = t54954*t54988*t54989*3.0;
                double t55064 = c*c0*t54941*t54950*t54933*t54955*t54939*(4.0/3.0);
                double t55065 = a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54958*(2.8E1/3.0);
                double t55066 = c*c0*t54941*t54933*t54925*t54963*t54964*t54939*8.0;
                double t55067 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54939*(1.28E2/3.0);
                double t55071 = t54931*t54927*t54990*t54929*t54939*t54957*3.2E1;
                double t55072 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54968*(1.28E2/3.0);
                double t55068 = -t55071+t55063-t55072+t55064+t55065+t55066+t55067;
                double t55074 = c*c0*t54941*t54950*t54933*t54935*(8.0/2.7E1);
                double t55075 = a5*c0*gamma_aa*t54950*t54924*t54933*t55041*(5.6E1/9.0);
                double t55076 = c*c0*t54941*t54933*t54963*t54955*t54964*(8.0/9.0);
                double t55077 = c*c0*t54941*t54933*t54925*t55040*t55039*4.0;
                double t55078 = a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t55042*(8.96E2/2.7E1);
                double t55079 = a5*c0*gamma_aa*t54924*t54933*t54963*t54964*t54958*(5.6E1/9.0);
                double t55080 = c*c0*t54941*t54950*t54933*t55043*t55026*t55027*t55028*(2.048E3/2.7E1);
                double t55081 = c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t55044*(4.48E2/9.0);
                double t55082 = c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*(2.56E2/9.0);
                double t55083 = t55080+t55081+t55082+t55074+t55075+t55076+t55077+t55078+t55079-c*c0*t54941*t54933*t54925*t54964*t55038*(4.0/3.0);
                double t55084 = t54988*t54988;
                double t55085 = 1.0/pow(t54956,3.0/2.0);
                double t55086 = 1.0/pow(rho_a,2.2E1/3.0);
                double t55087 = 1.0/pow(rho_a,3.8E1/3.0);
                double t55088 = 1.0/c0;
                double t55089 = exp(-t54932);
                double t55090 = t54938*t54938;
                double t55091 = t54949*t54949;
                double t55092 = pow(rho_a,1.0/3.0);
                double t55098 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t55099 = t54995*t54998*t55001*t55009*1.0E5;
                double t55100 = -t55012+t55099;
                double t55101 = heaviside(t55100);
                double t55102 = t54966*t54967;
                double t55103 = t54980*t54972*t54983;
                double t55104 = t55102+t55103;
                double t55105 = t54926*t54927*t54990*t54929*(1.6E1/3.0);
                double t55106 = a1*gamma_aa*t54924*t54958*(8.0/3.0);
                double t55107 = t55105+t55106;
                double t55108 = 1.0/(c*c);
                double t55109 = 1.0/pow(t54930,1.0/5.0);
                double t55110 = 1.0/pow(t54997,3.0/2.0);
                double t55111 = 1.0/pow(rho_a,5.0/3.0);
                double t55112 = t55002*t55111*t55007*(2.0/3.0);
                double t55113 = 1.0/(t55006*t55006*t55006);
                double t55114 = c*k2*t54955*(1.0/3.0);
                double t55115 = c*k1*t54955*t54959*(1.0/6.0);
                double t55116 = t55114+t55115;
                double t55130 = t55002*t55003*t55113*t55116*2.0;
                double t55117 = t55112-t55130;
                double t55118 = t54980*t54972*t55019;
                double t55119 = t54966*t54967*t54977;
                double t55120 = t54972*t54983*t55025;
                double t55121 = t54934*t54977*t55090*t55046*t55091*t55092*t55088*t55089*(3.0/2.0);
                double t55125 = t54980*t54983*t55062*t55068;
                double t55122 = t55120+t55121-t55125+t55118+t55119;
                double t55123 = t55012-t55099;
                double t55124 = dirac(t55123);
                double t55126 = c*c0*t54955*(2.0/9.0);
                double t55127 = t54926*t54927*t54990*t54929*t54995*t54998*t55001*t55009*(1.6E6/3.0);
                double t55128 = a3*gamma_aa*t54924*t54934*t54995*t55001*t55110*t55009*t55045*(3.5E5/3.0);
                double t55131 = t54995*t54998*t55107*t55009*1.0E5;
                double t55132 = c*kab1*rab1*t54955*t54993*t54998*t55001*t55009*t55109*(8.0E4/3.0);
                double t55129 = -t55131-t55132+t55126+t55127+t55128;
                v_rho_a_rho_a[Q] += scale * -c0*t55122*t55008*heaviside(c*c0*t54925*(-2.0/3.0)+t54995*t54998*t55001*exp(-t54926*t54927*t54928*t54929)*1.0E5)+c0*t55104*t55008*t55129*dirac(t55012-t54995*t54998*t55001*t55009*1.0E5)+c0*t55101*t55104*t55008*t55117+c0*rho_a*t55101*t55008*(t54980*t54972*(t54954*t54989*t55083*2.0-t54954*t55084*t55085-t54931*t54927*t54929*t54939*t54957*t55086*(1.216E3/9.0)+t54957*t54968*t55026*t55027*t55028*t55087*(2.048E3/9.0)+c*c0*t54941*t54950*t54933*t54935*t54939*(3.2E1/2.7E1)-t54931*t54927*t54990*t54929*t54939*t54988*t54989*(6.4E1/3.0)+a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t55041*(2.24E2/9.0)+c*c0*t54941*t54933*t54963*t54955*t54964*t54939*(3.2E1/9.0)-c*c0*t54941*t54933*t54925*t54964*t54939*t55038*(1.6E1/3.0)+c*c0*t54941*t54933*t54925*t54939*t55040*t55039*1.6E1+a5*c0*gamma_aa*t54924*t54933*t54963*t54964*t54939*t54958*(2.24E2/9.0)+c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54939*t55044*(1.792E3/9.0)-c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54968*t55044*(1.792E3/9.0)+c*c0*t54941*t54950*t54933*t54939*t55043*t55026*t55027*t55028*(8.192E3/2.7E1)-c*c0*t54941*t54950*t54933*t54968*t55043*t55026*t55027*t55028*(1.6384E4/2.7E1)+c*c0*t54941*t54950*t54933*t55050*t55043*t55026*t55027*t55028*(4.096E3/9.0)+a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54939*t55042*(3.584E3/2.7E1)-a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54968*t55042*(3.584E3/2.7E1)+c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54939*(1.024E3/9.0)-c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54968*(1.024E3/9.0))+t54966*t54967*t55061+t54966*t54967*t55049+t54972*t55025*t55019*2.0+t54972*t54983*(t55051+t55060+t55052+t55053+t55054+t55055+t55056+t55057+t55049+t55058+t55059+(t54977*(1.0/3.0))/rho_a+(t54963*t54977*2.0)/t54949+t54931*t54927*t54990*t54929*t54977*(3.2E1/3.0)-t54931*t54927*t54954*t54990*t54929*t54977*(3.2E1/3.0)+a5*gamma_aa*t54924*t54934*t54977*t55045*t55046*(7.0/3.0)-c*c0*t54941*t54933*t54925*t54964*t54939*t55038*(4.0/3.0)+c*c0*t54941*t54950*t54933*t54935*t54939*t54966*t54967*(8.0/2.7E1)+a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54966*t54967*t55041*(5.6E1/9.0)+c*c0*t54941*t54950*t54933*t54955*t54939*t54966*t54967*t54977*(4.0/9.0)+c*c0*t54941*t54933*t54963*t54955*t54964*t54939*t54966*t54967*(8.0/9.0)-c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54968*t55044*(4.48E2/9.0)+c*c0*t54941*t54950*t54933*t54925*t54939*t54966*t54967*t55061*(2.0/3.0)+c*c0*t54941*t54950*t54933*t54925*t54939*t54966*t54967*t55049*(2.0/3.0)-c*c0*t54941*t54933*t54925*t54964*t54939*t54966*t54967*t55038*(4.0/3.0)+c*c0*t54941*t54933*t54925*t54939*t54966*t54967*t55040*t55039*4.0-c*c0*t54941*t54950*t54933*t54968*t55043*t55026*t55027*t55028*(4.096E3/2.7E1)+a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t54966*t54958*t54967*t54977*(2.8E1/9.0)+a5*c0*gamma_aa*t54924*t54933*t54963*t54964*t54939*t54966*t54958*t54967*(5.6E1/9.0)-a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54968*t55042*(8.96E2/2.7E1)-c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54968*(2.56E2/9.0)+c*c0*t54941*t54933*t54925*t54963*t54964*t54939*t54966*t54967*t54977*(8.0/3.0)+c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54939*t54966*t54967*t55044*(4.48E2/9.0)-c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54966*t54967*t54968*t55044*(4.48E2/9.0)+c*c0*t54941*t54950*t54933*t54939*t54966*t54967*t55043*t55026*t55027*t55028*(2.048E3/2.7E1)-c*c0*t54941*t54950*t54933*t54966*t54967*t54968*t55043*t55026*t55027*t55028*(4.096E3/2.7E1)+c*c0*t54941*t54950*t54933*t54966*t54967*t55050*t55043*t55026*t55027*t55028*(1.024E3/9.0)+a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54939*t54966*t54967*t55042*(8.96E2/2.7E1)-a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54966*t54967*t54968*t55042*(8.96E2/2.7E1)+c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54939*t54966*t54967*t54977*(1.28E2/9.0)+c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54939*t54966*t54967*(2.56E2/9.0)-c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54965*t54966*t54967*t54968*t54977*(1.28E2/9.0)-c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54966*t54967*t54968*(2.56E2/9.0))-t54980*t54983*t55062*(t54954*t54989*t55083*3.0-t54954*t55084*t55085*(3.0/2.0)-t54931*t54927*t54929*t54939*t54957*t55086*(6.08E2/3.0)+t54957*t54968*t55026*t55027*t55028*t55087*(1.024E3/3.0)+c*c0*t54941*t54950*t54933*t54935*t54939*(1.6E1/9.0)-t54931*t54927*t54990*t54929*t54939*t54988*t54989*3.2E1+a5*c0*gamma_aa*t54950*t54924*t54933*t54939*t55041*(1.12E2/3.0)+c*c0*t54941*t54933*t54963*t54955*t54964*t54939*(1.6E1/3.0)-c*c0*t54941*t54933*t54925*t54964*t54939*t55038*8.0+c*c0*t54941*t54933*t54925*t54939*t55040*t55039*2.4E1+a5*c0*gamma_aa*t54924*t54933*t54963*t54964*t54939*t54958*(1.12E2/3.0)+c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54939*t55044*(8.96E2/3.0)-c*c0*t54931*t54941*t54950*t54933*t54927*t54929*t54968*t55044*(8.96E2/3.0)+c*c0*t54941*t54950*t54933*t54939*t55043*t55026*t55027*t55028*(4.096E3/9.0)-c*c0*t54941*t54950*t54933*t54968*t55043*t55026*t55027*t55028*(8.192E3/9.0)+c*c0*t54941*t54950*t54933*t55050*t55043*t55026*t55027*t55028*(2.048E3/3.0)+a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54939*t55042*(1.792E3/9.0)-a5*c0*gamma_aa*t54931*t54950*t54924*t54933*t54927*t54929*t54968*t55042*(1.792E3/9.0)+c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54939*(5.12E2/3.0)-c*c0*t54931*t54941*t54933*t54927*t54963*t54964*t54929*t54965*t54968*(5.12E2/3.0))-t54980*t55062*t55019*t55068*2.0-t54983*t55025*t55062*t55068*2.0+1.0/(t54971*t54971*t54971)*t54980*t54983*(t55068*t55068)*2.0-t54934*t54977*t55003*t55090*t55046*t55091*t55088*t55089*(1.0/2.0)+t54934*t55061*t55090*t55046*t55091*t55092*t55088*t55089*(3.0/2.0)+t54934*t55090*t55046*t55091*t55092*t55049*t55088*t55089*(3.0/2.0)-t54934*t54963*t54949*t54977*t55090*t55046*t55092*t55088*t55089*3.0+t54931*t54934*t54927*t54929*t54938*t54977*t55046*t55091*t55088*t55089*t55098*1.6E1-t54931*t54934*t54927*t54929*t54977*t55090*t55046*t55091*t55088*t55089*t55098*1.6E1-a5*gamma_aa*1.0/(rho_a*rho_a*rho_a)*1.0/(t54941*t54941)*t54924*t54977*t55090*t55108*t55091*t55088*t55089*(7.0/2.0))*(1.0/2.0)-c0*rho_a*t55101*t55122*t55008*t55117-c0*rho_a*t55122*t55124*t55008*t55129+c0*rho_a*t55101*t55104*t55008*(t55117*t55117)*(1.0/2.0)-c0*rho_a*t55104*t55124*t55008*(c*c0*t54935*(8.0/2.7E1)-t54995*t54998*t55009*(a1*gamma_aa*t54924*t55041*(8.8E1/9.0)+t54926*t54927*t54929*t55086*(3.04E2/9.0))*1.0E5+t54926*t54927*t54990*t54929*t54995*t54998*t55107*t55009*(3.2E6/3.0)+t54926*t54927*t54929*t54995*t54998*t55001*t55009*t55086*(3.04E7/9.0)-(t54926*t54926)*t54995*t54998*t55001*t55009*t55027*t55028*t55087*(2.56E7/9.0)-(a3*a3)*t54927*t54929*t54965*t54995*1.0/pow(t54997,5.0/2.0)*t55001*t55009*t55108*(1.225E6/3.0)+kab1*(rab1*rab1)*1.0/pow(t54930,2.0/5.0)*t54993*t54998*t54999*t55001*t55002*t55009*(6.4E4/9.0)+a3*gamma_aa*t54924*t54934*t54995*t55110*t55107*t55009*t55045*(7.0E5/3.0)-c*kab1*rab1*t54935*t54993*t54998*t55001*t55009*t55109*(3.2E5/9.0)-c*kab1*rab1*t54955*t54993*t54998*t55107*t55009*t55109*(1.6E5/3.0)+kab1*rab1*t54993*t54998*t54999*t55001*t55002*t55032*t55009*(1.6E4/9.0)+a3*gamma_aa*1.0/pow(rho_a,1.3E1/3.0)*t54924*t54934*t54995*t55001*t55110*t55009*(3.5E6/9.0)+a3*gamma_aa*kab1*rab1*t54924*t54993*t55001*t55110*t55041*t55009*t55109*(5.6E5/9.0)-a3*gamma_aa*1.0/pow(rho_a,2.9E1/3.0)*t54924*t54934*t54926*t54927*t54929*t54995*t55001*t55110*t55009*(1.12E7/9.0)+c*kab1*rab1*t54926*t54927*t54929*t54993*t54998*t55001*t55044*t55009*t55109*(2.56E6/9.0))*(1.0/2.0)-c0*rho_a*t55101*t55104*t55008*(t54999*t55002*t55007*(1.0E1/9.0)-t55002*t55111*t55113*t55116*(8.0/3.0)+t55002*t55003*1.0/(t55006*t55006*t55006*t55006)*(t55116*t55116)*6.0-t55002*t55003*t55113*(c*k2*t54935*(4.0/9.0)+c*k1*t54935*t54959*(2.0/9.0)-k1*t54999*t55002*t55034*(1.0/3.6E1))*2.0)*(1.0/2.0)-c0*rho_a*t55104*t55008*(t55129*t55129)*dirac(t55123,1.0)*(1.0/2.0)+c0*rho_a*t55104*t55124*t55008*t55117*t55129;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t55350 = tspi_m13*tspi_m13;
                double t55351 = 1.0/pow(rho_a,1.0/3.0);
                double t55352 = a2*a2;
                double t55353 = gamma_aa*gamma_aa;
                double t55354 = 1.0/pow(rho_a,1.6E1/3.0);
                double t55355 = t55350*t55350;
                double t55356 = c*t55351;
                double t55357 = a4*a4;
                double t55358 = t55353*t55354*t55355*t55357*2.0;
                double t55359 = exp(t55358);
                double t55360 = 1.0/c;
                double t55361 = 1.0/pow(rho_a,7.0/3.0);
                double t55362 = sqrt(t55356);
                double t55363 = t55353*t55354*t55355*t55357;
                double t55364 = t55363+1.0;
                double t55365 = 1.0/(t55364*t55364);
                double t55366 = a5*gamma_aa*t55350*t55360*t55361;
                double t55367 = t55366+1.0;
                double t55378 = raa2*t55362;
                double t55368 = exp(-t55378);
                double t55369 = t55368-1.0;
                double t55370 = kaa2*t55369;
                double t55371 = pow(t55356,2.0/5.0);
                double t55379 = raa1*t55371;
                double t55372 = exp(-t55379);
                double t55373 = t55372-1.0;
                double t55374 = kaa1*t55373;
                double t55375 = -kaa0+t55370+t55374;
                double t55376 = 1.0/(t55375*t55375);
                double t55377 = c*c0*t55351*t55365*t55367*t55376*t55359*(2.0/3.0);
                double t55380 = 1.0/t55364;
                double t55381 = c*c0*t55351*t55367*t55376*t55359*(2.0/3.0);
                double t55382 = 1.0/pow(rho_a,8.0/3.0);
                double t55383 = 1.0/pow(rho_a,1.7E1/3.0);
                double t55388 = a5*c0*t55350*t55382*t55376*t55359*(2.0/3.0);
                double t55389 = c*c0*gamma_aa*t55355*t55383*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55384 = t55388+t55389;
                double t55385 = sqrt(t55381);
                double t55386 = t55357*t55357;
                double t55387 = t55355*t55355;
                double t55390 = 1.0/sqrt(t55381);
                double t55391 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t55392 = 1.0/(t55364*t55364*t55364);
                double t55393 = 1.0/pow(rho_a,1.1E1);
                double t55394 = t55380*t55385*6.0;
                double t55395 = c*c0*t55351*t55365*t55367*t55376*t55359*4.0;
                double t55396 = t55394+t55395+3.0;
                double t55397 = 1.0/t55396;
                double t55399 = a5*c0*t55350*t55382*t55365*t55376*t55359*(2.0/3.0);
                double t55400 = c*c0*gamma_aa*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55401 = c*c0*gamma_aa*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55398 = t55400-t55401+t55399;
                double t55402 = exp(t55377);
                double t55403 = Ei(-t55377);
                double t55404 = t55398*t55398;
                double t55405 = 1.0/(t55364*t55364*t55364*t55364);
                double t55406 = a5*c0*gamma_aa*t55350*t55355*t55391*t55365*t55357*t55376*t55359*(1.6E1/3.0);
                double t55407 = c*c0*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55408 = c*c0*t55353*t55365*t55393*t55367*t55376*t55359*t55386*t55387*(3.2E1/3.0);
                double t55409 = c*c0*t55405*t55353*t55393*t55367*t55376*t55359*t55386*t55387*1.6E1;
                double t55444 = a5*c0*gamma_aa*t55350*t55355*t55391*t55392*t55357*t55376*t55359*(1.6E1/3.0);
                double t55445 = c*c0*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55446 = c*c0*t55353*t55392*t55393*t55367*t55376*t55359*t55386*t55387*(6.4E1/3.0);
                double t55410 = t55406+t55407+t55408-t55444+t55409-t55445-t55446;
                double t55411 = t55380*t55385*4.0;
                double t55412 = c*c0*t55351*t55365*t55367*t55376*t55359*(8.0/3.0);
                double t55413 = t55411+t55412+6.0;
                double t55414 = a5*c0*t55402*t55403*t55350*t55382*t55365*t55376*t55359*(2.0/3.0);
                double t55415 = c*c0*t55402*t55403*t55351*t55365*t55367*t55376*t55359*t55398*(2.0/3.0);
                double t55416 = c*c0*gamma_aa*t55402*t55403*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55481 = c*c0*gamma_aa*t55402*t55403*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55417 = t55400-t55401+t55414+t55415+t55416-t55481+t55399;
                double t55418 = c*c0*t55402*t55403*t55351*t55365*t55367*t55376*t55359*(2.0/3.0);
                double t55419 = t55418+1.0;
                double t55420 = t55380*t55390*t55384*3.0;
                double t55421 = a5*c0*t55350*t55382*t55365*t55376*t55359*4.0;
                double t55422 = c*c0*gamma_aa*t55355*t55365*t55383*t55357*t55367*t55376*t55359*1.6E1;
                double t55425 = gamma_aa*t55354*t55355*t55365*t55357*t55385*1.2E1;
                double t55426 = c*c0*gamma_aa*t55355*t55383*t55392*t55357*t55367*t55376*t55359*1.6E1;
                double t55423 = t55420+t55421+t55422-t55425-t55426;
                double t55424 = 1.0/(t55396*t55396);
                double t55427 = t55380*t55390*t55384*2.0;
                double t55428 = a5*c0*t55350*t55382*t55365*t55376*t55359*(8.0/3.0);
                double t55429 = c*c0*gamma_aa*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(3.2E1/3.0);
                double t55479 = gamma_aa*t55354*t55355*t55365*t55357*t55385*8.0;
                double t55480 = c*c0*gamma_aa*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(3.2E1/3.0);
                double t55430 = -t55480+t55427+t55428+t55429-t55479;
                double t55431 = a5*c0*gamma_aa*t55350*t55355*t55391*t55357*t55376*t55359*(1.6E1/3.0);
                double t55432 = c*c0*t55355*t55383*t55357*t55367*t55376*t55359*(8.0/3.0);
                double t55433 = c*c0*t55353*t55393*t55367*t55376*t55359*t55386*t55387*(3.2E1/3.0);
                double t55434 = t55431+t55432+t55433;
                double t55435 = t55384*t55384;
                double t55436 = 1.0/pow(t55381,3.0/2.0);
                double t55437 = 1.0/pow(rho_a,3.2E1/3.0);
                double t55438 = 1.0/t55367;
                double t55439 = 1.0/c0;
                double t55440 = pow(rho_a,1.0/3.0);
                double t55441 = exp(-t55358);
                double t55442 = t55364*t55364;
                double t55443 = t55375*t55375;
                double t55447 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a);
                double t55448 = c*c;
                double t55449 = 1.0/pow(rho_a,2.0/3.0);
                double t55450 = k1*t55362;
                double t55451 = c*k2*t55351;
                double t55452 = t55450+t55451;
                double t55453 = 1.0/(t55452*t55452);
                double t55471 = t55453*t55448*t55449;
                double t55454 = exp(-t55471);
                double t55455 = t55352*t55353*t55354*t55355;
                double t55456 = pow(t55356,4.0/5.0);
                double t55466 = rab1*t55456;
                double t55457 = exp(-t55466);
                double t55458 = t55457-1.0;
                double t55467 = kab1*t55458;
                double t55459 = kab0-t55467;
                double t55460 = a3*gamma_aa*t55350*t55360*t55361;
                double t55461 = t55460+1.0;
                double t55462 = 1.0/sqrt(t55461);
                double t55463 = a1*gamma_aa*t55350*t55382;
                double t55464 = t55463+t55455+1.0;
                double t55465 = exp(-t55455);
                double t55472 = a1*t55350*t55382;
                double t55473 = gamma_aa*t55352*t55354*t55355*2.0;
                double t55474 = t55472+t55473;
                double t55475 = t55462*t55465*t55474*t55459*1.0E5;
                double t55476 = 1.0/pow(t55461,3.0/2.0);
                double t55477 = a3*t55350*t55360*t55361*t55464*t55465*t55476*t55459*5.0E4;
                double t55478 = gamma_aa*t55352*t55354*t55462*t55355*t55464*t55465*t55459*2.0E5;
                double t55468 = -t55475+t55477+t55478;
                double t55469 = c*c0*t55351*(2.0/3.0);
                double t55482 = t55462*t55464*t55465*t55459*1.0E5;
                double t55470 = -t55482+t55469;
                double t55483 = dirac(t55470);
                double t55484 = t55402*t55403;
                double t55485 = t55413*t55419*t55397;
                double t55486 = t55484+t55485;
                double t55487 = 1.0/(c*c);
                v_gamma_aa_gamma_aa[Q] += scale * c0*rho_a*t55454*heaviside(c*c0*t55351*(-2.0/3.0)+t55462*t55464*t55459*exp(-t55352*t55353*t55354*t55355)*1.0E5)*(t55413*t55397*(t55404+t55406+t55407+t55408+t55409+gamma_aa*t55354*t55355*t55357*t55398*4.0+a5*t55350*t55360*t55361*t55438*t55398-gamma_aa*t55380*t55354*t55355*t55357*t55398*4.0-c*c0*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(8.0/3.0)-a5*c0*gamma_aa*t55350*t55355*t55391*t55392*t55357*t55376*t55359*(1.6E1/3.0)+a5*c0*t55402*t55403*t55350*t55382*t55365*t55376*t55359*t55398*(4.0/3.0)+c*c0*t55410*t55402*t55403*t55351*t55365*t55367*t55376*t55359*(2.0/3.0)+c*c0*t55402*t55403*t55404*t55351*t55365*t55367*t55376*t55359*(2.0/3.0)-c*c0*t55353*t55392*t55393*t55367*t55376*t55359*t55386*t55387*(6.4E1/3.0)+c*c0*t55402*t55403*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(8.0/3.0)-c*c0*t55402*t55403*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(8.0/3.0)+a5*c0*gamma_aa*t55402*t55403*t55350*t55355*t55391*t55365*t55357*t55376*t55359*(1.6E1/3.0)-a5*c0*gamma_aa*t55402*t55403*t55350*t55355*t55391*t55392*t55357*t55376*t55359*(1.6E1/3.0)+c*c0*t55402*t55403*t55405*t55353*t55393*t55367*t55376*t55359*t55386*t55387*1.6E1+c*c0*t55402*t55403*t55353*t55365*t55393*t55367*t55376*t55359*t55386*t55387*(3.2E1/3.0)-c*c0*t55402*t55403*t55353*t55392*t55393*t55367*t55376*t55359*t55386*t55387*(6.4E1/3.0)+c*c0*gamma_aa*t55402*t55403*t55355*t55365*t55383*t55357*t55367*t55376*t55359*t55398*(1.6E1/3.0)-c*c0*gamma_aa*t55402*t55403*t55355*t55383*t55392*t55357*t55367*t55376*t55359*t55398*(1.6E1/3.0))+t55410*t55402*t55403+t55402*t55403*t55404+t55430*t55417*t55397*2.0+t55419*t55397*(t55380*t55434*t55390*2.0-t55380*t55435*t55436-t55354*t55355*t55365*t55357*t55385*8.0+t55353*t55392*t55437*t55385*t55386*t55387*3.2E1-gamma_aa*t55354*t55390*t55355*t55365*t55357*t55384*8.0+c*c0*t55355*t55365*t55383*t55357*t55367*t55376*t55359*(3.2E1/3.0)-c*c0*t55355*t55383*t55392*t55357*t55367*t55376*t55359*(3.2E1/3.0)+a5*c0*gamma_aa*t55350*t55355*t55391*t55365*t55357*t55376*t55359*(6.4E1/3.0)-a5*c0*gamma_aa*t55350*t55355*t55391*t55392*t55357*t55376*t55359*(6.4E1/3.0)+c*c0*t55405*t55353*t55393*t55367*t55376*t55359*t55386*t55387*6.4E1+c*c0*t55353*t55365*t55393*t55367*t55376*t55359*t55386*t55387*(1.28E2/3.0)-c*c0*t55353*t55392*t55393*t55367*t55376*t55359*t55386*t55387*(2.56E2/3.0))-t55413*t55423*t55424*t55417*2.0-t55430*t55423*t55424*t55419*2.0-t55413*t55424*t55419*(t55380*t55434*t55390*3.0-t55380*t55435*t55436*(3.0/2.0)-t55354*t55355*t55365*t55357*t55385*1.2E1+t55353*t55392*t55437*t55385*t55386*t55387*4.8E1-gamma_aa*t55354*t55390*t55355*t55365*t55357*t55384*1.2E1+c*c0*t55355*t55365*t55383*t55357*t55367*t55376*t55359*1.6E1-c*c0*t55355*t55383*t55392*t55357*t55367*t55376*t55359*1.6E1+a5*c0*gamma_aa*t55350*t55355*t55391*t55365*t55357*t55376*t55359*3.2E1-a5*c0*gamma_aa*t55350*t55355*t55391*t55392*t55357*t55376*t55359*3.2E1+c*c0*t55405*t55353*t55393*t55367*t55376*t55359*t55386*t55387*9.6E1+c*c0*t55353*t55365*t55393*t55367*t55376*t55359*t55386*t55387*6.4E1-c*c0*t55353*t55392*t55393*t55367*t55376*t55359*t55386*t55387*1.28E2)+t55413*(t55423*t55423)*t55419*1.0/(t55396*t55396*t55396)*2.0+t55410*t55440*t55360*t55441*t55442*t55443*t55438*t55439*(3.0/2.0)+t55404*t55440*t55360*t55441*t55442*t55443*t55438*t55439*(3.0/2.0)-a5*1.0/(rho_a*rho_a)*t55350*t55441*t55442*t55443*1.0/(t55367*t55367)*t55439*t55487*t55398*(3.0/2.0)-gamma_aa*t55360*t55441*t55442*t55443*t55355*t55357*t55438*t55447*t55439*t55398*6.0+gamma_aa*t55360*t55441*t55443*t55355*t55364*t55357*t55438*t55447*t55439*t55398*6.0)*(1.0/2.0)-c0*rho_a*t55454*t55483*t55468*(t55402*t55403*t55398+t55413*t55417*t55397+t55430*t55419*t55397-t55413*t55423*t55424*t55419+t55440*t55360*t55441*t55442*t55443*t55438*t55439*t55398*(3.0/2.0))+c0*rho_a*t55454*t55483*t55486*(t55352*t55354*t55462*t55355*t55465*t55459*2.0E5-t55352*t55354*t55462*t55355*t55464*t55465*t55459*2.0E5+(a3*a3)*1.0/pow(rho_a,1.4E1/3.0)*1.0/pow(t55461,5.0/2.0)*t55355*t55464*t55465*t55459*t55487*7.5E4+(t55352*t55352)*t55353*t55462*t55437*t55464*t55465*t55387*t55459*4.0E5-a3*t55350*t55360*t55361*t55465*t55474*t55476*t55459*1.0E5-gamma_aa*t55352*t55354*t55462*t55355*t55465*t55474*t55459*4.0E5+a3*gamma_aa*1.0/pow(rho_a,2.3E1/3.0)*t55350*t55360*t55352*t55355*t55464*t55465*t55476*t55459*2.0E5)*(1.0/2.0)-c0*rho_a*t55454*(t55468*t55468)*t55486*dirac(t55470,1.0)*(1.0/2.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t55136 = tspi_m13*tspi_m13;
                double t55137 = 1.0/pow(rho_a,1.0/3.0);
                double t55138 = a2*a2;
                double t55139 = gamma_aa*gamma_aa;
                double t55140 = 1.0/pow(rho_a,1.6E1/3.0);
                double t55141 = t55136*t55136;
                double t55142 = c*t55137;
                double t55143 = a4*a4;
                double t55144 = 1.0/c;
                double t55145 = 1.0/pow(rho_a,7.0/3.0);
                double t55146 = sqrt(t55142);
                double t55147 = t55140*t55141*t55143*t55139*2.0;
                double t55148 = exp(t55147);
                double t55149 = t55140*t55141*t55143*t55139;
                double t55150 = t55149+1.0;
                double t55151 = 1.0/(t55150*t55150);
                double t55152 = a5*gamma_aa*t55144*t55136*t55145;
                double t55153 = t55152+1.0;
                double t55165 = raa2*t55146;
                double t55154 = exp(-t55165);
                double t55155 = t55154-1.0;
                double t55156 = kaa2*t55155;
                double t55157 = pow(t55142,2.0/5.0);
                double t55166 = raa1*t55157;
                double t55158 = exp(-t55166);
                double t55159 = t55158-1.0;
                double t55160 = kaa1*t55159;
                double t55161 = -kaa0+t55160+t55156;
                double t55162 = 1.0/(t55161*t55161);
                double t55163 = c*c0*t55151*t55153*t55162*t55137*t55148*(2.0/3.0);
                double t55164 = 1.0/pow(rho_a,8.0/3.0);
                double t55167 = 1.0/pow(rho_a,1.7E1/3.0);
                double t55168 = exp(t55163);
                double t55169 = Ei(-t55163);
                double t55170 = 1.0/t55150;
                double t55171 = c*c0*t55153*t55162*t55137*t55148*(2.0/3.0);
                double t55172 = sqrt(t55171);
                double t55173 = 1.0/(t55150*t55150*t55150);
                double t55174 = t55170*t55172*6.0;
                double t55175 = c*c0*t55151*t55153*t55162*t55137*t55148*4.0;
                double t55176 = t55174+t55175+3.0;
                double t55177 = 1.0/t55176;
                double t55178 = a5*c0*t55151*t55162*t55136*t55164*t55148*(2.0/3.0);
                double t55179 = c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55162*t55148*t55167*(8.0/3.0);
                double t55190 = c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*(8.0/3.0);
                double t55180 = -t55190+t55178+t55179;
                double t55181 = c*c0*t55151*t55153*t55162*t55137*t55148*t55168*t55169*(2.0/3.0);
                double t55182 = t55181+1.0;
                double t55183 = t55170*t55172*4.0;
                double t55184 = c*c0*t55151*t55153*t55162*t55137*t55148*(8.0/3.0);
                double t55185 = t55183+t55184+6.0;
                double t55186 = a5*c0*t55162*t55136*t55164*t55148*(2.0/3.0);
                double t55187 = c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55148*t55167*(8.0/3.0);
                double t55188 = t55186+t55187;
                double t55189 = 1.0/sqrt(t55171);
                double t55191 = t55140*t55141*t55138*t55139;
                double t55192 = pow(t55142,4.0/5.0);
                double t55300 = rab1*t55192;
                double t55193 = exp(-t55300);
                double t55194 = t55193-1.0;
                double t55301 = kab1*t55194;
                double t55195 = kab0-t55301;
                double t55196 = a3*gamma_aa*t55144*t55136*t55145;
                double t55197 = t55196+1.0;
                double t55198 = 1.0/sqrt(t55197);
                double t55199 = a1*gamma_aa*t55136*t55164;
                double t55200 = t55191+t55199+1.0;
                double t55201 = c*c;
                double t55202 = 1.0/pow(rho_a,2.0/3.0);
                double t55203 = k1*t55146;
                double t55204 = c*k2*t55137;
                double t55205 = t55203+t55204;
                double t55206 = 1.0/(t55205*t55205);
                double t55303 = t55201*t55202*t55206;
                double t55207 = exp(-t55303);
                double t55208 = 1.0/pow(rho_a,4.0/3.0);
                double t55209 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t55210 = 1.0/pow(rho_a,2.0E1/3.0);
                double t55211 = t55143*t55143;
                double t55212 = 1.0/pow(rho_a,1.2E1);
                double t55213 = t55141*t55141;
                double t55214 = 1.0/sqrt(t55142);
                double t55215 = c*kaa2*raa2*t55214*t55154*t55208*(1.0/6.0);
                double t55216 = 1.0/pow(t55142,3.0/5.0);
                double t55217 = c*kaa1*raa1*t55216*t55208*t55158*(2.0/1.5E1);
                double t55218 = t55215+t55217;
                double t55219 = 1.0/(t55161*t55161*t55161);
                double t55220 = t55170*t55188*t55189*2.0;
                double t55221 = a5*c0*t55151*t55162*t55136*t55164*t55148*(8.0/3.0);
                double t55222 = c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55162*t55148*t55167*(3.2E1/3.0);
                double t55264 = gamma_aa*t55140*t55141*t55151*t55143*t55172*8.0;
                double t55265 = c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*(3.2E1/3.0);
                double t55223 = t55220+t55221+t55222-t55264-t55265;
                double t55224 = 1.0/pow(rho_a,1.1E1/3.0);
                double t55225 = c*c0*t55151*t55153*t55162*t55208*t55148*(2.0/9.0);
                double t55226 = a5*c0*gamma_aa*t55151*t55224*t55162*t55136*t55148*(1.4E1/9.0);
                double t55227 = c*c0*t55151*t55153*t55137*t55218*t55219*t55148*(4.0/3.0);
                double t55228 = c*c0*t55210*t55141*t55151*t55143*t55153*t55162*t55139*t55148*(6.4E1/9.0);
                double t55229 = a5*c0*t55151*t55162*t55136*t55164*t55148*t55168*t55169*(2.0/3.0);
                double t55230 = c*c0*t55151*t55153*t55162*t55180*t55137*t55148*t55168*t55169*(2.0/3.0);
                double t55231 = c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55162*t55148*t55167*t55168*t55169*(8.0/3.0);
                double t55244 = c*c0*t55210*t55141*t55143*t55153*t55162*t55173*t55139*t55148*(6.4E1/9.0);
                double t55232 = t55225+t55226-t55244+t55227+t55228;
                double t55233 = 1.0/pow(rho_a,1.9E1/3.0);
                double t55234 = 1.0/t55153;
                double t55235 = a5*c0*t55151*t55224*t55162*t55136*t55148*(1.6E1/9.0);
                double t55236 = a5*c0*t55151*t55136*t55164*t55218*t55219*t55148*(4.0/3.0);
                double t55237 = a5*c0*t55141*t55151*t55143*t55162*t55136*t55209*t55139*t55148*(4.0E1/3.0);
                double t55238 = c*c0*gamma_aa*t55210*t55141*t55151*t55143*t55153*t55162*t55148*(1.36E2/9.0);
                double t55239 = c*c0*gamma_aa*t55211*t55212*t55213*t55151*t55153*t55162*t55139*t55148*(2.56E2/9.0);
                double t55240 = 1.0/(t55150*t55150*t55150*t55150);
                double t55241 = c*c0*gamma_aa*t55211*t55212*t55213*t55240*t55153*t55162*t55139*t55148*(1.28E2/3.0);
                double t55242 = c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55218*t55219*t55148*t55167*(1.6E1/3.0);
                double t55245 = c*c0*gamma_aa*t55210*t55141*t55143*t55153*t55162*t55173*t55148*(1.36E2/9.0);
                double t55246 = c*c0*gamma_aa*t55211*t55212*t55213*t55153*t55162*t55173*t55139*t55148*(5.12E2/9.0);
                double t55247 = c*c0*gamma_aa*t55141*t55143*t55153*t55173*t55218*t55219*t55148*t55167*(1.6E1/3.0);
                double t55296 = a5*c0*t55141*t55143*t55162*t55136*t55173*t55209*t55139*t55148*(4.0E1/3.0);
                double t55243 = t55241+t55242+t55235+t55236-t55245+t55237-t55246+t55238-t55247+t55239-t55296;
                double t55248 = c*c0*t55153*t55162*t55208*t55148*(2.0/9.0);
                double t55249 = a5*c0*gamma_aa*t55224*t55162*t55136*t55148*(1.4E1/9.0);
                double t55250 = c*c0*t55153*t55137*t55218*t55219*t55148*(4.0/3.0);
                double t55251 = c*c0*t55210*t55141*t55143*t55153*t55162*t55139*t55148*(6.4E1/9.0);
                double t55252 = t55250+t55251+t55248+t55249;
                double t55253 = 1.0/(t55176*t55176);
                double t55319 = c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*t55168*t55169*(8.0/3.0);
                double t55254 = t55230+t55231-t55190+t55229-t55319+t55178+t55179;
                double t55255 = a5*c0*t55224*t55162*t55136*t55148*(1.6E1/9.0);
                double t55256 = a5*c0*t55136*t55164*t55218*t55219*t55148*(4.0/3.0);
                double t55257 = a5*c0*t55141*t55143*t55162*t55136*t55209*t55139*t55148*(4.0E1/3.0);
                double t55258 = c*c0*gamma_aa*t55210*t55141*t55143*t55153*t55162*t55148*(1.36E2/9.0);
                double t55259 = c*c0*gamma_aa*t55211*t55212*t55213*t55153*t55162*t55139*t55148*(2.56E2/9.0);
                double t55260 = c*c0*gamma_aa*t55141*t55143*t55153*t55218*t55219*t55148*t55167*(1.6E1/3.0);
                double t55261 = t55260+t55255+t55256+t55257+t55258+t55259;
                double t55262 = 1.0/pow(t55171,3.0/2.0);
                double t55263 = 1.0/pow(rho_a,3.5E1/3.0);
                double t55266 = t55170*t55252*t55189*3.0;
                double t55267 = c*c0*t55151*t55153*t55162*t55208*t55148*(4.0/3.0);
                double t55268 = a5*c0*gamma_aa*t55151*t55224*t55162*t55136*t55148*(2.8E1/3.0);
                double t55269 = c*c0*t55151*t55153*t55137*t55218*t55219*t55148*8.0;
                double t55270 = c*c0*t55210*t55141*t55151*t55143*t55153*t55162*t55139*t55148*(1.28E2/3.0);
                double t55289 = t55141*t55151*t55143*t55233*t55172*t55139*3.2E1;
                double t55290 = c*c0*t55210*t55141*t55143*t55153*t55162*t55173*t55139*t55148*(1.28E2/3.0);
                double t55271 = t55270-t55290+t55266+t55267+t55268+t55269-t55289;
                double t55272 = t55170*t55188*t55189*3.0;
                double t55273 = a5*c0*t55151*t55162*t55136*t55164*t55148*4.0;
                double t55274 = c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55162*t55148*t55167*1.6E1;
                double t55282 = gamma_aa*t55140*t55141*t55151*t55143*t55172*1.2E1;
                double t55283 = c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*1.6E1;
                double t55275 = t55272+t55273-t55282+t55274-t55283;
                double t55276 = t55170*t55252*t55189*2.0;
                double t55277 = c*c0*t55151*t55153*t55162*t55208*t55148*(8.0/9.0);
                double t55278 = a5*c0*gamma_aa*t55151*t55224*t55162*t55136*t55148*(5.6E1/9.0);
                double t55279 = c*c0*t55151*t55153*t55137*t55218*t55219*t55148*(1.6E1/3.0);
                double t55280 = c*c0*t55210*t55141*t55151*t55143*t55153*t55162*t55139*t55148*(2.56E2/9.0);
                double t55314 = t55141*t55151*t55143*t55233*t55172*t55139*(6.4E1/3.0);
                double t55315 = c*c0*t55210*t55141*t55143*t55153*t55162*t55173*t55139*t55148*(2.56E2/9.0);
                double t55281 = -t55314-t55315+t55280+t55276+t55277+t55278+t55279;
                double t55284 = c*c0*t55151*t55153*t55162*t55208*t55148*t55168*t55169*(2.0/9.0);
                double t55285 = c*c0*t55151*t55153*t55137*t55218*t55219*t55148*t55168*t55169*(4.0/3.0);
                double t55286 = c*c0*t55151*t55232*t55153*t55162*t55137*t55148*t55168*t55169*(2.0/3.0);
                double t55287 = a5*c0*gamma_aa*t55151*t55224*t55162*t55136*t55148*t55168*t55169*(1.4E1/9.0);
                double t55288 = c*c0*t55210*t55141*t55151*t55143*t55153*t55162*t55139*t55148*t55168*t55169*(6.4E1/9.0);
                double t55291 = 1.0/c0;
                double t55292 = pow(rho_a,1.0/3.0);
                double t55293 = exp(-t55147);
                double t55294 = t55150*t55150;
                double t55295 = t55161*t55161;
                double t55297 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a);
                double t55316 = c*c0*t55210*t55141*t55143*t55153*t55162*t55173*t55139*t55148*t55168*t55169*(6.4E1/9.0);
                double t55298 = t55225+t55226-t55244-t55316+t55227+t55228+t55284+t55285+t55286+t55287+t55288;
                double t55299 = exp(-t55191);
                double t55302 = t55200*t55195*t55198*t55299*1.0E5;
                double t55304 = c*c0*t55137*(2.0/3.0);
                double t55305 = -t55302+t55304;
                double t55306 = dirac(t55305);
                double t55307 = a1*t55136*t55164;
                double t55308 = gamma_aa*t55140*t55141*t55138*2.0;
                double t55309 = t55307+t55308;
                double t55310 = 1.0/pow(t55197,3.0/2.0);
                double t55311 = a3*t55200*t55310*t55144*t55136*t55145*t55195*t55299*5.0E4;
                double t55312 = gamma_aa*t55200*t55140*t55141*t55138*t55195*t55198*t55299*2.0E5;
                double t55339 = t55309*t55195*t55198*t55299*1.0E5;
                double t55313 = t55311+t55312-t55339;
                double t55317 = t55180*t55168*t55169;
                double t55318 = t55223*t55182*t55177;
                double t55320 = t55144*t55180*t55234*t55291*t55292*t55293*t55294*t55295*(3.0/2.0);
                double t55321 = t55168*t55169;
                double t55322 = t55182*t55185*t55177;
                double t55323 = t55321+t55322;
                double t55324 = 1.0/pow(rho_a,1.0E1/3.0);
                double t55325 = t55141*t55233*t55138*t55139*(1.6E1/3.0);
                double t55326 = a1*gamma_aa*t55224*t55136*(8.0/3.0);
                double t55327 = t55325+t55326;
                double t55328 = 1.0/(c*c);
                double t55329 = 1.0/pow(t55142,1.0/5.0);
                double t55330 = t55254*t55185*t55177;
                double t55331 = t55320+t55330+t55317+t55318-t55253*t55182*t55185*t55275;
                double t55332 = 1.0/pow(rho_a,5.0/3.0);
                double t55333 = t55201*t55206*t55332*(2.0/3.0);
                double t55334 = 1.0/(t55205*t55205*t55205);
                double t55335 = c*k2*t55208*(1.0/3.0);
                double t55336 = c*k1*t55214*t55208*(1.0/6.0);
                double t55337 = t55335+t55336;
                double t55338 = t55333-t55201*t55202*t55334*t55337*2.0;
                double t55340 = c*c0*t55208*(2.0/9.0);
                double t55341 = t55200*t55141*t55233*t55138*t55139*t55195*t55198*t55299*(1.6E6/3.0);
                double t55342 = a3*gamma_aa*t55200*t55310*t55144*t55324*t55136*t55195*t55299*(3.5E5/3.0);
                double t55343 = t55340+t55341+t55342-t55327*t55195*t55198*t55299*1.0E5-c*kab1*rab1*t55200*t55208*t55193*t55329*t55198*t55299*(8.0E4/3.0);
                v_rho_a_gamma_aa[Q] += scale * c0*t55207*heaviside(c*c0*t55137*(-2.0/3.0)+t55200*t55195*t55198*exp(-t55140*t55141*t55138*t55139)*1.0E5)*(t55320+t55317+t55318+t55185*t55177*(t55230+t55231+t55229+t55178+t55179-c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*(8.0/3.0)-c*c0*gamma_aa*t55141*t55143*t55153*t55162*t55173*t55148*t55167*t55168*t55169*(8.0/3.0))-t55253*t55182*t55185*t55275)*(1.0/2.0)-c0*t55313*t55323*t55207*t55306*(1.0/2.0)-c0*rho_a*t55207*heaviside(t55302-c*c0*t55137*(2.0/3.0))*(t55182*t55177*(t55170*t55261*t55189*2.0-t55170*t55252*t55262*t55188-gamma_aa*t55141*t55151*t55143*t55233*t55172*(1.28E2/3.0)+a5*c0*t55151*t55224*t55162*t55136*t55148*(6.4E1/9.0)-gamma_aa*t55140*t55141*t55151*t55143*t55252*t55189*4.0+gamma_aa*t55211*t55213*t55172*t55173*t55263*t55139*(2.56E2/3.0)-t55141*t55151*t55143*t55233*t55139*t55188*t55189*(3.2E1/3.0)+a5*c0*t55151*t55136*t55164*t55218*t55219*t55148*(1.6E1/3.0)+c*c0*gamma_aa*t55210*t55141*t55151*t55143*t55153*t55162*t55148*(5.44E2/9.0)-c*c0*gamma_aa*t55210*t55141*t55143*t55153*t55162*t55173*t55148*(5.44E2/9.0)+a5*c0*t55141*t55151*t55143*t55162*t55136*t55209*t55139*t55148*(1.6E2/3.0)-a5*c0*t55141*t55143*t55162*t55136*t55173*t55209*t55139*t55148*(1.6E2/3.0)+c*c0*gamma_aa*t55211*t55212*t55213*t55240*t55153*t55162*t55139*t55148*(5.12E2/3.0)+c*c0*gamma_aa*t55211*t55212*t55213*t55151*t55153*t55162*t55139*t55148*(1.024E3/9.0)-c*c0*gamma_aa*t55211*t55212*t55213*t55153*t55162*t55173*t55139*t55148*(2.048E3/9.0)+c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55218*t55219*t55148*t55167*(6.4E1/3.0)-c*c0*gamma_aa*t55141*t55143*t55153*t55173*t55218*t55219*t55148*t55167*(6.4E1/3.0))+t55254*t55281*t55177+t55243*t55168*t55169+t55223*t55177*t55298+t55185*t55177*(t55241+t55242+t55235+t55236-t55245+t55237-t55246+t55238-t55247+t55239-t55296+t55232*t55180+(t55180*(1.0/3.0))/rho_a+(t55180*t55218*2.0)/t55161+t55141*t55143*t55233*t55180*t55139*(3.2E1/3.0)-t55141*t55143*t55170*t55233*t55180*t55139*(3.2E1/3.0)+a5*gamma_aa*t55144*t55180*t55234*t55324*t55136*(7.0/3.0)+a5*c0*t55151*t55224*t55162*t55136*t55148*t55168*t55169*(1.6E1/9.0)+a5*c0*t55151*t55232*t55162*t55136*t55164*t55148*t55168*t55169*(2.0/3.0)+a5*c0*t55151*t55136*t55164*t55218*t55219*t55148*t55168*t55169*(4.0/3.0)+c*c0*t55151*t55153*t55162*t55180*t55208*t55148*t55168*t55169*(2.0/9.0)+c*c0*t55151*t55153*t55162*t55243*t55137*t55148*t55168*t55169*(2.0/3.0)+a5*c0*gamma_aa*t55151*t55224*t55162*t55180*t55136*t55148*t55168*t55169*(1.4E1/9.0)+c*c0*t55151*t55232*t55153*t55162*t55180*t55137*t55148*t55168*t55169*(2.0/3.0)+c*c0*t55151*t55153*t55180*t55137*t55218*t55219*t55148*t55168*t55169*(4.0/3.0)+c*c0*gamma_aa*t55210*t55141*t55151*t55143*t55153*t55162*t55148*t55168*t55169*(1.36E2/9.0)-c*c0*gamma_aa*t55210*t55141*t55143*t55153*t55162*t55173*t55148*t55168*t55169*(1.36E2/9.0)+a5*c0*t55141*t55151*t55143*t55162*t55136*t55209*t55139*t55148*t55168*t55169*(4.0E1/3.0)-a5*c0*t55141*t55143*t55162*t55136*t55173*t55209*t55139*t55148*t55168*t55169*(4.0E1/3.0)+c*c0*gamma_aa*t55211*t55212*t55213*t55240*t55153*t55162*t55139*t55148*t55168*t55169*(1.28E2/3.0)+c*c0*gamma_aa*t55211*t55212*t55213*t55151*t55153*t55162*t55139*t55148*t55168*t55169*(2.56E2/9.0)-c*c0*gamma_aa*t55211*t55212*t55213*t55153*t55162*t55173*t55139*t55148*t55168*t55169*(5.12E2/9.0)+c*c0*gamma_aa*t55141*t55151*t55232*t55143*t55153*t55162*t55148*t55167*t55168*t55169*(8.0/3.0)-c*c0*gamma_aa*t55141*t55232*t55143*t55153*t55162*t55173*t55148*t55167*t55168*t55169*(8.0/3.0)+c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55218*t55219*t55148*t55167*t55168*t55169*(1.6E1/3.0)-c*c0*gamma_aa*t55141*t55143*t55153*t55173*t55218*t55219*t55148*t55167*t55168*t55169*(1.6E1/3.0)+c*c0*t55210*t55141*t55151*t55143*t55153*t55162*t55180*t55139*t55148*t55168*t55169*(6.4E1/9.0)-c*c0*t55210*t55141*t55143*t55153*t55162*t55180*t55173*t55139*t55148*t55168*t55169*(6.4E1/9.0))-t55223*t55253*t55271*t55182-t55253*t55271*t55254*t55185-t55253*t55182*t55281*t55275+t55232*t55180*t55168*t55169-t55253*t55185*t55275*t55298-t55253*t55182*t55185*(t55170*t55261*t55189*3.0-t55170*t55252*t55262*t55188*(3.0/2.0)-gamma_aa*t55141*t55151*t55143*t55233*t55172*6.4E1+a5*c0*t55151*t55224*t55162*t55136*t55148*(3.2E1/3.0)-gamma_aa*t55140*t55141*t55151*t55143*t55252*t55189*6.0+gamma_aa*t55211*t55213*t55172*t55173*t55263*t55139*1.28E2-t55141*t55151*t55143*t55233*t55139*t55188*t55189*1.6E1+a5*c0*t55151*t55136*t55164*t55218*t55219*t55148*8.0+c*c0*gamma_aa*t55210*t55141*t55151*t55143*t55153*t55162*t55148*(2.72E2/3.0)-c*c0*gamma_aa*t55210*t55141*t55143*t55153*t55162*t55173*t55148*(2.72E2/3.0)+a5*c0*t55141*t55151*t55143*t55162*t55136*t55209*t55139*t55148*8.0E1-a5*c0*t55141*t55143*t55162*t55136*t55173*t55209*t55139*t55148*8.0E1+c*c0*gamma_aa*t55211*t55212*t55213*t55240*t55153*t55162*t55139*t55148*2.56E2+c*c0*gamma_aa*t55211*t55212*t55213*t55151*t55153*t55162*t55139*t55148*(5.12E2/3.0)-c*c0*gamma_aa*t55211*t55212*t55213*t55153*t55162*t55173*t55139*t55148*(1.024E3/3.0)+c*c0*gamma_aa*t55141*t55151*t55143*t55153*t55218*t55219*t55148*t55167*3.2E1-c*c0*gamma_aa*t55141*t55143*t55153*t55173*t55218*t55219*t55148*t55167*3.2E1)+t55271*t55182*1.0/(t55176*t55176*t55176)*t55185*t55275*2.0+t55144*t55234*t55243*t55291*t55292*t55293*t55294*t55295*(3.0/2.0)+t55232*t55144*t55180*t55234*t55291*t55292*t55293*t55294*t55295*(3.0/2.0)-a5*1.0/(rho_a*rho_a)*t55232*1.0/(t55153*t55153)*t55136*t55291*t55328*t55293*t55294*t55295*(3.0/2.0)+gamma_aa*t55141*t55150*t55232*t55143*t55144*t55234*t55291*t55293*t55295*t55297*6.0-gamma_aa*t55141*t55232*t55143*t55144*t55234*t55291*t55293*t55294*t55295*t55297*6.0)*(1.0/2.0)+c0*rho_a*t55331*t55207*t55306*t55343*(1.0/2.0)+c0*rho_a*t55323*t55207*t55306*(t55195*t55198*t55299*(a1*t55224*t55136*(8.0/3.0)+gamma_aa*t55141*t55233*t55138*(3.2E1/3.0))*-1.0E5+t55141*t55233*t55138*t55309*t55139*t55195*t55198*t55299*(1.6E6/3.0)+a3*t55200*t55310*t55144*t55324*t55136*t55195*t55299*(3.5E5/3.0)+a3*t55310*t55144*t55136*t55145*t55327*t55195*t55299*5.0E4+gamma_aa*t55200*t55141*t55233*t55138*t55195*t55198*t55299*(3.2E6/3.0)+gamma_aa*t55140*t55141*t55138*t55327*t55195*t55198*t55299*2.0E5-(a3*a3)*gamma_aa*t55200*t55141*t55328*t55167*t55195*1.0/pow(t55197,5.0/2.0)*t55299*1.75E5+a3*gamma_aa*t55310*t55144*t55324*t55136*t55309*t55195*t55299*(3.5E5/3.0)-c*kab1*rab1*t55208*t55309*t55193*t55329*t55198*t55299*(8.0E4/3.0)-gamma_aa*t55200*t55213*t55263*(t55138*t55138)*t55139*t55195*t55198*t55299*(3.2E6/3.0)+a3*kab1*rab1*t55200*t55310*t55224*t55136*t55193*t55329*t55299*(4.0E4/3.0)-a3*1.0/pow(rho_a,2.6E1/3.0)*t55200*t55310*t55141*t55144*t55136*t55138*t55139*t55195*t55299*5.0E5+c*gamma_aa*kab1*rab1*t55200*t55210*t55141*t55138*t55193*t55329*t55198*t55299*(1.6E5/3.0))*(1.0/2.0)+c0*rho_a*t55313*t55207*t55306*(t55182*t55281*t55177+t55232*t55168*t55169+t55185*t55177*t55298-t55253*t55271*t55182*t55185+t55232*t55144*t55234*t55291*t55292*t55293*t55294*t55295*(3.0/2.0))*(1.0/2.0)+c0*rho_a*t55331*t55207*t55338*heaviside(t55302-t55304)*(1.0/2.0)-c0*rho_a*t55313*t55323*t55207*t55306*t55338*(1.0/2.0)+c0*rho_a*t55313*t55323*t55207*t55343*dirac(t55305,1.0)*(1.0/2.0);
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t51319 = tspi_m13*tspi_m13;
                double t51320 = 1.0/pow(rho_a,1.0/3.0);
                double t51321 = a2*a2;
                double t51322 = gamma_aa*gamma_aa;
                double t51323 = 1.0/pow(rho_a,1.6E1/3.0);
                double t51324 = t51319*t51319;
                double t51325 = c*t51320;
                double t51326 = pow(t51325,4.0/5.0);
                double t51340 = rab1*t51326;
                double t51327 = exp(-t51340);
                double t51328 = t51327-1.0;
                double t51341 = kab1*t51328;
                double t51329 = kab0-t51341;
                double t51330 = 1.0/c;
                double t51331 = 1.0/pow(rho_a,7.0/3.0);
                double t51332 = a3*gamma_aa*t51330*t51331*t51319;
                double t51333 = t51332+1.0;
                double t51334 = t51321*t51322*t51323*t51324;
                double t51335 = 1.0/pow(rho_a,8.0/3.0);
                double t51336 = a1*gamma_aa*t51335*t51319;
                double t51337 = t51334+t51336+1.0;
                double t51338 = t51321*t51322*t51323*t51324*2.0;
                double t51339 = exp(t51338);
                double t51342 = 1.0/(t51329*t51329);
                double t51343 = 1.0/(t51337*t51337);
                double t51344 = c*c0*t51320*t51333*t51342*t51343*t51339*(2.0/3.0);
                double t51345 = exp(t51344);
                double t51346 = Ei(-t51344);
                double t51347 = sqrt(t51344);
                double t51348 = 1.0/pow(rho_b,1.0/3.0);
                double t51349 = gamma_bb*gamma_bb;
                double t51350 = 1.0/pow(rho_b,1.6E1/3.0);
                double t51351 = c*t51348;
                double t51352 = a4*a4;
                double t51353 = 1.0/pow(rho_b,7.0/3.0);
                double t51354 = sqrt(t51351);
                double t51355 = t51350*t51324*t51352*t51349*2.0;
                double t51356 = exp(t51355);
                double t51357 = t51350*t51324*t51352*t51349;
                double t51358 = t51357+1.0;
                double t51359 = 1.0/(t51358*t51358);
                double t51360 = a5*gamma_bb*t51330*t51353*t51319;
                double t51361 = t51360+1.0;
                double t51372 = raa2*t51354;
                double t51362 = exp(-t51372);
                double t51363 = t51362-1.0;
                double t51364 = kaa2*t51363;
                double t51365 = pow(t51351,2.0/5.0);
                double t51373 = raa1*t51365;
                double t51366 = exp(-t51373);
                double t51367 = t51366-1.0;
                double t51368 = kaa1*t51367;
                double t51369 = -kaa0+t51364+t51368;
                double t51370 = 1.0/(t51369*t51369);
                double t51371 = c*c0*t51361*t51370*t51356*t51348*t51359*(2.0/3.0);
                double t51374 = exp(t51371);
                double t51375 = Ei(-t51371);
                double t51376 = 1.0/t51358;
                double t51377 = c*c0*t51361*t51370*t51356*t51348*(2.0/3.0);
                double t51378 = sqrt(t51377);
                double t51379 = t51321*t51350*t51324*t51349;
                double t51380 = pow(t51351,4.0/5.0);
                double t51390 = rab1*t51380;
                double t51381 = exp(-t51390);
                double t51382 = t51381-1.0;
                double t51391 = kab1*t51382;
                double t51383 = kab0-t51391;
                double t51384 = a3*gamma_bb*t51330*t51353*t51319;
                double t51385 = t51384+1.0;
                double t51386 = 1.0/sqrt(t51385);
                double t51387 = 1.0/pow(rho_b,8.0/3.0);
                double t51388 = a1*gamma_bb*t51319*t51387;
                double t51389 = t51379+t51388+1.0;
                double t51392 = t51321*t51350*t51324*t51349*2.0;
                double t51393 = exp(t51392);
                double t51394 = 1.0/(t51383*t51383);
                double t51395 = 1.0/(t51389*t51389);
                double t51396 = c*c0*t51348*t51393*t51385*t51394*t51395*(2.0/3.0);
                double t51397 = exp(t51396);
                double t51398 = Ei(-t51396);
                double t51399 = sqrt(t51396);
                double t51400 = 1.0/sqrt(t51333);
                double t51401 = c*c;
                double t51402 = sqrt(t51325);
                double t51403 = t51322*t51323*t51324*t51352*2.0;
                double t51404 = exp(t51403);
                double t51405 = t51322*t51323*t51324*t51352;
                double t51406 = t51405+1.0;
                double t51407 = 1.0/(t51406*t51406);
                double t51408 = a5*gamma_aa*t51330*t51331*t51319;
                double t51409 = t51408+1.0;
                double t51420 = raa2*t51402;
                double t51410 = exp(-t51420);
                double t51411 = t51410-1.0;
                double t51412 = kaa2*t51411;
                double t51413 = pow(t51325,2.0/5.0);
                double t51421 = raa1*t51413;
                double t51414 = exp(-t51421);
                double t51415 = t51414-1.0;
                double t51416 = kaa1*t51415;
                double t51417 = -kaa0+t51412+t51416;
                double t51418 = 1.0/(t51417*t51417);
                double t51419 = c*c0*t51320*t51404*t51407*t51409*t51418*(2.0/3.0);
                double t51422 = exp(t51419);
                double t51423 = Ei(-t51419);
                double t51424 = 1.0/t51406;
                double t51425 = c*c0*t51320*t51404*t51409*t51418*(2.0/3.0);
                double t51426 = sqrt(t51425);
                v[Q] += scale * rho_b*(c0*heaviside(c*c0*t51320*(-2.0/3.0)+t51400*t51337*t51329*exp(-t51321*t51322*t51323*t51324)*1.0E5)*(t51345*t51346+((c*c0*t51320*t51333*t51342*t51343*t51345*t51346*t51339*(2.0/3.0)+1.0)*(t51347*4.0+c*c0*t51320*t51333*t51342*t51343*t51339*(8.0/3.0)+6.0))/(t51347*6.0+c*c0*t51320*t51333*t51342*t51343*t51339*4.0+3.0))*(1.0/2.0)+c0*exp(-1.0/pow(rho_b,2.0/3.0)*t51401*1.0/pow(k1*t51354+c*k2*t51348,2.0))*heaviside(c*c0*t51348*(-2.0/3.0)+t51383*t51386*t51389*exp(-t51321*t51350*t51324*t51349)*1.0E5)*(t51374*t51375+((c*c0*t51361*t51370*t51356*t51374*t51348*t51375*t51359*(2.0/3.0)+1.0)*(t51376*t51378*4.0+c*c0*t51361*t51370*t51356*t51348*t51359*(8.0/3.0)+6.0))/(t51376*t51378*6.0+c*c0*t51361*t51370*t51356*t51348*t51359*4.0+3.0))*(1.0/2.0))+rho_a*(c0*heaviside(c*c0*t51348*(-2.0/3.0)+t51383*t51386*t51389*exp(-t51379)*1.0E5)*(t51397*t51398+((c*c0*t51348*t51393*t51385*t51394*t51395*t51397*t51398*(2.0/3.0)+1.0)*(t51399*4.0+c*c0*t51348*t51393*t51385*t51394*t51395*(8.0/3.0)+6.0))/(t51399*6.0+c*c0*t51348*t51393*t51385*t51394*t51395*4.0+3.0))*(1.0/2.0)+c0*heaviside(c*c0*t51320*(-2.0/3.0)+t51400*t51337*t51329*exp(-t51334)*1.0E5)*exp(-1.0/pow(rho_a,2.0/3.0)*t51401*1.0/pow(k1*t51402+c*k2*t51320,2.0))*(t51422*t51423+((c*c0*t51320*t51404*t51422*t51423*t51407*t51409*t51418*(2.0/3.0)+1.0)*(t51424*t51426*4.0+c*c0*t51320*t51404*t51407*t51409*t51418*(8.0/3.0)+6.0))/(t51424*t51426*6.0+c*c0*t51320*t51404*t51407*t51409*t51418*4.0+3.0))*(1.0/2.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t51428 = tspi_m13*tspi_m13;
                double t51429 = 1.0/pow(rho_a,1.0/3.0);
                double t51430 = a2*a2;
                double t51431 = gamma_aa*gamma_aa;
                double t51432 = 1.0/pow(rho_a,1.6E1/3.0);
                double t51433 = t51428*t51428;
                double t51434 = c*t51429;
                double t51435 = a4*a4;
                double t51436 = t51431*t51432*t51433*t51435*2.0;
                double t51437 = exp(t51436);
                double t51438 = 1.0/c;
                double t51439 = 1.0/pow(rho_a,7.0/3.0);
                double t51440 = sqrt(t51434);
                double t51441 = t51431*t51432*t51433*t51435;
                double t51442 = t51441+1.0;
                double t51443 = 1.0/(t51442*t51442);
                double t51444 = a5*gamma_aa*t51428*t51438*t51439;
                double t51445 = t51444+1.0;
                double t51456 = raa2*t51440;
                double t51446 = exp(-t51456);
                double t51447 = t51446-1.0;
                double t51448 = kaa2*t51447;
                double t51449 = pow(t51434,2.0/5.0);
                double t51457 = raa1*t51449;
                double t51450 = exp(-t51457);
                double t51451 = t51450-1.0;
                double t51452 = kaa1*t51451;
                double t51453 = -kaa0+t51452+t51448;
                double t51454 = 1.0/(t51453*t51453);
                double t51455 = c*c0*t51443*t51445*t51454*t51437*t51429*(2.0/3.0);
                double t51458 = 1.0/t51442;
                double t51459 = 1.0/pow(rho_a,4.0/3.0);
                double t51460 = c*c0*t51445*t51454*t51437*t51429*(2.0/3.0);
                double t51461 = sqrt(t51460);
                double t51462 = 1.0/pow(rho_a,1.1E1/3.0);
                double t51463 = 1.0/sqrt(t51434);
                double t51464 = c*kaa2*raa2*t51463*t51446*t51459*(1.0/6.0);
                double t51465 = 1.0/pow(t51434,3.0/5.0);
                double t51466 = c*kaa1*raa1*t51450*t51465*t51459*(2.0/1.5E1);
                double t51467 = t51464+t51466;
                double t51468 = 1.0/(t51453*t51453*t51453);
                double t51469 = 1.0/pow(rho_a,2.0E1/3.0);
                double t51470 = exp(t51455);
                double t51471 = Ei(-t51455);
                double t51472 = 1.0/(t51442*t51442*t51442);
                double t51473 = t51461*t51458*6.0;
                double t51474 = c*c0*t51443*t51445*t51454*t51437*t51429*4.0;
                double t51475 = t51473+t51474+3.0;
                double t51476 = 1.0/t51475;
                double t51477 = c*c0*t51443*t51445*t51454*t51437*t51459*(2.0/9.0);
                double t51478 = a5*c0*gamma_aa*t51443*t51462*t51454*t51428*t51437*(1.4E1/9.0);
                double t51479 = c*c0*t51443*t51445*t51437*t51429*t51467*t51468*(4.0/3.0);
                double t51480 = c*c0*t51431*t51433*t51443*t51435*t51445*t51454*t51437*t51469*(6.4E1/9.0);
                double t51482 = c*c0*t51431*t51433*t51435*t51445*t51454*t51472*t51437*t51469*(6.4E1/9.0);
                double t51481 = t51480-t51482+t51477+t51478+t51479;
                double t51483 = c*c0*t51443*t51470*t51471*t51445*t51454*t51437*t51429*(2.0/3.0);
                double t51484 = t51483+1.0;
                double t51485 = t51461*t51458*4.0;
                double t51486 = c*c0*t51443*t51445*t51454*t51437*t51429*(8.0/3.0);
                double t51487 = t51485+t51486+6.0;
                double t51488 = c*c0*t51445*t51454*t51437*t51459*(2.0/9.0);
                double t51489 = a5*c0*gamma_aa*t51462*t51454*t51428*t51437*(1.4E1/9.0);
                double t51490 = c*c0*t51445*t51437*t51429*t51467*t51468*(4.0/3.0);
                double t51491 = c*c0*t51431*t51433*t51435*t51445*t51454*t51437*t51469*(6.4E1/9.0);
                double t51492 = t51490+t51491+t51488+t51489;
                double t51493 = 1.0/sqrt(t51460);
                double t51494 = 1.0/pow(rho_a,1.9E1/3.0);
                double t51495 = t51430*t51431*t51432*t51433;
                double t51496 = pow(t51434,4.0/5.0);
                double t51514 = rab1*t51496;
                double t51497 = exp(-t51514);
                double t51498 = t51497-1.0;
                double t51515 = kab1*t51498;
                double t51499 = kab0-t51515;
                double t51500 = a3*gamma_aa*t51428*t51438*t51439;
                double t51501 = t51500+1.0;
                double t51502 = 1.0/sqrt(t51501);
                double t51503 = 1.0/pow(rho_a,8.0/3.0);
                double t51504 = a1*gamma_aa*t51503*t51428;
                double t51505 = t51504+t51495+1.0;
                double t51506 = c*c;
                double t51507 = 1.0/pow(rho_a,2.0/3.0);
                double t51508 = k1*t51440;
                double t51509 = c*k2*t51429;
                double t51510 = t51508+t51509;
                double t51511 = 1.0/(t51510*t51510);
                double t51517 = t51511*t51506*t51507;
                double t51512 = exp(-t51517);
                double t51513 = exp(-t51495);
                double t51516 = c*c0*t51429*(2.0/3.0);
                double t51518 = t51470*t51471;
                double t51519 = t51484*t51476*t51487;
                double t51520 = t51518+t51519;
                double t51521 = t51502*t51513*t51505*t51499*1.0E5;
                double t51522 = t51521-t51516;
                double t51523 = heaviside(t51522);
                double t51524 = t51430*t51431*t51432*t51433*2.0;
                double t51525 = exp(t51524);
                double t51526 = 1.0/(t51499*t51499);
                double t51527 = 1.0/(t51505*t51505);
                double t51528 = c*c0*t51501*t51525*t51526*t51527*t51429*(2.0/3.0);
                double t51529 = sqrt(t51528);
                double t51530 = t51430*t51431*t51433*t51494*(1.6E1/3.0);
                double t51531 = a1*gamma_aa*t51462*t51428*(8.0/3.0);
                double t51532 = t51530+t51531;
                double t51533 = exp(t51528);
                double t51534 = Ei(-t51528);
                double t51535 = c*c0*t51501*t51525*t51526*t51527*t51459*(2.0/9.0);
                double t51536 = 1.0/(t51505*t51505*t51505);
                double t51537 = a3*c0*gamma_aa*t51462*t51525*t51526*t51428*t51527*(1.4E1/9.0);
                double t51538 = 1.0/pow(rho_a,5.0/3.0);
                double t51539 = 1.0/pow(t51434,1.0/5.0);
                double t51540 = c*c0*t51501*t51430*t51431*t51433*t51525*t51526*t51527*t51469*(6.4E1/9.0);
                double t51541 = 1.0/(t51499*t51499*t51499);
                double t51547 = c*c0*t51501*t51532*t51525*t51526*t51536*t51429*(4.0/3.0);
                double t51548 = c0*kab1*rab1*t51501*t51541*t51506*t51525*t51527*t51538*t51539*t51497*(1.6E1/4.5E1);
                double t51542 = t51540+t51535+t51537-t51547-t51548;
                double t51543 = t51529*6.0;
                double t51544 = c*c0*t51501*t51525*t51526*t51527*t51429*4.0;
                double t51545 = t51543+t51544+3.0;
                double t51546 = 1.0/t51545;
                double t51549 = c*c0*t51501*t51533*t51525*t51534*t51526*t51527*t51429*(2.0/3.0);
                double t51550 = t51549+1.0;
                double t51551 = t51529*4.0;
                double t51552 = c*c0*t51501*t51525*t51526*t51527*t51429*(8.0/3.0);
                double t51553 = t51551+t51552+6.0;
                double t51554 = 1.0/sqrt(t51528);
                double t51555 = 1.0/c0;
                double t51556 = pow(rho_a,1.0/3.0);
                double t51557 = c*c0*t51459*(2.0/9.0);
                double t51558 = t51430*t51502*t51431*t51513*t51433*t51505*t51494*t51499*(1.6E6/3.0);
                double t51559 = 1.0/pow(rho_a,1.0E1/3.0);
                double t51560 = 1.0/pow(t51501,3.0/2.0);
                double t51561 = a3*gamma_aa*t51513*t51505*t51560*t51428*t51438*t51559*t51499*(3.5E5/3.0);
                double t51562 = t51561+t51557+t51558-t51502*t51513*t51532*t51499*1.0E5-c*kab1*rab1*t51502*t51513*t51505*t51539*t51459*t51497*(8.0E4/3.0);
                double t51563 = 1.0/pow(rho_b,1.0/3.0);
                double t51564 = gamma_bb*gamma_bb;
                double t51565 = 1.0/pow(rho_b,1.6E1/3.0);
                double t51566 = c*t51563;
                double t51567 = pow(t51566,4.0/5.0);
                double t51580 = rab1*t51567;
                double t51568 = exp(-t51580);
                double t51569 = t51568-1.0;
                double t51581 = kab1*t51569;
                double t51570 = kab0-t51581;
                double t51571 = 1.0/pow(rho_b,7.0/3.0);
                double t51572 = a3*gamma_bb*t51571*t51428*t51438;
                double t51573 = t51572+1.0;
                double t51574 = t51430*t51433*t51564*t51565;
                double t51575 = 1.0/pow(rho_b,8.0/3.0);
                double t51576 = a1*gamma_bb*t51428*t51575;
                double t51577 = t51574+t51576+1.0;
                double t51578 = t51430*t51433*t51564*t51565*2.0;
                double t51579 = exp(t51578);
                double t51582 = 1.0/(t51570*t51570);
                double t51583 = 1.0/(t51577*t51577);
                double t51584 = c*c0*t51563*t51573*t51582*t51583*t51579*(2.0/3.0);
                double t51585 = exp(t51584);
                double t51586 = Ei(-t51584);
                double t51587 = sqrt(t51584);
                v_rho_a[Q] += scale * -rho_b*(c0*t51523*(t51550*t51546*(t51542*t51554*2.0+c*c0*t51501*t51525*t51526*t51527*t51459*(8.0/9.0)+a3*c0*gamma_aa*t51462*t51525*t51526*t51428*t51527*(5.6E1/9.0)-c*c0*t51501*t51532*t51525*t51526*t51536*t51429*(1.6E1/3.0)+c*c0*t51501*t51430*t51431*t51433*t51525*t51526*t51527*t51469*(2.56E2/9.0)-c0*kab1*rab1*t51501*t51541*t51506*t51525*t51527*t51538*t51539*t51497*(6.4E1/4.5E1))+t51553*t51546*(t51540+t51535+t51537-t51547-t51548+c*c0*t51501*t51533*t51525*t51534*t51526*t51527*t51459*(2.0/9.0)+a3*c0*gamma_aa*t51533*t51462*t51525*t51534*t51526*t51428*t51527*(1.4E1/9.0)-c*c0*t51501*t51532*t51533*t51525*t51534*t51526*t51536*t51429*(4.0/3.0)+c*c0*t51501*t51533*t51542*t51525*t51534*t51526*t51527*t51429*(2.0/3.0)+c*c0*t51501*t51430*t51431*t51433*t51533*t51525*t51534*t51526*t51527*t51469*(6.4E1/9.0)-c0*kab1*rab1*t51501*t51541*t51506*t51533*t51525*t51534*t51527*t51538*t51539*t51497*(1.6E1/4.5E1))+t51533*t51542*t51534-t51550*t51553*1.0/(t51545*t51545)*(t51542*t51554*3.0+c*c0*t51501*t51525*t51526*t51527*t51459*(4.0/3.0)+a3*c0*gamma_aa*t51462*t51525*t51526*t51428*t51527*(2.8E1/3.0)-c*c0*t51501*t51532*t51525*t51526*t51536*t51429*8.0+c*c0*t51501*t51430*t51431*t51433*t51525*t51526*t51527*t51469*(1.28E2/3.0)-c0*kab1*rab1*t51501*t51541*t51506*t51525*t51527*t51538*t51539*t51497*(3.2E1/1.5E1))+((t51505*t51505)*t51542*t51438*t51555*t51556*(t51499*t51499)*exp(-t51524)*(3.0/2.0))/t51501)*(1.0/2.0)-c0*t51562*dirac(-t51521+t51516)*(t51533*t51534+t51550*t51553*t51546)*(1.0/2.0))+rho_a*(c0*t51512*heaviside(c*c0*t51429*(-2.0/3.0)+t51502*t51505*t51499*exp(-t51430*t51431*t51432*t51433)*1.0E5)*(t51484*t51476*(t51492*t51493*t51458*2.0-t51431*t51433*t51443*t51461*t51435*t51494*(6.4E1/3.0)+c*c0*t51443*t51445*t51454*t51437*t51459*(8.0/9.0)+a5*c0*gamma_aa*t51443*t51462*t51454*t51428*t51437*(5.6E1/9.0)+c*c0*t51443*t51445*t51437*t51429*t51467*t51468*(1.6E1/3.0)+c*c0*t51431*t51433*t51443*t51435*t51445*t51454*t51437*t51469*(2.56E2/9.0)-c*c0*t51431*t51433*t51435*t51445*t51454*t51472*t51437*t51469*(2.56E2/9.0))+t51476*t51487*(t51480-t51482+t51477+t51478+t51479+c*c0*t51443*t51470*t51471*t51445*t51454*t51437*t51459*(2.0/9.0)+a5*c0*gamma_aa*t51443*t51470*t51462*t51471*t51454*t51428*t51437*(1.4E1/9.0)+c*c0*t51443*t51470*t51471*t51445*t51454*t51481*t51437*t51429*(2.0/3.0)+c*c0*t51443*t51470*t51471*t51445*t51437*t51429*t51467*t51468*(4.0/3.0)+c*c0*t51431*t51433*t51443*t51470*t51435*t51471*t51445*t51454*t51437*t51469*(6.4E1/9.0)-c*c0*t51431*t51433*t51470*t51435*t51471*t51445*t51454*t51472*t51437*t51469*(6.4E1/9.0))+t51470*t51471*t51481-1.0/(t51475*t51475)*t51484*t51487*(t51492*t51493*t51458*3.0-t51431*t51433*t51443*t51461*t51435*t51494*3.2E1+c*c0*t51443*t51445*t51454*t51437*t51459*(4.0/3.0)+a5*c0*gamma_aa*t51443*t51462*t51454*t51428*t51437*(2.8E1/3.0)+c*c0*t51443*t51445*t51437*t51429*t51467*t51468*8.0+c*c0*t51431*t51433*t51443*t51435*t51445*t51454*t51437*t51469*(1.28E2/3.0)-c*c0*t51431*t51433*t51435*t51445*t51454*t51472*t51437*t51469*(1.28E2/3.0))+((t51442*t51442)*(t51453*t51453)*t51481*t51438*t51555*t51556*exp(-t51436)*(3.0/2.0))/t51445)*(-1.0/2.0)+c0*t51520*t51512*t51523*(t51511*t51506*t51538*(2.0/3.0)-1.0/(t51510*t51510*t51510)*t51506*t51507*(c*k2*t51459*(1.0/3.0)+c*k1*t51463*t51459*(1.0/6.0))*2.0)*(1.0/2.0)+c0*t51520*t51512*t51562*dirac(t51516-t51502*t51513*t51505*t51499*1.0E5)*(1.0/2.0))+c0*heaviside(c*c0*t51563*(-2.0/3.0)+t51570*1.0/sqrt(t51573)*t51577*exp(-t51430*t51433*t51564*t51565)*1.0E5)*(t51585*t51586+((c*c0*t51563*t51573*t51582*t51583*t51585*t51586*t51579*(2.0/3.0)+1.0)*(t51587*4.0+c*c0*t51563*t51573*t51582*t51583*t51579*(8.0/3.0)+6.0))/(t51587*6.0+c*c0*t51563*t51573*t51582*t51583*t51579*4.0+3.0))*(1.0/2.0)+c0*t51520*t51512*t51523*(1.0/2.0);
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t51589 = tspi_m13*tspi_m13;
                double t51590 = 1.0/pow(rho_b,1.0/3.0);
                double t51591 = a2*a2;
                double t51592 = gamma_bb*gamma_bb;
                double t51593 = 1.0/pow(rho_b,1.6E1/3.0);
                double t51594 = t51589*t51589;
                double t51595 = c*t51590;
                double t51596 = a4*a4;
                double t51597 = t51592*t51593*t51594*t51596*2.0;
                double t51598 = exp(t51597);
                double t51599 = 1.0/c;
                double t51600 = 1.0/pow(rho_b,7.0/3.0);
                double t51601 = sqrt(t51595);
                double t51602 = t51592*t51593*t51594*t51596;
                double t51603 = t51602+1.0;
                double t51604 = 1.0/(t51603*t51603);
                double t51605 = a5*gamma_bb*t51600*t51589*t51599;
                double t51606 = t51605+1.0;
                double t51617 = raa2*t51601;
                double t51607 = exp(-t51617);
                double t51608 = t51607-1.0;
                double t51609 = kaa2*t51608;
                double t51610 = pow(t51595,2.0/5.0);
                double t51618 = raa1*t51610;
                double t51611 = exp(-t51618);
                double t51612 = t51611-1.0;
                double t51613 = kaa1*t51612;
                double t51614 = -kaa0+t51613+t51609;
                double t51615 = 1.0/(t51614*t51614);
                double t51616 = c*c0*t51604*t51606*t51615*t51590*t51598*(2.0/3.0);
                double t51619 = 1.0/t51603;
                double t51620 = 1.0/pow(rho_b,4.0/3.0);
                double t51621 = c*c0*t51606*t51615*t51590*t51598*(2.0/3.0);
                double t51622 = sqrt(t51621);
                double t51623 = 1.0/pow(rho_b,1.1E1/3.0);
                double t51624 = 1.0/sqrt(t51595);
                double t51625 = c*kaa2*raa2*t51620*t51624*t51607*(1.0/6.0);
                double t51626 = 1.0/pow(t51595,3.0/5.0);
                double t51627 = c*kaa1*raa1*t51611*t51620*t51626*(2.0/1.5E1);
                double t51628 = t51625+t51627;
                double t51629 = 1.0/(t51614*t51614*t51614);
                double t51630 = 1.0/pow(rho_b,2.0E1/3.0);
                double t51631 = exp(t51616);
                double t51632 = Ei(-t51616);
                double t51633 = 1.0/(t51603*t51603*t51603);
                double t51634 = t51622*t51619*6.0;
                double t51635 = c*c0*t51604*t51606*t51615*t51590*t51598*4.0;
                double t51636 = t51634+t51635+3.0;
                double t51637 = 1.0/t51636;
                double t51638 = c*c0*t51620*t51604*t51606*t51615*t51598*(2.0/9.0);
                double t51639 = a5*c0*gamma_bb*t51604*t51623*t51615*t51589*t51598*(1.4E1/9.0);
                double t51640 = c*c0*t51604*t51606*t51590*t51628*t51629*t51598*(4.0/3.0);
                double t51641 = c*c0*t51630*t51604*t51606*t51615*t51592*t51594*t51596*t51598*(6.4E1/9.0);
                double t51643 = c*c0*t51630*t51606*t51615*t51633*t51592*t51594*t51596*t51598*(6.4E1/9.0);
                double t51642 = t51640+t51641-t51643+t51638+t51639;
                double t51644 = c*c0*t51604*t51631*t51632*t51606*t51615*t51590*t51598*(2.0/3.0);
                double t51645 = t51644+1.0;
                double t51646 = t51622*t51619*4.0;
                double t51647 = c*c0*t51604*t51606*t51615*t51590*t51598*(8.0/3.0);
                double t51648 = t51646+t51647+6.0;
                double t51649 = c*c0*t51620*t51606*t51615*t51598*(2.0/9.0);
                double t51650 = a5*c0*gamma_bb*t51623*t51615*t51589*t51598*(1.4E1/9.0);
                double t51651 = c*c0*t51606*t51590*t51628*t51629*t51598*(4.0/3.0);
                double t51652 = c*c0*t51630*t51606*t51615*t51592*t51594*t51596*t51598*(6.4E1/9.0);
                double t51653 = t51650+t51651+t51652+t51649;
                double t51654 = 1.0/sqrt(t51621);
                double t51655 = 1.0/pow(rho_b,1.9E1/3.0);
                double t51656 = t51591*t51592*t51593*t51594;
                double t51657 = pow(t51595,4.0/5.0);
                double t51675 = rab1*t51657;
                double t51658 = exp(-t51675);
                double t51659 = t51658-1.0;
                double t51676 = kab1*t51659;
                double t51660 = kab0-t51676;
                double t51661 = a3*gamma_bb*t51600*t51589*t51599;
                double t51662 = t51661+1.0;
                double t51663 = 1.0/sqrt(t51662);
                double t51664 = 1.0/pow(rho_b,8.0/3.0);
                double t51665 = a1*gamma_bb*t51664*t51589;
                double t51666 = t51656+t51665+1.0;
                double t51667 = c*c;
                double t51668 = 1.0/pow(rho_b,2.0/3.0);
                double t51669 = k1*t51601;
                double t51670 = c*k2*t51590;
                double t51671 = t51670+t51669;
                double t51672 = 1.0/(t51671*t51671);
                double t51678 = t51672*t51667*t51668;
                double t51673 = exp(-t51678);
                double t51674 = exp(-t51656);
                double t51677 = c*c0*t51590*(2.0/3.0);
                double t51679 = t51631*t51632;
                double t51680 = t51645*t51637*t51648;
                double t51681 = t51680+t51679;
                double t51682 = t51660*t51663*t51674*t51666*1.0E5;
                double t51683 = t51682-t51677;
                double t51684 = heaviside(t51683);
                double t51685 = t51591*t51592*t51593*t51594*2.0;
                double t51686 = exp(t51685);
                double t51687 = 1.0/(t51660*t51660);
                double t51688 = 1.0/(t51666*t51666);
                double t51689 = c*c0*t51590*t51662*t51686*t51687*t51688*(2.0/3.0);
                double t51690 = sqrt(t51689);
                double t51691 = t51591*t51592*t51655*t51594*(1.6E1/3.0);
                double t51692 = a1*gamma_bb*t51623*t51589*(8.0/3.0);
                double t51693 = t51691+t51692;
                double t51694 = exp(t51689);
                double t51695 = Ei(-t51689);
                double t51696 = c*c0*t51620*t51662*t51686*t51687*t51688*(2.0/9.0);
                double t51697 = 1.0/(t51666*t51666*t51666);
                double t51698 = a3*c0*gamma_bb*t51623*t51686*t51687*t51589*t51688*(1.4E1/9.0);
                double t51699 = 1.0/pow(rho_b,5.0/3.0);
                double t51700 = 1.0/pow(t51595,1.0/5.0);
                double t51701 = c*c0*t51630*t51662*t51591*t51592*t51594*t51686*t51687*t51688*(6.4E1/9.0);
                double t51702 = 1.0/(t51660*t51660*t51660);
                double t51708 = c*c0*t51590*t51662*t51693*t51686*t51687*t51697*(4.0/3.0);
                double t51709 = c0*kab1*rab1*t51700*t51702*t51662*t51658*t51667*t51686*t51688*t51699*(1.6E1/4.5E1);
                double t51703 = t51701-t51708-t51709+t51696+t51698;
                double t51704 = t51690*6.0;
                double t51705 = c*c0*t51590*t51662*t51686*t51687*t51688*4.0;
                double t51706 = t51704+t51705+3.0;
                double t51707 = 1.0/t51706;
                double t51710 = c*c0*t51590*t51662*t51694*t51686*t51695*t51687*t51688*(2.0/3.0);
                double t51711 = t51710+1.0;
                double t51712 = t51690*4.0;
                double t51713 = c*c0*t51590*t51662*t51686*t51687*t51688*(8.0/3.0);
                double t51714 = t51712+t51713+6.0;
                double t51715 = 1.0/sqrt(t51689);
                double t51716 = 1.0/c0;
                double t51717 = pow(rho_b,1.0/3.0);
                double t51718 = c*c0*t51620*(2.0/9.0);
                double t51719 = t51660*t51591*t51663*t51592*t51655*t51674*t51594*t51666*(1.6E6/3.0);
                double t51720 = 1.0/pow(rho_b,1.0E1/3.0);
                double t51721 = 1.0/pow(t51662,3.0/2.0);
                double t51722 = a3*gamma_bb*t51720*t51721*t51660*t51674*t51666*t51589*t51599*(3.5E5/3.0);
                double t51723 = t51722+t51718+t51719-t51660*t51663*t51674*t51693*1.0E5-c*kab1*rab1*t51700*t51620*t51663*t51674*t51666*t51658*(8.0E4/3.0);
                double t51724 = 1.0/pow(rho_a,1.0/3.0);
                double t51725 = gamma_aa*gamma_aa;
                double t51726 = 1.0/pow(rho_a,1.6E1/3.0);
                double t51727 = c*t51724;
                double t51728 = pow(t51727,4.0/5.0);
                double t51741 = rab1*t51728;
                double t51729 = exp(-t51741);
                double t51730 = t51729-1.0;
                double t51742 = kab1*t51730;
                double t51731 = kab0-t51742;
                double t51732 = 1.0/pow(rho_a,7.0/3.0);
                double t51733 = a3*gamma_aa*t51732*t51589*t51599;
                double t51734 = t51733+1.0;
                double t51735 = t51725*t51591*t51726*t51594;
                double t51736 = 1.0/pow(rho_a,8.0/3.0);
                double t51737 = a1*gamma_aa*t51736*t51589;
                double t51738 = t51735+t51737+1.0;
                double t51739 = t51725*t51591*t51726*t51594*2.0;
                double t51740 = exp(t51739);
                double t51743 = 1.0/(t51731*t51731);
                double t51744 = 1.0/(t51738*t51738);
                double t51745 = c*c0*t51740*t51724*t51734*t51743*t51744*(2.0/3.0);
                double t51746 = exp(t51745);
                double t51747 = Ei(-t51745);
                double t51748 = sqrt(t51745);
                v_rho_b[Q] += scale * -rho_a*(c0*t51684*(t51711*t51707*(t51703*t51715*2.0+c*c0*t51620*t51662*t51686*t51687*t51688*(8.0/9.0)+a3*c0*gamma_bb*t51623*t51686*t51687*t51589*t51688*(5.6E1/9.0)-c*c0*t51590*t51662*t51693*t51686*t51687*t51697*(1.6E1/3.0)+c*c0*t51630*t51662*t51591*t51592*t51594*t51686*t51687*t51688*(2.56E2/9.0)-c0*kab1*rab1*t51700*t51702*t51662*t51658*t51667*t51686*t51688*t51699*(6.4E1/4.5E1))+t51714*t51707*(t51701-t51708-t51709+t51696+t51698+c*c0*t51620*t51662*t51694*t51686*t51695*t51687*t51688*(2.0/9.0)+a3*c0*gamma_bb*t51623*t51694*t51686*t51695*t51687*t51589*t51688*(1.4E1/9.0)+c*c0*t51703*t51590*t51662*t51694*t51686*t51695*t51687*t51688*(2.0/3.0)-c*c0*t51590*t51662*t51693*t51694*t51686*t51695*t51687*t51697*(4.0/3.0)+c*c0*t51630*t51662*t51591*t51592*t51594*t51694*t51686*t51695*t51687*t51688*(6.4E1/9.0)-c0*kab1*rab1*t51700*t51702*t51662*t51658*t51667*t51694*t51686*t51695*t51688*t51699*(1.6E1/4.5E1))+t51703*t51694*t51695-t51711*t51714*1.0/(t51706*t51706)*(t51703*t51715*3.0+c*c0*t51620*t51662*t51686*t51687*t51688*(4.0/3.0)+a3*c0*gamma_bb*t51623*t51686*t51687*t51589*t51688*(2.8E1/3.0)-c*c0*t51590*t51662*t51693*t51686*t51687*t51697*8.0+c*c0*t51630*t51662*t51591*t51592*t51594*t51686*t51687*t51688*(1.28E2/3.0)-c0*kab1*rab1*t51700*t51702*t51662*t51658*t51667*t51686*t51688*t51699*(3.2E1/1.5E1))+(t51703*(t51660*t51660)*t51716*t51717*(t51666*t51666)*t51599*exp(-t51685)*(3.0/2.0))/t51662)*(1.0/2.0)-c0*t51723*dirac(-t51682+t51677)*(t51694*t51695+t51711*t51714*t51707)*(1.0/2.0))+rho_b*(c0*t51673*heaviside(c*c0*t51590*(-2.0/3.0)+t51660*t51663*t51666*exp(-t51591*t51592*t51593*t51594)*1.0E5)*(t51645*t51637*(t51653*t51654*t51619*2.0-t51604*t51622*t51592*t51655*t51594*t51596*(6.4E1/3.0)+c*c0*t51620*t51604*t51606*t51615*t51598*(8.0/9.0)+a5*c0*gamma_bb*t51604*t51623*t51615*t51589*t51598*(5.6E1/9.0)+c*c0*t51604*t51606*t51590*t51628*t51629*t51598*(1.6E1/3.0)+c*c0*t51630*t51604*t51606*t51615*t51592*t51594*t51596*t51598*(2.56E2/9.0)-c*c0*t51630*t51606*t51615*t51633*t51592*t51594*t51596*t51598*(2.56E2/9.0))+t51637*t51648*(t51640+t51641-t51643+t51638+t51639+c*c0*t51620*t51604*t51631*t51632*t51606*t51615*t51598*(2.0/9.0)+a5*c0*gamma_bb*t51604*t51631*t51623*t51632*t51615*t51589*t51598*(1.4E1/9.0)+c*c0*t51604*t51631*t51632*t51606*t51615*t51642*t51590*t51598*(2.0/3.0)+c*c0*t51604*t51631*t51632*t51606*t51590*t51628*t51629*t51598*(4.0/3.0)+c*c0*t51630*t51604*t51631*t51632*t51606*t51615*t51592*t51594*t51596*t51598*(6.4E1/9.0)-c*c0*t51630*t51631*t51632*t51606*t51615*t51633*t51592*t51594*t51596*t51598*(6.4E1/9.0))+t51631*t51632*t51642-1.0/(t51636*t51636)*t51645*t51648*(t51653*t51654*t51619*3.0-t51604*t51622*t51592*t51655*t51594*t51596*3.2E1+c*c0*t51620*t51604*t51606*t51615*t51598*(4.0/3.0)+a5*c0*gamma_bb*t51604*t51623*t51615*t51589*t51598*(2.8E1/3.0)+c*c0*t51604*t51606*t51590*t51628*t51629*t51598*8.0+c*c0*t51630*t51604*t51606*t51615*t51592*t51594*t51596*t51598*(1.28E2/3.0)-c*c0*t51630*t51606*t51615*t51633*t51592*t51594*t51596*t51598*(1.28E2/3.0))+((t51603*t51603)*(t51614*t51614)*t51642*t51716*t51717*t51599*exp(-t51597)*(3.0/2.0))/t51606)*(-1.0/2.0)+c0*t51681*t51673*t51684*(t51672*t51667*t51699*(2.0/3.0)-1.0/(t51671*t51671*t51671)*t51667*t51668*(c*k2*t51620*(1.0/3.0)+c*k1*t51620*t51624*(1.0/6.0))*2.0)*(1.0/2.0)+c0*t51723*t51681*t51673*dirac(t51677-t51660*t51663*t51674*t51666*1.0E5)*(1.0/2.0))+c0*heaviside(c*c0*t51724*(-2.0/3.0)+t51731*1.0/sqrt(t51734)*t51738*exp(-t51725*t51591*t51726*t51594)*1.0E5)*(t51746*t51747+((c*c0*t51740*t51724*t51734*t51743*t51744*t51746*t51747*(2.0/3.0)+1.0)*(t51748*4.0+c*c0*t51740*t51724*t51734*t51743*t51744*(8.0/3.0)+6.0))/(t51748*6.0+c*c0*t51740*t51724*t51734*t51743*t51744*4.0+3.0))*(1.0/2.0)+c0*t51681*t51673*t51684*(1.0/2.0);
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t51750 = tspi_m13*tspi_m13;
                double t51751 = 1.0/pow(rho_a,1.0/3.0);
                double t51752 = a2*a2;
                double t51753 = gamma_aa*gamma_aa;
                double t51754 = 1.0/pow(rho_a,1.6E1/3.0);
                double t51755 = t51750*t51750;
                double t51756 = t51752*t51753*t51754*t51755*2.0;
                double t51757 = exp(t51756);
                double t51758 = c*t51751;
                double t51759 = pow(t51758,4.0/5.0);
                double t51771 = rab1*t51759;
                double t51760 = exp(-t51771);
                double t51761 = t51760-1.0;
                double t51772 = kab1*t51761;
                double t51762 = kab0-t51772;
                double t51763 = 1.0/c;
                double t51764 = 1.0/pow(rho_a,7.0/3.0);
                double t51765 = a3*gamma_aa*t51750*t51763*t51764;
                double t51766 = t51765+1.0;
                double t51767 = t51752*t51753*t51754*t51755;
                double t51768 = 1.0/pow(rho_a,8.0/3.0);
                double t51769 = a1*gamma_aa*t51750*t51768;
                double t51770 = t51767+t51769+1.0;
                double t51773 = 1.0/(t51762*t51762);
                double t51774 = 1.0/(t51770*t51770);
                double t51775 = c*c0*t51751*t51773*t51774*t51757*t51766*(2.0/3.0);
                double t51776 = a1*t51750*t51768;
                double t51777 = gamma_aa*t51752*t51754*t51755*2.0;
                double t51778 = t51776+t51777;
                double t51779 = 1.0/(t51770*t51770*t51770);
                double t51780 = 1.0/pow(rho_a,1.7E1/3.0);
                double t51781 = exp(t51775);
                double t51782 = Ei(-t51775);
                double t51783 = a3*c0*t51750*t51773*t51774*t51757*t51768*(2.0/3.0);
                double t51784 = c*c0*gamma_aa*t51752*t51780*t51755*t51773*t51774*t51757*t51766*(8.0/3.0);
                double t51791 = c*c0*t51751*t51773*t51757*t51766*t51778*t51779*(4.0/3.0);
                double t51785 = -t51791+t51783+t51784;
                double t51786 = sqrt(t51775);
                double t51787 = t51786*6.0;
                double t51788 = c*c0*t51751*t51773*t51774*t51757*t51766*4.0;
                double t51789 = t51787+t51788+3.0;
                double t51790 = 1.0/t51789;
                double t51792 = c*c0*t51751*t51781*t51773*t51782*t51774*t51757*t51766*(2.0/3.0);
                double t51793 = t51792+1.0;
                double t51794 = t51786*4.0;
                double t51795 = c*c0*t51751*t51773*t51774*t51757*t51766*(8.0/3.0);
                double t51796 = t51794+t51795+6.0;
                double t51797 = 1.0/sqrt(t51775);
                double t51798 = 1.0/sqrt(t51766);
                double t51799 = exp(-t51767);
                double t51800 = c*c0*t51751*(2.0/3.0);
                double t51801 = a4*a4;
                double t51802 = sqrt(t51758);
                double t51803 = t51801*t51753*t51754*t51755*2.0;
                double t51804 = exp(t51803);
                double t51805 = t51801*t51753*t51754*t51755;
                double t51806 = t51805+1.0;
                double t51807 = 1.0/(t51806*t51806);
                double t51808 = a5*gamma_aa*t51750*t51763*t51764;
                double t51809 = t51808+1.0;
                double t51820 = raa2*t51802;
                double t51810 = exp(-t51820);
                double t51811 = t51810-1.0;
                double t51812 = kaa2*t51811;
                double t51813 = pow(t51758,2.0/5.0);
                double t51821 = raa1*t51813;
                double t51814 = exp(-t51821);
                double t51815 = t51814-1.0;
                double t51816 = kaa1*t51815;
                double t51817 = -kaa0+t51812+t51816;
                double t51818 = 1.0/(t51817*t51817);
                double t51819 = c*c0*t51804*t51751*t51807*t51809*t51818*(2.0/3.0);
                double t51822 = exp(t51819);
                double t51823 = Ei(-t51819);
                double t51824 = 1.0/t51806;
                double t51825 = c*c0*t51804*t51751*t51809*t51818*(2.0/3.0);
                double t51826 = sqrt(t51825);
                double t51827 = 1.0/(t51806*t51806*t51806);
                double t51828 = t51824*t51826*6.0;
                double t51829 = c*c0*t51804*t51751*t51807*t51809*t51818*4.0;
                double t51830 = t51828+t51829+3.0;
                double t51831 = 1.0/t51830;
                double t51832 = a5*c0*t51750*t51804*t51807*t51818*t51768*(2.0/3.0);
                double t51833 = c*c0*gamma_aa*t51801*t51804*t51780*t51807*t51755*t51809*t51818*(8.0/3.0);
                double t51846 = c*c0*gamma_aa*t51801*t51804*t51780*t51755*t51809*t51818*t51827*(8.0/3.0);
                double t51834 = t51832+t51833-t51846;
                double t51835 = c*c0*t51804*t51822*t51751*t51823*t51807*t51809*t51818*(2.0/3.0);
                double t51836 = t51835+1.0;
                double t51837 = t51824*t51826*4.0;
                double t51838 = c*c0*t51804*t51751*t51807*t51809*t51818*(8.0/3.0);
                double t51839 = t51837+t51838+6.0;
                double t51840 = a5*c0*t51750*t51804*t51818*t51768*(2.0/3.0);
                double t51841 = c*c0*gamma_aa*t51801*t51804*t51780*t51755*t51809*t51818*(8.0/3.0);
                double t51842 = t51840+t51841;
                double t51843 = 1.0/sqrt(t51825);
                double t51844 = 1.0/c0;
                double t51845 = pow(rho_a,1.0/3.0);
                double t51847 = t51770*t51762*t51798*t51799*1.0E5;
                double t51848 = c*c;
                double t51849 = 1.0/pow(rho_a,2.0/3.0);
                double t51850 = k1*t51802;
                double t51851 = c*k2*t51751;
                double t51852 = t51850+t51851;
                double t51853 = 1.0/(t51852*t51852);
                double t51854 = exp(-t51853*t51848*t51849);
                double t51855 = 1.0/pow(t51766,3.0/2.0);
                double t51856 = a3*t51750*t51770*t51762*t51763*t51764*t51855*t51799*5.0E4;
                double t51857 = gamma_aa*t51752*t51770*t51762*t51754*t51755*t51798*t51799*2.0E5;
                double t51858 = t51856+t51857-t51762*t51778*t51798*t51799*1.0E5;
                v_gamma_aa[Q] += scale * rho_b*(c0*heaviside(c*c0*t51751*(-2.0/3.0)+t51770*t51762*t51798*exp(-t51752*t51753*t51754*t51755)*1.0E5)*(t51781*t51782*t51785+t51790*t51796*(-t51791+t51783+t51784+a3*c0*t51750*t51781*t51773*t51782*t51774*t51757*t51768*(2.0/3.0)+c*c0*t51751*t51781*t51773*t51782*t51774*t51757*t51766*t51785*(2.0/3.0)-c*c0*t51751*t51781*t51773*t51782*t51757*t51766*t51778*t51779*(4.0/3.0)+c*c0*gamma_aa*t51752*t51780*t51781*t51755*t51773*t51782*t51774*t51757*t51766*(8.0/3.0))+t51790*t51793*(t51785*t51797*2.0+a3*c0*t51750*t51773*t51774*t51757*t51768*(8.0/3.0)-c*c0*t51751*t51773*t51757*t51766*t51778*t51779*(1.6E1/3.0)+c*c0*gamma_aa*t51752*t51780*t51755*t51773*t51774*t51757*t51766*(3.2E1/3.0))-t51793*t51796*1.0/(t51789*t51789)*(t51785*t51797*3.0+a3*c0*t51750*t51773*t51774*t51757*t51768*4.0-c*c0*t51751*t51773*t51757*t51766*t51778*t51779*8.0+c*c0*gamma_aa*t51752*t51780*t51755*t51773*t51774*t51757*t51766*1.6E1)+((t51770*t51770)*(t51762*t51762)*t51763*t51844*t51845*t51785*exp(-t51756)*(3.0/2.0))/t51766)*(1.0/2.0)-c0*t51858*dirac(t51800-t51770*t51762*t51798*t51799*1.0E5)*(t51781*t51782+t51790*t51793*t51796)*(1.0/2.0))+rho_a*(c0*t51854*heaviside(-t51800+t51847)*(t51831*t51836*(t51824*t51842*t51843*2.0-gamma_aa*t51801*t51807*t51754*t51826*t51755*8.0+a5*c0*t51750*t51804*t51807*t51818*t51768*(8.0/3.0)+c*c0*gamma_aa*t51801*t51804*t51780*t51807*t51755*t51809*t51818*(3.2E1/3.0)-c*c0*gamma_aa*t51801*t51804*t51780*t51755*t51809*t51818*t51827*(3.2E1/3.0))+t51831*t51839*(t51832+t51833+a5*c0*t51750*t51804*t51822*t51823*t51807*t51818*t51768*(2.0/3.0)-c*c0*gamma_aa*t51801*t51804*t51780*t51755*t51809*t51818*t51827*(8.0/3.0)+c*c0*t51804*t51822*t51751*t51823*t51807*t51834*t51809*t51818*(2.0/3.0)+c*c0*gamma_aa*t51801*t51804*t51822*t51823*t51780*t51807*t51755*t51809*t51818*(8.0/3.0)-c*c0*gamma_aa*t51801*t51804*t51822*t51823*t51780*t51755*t51809*t51818*t51827*(8.0/3.0))+t51822*t51823*t51834-1.0/(t51830*t51830)*t51836*t51839*(t51824*t51842*t51843*3.0-gamma_aa*t51801*t51807*t51754*t51826*t51755*1.2E1+a5*c0*t51750*t51804*t51807*t51818*t51768*4.0+c*c0*gamma_aa*t51801*t51804*t51780*t51807*t51755*t51809*t51818*1.6E1-c*c0*gamma_aa*t51801*t51804*t51780*t51755*t51809*t51818*t51827*1.6E1)+((t51806*t51806)*t51834*t51763*(t51817*t51817)*t51844*t51845*exp(-t51803)*(3.0/2.0))/t51809)*(1.0/2.0)-c0*t51854*t51858*dirac(t51800-t51847)*(t51822*t51823+t51831*t51836*t51839)*(1.0/2.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t51861 = tspi_m13*tspi_m13;
                double t51862 = 1.0/pow(rho_b,1.0/3.0);
                double t51863 = a2*a2;
                double t51864 = gamma_bb*gamma_bb;
                double t51865 = 1.0/pow(rho_b,1.6E1/3.0);
                double t51866 = t51861*t51861;
                double t51867 = t51863*t51864*t51865*t51866*2.0;
                double t51868 = exp(t51867);
                double t51869 = c*t51862;
                double t51870 = pow(t51869,4.0/5.0);
                double t51882 = rab1*t51870;
                double t51871 = exp(-t51882);
                double t51872 = t51871-1.0;
                double t51883 = kab1*t51872;
                double t51873 = kab0-t51883;
                double t51874 = 1.0/c;
                double t51875 = 1.0/pow(rho_b,7.0/3.0);
                double t51876 = a3*gamma_bb*t51861*t51874*t51875;
                double t51877 = t51876+1.0;
                double t51878 = t51863*t51864*t51865*t51866;
                double t51879 = 1.0/pow(rho_b,8.0/3.0);
                double t51880 = a1*gamma_bb*t51861*t51879;
                double t51881 = t51880+t51878+1.0;
                double t51884 = 1.0/(t51873*t51873);
                double t51885 = 1.0/(t51881*t51881);
                double t51886 = c*c0*t51862*t51884*t51885*t51868*t51877*(2.0/3.0);
                double t51887 = a1*t51861*t51879;
                double t51888 = gamma_bb*t51863*t51865*t51866*2.0;
                double t51889 = t51887+t51888;
                double t51890 = 1.0/(t51881*t51881*t51881);
                double t51891 = 1.0/pow(rho_b,1.7E1/3.0);
                double t51892 = exp(t51886);
                double t51893 = Ei(-t51886);
                double t51894 = a3*c0*t51861*t51884*t51885*t51868*t51879*(2.0/3.0);
                double t51895 = c*c0*gamma_bb*t51863*t51891*t51866*t51884*t51885*t51868*t51877*(8.0/3.0);
                double t51902 = c*c0*t51862*t51890*t51884*t51868*t51877*t51889*(4.0/3.0);
                double t51896 = -t51902+t51894+t51895;
                double t51897 = sqrt(t51886);
                double t51898 = t51897*6.0;
                double t51899 = c*c0*t51862*t51884*t51885*t51868*t51877*4.0;
                double t51900 = t51898+t51899+3.0;
                double t51901 = 1.0/t51900;
                double t51903 = c*c0*t51862*t51892*t51884*t51893*t51885*t51868*t51877*(2.0/3.0);
                double t51904 = t51903+1.0;
                double t51905 = t51897*4.0;
                double t51906 = c*c0*t51862*t51884*t51885*t51868*t51877*(8.0/3.0);
                double t51907 = t51905+t51906+6.0;
                double t51908 = 1.0/sqrt(t51886);
                double t51909 = 1.0/sqrt(t51877);
                double t51910 = exp(-t51878);
                double t51911 = c*c0*t51862*(2.0/3.0);
                double t51912 = a4*a4;
                double t51913 = sqrt(t51869);
                double t51914 = t51912*t51864*t51865*t51866*2.0;
                double t51915 = exp(t51914);
                double t51916 = t51912*t51864*t51865*t51866;
                double t51917 = t51916+1.0;
                double t51918 = 1.0/(t51917*t51917);
                double t51919 = a5*gamma_bb*t51861*t51874*t51875;
                double t51920 = t51919+1.0;
                double t51931 = raa2*t51913;
                double t51921 = exp(-t51931);
                double t51922 = t51921-1.0;
                double t51923 = kaa2*t51922;
                double t51924 = pow(t51869,2.0/5.0);
                double t51932 = raa1*t51924;
                double t51925 = exp(-t51932);
                double t51926 = t51925-1.0;
                double t51927 = kaa1*t51926;
                double t51928 = -kaa0+t51923+t51927;
                double t51929 = 1.0/(t51928*t51928);
                double t51930 = c*c0*t51920*t51915*t51862*t51918*t51929*(2.0/3.0);
                double t51933 = exp(t51930);
                double t51934 = Ei(-t51930);
                double t51935 = 1.0/t51917;
                double t51936 = c*c0*t51920*t51915*t51862*t51929*(2.0/3.0);
                double t51937 = sqrt(t51936);
                double t51938 = 1.0/(t51917*t51917*t51917);
                double t51939 = t51935*t51937*6.0;
                double t51940 = c*c0*t51920*t51915*t51862*t51918*t51929*4.0;
                double t51941 = t51940+t51939+3.0;
                double t51942 = 1.0/t51941;
                double t51943 = a5*c0*t51861*t51915*t51918*t51929*t51879*(2.0/3.0);
                double t51944 = c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51918*t51866*t51929*(8.0/3.0);
                double t51957 = c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51866*t51929*t51938*(8.0/3.0);
                double t51945 = t51943+t51944-t51957;
                double t51946 = c*c0*t51920*t51915*t51933*t51862*t51934*t51918*t51929*(2.0/3.0);
                double t51947 = t51946+1.0;
                double t51948 = t51935*t51937*4.0;
                double t51949 = c*c0*t51920*t51915*t51862*t51918*t51929*(8.0/3.0);
                double t51950 = t51948+t51949+6.0;
                double t51951 = a5*c0*t51861*t51915*t51929*t51879*(2.0/3.0);
                double t51952 = c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51866*t51929*(8.0/3.0);
                double t51953 = t51951+t51952;
                double t51954 = 1.0/sqrt(t51936);
                double t51955 = 1.0/c0;
                double t51956 = pow(rho_b,1.0/3.0);
                double t51958 = t51910*t51881*t51873*t51909*1.0E5;
                double t51959 = c*c;
                double t51960 = 1.0/pow(rho_b,2.0/3.0);
                double t51961 = k1*t51913;
                double t51962 = c*k2*t51862;
                double t51963 = t51961+t51962;
                double t51964 = 1.0/(t51963*t51963);
                double t51965 = exp(-t51960*t51964*t51959);
                double t51966 = 1.0/pow(t51877,3.0/2.0);
                double t51967 = a3*t51910*t51861*t51881*t51873*t51874*t51875*t51966*5.0E4;
                double t51968 = gamma_bb*t51910*t51863*t51881*t51873*t51909*t51865*t51866*2.0E5;
                double t51969 = t51967+t51968-t51910*t51873*t51909*t51889*1.0E5;
                v_gamma_bb[Q] += scale * rho_a*(c0*heaviside(c*c0*t51862*(-2.0/3.0)+t51881*t51873*t51909*exp(-t51863*t51864*t51865*t51866)*1.0E5)*(t51892*t51893*t51896+t51901*t51907*(-t51902+t51894+t51895+a3*c0*t51861*t51892*t51884*t51893*t51885*t51868*t51879*(2.0/3.0)-c*c0*t51862*t51890*t51892*t51884*t51893*t51868*t51877*t51889*(4.0/3.0)+c*c0*t51862*t51892*t51884*t51893*t51885*t51868*t51877*t51896*(2.0/3.0)+c*c0*gamma_bb*t51863*t51891*t51892*t51866*t51884*t51893*t51885*t51868*t51877*(8.0/3.0))+t51901*t51904*(t51908*t51896*2.0+a3*c0*t51861*t51884*t51885*t51868*t51879*(8.0/3.0)-c*c0*t51862*t51890*t51884*t51868*t51877*t51889*(1.6E1/3.0)+c*c0*gamma_bb*t51863*t51891*t51866*t51884*t51885*t51868*t51877*(3.2E1/3.0))-1.0/(t51900*t51900)*t51904*t51907*(t51908*t51896*3.0+a3*c0*t51861*t51884*t51885*t51868*t51879*4.0-c*c0*t51862*t51890*t51884*t51868*t51877*t51889*8.0+c*c0*gamma_bb*t51863*t51891*t51866*t51884*t51885*t51868*t51877*1.6E1)+((t51881*t51881)*(t51873*t51873)*t51874*t51955*t51956*t51896*exp(-t51867)*(3.0/2.0))/t51877)*(1.0/2.0)-c0*t51969*dirac(t51911-t51910*t51881*t51873*t51909*1.0E5)*(t51892*t51893+t51901*t51904*t51907)*(1.0/2.0))+rho_b*(c0*t51965*heaviside(-t51911+t51958)*(t51942*t51947*(t51935*t51953*t51954*2.0-gamma_bb*t51912*t51918*t51865*t51937*t51866*8.0+a5*c0*t51861*t51915*t51918*t51929*t51879*(8.0/3.0)+c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51918*t51866*t51929*(3.2E1/3.0)-c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51866*t51929*t51938*(3.2E1/3.0))+t51950*t51942*(t51943+t51944+a5*c0*t51861*t51915*t51933*t51934*t51918*t51929*t51879*(2.0/3.0)-c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51866*t51929*t51938*(8.0/3.0)+c*c0*t51920*t51915*t51933*t51862*t51934*t51918*t51945*t51929*(2.0/3.0)+c*c0*gamma_bb*t51920*t51912*t51915*t51933*t51934*t51891*t51918*t51866*t51929*(8.0/3.0)-c*c0*gamma_bb*t51920*t51912*t51915*t51933*t51934*t51891*t51866*t51929*t51938*(8.0/3.0))+t51933*t51934*t51945-1.0/(t51941*t51941)*t51950*t51947*(t51935*t51953*t51954*3.0-gamma_bb*t51912*t51918*t51865*t51937*t51866*1.2E1+a5*c0*t51861*t51915*t51918*t51929*t51879*4.0+c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51918*t51866*t51929*1.6E1-c*c0*gamma_bb*t51920*t51912*t51915*t51891*t51866*t51929*t51938*1.6E1)+((t51917*t51917)*t51945*t51874*(t51928*t51928)*t51955*t51956*exp(-t51914)*(3.0/2.0))/t51920)*(1.0/2.0)-c0*t51965*t51969*dirac(t51911-t51958)*(t51933*t51934+t51950*t51942*t51947)*(1.0/2.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t51973 = tspi_m13*tspi_m13;
                double t51974 = 1.0/pow(rho_a,1.0/3.0);
                double t51975 = a2*a2;
                double t51976 = gamma_aa*gamma_aa;
                double t51977 = 1.0/pow(rho_a,1.6E1/3.0);
                double t51978 = t51973*t51973;
                double t51979 = c*t51974;
                double t51980 = a4*a4;
                double t51981 = 1.0/c;
                double t51982 = 1.0/pow(rho_a,7.0/3.0);
                double t51983 = sqrt(t51979);
                double t51984 = t51980*t51976*t51977*t51978*2.0;
                double t51985 = exp(t51984);
                double t51986 = t51980*t51976*t51977*t51978;
                double t51987 = t51986+1.0;
                double t51988 = a5*gamma_aa*t51981*t51973*t51982;
                double t51989 = t51988+1.0;
                double t52000 = raa2*t51983;
                double t51990 = exp(-t52000);
                double t51991 = t51990-1.0;
                double t51992 = kaa2*t51991;
                double t51993 = pow(t51979,2.0/5.0);
                double t52001 = raa1*t51993;
                double t51994 = exp(-t52001);
                double t51995 = t51994-1.0;
                double t51996 = kaa1*t51995;
                double t51997 = -kaa0+t51992+t51996;
                double t51998 = 1.0/(t51997*t51997);
                double t51999 = 1.0/t51987;
                double t52002 = 1.0/pow(rho_a,4.0/3.0);
                double t52003 = c*c0*t51974*t51985*t51989*t51998*(2.0/3.0);
                double t52004 = 1.0/(t51987*t51987);
                double t52005 = sqrt(t52003);
                double t52006 = 1.0/pow(rho_a,1.1E1/3.0);
                double t52007 = 1.0/sqrt(t51979);
                double t52008 = c*kaa2*raa2*t51990*t52002*t52007*(1.0/6.0);
                double t52009 = 1.0/pow(t51979,3.0/5.0);
                double t52010 = c*kaa1*raa1*t51994*t52002*t52009*(2.0/1.5E1);
                double t52011 = t52010+t52008;
                double t52012 = 1.0/(t51997*t51997*t51997);
                double t52013 = 1.0/pow(rho_a,2.0E1/3.0);
                double t52014 = c*c0*t51974*t51985*t51989*t51998*t52004*(2.0/3.0);
                double t52015 = exp(t52014);
                double t52016 = Ei(-t52014);
                double t52017 = c*c0*t51985*t51989*t51998*t52002*t52004*(2.0/9.0);
                double t52018 = a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52006*(1.4E1/9.0);
                double t52019 = c*c0*t51974*t51985*t51989*t52011*t52012*t52004*(4.0/3.0);
                double t52020 = 1.0/(t51987*t51987*t51987);
                double t52021 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52013*(6.4E1/9.0);
                double t52022 = t51999*t52005*6.0;
                double t52023 = c*c0*t51974*t51985*t51989*t51998*t52004*4.0;
                double t52024 = t52022+t52023+3.0;
                double t52025 = 1.0/t52024;
                double t52026 = 1.0/sqrt(t52003);
                double t52027 = c*c;
                double t52028 = 1.0/pow(rho_a,8.0/3.0);
                double t52029 = c*c0*t51985*t51989*t51998*t52002*(2.0/9.0);
                double t52030 = a5*c0*gamma_aa*t51973*t51985*t51998*t52006*(1.4E1/9.0);
                double t52031 = c*c0*t51974*t51985*t51989*t52011*t52012*(4.0/3.0);
                double t52032 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52013*(6.4E1/9.0);
                double t52033 = t52030+t52031+t52032+t52029;
                double t52034 = t51980*t51980;
                double t52035 = t51976*t51976;
                double t52036 = t51978*t51978;
                double t52037 = 1.0/pow(rho_a,1.9E1/3.0);
                double t52038 = raa2*raa2;
                double t52039 = c*kaa2*t51990*t51982*t52038*(1.0/3.6E1);
                double t52040 = raa1*raa1;
                double t52041 = 1.0/pow(t51979,6.0/5.0);
                double t52042 = kaa1*t51994*t52040*t52041*t52027*t52028*(4.0/2.25E2);
                double t52043 = 1.0/pow(t51979,3.0/2.0);
                double t52044 = kaa2*raa2*t51990*t52043*t52027*t52028*(1.0/3.6E1);
                double t52045 = 1.0/pow(t51979,8.0/5.0);
                double t52046 = kaa1*raa1*t51994*t52027*t52045*t52028*(2.0/7.5E1);
                double t52056 = c*kaa2*raa2*t51990*t51982*t52007*(2.0/9.0);
                double t52057 = c*kaa1*raa1*t51982*t51994*t52009*(8.0/4.5E1);
                double t52047 = t52042+t52044+t52046-t52056+t52039-t52057;
                double t52048 = t52011*t52011;
                double t52049 = 1.0/(t51997*t51997*t51997*t51997);
                double t52050 = 1.0/pow(rho_a,1.4E1/3.0);
                double t52051 = 1.0/pow(rho_a,1.0E1);
                double t52052 = 1.0/pow(rho_a,1.3E1);
                double t52053 = 1.0/pow(rho_a,2.3E1/3.0);
                double t52055 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52013*(6.4E1/9.0);
                double t52054 = t52021+t52017+t52018+t52019-t52055;
                double t52058 = t52054*t52054;
                double t52059 = 1.0/(t51987*t51987*t51987*t51987);
                double t52060 = c*c0*t51982*t51985*t51989*t51998*t52004*(8.0/2.7E1);
                double t52061 = c*c0*t51974*t51985*t51989*t52004*t52048*t52049*4.0;
                double t52062 = a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52050*(5.6E1/9.0);
                double t52063 = c*c0*t51985*t51989*t52002*t52011*t52012*t52004*(8.0/9.0);
                double t52064 = a5*c0*gamma_aa*t51973*t51985*t52011*t52012*t52004*t52006*(5.6E1/9.0);
                double t52065 = a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52004*t52051*(8.96E2/2.7E1);
                double t52066 = c*c0*t51985*t51989*t51998*t52004*t52034*t52052*t52035*t52036*(2.048E3/2.7E1);
                double t52067 = c*c0*t51985*t51989*t51998*t52034*t52052*t52035*t52036*t52059*(1.024E3/9.0);
                double t52068 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52053*(4.48E2/9.0);
                double t52069 = c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52012*t52004*t52013*(2.56E2/9.0);
                double t52117 = c*c0*t51974*t51985*t51989*t52012*t52004*t52047*(4.0/3.0);
                double t52118 = a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52020*t52051*(8.96E2/2.7E1);
                double t52119 = c*c0*t51985*t51989*t51998*t52020*t52034*t52052*t52035*t52036*(4.096E3/2.7E1);
                double t52120 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52053*(4.48E2/9.0);
                double t52121 = c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52020*t52012*t52013*(2.56E2/9.0);
                double t52070 = -t52120-t52121+t52060+t52061+t52062+t52063-t52117+t52064-t52118+t52065-t52119+t52066+t52067+t52068+t52069;
                double t52071 = c*c0*t51974*t51985*t51989*t51998*t52004*t52015*t52016*(2.0/3.0);
                double t52072 = t52071+1.0;
                double t52073 = t51999*t52033*t52026*2.0;
                double t52074 = c*c0*t51985*t51989*t51998*t52002*t52004*(8.0/9.0);
                double t52075 = a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52006*(5.6E1/9.0);
                double t52076 = c*c0*t51974*t51985*t51989*t52011*t52012*t52004*(1.6E1/3.0);
                double t52077 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52013*(2.56E2/9.0);
                double t52139 = t51980*t51976*t51978*t52004*t52005*t52037*(6.4E1/3.0);
                double t52140 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52013*(2.56E2/9.0);
                double t52078 = -t52140+t52073+t52074+t52075+t52076-t52139+t52077;
                double t52079 = 1.0/(t52024*t52024);
                double t52080 = t51999*t52005*4.0;
                double t52081 = c*c0*t51974*t51985*t51989*t51998*t52004*(8.0/3.0);
                double t52082 = t52080+t52081+6.0;
                double t52083 = t51999*t52033*t52026*3.0;
                double t52084 = c*c0*t51985*t51989*t51998*t52002*t52004*(4.0/3.0);
                double t52085 = a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52006*(2.8E1/3.0);
                double t52086 = c*c0*t51974*t51985*t51989*t52011*t52012*t52004*8.0;
                double t52087 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52013*(1.28E2/3.0);
                double t52108 = t51980*t51976*t51978*t52004*t52005*t52037*3.2E1;
                double t52109 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52013*(1.28E2/3.0);
                double t52088 = -t52108-t52109+t52083+t52084+t52085+t52086+t52087;
                double t52089 = c*c0*t51985*t51989*t51998*t52002*t52004*t52015*t52016*(2.0/9.0);
                double t52090 = c*c0*t51974*t51985*t51989*t52011*t52012*t52004*t52015*t52016*(4.0/3.0);
                double t52091 = c*c0*t51974*t51985*t51989*t51998*t52004*t52015*t52016*t52054*(2.0/3.0);
                double t52092 = a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52006*t52015*t52016*(1.4E1/9.0);
                double t52093 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52013*t52015*t52016*(6.4E1/9.0);
                double t52094 = c*c0*t51982*t51985*t51989*t51998*(8.0/2.7E1);
                double t52095 = a5*c0*gamma_aa*t51973*t51985*t51998*t52050*(5.6E1/9.0);
                double t52096 = c*c0*t51985*t51989*t52002*t52011*t52012*(8.0/9.0);
                double t52097 = c*c0*t51974*t51985*t51989*t52048*t52049*4.0;
                double t52098 = a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52051*(8.96E2/2.7E1);
                double t52099 = a5*c0*gamma_aa*t51973*t51985*t52011*t52012*t52006*(5.6E1/9.0);
                double t52100 = c*c0*t51985*t51989*t51998*t52034*t52052*t52035*t52036*(2.048E3/2.7E1);
                double t52101 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52053*(4.48E2/9.0);
                double t52102 = c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52012*t52013*(2.56E2/9.0);
                double t52103 = t52100+t52101+t52102+t52094+t52095+t52096+t52097+t52098+t52099-c*c0*t51974*t51985*t51989*t52012*t52047*(4.0/3.0);
                double t52104 = t52033*t52033;
                double t52105 = 1.0/pow(t52003,3.0/2.0);
                double t52106 = 1.0/pow(rho_a,2.2E1/3.0);
                double t52107 = 1.0/pow(rho_a,3.8E1/3.0);
                double t52110 = 1.0/pow(rho_a,2.0/3.0);
                double t52111 = 1.0/t51989;
                double t52112 = 1.0/c0;
                double t52113 = exp(-t51984);
                double t52114 = t51987*t51987;
                double t52115 = t51997*t51997;
                double t52116 = pow(rho_a,1.0/3.0);
                double t52122 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52141 = c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52013*t52015*t52016*(6.4E1/9.0);
                double t52123 = t52021-t52141+t52017+t52018+t52090+t52019-t52055+t52091+t52092+t52093+t52089;
                double t52124 = t51975*t51976*t51977*t51978;
                double t52125 = pow(t51979,4.0/5.0);
                double t52143 = rab1*t52125;
                double t52126 = exp(-t52143);
                double t52127 = t52126-1.0;
                double t52144 = kab1*t52127;
                double t52128 = kab0-t52144;
                double t52129 = a3*gamma_aa*t51981*t51973*t51982;
                double t52130 = t52129+1.0;
                double t52131 = 1.0/sqrt(t52130);
                double t52132 = a1*gamma_aa*t51973*t52028;
                double t52133 = t52132+t52124+1.0;
                double t52134 = k1*t51983;
                double t52135 = c*k2*t51974;
                double t52136 = t52134+t52135;
                double t52137 = 1.0/(t52136*t52136);
                double t52146 = t52110*t52027*t52137;
                double t52138 = exp(-t52146);
                double t52142 = exp(-t52124);
                double t52145 = t52131*t52133*t52142*t52128*1.0E5;
                double t52147 = t52025*t52072*t52078;
                double t52148 = t52015*t52016*t52054;
                double t52149 = t52123*t52025*t52082;
                double t52150 = t51981*t52111*t52112*t52113*t52114*t52115*t52116*t52054*(3.0/2.0);
                double t52288 = t52072*t52082*t52079*t52088;
                double t52151 = t52150+t52147+t52148+t52149-t52288;
                double t52152 = 1.0/pow(rho_a,1.0E1/3.0);
                double t52153 = c*c0*t51974*(2.0/3.0);
                double t52154 = 1.0/(t52136*t52136*t52136);
                double t52155 = c*k2*t52002*(1.0/3.0);
                double t52156 = c*k1*t52002*t52007*(1.0/6.0);
                double t52157 = t52155+t52156;
                double t52158 = 1.0/pow(rho_a,5.0/3.0);
                double t52159 = -t52153+t52145;
                double t52160 = heaviside(t52159);
                double t52161 = t52015*t52016;
                double t52162 = t52025*t52072*t52082;
                double t52163 = t52161+t52162;
                double t52164 = t52027*t52137*t52158*(2.0/3.0);
                double t52178 = t52110*t52027*t52154*t52157*2.0;
                double t52165 = t52164-t52178;
                double t52166 = t52153-t52145;
                double t52167 = c*c0*t52002*(2.0/9.0);
                double t52168 = t51975*t51976*t51978*t52037*(1.6E1/3.0);
                double t52169 = a1*gamma_aa*t51973*t52006*(8.0/3.0);
                double t52170 = t52168+t52169;
                double t52171 = t51975*t51976*t51978*t52131*t52133*t52142*t52037*t52128*(1.6E6/3.0);
                double t52172 = 1.0/pow(t51979,1.0/5.0);
                double t52173 = 1.0/pow(t52130,3.0/2.0);
                double t52174 = a3*gamma_aa*t51981*t51973*t52133*t52142*t52152*t52128*t52173*(3.5E5/3.0);
                double t52179 = t52131*t52142*t52170*t52128*1.0E5;
                double t52180 = c*kab1*rab1*t52002*t52131*t52133*t52142*t52126*t52172*(8.0E4/3.0);
                double t52175 = t52171-t52180+t52174+t52167-t52179;
                double t52176 = dirac(t52166);
                double t52177 = 1.0/(c*c);
                double t52181 = t51975*t51976*t51977*t51978*2.0;
                double t52182 = exp(t52181);
                double t52183 = 1.0/(t52128*t52128);
                double t52184 = 1.0/(t52133*t52133);
                double t52185 = c*c0*t51974*t52130*t52182*t52183*t52184*(2.0/3.0);
                double t52186 = sqrt(t52185);
                double t52187 = 1.0/rho_a;
                double t52188 = c*c0*t52002*t52130*t52182*t52183*t52184*(2.0/9.0);
                double t52189 = 1.0/(t52133*t52133*t52133);
                double t52190 = a3*c0*gamma_aa*t51973*t52006*t52182*t52183*t52184*(1.4E1/9.0);
                double t52191 = c*c0*t51975*t51976*t51978*t52013*t52130*t52182*t52183*t52184*(6.4E1/9.0);
                double t52192 = 1.0/(t52128*t52128*t52128);
                double t52194 = c*c0*t51974*t52130*t52170*t52182*t52183*t52189*(4.0/3.0);
                double t52195 = c0*kab1*rab1*t52130*t52027*t52126*t52172*t52182*t52192*t52184*t52158*(1.6E1/4.5E1);
                double t52193 = t52190+t52191-t52194-t52195+t52188;
                double t52196 = t51975*t51976*t51978*t52106*(3.04E2/9.0);
                double t52197 = a1*gamma_aa*t51973*t52050*(8.8E1/9.0);
                double t52198 = t52196+t52197;
                double t52199 = exp(t52185);
                double t52200 = Ei(-t52185);
                double t52201 = c*c0*t51982*t52130*t52182*t52183*t52184*(8.0/2.7E1);
                double t52202 = t52170*t52170;
                double t52203 = 1.0/(t52133*t52133*t52133*t52133);
                double t52204 = c*c0*t51974*t52130*t52202*t52203*t52182*t52183*4.0;
                double t52205 = a3*c0*gamma_aa*t51973*t52050*t52182*t52183*t52184*(5.6E1/9.0);
                double t52206 = a3*c0*gamma_aa*t51973*t51975*t51976*t51978*t52051*t52182*t52183*t52184*(8.96E2/2.7E1);
                double t52207 = t51975*t51975;
                double t52208 = rab1*rab1;
                double t52209 = 1.0/(rho_a*rho_a*rho_a);
                double t52210 = 1.0/pow(t51979,2.0/5.0);
                double t52211 = t52193*t52193;
                double t52212 = c*c0*t52130*t52052*t52035*t52036*t52207*t52182*t52183*t52184*(2.048E3/2.7E1);
                double t52213 = c*c0*t51975*t51976*t51978*t52130*t52053*t52182*t52183*t52184*(4.48E2/9.0);
                double t52214 = c*c0*kab1*t52210*t52130*t52027*t52126*t52208*t52182*t52209*t52192*t52184*(6.4E1/6.75E2);
                double t52215 = kab1*kab1;
                double t52222 = rab1*t52125*2.0;
                double t52216 = exp(-t52222);
                double t52217 = 1.0/(t52128*t52128*t52128*t52128);
                double t52218 = c*c0*t52210*t52130*t52215*t52027*t52216*t52208*t52217*t52182*t52209*t52184*(6.4E1/2.25E2);
                double t52219 = c*c0*kab1*rab1*t52130*t52041*t52027*t52126*t52182*t52209*t52192*t52184*(1.6E1/6.75E2);
                double t52220 = c0*kab1*rab1*t52130*t52170*t52027*t52126*t52172*t52182*t52192*t52158*t52189*(6.4E1/4.5E1);
                double t52221 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52223 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52224 = t52186*6.0;
                double t52225 = c*c0*t51974*t52130*t52182*t52183*t52184*4.0;
                double t52226 = t52224+t52225+3.0;
                double t52227 = 1.0/t52226;
                double t52229 = c*c0*t52002*t52130*t52170*t52182*t52183*t52189*(8.0/9.0);
                double t52230 = c*c0*t51974*t52130*t52182*t52183*t52189*t52198*(4.0/3.0);
                double t52231 = a3*c0*gamma_aa*t51973*t52006*t52170*t52182*t52183*t52189*(5.6E1/9.0);
                double t52232 = c*c0*t51975*t51976*t51978*t52013*t52130*t52170*t52182*t52183*t52189*(2.56E2/9.0);
                double t52233 = c0*kab1*rab1*t52130*t52027*t52126*t52028*t52172*t52182*t52192*t52184*(3.2E1/4.5E1);
                double t52234 = a3*c*c0*gamma_aa*kab1*rab1*t51973*t52221*t52126*t52172*t52182*t52192*t52184*(2.24E2/1.35E2);
                double t52235 = c0*kab1*rab1*t51975*t51976*t51978*t52130*t52223*t52027*t52126*t52172*t52182*t52192*t52184*(1.024E3/1.35E2);
                double t52228 = t52201+t52220+t52212-t52230+t52204+t52213-t52231+t52205+t52214-t52232+t52206-t52233-t52234-t52235+t52218+t52219-t52229;
                double t52236 = 1.0/sqrt(t52185);
                double t52237 = t52186*4.0;
                double t52238 = c*c0*t51974*t52130*t52182*t52183*t52184*(8.0/3.0);
                double t52239 = t52237+t52238+6.0;
                double t52240 = c*c0*t52002*t52200*t52130*t52182*t52183*t52184*t52199*(2.0/9.0);
                double t52241 = a3*c0*gamma_aa*t51973*t52200*t52006*t52182*t52183*t52184*t52199*(1.4E1/9.0);
                double t52242 = c*c0*t51974*t52200*t52130*t52182*t52183*t52184*t52193*t52199*(2.0/3.0);
                double t52243 = c*c0*t51975*t51976*t51978*t52200*t52013*t52130*t52182*t52183*t52184*t52199*(6.4E1/9.0);
                double t52265 = c*c0*t51974*t52200*t52130*t52170*t52182*t52183*t52189*t52199*(4.0/3.0);
                double t52266 = c0*kab1*rab1*t52200*t52130*t52027*t52126*t52172*t52182*t52192*t52184*t52158*t52199*(1.6E1/4.5E1);
                double t52244 = t52240+t52241+t52242+t52243+t52190+t52191-t52265-t52194-t52266-t52195+t52188;
                double t52245 = c*c0*t51974*t52200*t52130*t52182*t52183*t52184*t52199*(2.0/3.0);
                double t52246 = t52245+1.0;
                double t52247 = 1.0/(t52226*t52226);
                double t52248 = 1.0/pow(t52185,3.0/2.0);
                double t52249 = t52236*t52193*3.0;
                double t52250 = c*c0*t52002*t52130*t52182*t52183*t52184*(4.0/3.0);
                double t52251 = a3*c0*gamma_aa*t51973*t52006*t52182*t52183*t52184*(2.8E1/3.0);
                double t52252 = c*c0*t51975*t51976*t51978*t52013*t52130*t52182*t52183*t52184*(1.28E2/3.0);
                double t52254 = c*c0*t51974*t52130*t52170*t52182*t52183*t52189*8.0;
                double t52255 = c0*kab1*rab1*t52130*t52027*t52126*t52172*t52182*t52192*t52184*t52158*(3.2E1/1.5E1);
                double t52253 = t52250+t52251+t52252-t52254-t52255+t52249;
                double t52256 = t52236*t52193*2.0;
                double t52257 = c*c0*t52002*t52130*t52182*t52183*t52184*(8.0/9.0);
                double t52258 = a3*c0*gamma_aa*t51973*t52006*t52182*t52183*t52184*(5.6E1/9.0);
                double t52259 = c*c0*t51975*t51976*t51978*t52013*t52130*t52182*t52183*t52184*(2.56E2/9.0);
                double t52267 = c*c0*t51974*t52130*t52170*t52182*t52183*t52189*(1.6E1/3.0);
                double t52268 = c0*kab1*rab1*t52130*t52027*t52126*t52172*t52182*t52192*t52184*t52158*(6.4E1/4.5E1);
                double t52260 = t52256+t52257+t52258-t52267+t52259-t52268;
                double t52261 = 1.0/t52130;
                double t52262 = exp(-t52181);
                double t52263 = t52128*t52128;
                double t52264 = t52133*t52133;
                double t52269 = dirac(t52166,1.0);
                double t52270 = t52175*t52175;
                double t52271 = t52200*t52199;
                double t52272 = t52227*t52246*t52239;
                double t52273 = t52271+t52272;
                double t52274 = c*c0*t51982*(8.0/2.7E1);
                double t52275 = t51975*t51976*t51978*t52131*t52106*t52133*t52142*t52128*(3.04E7/9.0);
                double t52276 = t51975*t51976*t51978*t52131*t52142*t52170*t52037*t52128*(3.2E6/3.0);
                double t52277 = kab1*t52210*t52131*t52133*t52142*t52027*t52126*t52028*t52208*(6.4E4/9.0);
                double t52278 = a3*a3;
                double t52279 = 1.0/pow(t52130,5.0/2.0);
                double t52280 = 1.0/pow(rho_a,1.3E1/3.0);
                double t52281 = a3*gamma_aa*t51981*t51973*t52133*t52142*t52280*t52128*t52173*(3.5E6/9.0);
                double t52282 = a3*gamma_aa*t51981*t51973*t52142*t52152*t52170*t52128*t52173*(7.0E5/3.0);
                double t52283 = kab1*rab1*t52041*t52131*t52133*t52142*t52027*t52126*t52028*(1.6E4/9.0);
                double t52284 = 1.0/pow(rho_a,2.9E1/3.0);
                double t52285 = a3*gamma_aa*kab1*rab1*t51973*t52050*t52133*t52142*t52126*t52172*t52173*(5.6E5/9.0);
                double t52286 = c*kab1*rab1*t51975*t51976*t51978*t52131*t52133*t52142*t52053*t52126*t52172*(2.56E6/9.0);
                double t52287 = t52281+t52282+t52274+t52283+t52275+t52276+t52285+t52277+t52286-t52131*t52142*t52128*t52198*1.0E5-t52131*t52133*t52142*t52035*t52107*t52036*t52207*t52128*(2.56E7/9.0)-c*kab1*rab1*t51982*t52131*t52133*t52142*t52126*t52172*(3.2E5/9.0)-c*kab1*rab1*t52002*t52131*t52142*t52170*t52126*t52172*(1.6E5/3.0)-t51976*t51978*t52013*t52133*t52142*t52128*t52177*t52278*t52279*(1.225E6/3.0)-a3*gamma_aa*t51981*t51973*t51975*t51976*t51978*t52133*t52142*t52128*t52173*t52284*(1.12E7/9.0);
                v_rho_a_rho_a[Q] += scale * -rho_b*(c0*t52160*(t52227*t52239*(t52201+t52211+t52220+t52212-t52230+t52204+t52213-t52231+t52205+t52214-t52232+t52206-t52233-t52234-t52235+t52218+t52219-t52229+t52193*t52187*(1.0/3.0)-(t52170*t52193*2.0)/t52133+t51975*t51976*t51978*t52037*t52193*(3.2E1/3.0)+a3*gamma_aa*t51981*t51973*t52152*t52261*t52193*(7.0/3.0)-(c*kab1*rab1*t52002*t52126*t52172*t52193*(8.0/1.5E1))/t52128+c*c0*t51982*t52200*t52130*t52182*t52183*t52184*t52199*(8.0/2.7E1)+a3*c0*gamma_aa*t51973*t52200*t52050*t52182*t52183*t52184*t52199*(5.6E1/9.0)+c*c0*t51974*t52200*t52130*t52202*t52203*t52182*t52183*t52199*4.0+c*c0*t51974*t52200*t52130*t52211*t52182*t52183*t52184*t52199*(2.0/3.0)+c*c0*t51974*t52200*t52130*t52182*t52183*t52228*t52184*t52199*(2.0/3.0)-c*c0*t51974*t52200*t52130*t52182*t52183*t52189*t52198*t52199*(4.0/3.0)-c*c0*t52002*t52200*t52130*t52170*t52182*t52183*t52189*t52199*(8.0/9.0)+c*c0*t52002*t52200*t52130*t52182*t52183*t52184*t52193*t52199*(4.0/9.0)-a3*c0*gamma_aa*t51973*t52200*t52006*t52170*t52182*t52183*t52189*t52199*(5.6E1/9.0)+a3*c0*gamma_aa*t51973*t52200*t52006*t52182*t52183*t52184*t52193*t52199*(2.8E1/9.0)-c*c0*t51974*t52200*t52130*t52170*t52182*t52183*t52193*t52189*t52199*(8.0/3.0)+c*c0*t51975*t51976*t51978*t52200*t52130*t52053*t52182*t52183*t52184*t52199*(4.48E2/9.0)+c*c0*t52200*t52130*t52052*t52035*t52036*t52207*t52182*t52183*t52184*t52199*(2.048E3/2.7E1)+a3*c0*gamma_aa*t51973*t51975*t51976*t51978*t52200*t52051*t52182*t52183*t52184*t52199*(8.96E2/2.7E1)-c*c0*t51975*t51976*t51978*t52200*t52013*t52130*t52170*t52182*t52183*t52189*t52199*(2.56E2/9.0)+c*c0*t51975*t51976*t51978*t52200*t52013*t52130*t52182*t52183*t52184*t52193*t52199*(1.28E2/9.0)-c0*kab1*rab1*t52200*t52130*t52027*t52126*t52028*t52172*t52182*t52192*t52184*t52199*(3.2E1/4.5E1)+c*c0*kab1*rab1*t52200*t52130*t52041*t52027*t52126*t52182*t52209*t52192*t52184*t52199*(1.6E1/6.75E2)+c*c0*kab1*t52200*t52210*t52130*t52027*t52126*t52208*t52182*t52209*t52192*t52184*t52199*(6.4E1/6.75E2)+c*c0*t52200*t52210*t52130*t52215*t52027*t52216*t52208*t52217*t52182*t52209*t52184*t52199*(6.4E1/2.25E2)+c0*kab1*rab1*t52200*t52130*t52170*t52027*t52126*t52172*t52182*t52192*t52158*t52189*t52199*(6.4E1/4.5E1)-c0*kab1*rab1*t52200*t52130*t52027*t52126*t52172*t52182*t52192*t52184*t52193*t52158*t52199*(3.2E1/4.5E1)-a3*c*c0*gamma_aa*kab1*rab1*t51973*t52200*t52221*t52126*t52172*t52182*t52192*t52184*t52199*(2.24E2/1.35E2)-c0*kab1*rab1*t51975*t51976*t51978*t52200*t52130*t52223*t52027*t52126*t52172*t52182*t52192*t52184*t52199*(1.024E3/1.35E2))+t52200*t52211*t52199+t52260*t52244*t52227*2.0+t52200*t52228*t52199+t52227*t52246*(-t52211*t52248+t52236*t52228*2.0+c*c0*t51982*t52130*t52182*t52183*t52184*(3.2E1/2.7E1)+a3*c0*gamma_aa*t51973*t52050*t52182*t52183*t52184*(2.24E2/9.0)+c*c0*t51974*t52130*t52202*t52203*t52182*t52183*1.6E1-c*c0*t51974*t52130*t52182*t52183*t52189*t52198*(1.6E1/3.0)-c*c0*t52002*t52130*t52170*t52182*t52183*t52189*(3.2E1/9.0)-a3*c0*gamma_aa*t51973*t52006*t52170*t52182*t52183*t52189*(2.24E2/9.0)+c*c0*t51975*t51976*t51978*t52130*t52053*t52182*t52183*t52184*(1.792E3/9.0)+c*c0*t52130*t52052*t52035*t52036*t52207*t52182*t52183*t52184*(8.192E3/2.7E1)+a3*c0*gamma_aa*t51973*t51975*t51976*t51978*t52051*t52182*t52183*t52184*(3.584E3/2.7E1)-c*c0*t51975*t51976*t51978*t52013*t52130*t52170*t52182*t52183*t52189*(1.024E3/9.0)-c0*kab1*rab1*t52130*t52027*t52126*t52028*t52172*t52182*t52192*t52184*(1.28E2/4.5E1)+c*c0*kab1*rab1*t52130*t52041*t52027*t52126*t52182*t52209*t52192*t52184*(6.4E1/6.75E2)+c*c0*kab1*t52210*t52130*t52027*t52126*t52208*t52182*t52209*t52192*t52184*(2.56E2/6.75E2)+c*c0*t52210*t52130*t52215*t52027*t52216*t52208*t52217*t52182*t52209*t52184*(2.56E2/2.25E2)+c0*kab1*rab1*t52130*t52170*t52027*t52126*t52172*t52182*t52192*t52158*t52189*(2.56E2/4.5E1)-a3*c*c0*gamma_aa*kab1*rab1*t51973*t52221*t52126*t52172*t52182*t52192*t52184*(8.96E2/1.35E2)-c0*kab1*rab1*t51975*t51976*t51978*t52130*t52223*t52027*t52126*t52172*t52182*t52192*t52184*(4.096E3/1.35E2))-t52260*t52253*t52246*t52247*2.0-t52244*t52253*t52247*t52239*2.0-t52246*t52247*t52239*(t52211*t52248*(-3.0/2.0)+t52236*t52228*3.0+c*c0*t51982*t52130*t52182*t52183*t52184*(1.6E1/9.0)+a3*c0*gamma_aa*t51973*t52050*t52182*t52183*t52184*(1.12E2/3.0)+c*c0*t51974*t52130*t52202*t52203*t52182*t52183*2.4E1-c*c0*t51974*t52130*t52182*t52183*t52189*t52198*8.0-c*c0*t52002*t52130*t52170*t52182*t52183*t52189*(1.6E1/3.0)-a3*c0*gamma_aa*t51973*t52006*t52170*t52182*t52183*t52189*(1.12E2/3.0)+c*c0*t51975*t51976*t51978*t52130*t52053*t52182*t52183*t52184*(8.96E2/3.0)+c*c0*t52130*t52052*t52035*t52036*t52207*t52182*t52183*t52184*(4.096E3/9.0)+a3*c0*gamma_aa*t51973*t51975*t51976*t51978*t52051*t52182*t52183*t52184*(1.792E3/9.0)-c*c0*t51975*t51976*t51978*t52013*t52130*t52170*t52182*t52183*t52189*(5.12E2/3.0)-c0*kab1*rab1*t52130*t52027*t52126*t52028*t52172*t52182*t52192*t52184*(6.4E1/1.5E1)+c*c0*kab1*rab1*t52130*t52041*t52027*t52126*t52182*t52209*t52192*t52184*(3.2E1/2.25E2)+c*c0*kab1*t52210*t52130*t52027*t52126*t52208*t52182*t52209*t52192*t52184*(1.28E2/2.25E2)+c*c0*t52210*t52130*t52215*t52027*t52216*t52208*t52217*t52182*t52209*t52184*(1.28E2/7.5E1)+c0*kab1*rab1*t52130*t52170*t52027*t52126*t52172*t52182*t52192*t52158*t52189*(1.28E2/1.5E1)-a3*c*c0*gamma_aa*kab1*rab1*t51973*t52221*t52126*t52172*t52182*t52192*t52184*(4.48E2/4.5E1)-c0*kab1*rab1*t51975*t51976*t51978*t52130*t52223*t52027*t52126*t52172*t52182*t52192*t52184*(2.048E3/4.5E1))+1.0/(t52226*t52226*t52226)*(t52253*t52253)*t52246*t52239*2.0+t51981*t52112*t52211*t52116*t52261*t52262*t52263*t52264*(3.0/2.0)-t51981*t52110*t52112*t52261*t52262*t52263*t52264*t52193*(1.0/2.0)+t51981*t52112*t52116*t52261*t52262*t52263*t52228*t52264*(3.0/2.0)+t51981*t52112*t52133*t52116*t52170*t52261*t52262*t52263*t52193*3.0+kab1*rab1*t52112*t52126*t52261*t52172*t52262*t52128*t52264*t52193*t52187*(4.0/5.0)-t51981*t51975*t51976*t51978*t52112*t52122*t52261*t52262*t52263*t52264*t52193*1.6E1-a3*gamma_aa*t51973*t52112*1.0/(t52130*t52130)*t52262*t52209*t52263*t52264*t52193*t52177*(7.0/2.0))*(-1.0/2.0)+c0*t52270*t52273*t52269*(1.0/2.0)+c0*t52273*t52176*t52287*(1.0/2.0)+c0*t52175*t52176*(t52260*t52227*t52246+t52200*t52193*t52199+t52244*t52227*t52239-t52253*t52246*t52247*t52239+t51981*t52112*t52116*t52261*t52262*t52263*t52264*t52193*(3.0/2.0)))-rho_a*(c0*t52160*t52138*(t52025*t52072*(-t51999*t52104*t52105+t51999*t52103*t52026*2.0-t51980*t51976*t51978*t52004*t52005*t52106*(1.216E3/9.0)+t52020*t52005*t52034*t52035*t52107*t52036*(2.048E3/9.0)+c*c0*t51982*t51985*t51989*t51998*t52004*(3.2E1/2.7E1)-t51980*t51976*t51978*t52004*t52033*t52026*t52037*(6.4E1/3.0)+a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52050*(2.24E2/9.0)-c*c0*t51974*t51985*t51989*t52012*t52004*t52047*(1.6E1/3.0)+c*c0*t51974*t51985*t51989*t52004*t52048*t52049*1.6E1+c*c0*t51985*t51989*t52002*t52011*t52012*t52004*(3.2E1/9.0)+a5*c0*gamma_aa*t51973*t51985*t52011*t52012*t52004*t52006*(2.24E2/9.0)-c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52053*(1.792E3/9.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52053*(1.792E3/9.0)-c*c0*t51985*t51989*t51998*t52020*t52034*t52052*t52035*t52036*(1.6384E4/2.7E1)+c*c0*t51985*t51989*t51998*t52004*t52034*t52052*t52035*t52036*(8.192E3/2.7E1)+c*c0*t51985*t51989*t51998*t52034*t52052*t52035*t52036*t52059*(4.096E3/9.0)-a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52020*t52051*(3.584E3/2.7E1)+a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52004*t52051*(3.584E3/2.7E1)-c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52020*t52012*t52013*(1.024E3/9.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52012*t52004*t52013*(1.024E3/9.0))+t52015*t52016*t52070+t52015*t52016*t52058+t52123*t52025*t52078*2.0+t52025*t52082*(-t52120-t52121+t52060+t52061+t52062+t52063-t52117+t52064-t52118+t52065-t52119+t52066+t52058+t52067+t52068+t52069+t52054*t52187*(1.0/3.0)+(t52011*t52054*2.0)/t51997+t51980*t51976*t51978*t52054*t52037*(3.2E1/3.0)-t51980*t51976*t51978*t51999*t52054*t52037*(3.2E1/3.0)+a5*gamma_aa*t51981*t51973*t52111*t52152*t52054*(7.0/3.0)+c*c0*t51982*t51985*t51989*t51998*t52004*t52015*t52016*(8.0/2.7E1)+a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52050*t52015*t52016*(5.6E1/9.0)+c*c0*t51974*t51985*t51989*t51998*t52004*t52015*t52016*t52070*(2.0/3.0)+c*c0*t51974*t51985*t51989*t51998*t52004*t52015*t52016*t52058*(2.0/3.0)-c*c0*t51974*t51985*t51989*t52012*t52004*t52015*t52016*t52047*(4.0/3.0)+c*c0*t51985*t51989*t51998*t52002*t52004*t52015*t52016*t52054*(4.0/9.0)+c*c0*t51974*t51985*t51989*t52004*t52015*t52016*t52048*t52049*4.0+c*c0*t51985*t51989*t52002*t52011*t52012*t52004*t52015*t52016*(8.0/9.0)+a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52006*t52015*t52016*t52054*(2.8E1/9.0)+a5*c0*gamma_aa*t51973*t51985*t52011*t52012*t52004*t52006*t52015*t52016*(5.6E1/9.0)+c*c0*t51974*t51985*t51989*t52011*t52012*t52004*t52015*t52016*t52054*(8.0/3.0)-c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52015*t52016*t52053*(4.48E2/9.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52015*t52016*t52053*(4.48E2/9.0)-c*c0*t51985*t51989*t51998*t52020*t52015*t52016*t52034*t52052*t52035*t52036*(4.096E3/2.7E1)+c*c0*t51985*t51989*t51998*t52004*t52015*t52016*t52034*t52052*t52035*t52036*(2.048E3/2.7E1)+c*c0*t51985*t51989*t51998*t52015*t52016*t52034*t52052*t52035*t52036*t52059*(1.024E3/9.0)-a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52020*t52015*t52051*t52016*(8.96E2/2.7E1)+a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52004*t52015*t52051*t52016*(8.96E2/2.7E1)-c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52013*t52015*t52016*t52054*(1.28E2/9.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52013*t52015*t52016*t52054*(1.28E2/9.0)-c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52020*t52012*t52013*t52015*t52016*(2.56E2/9.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52012*t52004*t52013*t52015*t52016*(2.56E2/9.0))-t52072*t52082*t52079*(t51999*t52104*t52105*(-3.0/2.0)+t51999*t52103*t52026*3.0-t51980*t51976*t51978*t52004*t52005*t52106*(6.08E2/3.0)+t52020*t52005*t52034*t52035*t52107*t52036*(1.024E3/3.0)+c*c0*t51982*t51985*t51989*t51998*t52004*(1.6E1/9.0)-t51980*t51976*t51978*t52004*t52033*t52026*t52037*3.2E1+a5*c0*gamma_aa*t51973*t51985*t51998*t52004*t52050*(1.12E2/3.0)-c*c0*t51974*t51985*t51989*t52012*t52004*t52047*8.0+c*c0*t51974*t51985*t51989*t52004*t52048*t52049*2.4E1+c*c0*t51985*t51989*t52002*t52011*t52012*t52004*(1.6E1/3.0)+a5*c0*gamma_aa*t51973*t51985*t52011*t52012*t52004*t52006*(1.12E2/3.0)-c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52020*t52053*(8.96E2/3.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t51998*t52004*t52053*(8.96E2/3.0)-c*c0*t51985*t51989*t51998*t52020*t52034*t52052*t52035*t52036*(8.192E3/9.0)+c*c0*t51985*t51989*t51998*t52004*t52034*t52052*t52035*t52036*(4.096E3/9.0)+c*c0*t51985*t51989*t51998*t52034*t52052*t52035*t52036*t52059*(2.048E3/3.0)-a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52020*t52051*(1.792E3/9.0)+a5*c0*gamma_aa*t51980*t51973*t51976*t51985*t51978*t51998*t52004*t52051*(1.792E3/9.0)-c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52020*t52012*t52013*(5.12E2/3.0)+c*c0*t51980*t51976*t51985*t51978*t51989*t52011*t52012*t52004*t52013*(5.12E2/3.0))-t52123*t52082*t52079*t52088*2.0-t52072*t52078*t52079*t52088*2.0+1.0/(t52024*t52024*t52024)*t52072*t52082*(t52088*t52088)*2.0-t51981*t52110*t52111*t52112*t52113*t52114*t52115*t52054*(1.0/2.0)+t51981*t52111*t52112*t52113*t52114*t52070*t52115*t52116*(3.0/2.0)+t51981*t52111*t52112*t52113*t52114*t52115*t52116*t52058*(3.0/2.0)-t51981*t51997*t52011*t52111*t52112*t52113*t52114*t52116*t52054*3.0+t51980*t51981*t51976*t51978*t51987*t52111*t52112*t52113*t52122*t52115*t52054*1.6E1-t51980*t51981*t51976*t51978*t52111*t52112*t52113*t52122*t52114*t52115*t52054*1.6E1-a5*gamma_aa*t51973*1.0/(t51989*t51989)*t52112*t52113*t52114*t52115*t52054*t52209*t52177*(7.0/2.0))*(-1.0/2.0)+c0*t52160*t52163*t52138*(t52027*t52028*t52137*(1.0E1/9.0)-t52027*t52154*t52157*t52158*(8.0/3.0)+t52110*t52027*1.0/(t52136*t52136*t52136*t52136)*(t52157*t52157)*6.0-t52110*t52027*t52154*(c*k2*t51982*(4.0/9.0)+c*k1*t51982*t52007*(2.0/9.0)-k1*t52043*t52027*t52028*(1.0/3.6E1))*2.0)*(1.0/2.0)+c0*t52151*t52160*t52138*t52165+c0*t52151*t52138*t52175*t52176+c0*t52270*t52163*t52138*t52269*(1.0/2.0)+c0*t52163*t52138*t52176*t52287*(1.0/2.0)-c0*t52160*t52163*t52138*(t52165*t52165)*(1.0/2.0)-c0*t52163*t52138*t52165*t52175*t52176)-c0*t52151*t52160*t52138+c0*t52160*t52163*t52138*t52165+c0*t52163*t52138*t52175*t52176;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t52290 = tspi_m13*tspi_m13;
                double t52291 = 1.0/pow(rho_a,1.0/3.0);
                double t52292 = a2*a2;
                double t52293 = gamma_aa*gamma_aa;
                double t52294 = 1.0/pow(rho_a,1.6E1/3.0);
                double t52295 = t52290*t52290;
                double t52296 = c*t52291;
                double t52297 = pow(t52296,4.0/5.0);
                double t52311 = rab1*t52297;
                double t52298 = exp(-t52311);
                double t52299 = t52298-1.0;
                double t52312 = kab1*t52299;
                double t52300 = kab0-t52312;
                double t52301 = 1.0/c;
                double t52302 = 1.0/pow(rho_a,7.0/3.0);
                double t52303 = a3*gamma_aa*t52301*t52302*t52290;
                double t52304 = t52303+1.0;
                double t52305 = t52292*t52293*t52294*t52295;
                double t52306 = 1.0/pow(rho_a,8.0/3.0);
                double t52307 = a1*gamma_aa*t52306*t52290;
                double t52308 = t52305+t52307+1.0;
                double t52309 = t52292*t52293*t52294*t52295*2.0;
                double t52310 = exp(t52309);
                double t52313 = 1.0/(t52300*t52300);
                double t52314 = 1.0/(t52308*t52308);
                double t52315 = c*c0*t52310*t52304*t52313*t52314*t52291*(2.0/3.0);
                double t52316 = sqrt(t52315);
                double t52317 = 1.0/pow(rho_a,1.1E1/3.0);
                double t52318 = 1.0/pow(rho_a,4.0/3.0);
                double t52319 = exp(t52315);
                double t52320 = Ei(-t52315);
                double t52321 = c*c0*t52310*t52304*t52313*t52314*t52318*(2.0/9.0);
                double t52322 = 1.0/pow(rho_a,1.9E1/3.0);
                double t52323 = t52322*t52292*t52293*t52295*(1.6E1/3.0);
                double t52324 = a1*gamma_aa*t52290*t52317*(8.0/3.0);
                double t52325 = t52323+t52324;
                double t52326 = 1.0/(t52308*t52308*t52308);
                double t52327 = a3*c0*gamma_aa*t52310*t52313*t52314*t52290*t52317*(1.4E1/9.0);
                double t52328 = 1.0/pow(rho_a,2.0E1/3.0);
                double t52329 = c*c0*t52310*t52304*t52313*t52314*t52292*t52328*t52293*t52295*(6.4E1/9.0);
                double t52330 = c*c;
                double t52331 = 1.0/pow(rho_a,5.0/3.0);
                double t52332 = 1.0/(t52300*t52300*t52300);
                double t52333 = 1.0/pow(t52296,1.0/5.0);
                double t52339 = c*c0*t52310*t52304*t52313*t52325*t52326*t52291*(4.0/3.0);
                double t52340 = c0*kab1*rab1*t52310*t52330*t52304*t52331*t52314*t52332*t52333*t52298*(1.6E1/4.5E1);
                double t52334 = t52321-t52340+t52327+t52329-t52339;
                double t52335 = t52316*6.0;
                double t52336 = c*c0*t52310*t52304*t52313*t52314*t52291*4.0;
                double t52337 = t52335+t52336+3.0;
                double t52338 = 1.0/t52337;
                double t52341 = c*c0*t52310*t52320*t52304*t52313*t52314*t52291*t52319*(2.0/3.0);
                double t52342 = t52341+1.0;
                double t52343 = t52316*4.0;
                double t52344 = c*c0*t52310*t52304*t52313*t52314*t52291*(8.0/3.0);
                double t52345 = t52343+t52344+6.0;
                double t52346 = 1.0/sqrt(t52315);
                double t52347 = 1.0/pow(rho_b,1.0/3.0);
                double t52348 = gamma_bb*gamma_bb;
                double t52349 = 1.0/pow(rho_b,1.6E1/3.0);
                double t52350 = c*t52347;
                double t52351 = pow(t52350,4.0/5.0);
                double t52364 = rab1*t52351;
                double t52352 = exp(-t52364);
                double t52353 = t52352-1.0;
                double t52365 = kab1*t52353;
                double t52354 = kab0-t52365;
                double t52355 = 1.0/pow(rho_b,7.0/3.0);
                double t52356 = a3*gamma_bb*t52301*t52290*t52355;
                double t52357 = t52356+1.0;
                double t52358 = t52292*t52348*t52295*t52349;
                double t52359 = 1.0/pow(rho_b,8.0/3.0);
                double t52360 = a1*gamma_bb*t52290*t52359;
                double t52361 = t52360+t52358+1.0;
                double t52362 = t52292*t52348*t52295*t52349*2.0;
                double t52363 = exp(t52362);
                double t52366 = 1.0/(t52354*t52354);
                double t52367 = 1.0/(t52361*t52361);
                double t52368 = c*c0*t52363*t52347*t52357*t52366*t52367*(2.0/3.0);
                double t52369 = sqrt(t52368);
                double t52370 = 1.0/pow(rho_b,1.1E1/3.0);
                double t52371 = 1.0/pow(rho_b,4.0/3.0);
                double t52372 = exp(t52368);
                double t52373 = Ei(-t52368);
                double t52374 = c*c0*t52371*t52363*t52357*t52366*t52367*(2.0/9.0);
                double t52375 = 1.0/pow(rho_b,1.9E1/3.0);
                double t52376 = t52292*t52348*t52375*t52295*(1.6E1/3.0);
                double t52377 = a1*gamma_bb*t52370*t52290*(8.0/3.0);
                double t52378 = t52376+t52377;
                double t52379 = 1.0/(t52361*t52361*t52361);
                double t52380 = a3*c0*gamma_bb*t52370*t52290*t52363*t52366*t52367*(1.4E1/9.0);
                double t52381 = 1.0/pow(rho_b,2.0E1/3.0);
                double t52382 = c*c0*t52363*t52381*t52292*t52348*t52357*t52366*t52295*t52367*(6.4E1/9.0);
                double t52383 = 1.0/pow(rho_b,5.0/3.0);
                double t52384 = 1.0/(t52354*t52354*t52354);
                double t52385 = 1.0/pow(t52350,1.0/5.0);
                double t52391 = c*c0*t52363*t52347*t52357*t52366*t52378*t52379*(4.0/3.0);
                double t52392 = c0*kab1*rab1*t52330*t52352*t52363*t52383*t52357*t52384*t52367*t52385*(1.6E1/4.5E1);
                double t52386 = t52380+t52382-t52391+t52374-t52392;
                double t52387 = t52369*6.0;
                double t52388 = c*c0*t52363*t52347*t52357*t52366*t52367*4.0;
                double t52389 = t52387+t52388+3.0;
                double t52390 = 1.0/t52389;
                double t52393 = c*c0*t52363*t52372*t52373*t52347*t52357*t52366*t52367*(2.0/3.0);
                double t52394 = t52393+1.0;
                double t52395 = t52369*4.0;
                double t52396 = c*c0*t52363*t52347*t52357*t52366*t52367*(8.0/3.0);
                double t52397 = t52395+t52396+6.0;
                double t52398 = 1.0/sqrt(t52368);
                double t52399 = 1.0/c0;
                double t52400 = exp(-t52305);
                double t52401 = 1.0/sqrt(t52304);
                double t52402 = t52300*t52400*t52401*t52308*1.0E5;
                double t52403 = exp(-t52358);
                double t52404 = 1.0/sqrt(t52357);
                double t52405 = t52403*t52404*t52361*t52354*1.0E5;
                v_rho_a_rho_b[Q] += scale * c0*heaviside(t52402-c*c0*t52291*(2.0/3.0))*(t52342*t52338*(t52334*t52346*2.0+c*c0*t52310*t52304*t52313*t52314*t52318*(8.0/9.0)+a3*c0*gamma_aa*t52310*t52313*t52314*t52290*t52317*(5.6E1/9.0)-c*c0*t52310*t52304*t52313*t52325*t52326*t52291*(1.6E1/3.0)+c*c0*t52310*t52304*t52313*t52314*t52292*t52328*t52293*t52295*(2.56E2/9.0)-c0*kab1*rab1*t52310*t52330*t52304*t52331*t52314*t52332*t52333*t52298*(6.4E1/4.5E1))+t52345*t52338*(t52321-t52340+t52327+t52329-t52339+c*c0*t52310*t52320*t52304*t52313*t52314*t52318*t52319*(2.0/9.0)+a3*c0*gamma_aa*t52310*t52320*t52313*t52314*t52290*t52317*t52319*(1.4E1/9.0)+c*c0*t52310*t52320*t52304*t52313*t52314*t52334*t52291*t52319*(2.0/3.0)-c*c0*t52310*t52320*t52304*t52313*t52325*t52326*t52291*t52319*(4.0/3.0)+c*c0*t52310*t52320*t52304*t52313*t52314*t52292*t52319*t52328*t52293*t52295*(6.4E1/9.0)-c0*kab1*rab1*t52310*t52320*t52330*t52304*t52331*t52314*t52332*t52333*t52319*t52298*(1.6E1/4.5E1))+t52320*t52334*t52319-t52342*t52345*1.0/(t52337*t52337)*(t52334*t52346*3.0+c*c0*t52310*t52304*t52313*t52314*t52318*(4.0/3.0)+a3*c0*gamma_aa*t52310*t52313*t52314*t52290*t52317*(2.8E1/3.0)-c*c0*t52310*t52304*t52313*t52325*t52326*t52291*8.0+c*c0*t52310*t52304*t52313*t52314*t52292*t52328*t52293*t52295*(1.28E2/3.0)-c0*kab1*rab1*t52310*t52330*t52304*t52331*t52314*t52332*t52333*t52298*(3.2E1/1.5E1))+(pow(rho_a,1.0/3.0)*(t52300*t52300)*t52301*t52334*(t52308*t52308)*t52399*exp(-t52309)*(3.0/2.0))/t52304)*(-1.0/2.0)-c0*heaviside(t52405-c*c0*t52347*(2.0/3.0))*(t52390*t52394*(t52386*t52398*2.0+c*c0*t52371*t52363*t52357*t52366*t52367*(8.0/9.0)+a3*c0*gamma_bb*t52370*t52290*t52363*t52366*t52367*(5.6E1/9.0)-c*c0*t52363*t52347*t52357*t52366*t52378*t52379*(1.6E1/3.0)+c*c0*t52363*t52381*t52292*t52348*t52357*t52366*t52295*t52367*(2.56E2/9.0)-c0*kab1*rab1*t52330*t52352*t52363*t52383*t52357*t52384*t52367*t52385*(6.4E1/4.5E1))+t52390*t52397*(t52380+t52382-t52391+t52374-t52392+c*c0*t52371*t52363*t52372*t52373*t52357*t52366*t52367*(2.0/9.0)+a3*c0*gamma_bb*t52370*t52290*t52363*t52372*t52373*t52366*t52367*(1.4E1/9.0)+c*c0*t52363*t52372*t52373*t52347*t52357*t52366*t52367*t52386*(2.0/3.0)-c*c0*t52363*t52372*t52373*t52347*t52357*t52366*t52378*t52379*(4.0/3.0)+c*c0*t52363*t52372*t52381*t52292*t52373*t52348*t52357*t52366*t52295*t52367*(6.4E1/9.0)-c0*kab1*rab1*t52330*t52352*t52363*t52372*t52373*t52383*t52357*t52384*t52367*t52385*(1.6E1/4.5E1))+t52372*t52373*t52386-t52394*t52397*1.0/(t52389*t52389)*(t52386*t52398*3.0+c*c0*t52371*t52363*t52357*t52366*t52367*(4.0/3.0)+a3*c0*gamma_bb*t52370*t52290*t52363*t52366*t52367*(2.8E1/3.0)-c*c0*t52363*t52347*t52357*t52366*t52378*t52379*8.0+c*c0*t52363*t52381*t52292*t52348*t52357*t52366*t52295*t52367*(1.28E2/3.0)-c0*kab1*rab1*t52330*t52352*t52363*t52383*t52357*t52384*t52367*t52385*(3.2E1/1.5E1))+(pow(rho_b,1.0/3.0)*t52301*(t52361*t52361)*(t52354*t52354)*t52386*t52399*exp(-t52362)*(3.0/2.0))/t52357)*(1.0/2.0)+c0*dirac(-t52402+c*c0*t52291*(2.0/3.0))*(t52320*t52319+t52342*t52345*t52338)*(c*c0*t52318*(2.0/9.0)-t52300*t52400*t52401*t52325*1.0E5+t52300*t52400*t52401*t52322*t52308*t52292*t52293*t52295*(1.6E6/3.0)+a3*gamma_aa*1.0/pow(rho_a,1.0E1/3.0)*t52300*t52301*t52400*1.0/pow(t52304,3.0/2.0)*t52290*t52308*(3.5E5/3.0)-c*kab1*rab1*t52400*t52401*t52333*t52308*t52318*t52298*(8.0E4/3.0))*(1.0/2.0)+c0*dirac(-t52405+c*c0*t52347*(2.0/3.0))*(t52372*t52373+t52390*t52394*t52397)*(c*c0*t52371*(2.0/9.0)-t52403*t52404*t52354*t52378*1.0E5+t52403*t52404*t52361*t52354*t52292*t52348*t52375*t52295*(1.6E6/3.0)+a3*gamma_bb*1.0/pow(rho_b,1.0E1/3.0)*t52301*t52403*t52361*t52290*t52354*1.0/pow(t52357,3.0/2.0)*(3.5E5/3.0)-c*kab1*rab1*t52403*t52404*t52352*t52361*t52371*t52385*(8.0E4/3.0))*(1.0/2.0);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t52407 = tspi_m13*tspi_m13;
                double t52408 = 1.0/pow(rho_b,1.0/3.0);
                double t52409 = a2*a2;
                double t52410 = gamma_bb*gamma_bb;
                double t52411 = 1.0/pow(rho_b,1.6E1/3.0);
                double t52412 = t52407*t52407;
                double t52413 = c*t52408;
                double t52414 = a4*a4;
                double t52415 = 1.0/c;
                double t52416 = 1.0/pow(rho_b,7.0/3.0);
                double t52417 = sqrt(t52413);
                double t52418 = t52410*t52411*t52412*t52414*2.0;
                double t52419 = exp(t52418);
                double t52420 = t52410*t52411*t52412*t52414;
                double t52421 = t52420+1.0;
                double t52422 = a5*gamma_bb*t52415*t52407*t52416;
                double t52423 = t52422+1.0;
                double t52434 = raa2*t52417;
                double t52424 = exp(-t52434);
                double t52425 = t52424-1.0;
                double t52426 = kaa2*t52425;
                double t52427 = pow(t52413,2.0/5.0);
                double t52435 = raa1*t52427;
                double t52428 = exp(-t52435);
                double t52429 = t52428-1.0;
                double t52430 = kaa1*t52429;
                double t52431 = -kaa0+t52430+t52426;
                double t52432 = 1.0/(t52431*t52431);
                double t52433 = 1.0/t52421;
                double t52436 = 1.0/pow(rho_b,4.0/3.0);
                double t52437 = c*c0*t52423*t52432*t52408*t52419*(2.0/3.0);
                double t52438 = 1.0/(t52421*t52421);
                double t52439 = sqrt(t52437);
                double t52440 = 1.0/pow(rho_b,1.1E1/3.0);
                double t52441 = 1.0/sqrt(t52413);
                double t52442 = c*kaa2*raa2*t52441*t52424*t52436*(1.0/6.0);
                double t52443 = 1.0/pow(t52413,3.0/5.0);
                double t52444 = c*kaa1*raa1*t52443*t52436*t52428*(2.0/1.5E1);
                double t52445 = t52442+t52444;
                double t52446 = 1.0/(t52431*t52431*t52431);
                double t52447 = 1.0/pow(rho_b,2.0E1/3.0);
                double t52448 = c*c0*t52423*t52432*t52408*t52419*t52438*(2.0/3.0);
                double t52449 = exp(t52448);
                double t52450 = Ei(-t52448);
                double t52451 = c*c0*t52423*t52432*t52436*t52419*t52438*(2.0/9.0);
                double t52452 = a5*c0*gamma_bb*t52440*t52432*t52407*t52419*t52438*(1.4E1/9.0);
                double t52453 = c*c0*t52423*t52408*t52445*t52419*t52446*t52438*(4.0/3.0);
                double t52454 = 1.0/(t52421*t52421*t52421);
                double t52455 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52447*(6.4E1/9.0);
                double t52456 = t52433*t52439*6.0;
                double t52457 = c*c0*t52423*t52432*t52408*t52419*t52438*4.0;
                double t52458 = t52456+t52457+3.0;
                double t52459 = 1.0/t52458;
                double t52460 = 1.0/sqrt(t52437);
                double t52461 = c*c;
                double t52462 = 1.0/pow(rho_b,8.0/3.0);
                double t52463 = c*c0*t52423*t52432*t52436*t52419*(2.0/9.0);
                double t52464 = a5*c0*gamma_bb*t52440*t52432*t52407*t52419*(1.4E1/9.0);
                double t52465 = c*c0*t52423*t52408*t52445*t52419*t52446*(4.0/3.0);
                double t52466 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52447*(6.4E1/9.0);
                double t52467 = t52463+t52464+t52465+t52466;
                double t52468 = t52414*t52414;
                double t52469 = t52410*t52410;
                double t52470 = t52412*t52412;
                double t52471 = 1.0/pow(rho_b,1.9E1/3.0);
                double t52472 = raa2*raa2;
                double t52473 = c*kaa2*t52424*t52416*t52472*(1.0/3.6E1);
                double t52474 = raa1*raa1;
                double t52475 = 1.0/pow(t52413,6.0/5.0);
                double t52476 = kaa1*t52461*t52462*t52428*t52474*t52475*(4.0/2.25E2);
                double t52477 = 1.0/pow(t52413,3.0/2.0);
                double t52478 = kaa2*raa2*t52424*t52461*t52462*t52477*(1.0/3.6E1);
                double t52479 = 1.0/pow(t52413,8.0/5.0);
                double t52480 = kaa1*raa1*t52461*t52462*t52428*t52479*(2.0/7.5E1);
                double t52490 = c*kaa2*raa2*t52441*t52424*t52416*(2.0/9.0);
                double t52491 = c*kaa1*raa1*t52416*t52443*t52428*(8.0/4.5E1);
                double t52481 = t52480-t52490+t52473-t52491+t52476+t52478;
                double t52482 = t52445*t52445;
                double t52483 = 1.0/(t52431*t52431*t52431*t52431);
                double t52484 = 1.0/pow(rho_b,1.4E1/3.0);
                double t52485 = 1.0/pow(rho_b,1.0E1);
                double t52486 = 1.0/pow(rho_b,1.3E1);
                double t52487 = 1.0/pow(rho_b,2.3E1/3.0);
                double t52489 = c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52447*(6.4E1/9.0);
                double t52488 = t52451+t52452+t52453+t52455-t52489;
                double t52492 = t52488*t52488;
                double t52493 = 1.0/(t52421*t52421*t52421*t52421);
                double t52494 = c*c0*t52423*t52432*t52416*t52419*t52438*(8.0/2.7E1);
                double t52495 = c*c0*t52423*t52408*t52419*t52482*t52438*t52483*4.0;
                double t52496 = a5*c0*gamma_bb*t52432*t52407*t52419*t52438*t52484*(5.6E1/9.0);
                double t52497 = c*c0*t52423*t52436*t52445*t52419*t52446*t52438*(8.0/9.0);
                double t52498 = a5*c0*gamma_bb*t52440*t52407*t52445*t52419*t52446*t52438*(5.6E1/9.0);
                double t52499 = a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52419*t52438*t52485*(8.96E2/2.7E1);
                double t52500 = c*c0*t52423*t52432*t52470*t52419*t52438*t52468*t52486*t52469*(2.048E3/2.7E1);
                double t52501 = c*c0*t52423*t52432*t52470*t52419*t52493*t52468*t52486*t52469*(1.024E3/9.0);
                double t52502 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52487*(4.48E2/9.0);
                double t52503 = c*c0*t52410*t52412*t52414*t52423*t52445*t52419*t52446*t52438*t52447*(2.56E2/9.0);
                double t52551 = c*c0*t52423*t52408*t52481*t52419*t52446*t52438*(4.0/3.0);
                double t52552 = a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52454*t52419*t52485*(8.96E2/2.7E1);
                double t52553 = c*c0*t52423*t52432*t52470*t52454*t52419*t52468*t52486*t52469*(4.096E3/2.7E1);
                double t52554 = c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52487*(4.48E2/9.0);
                double t52555 = c*c0*t52410*t52412*t52414*t52423*t52445*t52454*t52419*t52446*t52447*(2.56E2/9.0);
                double t52504 = t52500+t52501+t52502+t52503-t52551-t52552-t52553-t52554-t52555+t52494+t52495+t52496+t52497+t52498+t52499;
                double t52505 = c*c0*t52423*t52432*t52450*t52408*t52419*t52438*t52449*(2.0/3.0);
                double t52506 = t52505+1.0;
                double t52507 = t52433*t52460*t52467*2.0;
                double t52508 = c*c0*t52423*t52432*t52436*t52419*t52438*(8.0/9.0);
                double t52509 = a5*c0*gamma_bb*t52440*t52432*t52407*t52419*t52438*(5.6E1/9.0);
                double t52510 = c*c0*t52423*t52408*t52445*t52419*t52446*t52438*(1.6E1/3.0);
                double t52511 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52447*(2.56E2/9.0);
                double t52573 = t52410*t52412*t52414*t52471*t52438*t52439*(6.4E1/3.0);
                double t52574 = c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52447*(2.56E2/9.0);
                double t52512 = t52510+t52511+t52507+t52508+t52509-t52573-t52574;
                double t52513 = 1.0/(t52458*t52458);
                double t52514 = t52433*t52439*4.0;
                double t52515 = c*c0*t52423*t52432*t52408*t52419*t52438*(8.0/3.0);
                double t52516 = t52514+t52515+6.0;
                double t52517 = t52433*t52460*t52467*3.0;
                double t52518 = c*c0*t52423*t52432*t52436*t52419*t52438*(4.0/3.0);
                double t52519 = a5*c0*gamma_bb*t52440*t52432*t52407*t52419*t52438*(2.8E1/3.0);
                double t52520 = c*c0*t52423*t52408*t52445*t52419*t52446*t52438*8.0;
                double t52521 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52447*(1.28E2/3.0);
                double t52542 = t52410*t52412*t52414*t52471*t52438*t52439*3.2E1;
                double t52543 = c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52447*(1.28E2/3.0);
                double t52522 = t52520+t52521-t52542-t52543+t52517+t52518+t52519;
                double t52523 = c*c0*t52423*t52432*t52450*t52436*t52419*t52438*t52449*(2.0/9.0);
                double t52524 = c*c0*t52423*t52450*t52408*t52445*t52419*t52446*t52438*t52449*(4.0/3.0);
                double t52525 = c*c0*t52423*t52432*t52450*t52408*t52419*t52438*t52449*t52488*(2.0/3.0);
                double t52526 = a5*c0*gamma_bb*t52440*t52432*t52450*t52407*t52419*t52438*t52449*(1.4E1/9.0);
                double t52527 = c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52419*t52438*t52447*t52449*(6.4E1/9.0);
                double t52528 = c*c0*t52423*t52432*t52416*t52419*(8.0/2.7E1);
                double t52529 = a5*c0*gamma_bb*t52432*t52407*t52419*t52484*(5.6E1/9.0);
                double t52530 = c*c0*t52423*t52436*t52445*t52419*t52446*(8.0/9.0);
                double t52531 = c*c0*t52423*t52408*t52419*t52482*t52483*4.0;
                double t52532 = a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52419*t52485*(8.96E2/2.7E1);
                double t52533 = a5*c0*gamma_bb*t52440*t52407*t52445*t52419*t52446*(5.6E1/9.0);
                double t52534 = c*c0*t52423*t52432*t52470*t52419*t52468*t52486*t52469*(2.048E3/2.7E1);
                double t52535 = c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52487*(4.48E2/9.0);
                double t52536 = c*c0*t52410*t52412*t52414*t52423*t52445*t52419*t52446*t52447*(2.56E2/9.0);
                double t52537 = t52530+t52531+t52532+t52533+t52534+t52535+t52536+t52528+t52529-c*c0*t52423*t52408*t52481*t52419*t52446*(4.0/3.0);
                double t52538 = t52467*t52467;
                double t52539 = 1.0/pow(t52437,3.0/2.0);
                double t52540 = 1.0/pow(rho_b,2.2E1/3.0);
                double t52541 = 1.0/pow(rho_b,3.8E1/3.0);
                double t52544 = 1.0/pow(rho_b,2.0/3.0);
                double t52545 = 1.0/t52423;
                double t52546 = 1.0/c0;
                double t52547 = exp(-t52418);
                double t52548 = t52421*t52421;
                double t52549 = t52431*t52431;
                double t52550 = pow(rho_b,1.0/3.0);
                double t52556 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t52575 = c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52454*t52419*t52447*t52449*(6.4E1/9.0);
                double t52557 = t52451+t52523+t52452+t52524+t52453+t52525+t52526+t52455+t52527-t52575-t52489;
                double t52558 = t52410*t52411*t52412*t52409;
                double t52559 = pow(t52413,4.0/5.0);
                double t52577 = rab1*t52559;
                double t52560 = exp(-t52577);
                double t52561 = t52560-1.0;
                double t52578 = kab1*t52561;
                double t52562 = kab0-t52578;
                double t52563 = a3*gamma_bb*t52415*t52407*t52416;
                double t52564 = t52563+1.0;
                double t52565 = 1.0/sqrt(t52564);
                double t52566 = a1*gamma_bb*t52407*t52462;
                double t52567 = t52566+t52558+1.0;
                double t52568 = k1*t52417;
                double t52569 = c*k2*t52408;
                double t52570 = t52568+t52569;
                double t52571 = 1.0/(t52570*t52570);
                double t52580 = t52461*t52544*t52571;
                double t52572 = exp(-t52580);
                double t52576 = exp(-t52558);
                double t52579 = t52562*t52565*t52567*t52576*1.0E5;
                double t52581 = t52512*t52506*t52459;
                double t52582 = t52450*t52449*t52488;
                double t52583 = t52516*t52557*t52459;
                double t52584 = t52415*t52550*t52545*t52546*t52547*t52548*t52549*t52488*(3.0/2.0);
                double t52722 = t52513*t52522*t52506*t52516;
                double t52585 = -t52722+t52581+t52582+t52583+t52584;
                double t52586 = 1.0/pow(rho_b,1.0E1/3.0);
                double t52587 = c*c0*t52408*(2.0/3.0);
                double t52588 = 1.0/(t52570*t52570*t52570);
                double t52589 = c*k2*t52436*(1.0/3.0);
                double t52590 = c*k1*t52441*t52436*(1.0/6.0);
                double t52591 = t52590+t52589;
                double t52592 = 1.0/pow(rho_b,5.0/3.0);
                double t52593 = -t52587+t52579;
                double t52594 = heaviside(t52593);
                double t52595 = t52450*t52449;
                double t52596 = t52506*t52516*t52459;
                double t52597 = t52595+t52596;
                double t52598 = t52461*t52571*t52592*(2.0/3.0);
                double t52612 = t52461*t52544*t52591*t52588*2.0;
                double t52599 = -t52612+t52598;
                double t52600 = t52587-t52579;
                double t52601 = c*c0*t52436*(2.0/9.0);
                double t52602 = t52410*t52412*t52471*t52409*(1.6E1/3.0);
                double t52603 = a1*gamma_bb*t52440*t52407*(8.0/3.0);
                double t52604 = t52602+t52603;
                double t52605 = t52410*t52412*t52471*t52409*t52562*t52565*t52567*t52576*(1.6E6/3.0);
                double t52606 = 1.0/pow(t52413,1.0/5.0);
                double t52607 = 1.0/pow(t52564,3.0/2.0);
                double t52608 = a3*gamma_bb*t52415*t52407*t52562*t52607*t52567*t52576*t52586*(3.5E5/3.0);
                double t52613 = t52604*t52562*t52565*t52576*1.0E5;
                double t52614 = c*kab1*rab1*t52560*t52606*t52436*t52565*t52567*t52576*(8.0E4/3.0);
                double t52609 = t52601-t52613+t52605-t52614+t52608;
                double t52610 = dirac(t52600);
                double t52611 = 1.0/(c*c);
                double t52615 = t52410*t52411*t52412*t52409*2.0;
                double t52616 = exp(t52615);
                double t52617 = 1.0/(t52562*t52562);
                double t52618 = 1.0/(t52567*t52567);
                double t52619 = c*c0*t52408*t52616*t52617*t52564*t52618*(2.0/3.0);
                double t52620 = sqrt(t52619);
                double t52621 = 1.0/rho_b;
                double t52622 = c*c0*t52436*t52616*t52617*t52564*t52618*(2.0/9.0);
                double t52623 = 1.0/(t52567*t52567*t52567);
                double t52624 = a3*c0*gamma_bb*t52440*t52407*t52616*t52617*t52618*(1.4E1/9.0);
                double t52625 = c*c0*t52410*t52412*t52409*t52616*t52617*t52447*t52564*t52618*(6.4E1/9.0);
                double t52626 = 1.0/(t52562*t52562*t52562);
                double t52628 = c*c0*t52604*t52623*t52408*t52616*t52617*t52564*(4.0/3.0);
                double t52629 = c0*kab1*rab1*t52461*t52560*t52606*t52616*t52626*t52564*t52618*t52592*(1.6E1/4.5E1);
                double t52627 = t52622+t52624+t52625-t52628-t52629;
                double t52630 = t52410*t52412*t52540*t52409*(3.04E2/9.0);
                double t52631 = a1*gamma_bb*t52407*t52484*(8.8E1/9.0);
                double t52632 = t52630+t52631;
                double t52633 = exp(t52619);
                double t52634 = Ei(-t52619);
                double t52635 = c*c0*t52416*t52616*t52617*t52564*t52618*(8.0/2.7E1);
                double t52636 = t52604*t52604;
                double t52637 = 1.0/(t52567*t52567*t52567*t52567);
                double t52638 = c*c0*t52408*t52616*t52617*t52564*t52636*t52637*4.0;
                double t52639 = a3*c0*gamma_bb*t52407*t52616*t52617*t52618*t52484*(5.6E1/9.0);
                double t52640 = a3*c0*gamma_bb*t52410*t52412*t52407*t52409*t52616*t52617*t52618*t52485*(8.96E2/2.7E1);
                double t52641 = t52409*t52409;
                double t52642 = rab1*rab1;
                double t52643 = 1.0/(rho_b*rho_b*rho_b);
                double t52644 = 1.0/pow(t52413,2.0/5.0);
                double t52645 = t52627*t52627;
                double t52646 = c*c0*t52470*t52641*t52616*t52617*t52564*t52618*t52486*t52469*(2.048E3/2.7E1);
                double t52647 = c*c0*t52410*t52412*t52409*t52616*t52617*t52564*t52618*t52487*(4.48E2/9.0);
                double t52648 = c*c0*kab1*t52461*t52560*t52642*t52616*t52643*t52626*t52644*t52564*t52618*(6.4E1/6.75E2);
                double t52649 = kab1*kab1;
                double t52656 = rab1*t52559*2.0;
                double t52650 = exp(-t52656);
                double t52651 = 1.0/(t52562*t52562*t52562*t52562);
                double t52652 = c*c0*t52461*t52650*t52642*t52651*t52616*t52643*t52644*t52564*t52618*t52649*(6.4E1/2.25E2);
                double t52653 = c*c0*kab1*rab1*t52461*t52560*t52616*t52643*t52626*t52564*t52618*t52475*(1.6E1/6.75E2);
                double t52654 = c0*kab1*rab1*t52604*t52461*t52560*t52623*t52606*t52616*t52626*t52564*t52592*(6.4E1/4.5E1);
                double t52655 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b);
                double t52657 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t52658 = t52620*6.0;
                double t52659 = c*c0*t52408*t52616*t52617*t52564*t52618*4.0;
                double t52660 = t52658+t52659+3.0;
                double t52661 = 1.0/t52660;
                double t52663 = c*c0*t52604*t52623*t52436*t52616*t52617*t52564*(8.0/9.0);
                double t52664 = c*c0*t52623*t52632*t52408*t52616*t52617*t52564*(4.0/3.0);
                double t52665 = a3*c0*gamma_bb*t52440*t52604*t52407*t52623*t52616*t52617*(5.6E1/9.0);
                double t52666 = c*c0*t52410*t52412*t52604*t52623*t52409*t52616*t52617*t52447*t52564*(2.56E2/9.0);
                double t52667 = c0*kab1*rab1*t52461*t52560*t52462*t52606*t52616*t52626*t52564*t52618*(3.2E1/4.5E1);
                double t52668 = a3*c*c0*gamma_bb*kab1*rab1*t52407*t52560*t52606*t52616*t52626*t52618*t52655*(2.24E2/1.35E2);
                double t52669 = c0*kab1*rab1*t52410*t52412*t52461*t52560*t52606*t52409*t52616*t52626*t52564*t52618*t52657*(1.024E3/1.35E2);
                double t52662 = t52640+t52652+t52635+t52653+t52654-t52663+t52646-t52664+t52638+t52647-t52665+t52639+t52648-t52666-t52667-t52668-t52669;
                double t52670 = 1.0/sqrt(t52619);
                double t52671 = t52620*4.0;
                double t52672 = c*c0*t52408*t52616*t52617*t52564*t52618*(8.0/3.0);
                double t52673 = t52671+t52672+6.0;
                double t52674 = c*c0*t52633*t52436*t52616*t52634*t52617*t52564*t52618*(2.0/9.0);
                double t52675 = a3*c0*gamma_bb*t52440*t52407*t52633*t52616*t52634*t52617*t52618*(1.4E1/9.0);
                double t52676 = c*c0*t52408*t52633*t52616*t52634*t52617*t52564*t52618*t52627*(2.0/3.0);
                double t52677 = c*c0*t52410*t52412*t52633*t52409*t52616*t52634*t52617*t52447*t52564*t52618*(6.4E1/9.0);
                double t52699 = c*c0*t52604*t52623*t52408*t52633*t52616*t52634*t52617*t52564*(4.0/3.0);
                double t52700 = c0*kab1*rab1*t52461*t52560*t52606*t52633*t52616*t52634*t52626*t52564*t52618*t52592*(1.6E1/4.5E1);
                double t52678 = -t52700+t52622+t52624+t52625-t52628-t52629+t52674+t52675+t52676+t52677-t52699;
                double t52679 = c*c0*t52408*t52633*t52616*t52634*t52617*t52564*t52618*(2.0/3.0);
                double t52680 = t52679+1.0;
                double t52681 = 1.0/(t52660*t52660);
                double t52682 = 1.0/pow(t52619,3.0/2.0);
                double t52683 = t52670*t52627*3.0;
                double t52684 = c*c0*t52436*t52616*t52617*t52564*t52618*(4.0/3.0);
                double t52685 = a3*c0*gamma_bb*t52440*t52407*t52616*t52617*t52618*(2.8E1/3.0);
                double t52686 = c*c0*t52410*t52412*t52409*t52616*t52617*t52447*t52564*t52618*(1.28E2/3.0);
                double t52688 = c*c0*t52604*t52623*t52408*t52616*t52617*t52564*8.0;
                double t52689 = c0*kab1*rab1*t52461*t52560*t52606*t52616*t52626*t52564*t52618*t52592*(3.2E1/1.5E1);
                double t52687 = t52683+t52684+t52685+t52686-t52688-t52689;
                double t52690 = t52670*t52627*2.0;
                double t52691 = c*c0*t52436*t52616*t52617*t52564*t52618*(8.0/9.0);
                double t52692 = a3*c0*gamma_bb*t52440*t52407*t52616*t52617*t52618*(5.6E1/9.0);
                double t52693 = c*c0*t52410*t52412*t52409*t52616*t52617*t52447*t52564*t52618*(2.56E2/9.0);
                double t52701 = c*c0*t52604*t52623*t52408*t52616*t52617*t52564*(1.6E1/3.0);
                double t52702 = c0*kab1*rab1*t52461*t52560*t52606*t52616*t52626*t52564*t52618*t52592*(6.4E1/4.5E1);
                double t52694 = -t52701-t52702+t52690+t52691+t52692+t52693;
                double t52695 = 1.0/t52564;
                double t52696 = exp(-t52615);
                double t52697 = t52562*t52562;
                double t52698 = t52567*t52567;
                double t52703 = dirac(t52600,1.0);
                double t52704 = t52609*t52609;
                double t52705 = t52633*t52634;
                double t52706 = t52661*t52680*t52673;
                double t52707 = t52705+t52706;
                double t52708 = c*c0*t52416*(8.0/2.7E1);
                double t52709 = t52410*t52412*t52540*t52409*t52562*t52565*t52567*t52576*(3.04E7/9.0);
                double t52710 = t52410*t52412*t52604*t52471*t52409*t52562*t52565*t52576*(3.2E6/3.0);
                double t52711 = kab1*t52461*t52560*t52462*t52642*t52644*t52565*t52567*t52576*(6.4E4/9.0);
                double t52712 = a3*a3;
                double t52713 = 1.0/pow(t52564,5.0/2.0);
                double t52714 = 1.0/pow(rho_b,1.3E1/3.0);
                double t52715 = a3*gamma_bb*t52415*t52407*t52714*t52562*t52607*t52567*t52576*(3.5E6/9.0);
                double t52716 = a3*gamma_bb*t52415*t52604*t52407*t52562*t52607*t52576*t52586*(7.0E5/3.0);
                double t52717 = kab1*rab1*t52461*t52560*t52462*t52475*t52565*t52567*t52576*(1.6E4/9.0);
                double t52718 = 1.0/pow(rho_b,2.9E1/3.0);
                double t52719 = a3*gamma_bb*kab1*rab1*t52407*t52560*t52606*t52607*t52484*t52567*t52576*(5.6E5/9.0);
                double t52720 = c*kab1*rab1*t52410*t52412*t52560*t52606*t52409*t52565*t52567*t52576*t52487*(2.56E6/9.0);
                double t52721 = t52710+t52711+t52720+t52715+t52716+t52708+t52717+t52709+t52719-t52632*t52562*t52565*t52576*1.0E5-t52541*t52470*t52641*t52562*t52565*t52567*t52576*t52469*(2.56E7/9.0)-c*kab1*rab1*t52604*t52560*t52606*t52436*t52565*t52576*(1.6E5/3.0)-c*kab1*rab1*t52416*t52560*t52606*t52565*t52567*t52576*(3.2E5/9.0)-t52410*t52412*t52611*t52712*t52713*t52562*t52447*t52567*t52576*(1.225E6/3.0)-a3*gamma_bb*t52410*t52412*t52415*t52407*t52409*t52562*t52607*t52718*t52567*t52576*(1.12E7/9.0);
                v_rho_b_rho_b[Q] += scale * -rho_a*(c0*t52594*(t52661*t52673*(t52640+t52652+t52635+t52653+t52645+t52654-t52663+t52646-t52664+t52638+t52647-t52665+t52639+t52648-t52666-t52667-t52668-t52669+t52621*t52627*(1.0/3.0)-(t52604*t52627*2.0)/t52567+t52410*t52412*t52471*t52409*t52627*(3.2E1/3.0)+a3*gamma_bb*t52415*t52407*t52627*t52586*t52695*(7.0/3.0)-(c*kab1*rab1*t52560*t52606*t52436*t52627*(8.0/1.5E1))/t52562+c*c0*t52416*t52633*t52616*t52634*t52617*t52564*t52618*(8.0/2.7E1)+a3*c0*gamma_bb*t52407*t52633*t52616*t52634*t52617*t52618*t52484*(5.6E1/9.0)-c*c0*t52604*t52623*t52633*t52436*t52616*t52634*t52617*t52564*(8.0/9.0)-c*c0*t52623*t52632*t52408*t52633*t52616*t52634*t52617*t52564*(4.0/3.0)+c*c0*t52408*t52633*t52616*t52634*t52617*t52662*t52564*t52618*(2.0/3.0)+c*c0*t52408*t52633*t52616*t52634*t52617*t52564*t52618*t52645*(2.0/3.0)+c*c0*t52408*t52633*t52616*t52634*t52617*t52564*t52636*t52637*4.0+c*c0*t52633*t52436*t52616*t52634*t52617*t52564*t52618*t52627*(4.0/9.0)-a3*c0*gamma_bb*t52440*t52604*t52407*t52623*t52633*t52616*t52634*t52617*(5.6E1/9.0)+a3*c0*gamma_bb*t52440*t52407*t52633*t52616*t52634*t52617*t52618*t52627*(2.8E1/9.0)-c*c0*t52604*t52623*t52408*t52633*t52616*t52634*t52617*t52564*t52627*(8.0/3.0)+c*c0*t52410*t52412*t52633*t52409*t52616*t52634*t52617*t52564*t52618*t52487*(4.48E2/9.0)+c*c0*t52470*t52641*t52633*t52616*t52634*t52617*t52564*t52618*t52486*t52469*(2.048E3/2.7E1)+a3*c0*gamma_bb*t52410*t52412*t52407*t52633*t52409*t52616*t52634*t52617*t52618*t52485*(8.96E2/2.7E1)-c*c0*t52410*t52412*t52604*t52623*t52633*t52409*t52616*t52634*t52617*t52447*t52564*(2.56E2/9.0)+c*c0*t52410*t52412*t52633*t52409*t52616*t52634*t52617*t52447*t52564*t52618*t52627*(1.28E2/9.0)-c0*kab1*rab1*t52461*t52560*t52462*t52606*t52633*t52616*t52634*t52626*t52564*t52618*(3.2E1/4.5E1)+c*c0*kab1*rab1*t52461*t52560*t52633*t52616*t52634*t52643*t52626*t52564*t52618*t52475*(1.6E1/6.75E2)+c*c0*kab1*t52461*t52560*t52633*t52642*t52616*t52634*t52643*t52626*t52644*t52564*t52618*(6.4E1/6.75E2)+c*c0*t52461*t52650*t52633*t52642*t52651*t52616*t52634*t52643*t52644*t52564*t52618*t52649*(6.4E1/2.25E2)+c0*kab1*rab1*t52604*t52461*t52560*t52623*t52606*t52633*t52616*t52634*t52626*t52564*t52592*(6.4E1/4.5E1)-c0*kab1*rab1*t52461*t52560*t52606*t52633*t52616*t52634*t52626*t52564*t52618*t52627*t52592*(3.2E1/4.5E1)-a3*c*c0*gamma_bb*kab1*rab1*t52407*t52560*t52606*t52633*t52616*t52634*t52626*t52618*t52655*(2.24E2/1.35E2)-c0*kab1*rab1*t52410*t52412*t52461*t52560*t52606*t52633*t52409*t52616*t52634*t52626*t52564*t52618*t52657*(1.024E3/1.35E2))+t52633*t52634*t52662+t52633*t52634*t52645+t52661*t52694*t52678*2.0+t52661*t52680*(t52670*t52662*2.0-t52645*t52682+c*c0*t52416*t52616*t52617*t52564*t52618*(3.2E1/2.7E1)+a3*c0*gamma_bb*t52407*t52616*t52617*t52618*t52484*(2.24E2/9.0)-c*c0*t52604*t52623*t52436*t52616*t52617*t52564*(3.2E1/9.0)-c*c0*t52623*t52632*t52408*t52616*t52617*t52564*(1.6E1/3.0)+c*c0*t52408*t52616*t52617*t52564*t52636*t52637*1.6E1-a3*c0*gamma_bb*t52440*t52604*t52407*t52623*t52616*t52617*(2.24E2/9.0)+c*c0*t52410*t52412*t52409*t52616*t52617*t52564*t52618*t52487*(1.792E3/9.0)+c*c0*t52470*t52641*t52616*t52617*t52564*t52618*t52486*t52469*(8.192E3/2.7E1)+a3*c0*gamma_bb*t52410*t52412*t52407*t52409*t52616*t52617*t52618*t52485*(3.584E3/2.7E1)-c*c0*t52410*t52412*t52604*t52623*t52409*t52616*t52617*t52447*t52564*(1.024E3/9.0)-c0*kab1*rab1*t52461*t52560*t52462*t52606*t52616*t52626*t52564*t52618*(1.28E2/4.5E1)+c*c0*kab1*rab1*t52461*t52560*t52616*t52643*t52626*t52564*t52618*t52475*(6.4E1/6.75E2)+c*c0*kab1*t52461*t52560*t52642*t52616*t52643*t52626*t52644*t52564*t52618*(2.56E2/6.75E2)+c*c0*t52461*t52650*t52642*t52651*t52616*t52643*t52644*t52564*t52618*t52649*(2.56E2/2.25E2)+c0*kab1*rab1*t52604*t52461*t52560*t52623*t52606*t52616*t52626*t52564*t52592*(2.56E2/4.5E1)-a3*c*c0*gamma_bb*kab1*rab1*t52407*t52560*t52606*t52616*t52626*t52618*t52655*(8.96E2/1.35E2)-c0*kab1*rab1*t52410*t52412*t52461*t52560*t52606*t52409*t52616*t52626*t52564*t52618*t52657*(4.096E3/1.35E2))-t52680*t52681*t52694*t52687*2.0-t52681*t52673*t52678*t52687*2.0-t52680*t52681*t52673*(t52670*t52662*3.0-t52645*t52682*(3.0/2.0)+c*c0*t52416*t52616*t52617*t52564*t52618*(1.6E1/9.0)+a3*c0*gamma_bb*t52407*t52616*t52617*t52618*t52484*(1.12E2/3.0)-c*c0*t52604*t52623*t52436*t52616*t52617*t52564*(1.6E1/3.0)-c*c0*t52623*t52632*t52408*t52616*t52617*t52564*8.0+c*c0*t52408*t52616*t52617*t52564*t52636*t52637*2.4E1-a3*c0*gamma_bb*t52440*t52604*t52407*t52623*t52616*t52617*(1.12E2/3.0)+c*c0*t52410*t52412*t52409*t52616*t52617*t52564*t52618*t52487*(8.96E2/3.0)+c*c0*t52470*t52641*t52616*t52617*t52564*t52618*t52486*t52469*(4.096E3/9.0)+a3*c0*gamma_bb*t52410*t52412*t52407*t52409*t52616*t52617*t52618*t52485*(1.792E3/9.0)-c*c0*t52410*t52412*t52604*t52623*t52409*t52616*t52617*t52447*t52564*(5.12E2/3.0)-c0*kab1*rab1*t52461*t52560*t52462*t52606*t52616*t52626*t52564*t52618*(6.4E1/1.5E1)+c*c0*kab1*rab1*t52461*t52560*t52616*t52643*t52626*t52564*t52618*t52475*(3.2E1/2.25E2)+c*c0*kab1*t52461*t52560*t52642*t52616*t52643*t52626*t52644*t52564*t52618*(1.28E2/2.25E2)+c*c0*t52461*t52650*t52642*t52651*t52616*t52643*t52644*t52564*t52618*t52649*(1.28E2/7.5E1)+c0*kab1*rab1*t52604*t52461*t52560*t52623*t52606*t52616*t52626*t52564*t52592*(1.28E2/1.5E1)-a3*c*c0*gamma_bb*kab1*rab1*t52407*t52560*t52606*t52616*t52626*t52618*t52655*(4.48E2/4.5E1)-c0*kab1*rab1*t52410*t52412*t52461*t52560*t52606*t52409*t52616*t52626*t52564*t52618*t52657*(2.048E3/4.5E1))+1.0/(t52660*t52660*t52660)*t52680*t52673*(t52687*t52687)*2.0+t52415*t52550*t52662*t52546*t52695*t52696*t52697*t52698*(3.0/2.0)+t52415*t52550*t52546*t52645*t52695*t52696*t52697*t52698*(3.0/2.0)-t52415*t52544*t52546*t52627*t52695*t52696*t52697*t52698*(1.0/2.0)+t52415*t52550*t52604*t52546*t52627*t52567*t52695*t52696*t52697*3.0+kab1*rab1*t52621*t52560*t52606*t52562*t52546*t52627*t52695*t52696*t52698*(4.0/5.0)-t52410*t52412*t52415*t52409*t52546*t52627*t52556*t52695*t52696*t52697*t52698*1.6E1-a3*gamma_bb*t52611*t52407*t52643*t52546*1.0/(t52564*t52564)*t52627*t52696*t52697*t52698*(7.0/2.0))*(-1.0/2.0)+c0*t52610*t52721*t52707*(1.0/2.0)+c0*t52703*t52704*t52707*(1.0/2.0)+c0*t52610*t52609*(t52633*t52634*t52627+t52661*t52680*t52694+t52661*t52673*t52678-t52680*t52681*t52673*t52687+t52415*t52550*t52546*t52627*t52695*t52696*t52697*t52698*(3.0/2.0)))-rho_b*(c0*t52572*t52594*(t52506*t52459*(t52433*t52460*t52537*2.0-t52433*t52538*t52539-t52410*t52412*t52414*t52540*t52438*t52439*(1.216E3/9.0)+t52541*t52470*t52454*t52439*t52468*t52469*(2.048E3/9.0)+c*c0*t52423*t52432*t52416*t52419*t52438*(3.2E1/2.7E1)-t52410*t52412*t52414*t52460*t52471*t52438*t52467*(6.4E1/3.0)+a5*c0*gamma_bb*t52432*t52407*t52419*t52438*t52484*(2.24E2/9.0)-c*c0*t52423*t52408*t52481*t52419*t52446*t52438*(1.6E1/3.0)+c*c0*t52423*t52436*t52445*t52419*t52446*t52438*(3.2E1/9.0)+c*c0*t52423*t52408*t52419*t52482*t52438*t52483*1.6E1+a5*c0*gamma_bb*t52440*t52407*t52445*t52419*t52446*t52438*(2.24E2/9.0)-c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52487*(1.792E3/9.0)+c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52487*(1.792E3/9.0)-c*c0*t52423*t52432*t52470*t52454*t52419*t52468*t52486*t52469*(1.6384E4/2.7E1)+c*c0*t52423*t52432*t52470*t52419*t52438*t52468*t52486*t52469*(8.192E3/2.7E1)+c*c0*t52423*t52432*t52470*t52419*t52493*t52468*t52486*t52469*(4.096E3/9.0)-a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52454*t52419*t52485*(3.584E3/2.7E1)+a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52419*t52438*t52485*(3.584E3/2.7E1)-c*c0*t52410*t52412*t52414*t52423*t52445*t52454*t52419*t52446*t52447*(1.024E3/9.0)+c*c0*t52410*t52412*t52414*t52423*t52445*t52419*t52446*t52438*t52447*(1.024E3/9.0))+t52450*t52504*t52449+t52450*t52492*t52449+t52512*t52557*t52459*2.0+t52516*t52459*(t52500+t52501+t52502+t52503-t52551-t52552-t52553-t52554+t52492-t52555+t52494+t52495+t52496+t52497+t52498+t52499+t52621*t52488*(1.0/3.0)+(t52445*t52488*2.0)/t52431+t52410*t52412*t52414*t52471*t52488*(3.2E1/3.0)-t52410*t52412*t52414*t52433*t52471*t52488*(3.2E1/3.0)+a5*gamma_bb*t52415*t52407*t52545*t52586*t52488*(7.0/3.0)+c*c0*t52423*t52432*t52450*t52416*t52419*t52438*t52449*(8.0/2.7E1)+a5*c0*gamma_bb*t52432*t52450*t52407*t52419*t52438*t52484*t52449*(5.6E1/9.0)+c*c0*t52423*t52432*t52450*t52504*t52408*t52419*t52438*t52449*(2.0/3.0)+c*c0*t52423*t52432*t52450*t52408*t52419*t52438*t52492*t52449*(2.0/3.0)-c*c0*t52423*t52450*t52408*t52481*t52419*t52446*t52438*t52449*(4.0/3.0)+c*c0*t52423*t52450*t52436*t52445*t52419*t52446*t52438*t52449*(8.0/9.0)+c*c0*t52423*t52450*t52408*t52419*t52482*t52438*t52483*t52449*4.0+c*c0*t52423*t52432*t52450*t52436*t52419*t52438*t52449*t52488*(4.0/9.0)+a5*c0*gamma_bb*t52440*t52450*t52407*t52445*t52419*t52446*t52438*t52449*(5.6E1/9.0)+a5*c0*gamma_bb*t52440*t52432*t52450*t52407*t52419*t52438*t52449*t52488*(2.8E1/9.0)+c*c0*t52423*t52450*t52408*t52445*t52419*t52446*t52438*t52449*t52488*(8.0/3.0)-c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52454*t52419*t52449*t52487*(4.48E2/9.0)+c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52419*t52438*t52449*t52487*(4.48E2/9.0)-c*c0*t52423*t52432*t52450*t52470*t52454*t52419*t52449*t52468*t52486*t52469*(4.096E3/2.7E1)+c*c0*t52423*t52432*t52450*t52470*t52419*t52438*t52449*t52468*t52486*t52469*(2.048E3/2.7E1)+c*c0*t52423*t52432*t52450*t52470*t52419*t52493*t52449*t52468*t52486*t52469*(1.024E3/9.0)-a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52450*t52407*t52454*t52419*t52449*t52485*(8.96E2/2.7E1)+a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52450*t52407*t52419*t52438*t52449*t52485*(8.96E2/2.7E1)-c*c0*t52410*t52412*t52414*t52423*t52450*t52445*t52454*t52419*t52446*t52447*t52449*(2.56E2/9.0)-c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52454*t52419*t52447*t52449*t52488*(1.28E2/9.0)+c*c0*t52410*t52412*t52414*t52423*t52450*t52445*t52419*t52446*t52438*t52447*t52449*(2.56E2/9.0)+c*c0*t52410*t52412*t52414*t52423*t52432*t52450*t52419*t52438*t52447*t52449*t52488*(1.28E2/9.0))-t52513*t52506*t52516*(t52433*t52460*t52537*3.0-t52433*t52538*t52539*(3.0/2.0)-t52410*t52412*t52414*t52540*t52438*t52439*(6.08E2/3.0)+t52541*t52470*t52454*t52439*t52468*t52469*(1.024E3/3.0)+c*c0*t52423*t52432*t52416*t52419*t52438*(1.6E1/9.0)-t52410*t52412*t52414*t52460*t52471*t52438*t52467*3.2E1+a5*c0*gamma_bb*t52432*t52407*t52419*t52438*t52484*(1.12E2/3.0)-c*c0*t52423*t52408*t52481*t52419*t52446*t52438*8.0+c*c0*t52423*t52436*t52445*t52419*t52446*t52438*(1.6E1/3.0)+c*c0*t52423*t52408*t52419*t52482*t52438*t52483*2.4E1+a5*c0*gamma_bb*t52440*t52407*t52445*t52419*t52446*t52438*(1.12E2/3.0)-c*c0*t52410*t52412*t52414*t52423*t52432*t52454*t52419*t52487*(8.96E2/3.0)+c*c0*t52410*t52412*t52414*t52423*t52432*t52419*t52438*t52487*(8.96E2/3.0)-c*c0*t52423*t52432*t52470*t52454*t52419*t52468*t52486*t52469*(8.192E3/9.0)+c*c0*t52423*t52432*t52470*t52419*t52438*t52468*t52486*t52469*(4.096E3/9.0)+c*c0*t52423*t52432*t52470*t52419*t52493*t52468*t52486*t52469*(2.048E3/3.0)-a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52454*t52419*t52485*(1.792E3/9.0)+a5*c0*gamma_bb*t52410*t52412*t52414*t52432*t52407*t52419*t52438*t52485*(1.792E3/9.0)-c*c0*t52410*t52412*t52414*t52423*t52445*t52454*t52419*t52446*t52447*(5.12E2/3.0)+c*c0*t52410*t52412*t52414*t52423*t52445*t52419*t52446*t52438*t52447*(5.12E2/3.0))-t52512*t52513*t52522*t52506*2.0-t52513*t52522*t52516*t52557*2.0+(t52522*t52522)*t52506*t52516*1.0/(t52458*t52458*t52458)*2.0+t52504*t52415*t52550*t52545*t52546*t52547*t52548*t52549*(3.0/2.0)+t52415*t52550*t52545*t52492*t52546*t52547*t52548*t52549*(3.0/2.0)-t52415*t52544*t52545*t52546*t52547*t52548*t52549*t52488*(1.0/2.0)-t52431*t52415*t52550*t52445*t52545*t52546*t52547*t52548*t52488*3.0+t52410*t52412*t52421*t52414*t52415*t52545*t52546*t52547*t52556*t52549*t52488*1.6E1-t52410*t52412*t52414*t52415*t52545*t52546*t52547*t52556*t52548*t52549*t52488*1.6E1-a5*gamma_bb*t52611*1.0/(t52423*t52423)*t52407*t52643*t52546*t52547*t52548*t52549*t52488*(7.0/2.0))*(-1.0/2.0)+c0*t52572*t52594*t52597*(t52461*t52462*t52571*(1.0E1/9.0)-t52461*t52591*t52592*t52588*(8.0/3.0)+t52461*1.0/(t52570*t52570*t52570*t52570)*t52544*(t52591*t52591)*6.0-t52461*t52544*t52588*(c*k2*t52416*(4.0/9.0)+c*k1*t52441*t52416*(2.0/9.0)-k1*t52461*t52462*t52477*(1.0/3.6E1))*2.0)*(1.0/2.0)+c0*t52610*t52721*t52572*t52597*(1.0/2.0)+c0*t52610*t52572*t52609*t52585+c0*t52703*t52704*t52572*t52597*(1.0/2.0)+c0*t52572*t52585*t52594*t52599-c0*t52572*t52594*t52597*(t52599*t52599)*(1.0/2.0)-c0*t52610*t52572*t52609*t52597*t52599)-c0*t52572*t52585*t52594+c0*t52610*t52572*t52609*t52597+c0*t52572*t52594*t52597*t52599;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t53476 = tspi_m13*tspi_m13;
                double t53477 = 1.0/pow(rho_a,1.0/3.0);
                double t53478 = a2*a2;
                double t53479 = gamma_aa*gamma_aa;
                double t53480 = 1.0/pow(rho_a,1.6E1/3.0);
                double t53481 = t53476*t53476;
                double t53482 = c*t53477;
                double t53483 = pow(t53482,4.0/5.0);
                double t53497 = rab1*t53483;
                double t53484 = exp(-t53497);
                double t53485 = t53484-1.0;
                double t53498 = kab1*t53485;
                double t53486 = kab0-t53498;
                double t53487 = 1.0/c;
                double t53488 = 1.0/pow(rho_a,7.0/3.0);
                double t53489 = a3*gamma_aa*t53476*t53487*t53488;
                double t53490 = t53489+1.0;
                double t53491 = t53480*t53481*t53478*t53479;
                double t53492 = 1.0/pow(rho_a,8.0/3.0);
                double t53493 = a1*gamma_aa*t53492*t53476;
                double t53494 = t53491+t53493+1.0;
                double t53495 = t53480*t53481*t53478*t53479*2.0;
                double t53496 = exp(t53495);
                double t53499 = 1.0/(t53486*t53486);
                double t53500 = 1.0/(t53494*t53494);
                double t53501 = c*c0*t53500*t53490*t53477*t53496*t53499*(2.0/3.0);
                double t53502 = a1*t53492*t53476;
                double t53503 = gamma_aa*t53480*t53481*t53478*2.0;
                double t53504 = t53502+t53503;
                double t53505 = 1.0/pow(rho_a,1.7E1/3.0);
                double t53506 = 1.0/(t53494*t53494*t53494);
                double t53507 = sqrt(t53501);
                double t53509 = a3*c0*t53500*t53492*t53476*t53496*t53499*(2.0/3.0);
                double t53510 = c*c0*t53504*t53506*t53490*t53477*t53496*t53499*(4.0/3.0);
                double t53511 = c*c0*gamma_aa*t53500*t53505*t53481*t53490*t53478*t53496*t53499*(8.0/3.0);
                double t53508 = -t53510+t53511+t53509;
                double t53512 = t53504*t53504;
                double t53513 = 1.0/(t53494*t53494*t53494*t53494);
                double t53514 = c*c0*t53512*t53513*t53490*t53477*t53496*t53499*4.0;
                double t53515 = c*c0*t53500*t53505*t53481*t53490*t53478*t53496*t53499*(8.0/3.0);
                double t53516 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t53517 = a3*c0*gamma_aa*t53500*t53516*t53481*t53476*t53478*t53496*t53499*(1.6E1/3.0);
                double t53518 = exp(t53501);
                double t53519 = Ei(-t53501);
                double t53520 = t53478*t53478;
                double t53521 = 1.0/pow(rho_a,1.1E1);
                double t53522 = t53481*t53481;
                double t53523 = c*c0*t53500*t53520*t53521*t53522*t53490*t53496*t53479*t53499*(3.2E1/3.0);
                double t53526 = c*c0*gamma_aa*t53504*t53505*t53506*t53481*t53490*t53478*t53496*t53499*(3.2E1/3.0);
                double t53531 = a3*c0*t53504*t53506*t53492*t53476*t53496*t53499*(8.0/3.0);
                double t53532 = c*c0*t53505*t53506*t53481*t53490*t53478*t53496*t53499*(8.0/3.0);
                double t53524 = -t53531+t53514+t53523-t53532+t53515+t53517-t53526;
                double t53525 = t53508*t53508;
                double t53527 = t53507*6.0;
                double t53528 = c*c0*t53500*t53490*t53477*t53496*t53499*4.0;
                double t53529 = t53527+t53528+3.0;
                double t53530 = 1.0/t53529;
                double t53533 = 1.0/sqrt(t53501);
                double t53534 = c*c0*t53500*t53490*t53518*t53519*t53477*t53496*t53499*(2.0/3.0);
                double t53535 = t53534+1.0;
                double t53536 = t53533*t53508*2.0;
                double t53537 = a3*c0*t53500*t53492*t53476*t53496*t53499*(8.0/3.0);
                double t53538 = c*c0*gamma_aa*t53500*t53505*t53481*t53490*t53478*t53496*t53499*(3.2E1/3.0);
                double t53575 = c*c0*t53504*t53506*t53490*t53477*t53496*t53499*(1.6E1/3.0);
                double t53539 = t53536+t53537+t53538-t53575;
                double t53540 = 1.0/(t53529*t53529);
                double t53541 = t53507*4.0;
                double t53542 = c*c0*t53500*t53490*t53477*t53496*t53499*(8.0/3.0);
                double t53543 = t53541+t53542+6.0;
                double t53544 = 1.0/pow(t53501,3.0/2.0);
                double t53545 = t53533*t53508*3.0;
                double t53546 = a3*c0*t53500*t53492*t53476*t53496*t53499*4.0;
                double t53547 = c*c0*gamma_aa*t53500*t53505*t53481*t53490*t53478*t53496*t53499*1.6E1;
                double t53549 = c*c0*t53504*t53506*t53490*t53477*t53496*t53499*8.0;
                double t53548 = t53545+t53546+t53547-t53549;
                double t53550 = a3*c0*t53500*t53518*t53492*t53519*t53476*t53496*t53499*(2.0/3.0);
                double t53551 = c*c0*t53500*t53490*t53508*t53518*t53519*t53477*t53496*t53499*(2.0/3.0);
                double t53552 = c*c0*gamma_aa*t53500*t53505*t53481*t53490*t53518*t53519*t53478*t53496*t53499*(8.0/3.0);
                double t53576 = c*c0*t53504*t53506*t53490*t53518*t53519*t53477*t53496*t53499*(4.0/3.0);
                double t53553 = -t53510+t53511+t53550+t53551+t53552+t53509-t53576;
                double t53554 = 1.0/t53490;
                double t53555 = 1.0/c0;
                double t53556 = pow(rho_a,1.0/3.0);
                double t53557 = exp(-t53495);
                double t53558 = t53486*t53486;
                double t53559 = t53494*t53494;
                double t53560 = 1.0/sqrt(t53490);
                double t53561 = exp(-t53491);
                double t53568 = 1.0/pow(t53490,3.0/2.0);
                double t53572 = t53504*t53560*t53561*t53486*1.0E5;
                double t53573 = a3*t53561*t53476*t53494*t53486*t53487*t53568*t53488*5.0E4;
                double t53574 = gamma_aa*t53560*t53480*t53561*t53481*t53494*t53486*t53478*2.0E5;
                double t53562 = -t53572+t53573+t53574;
                double t53563 = c*c0*t53477*(2.0/3.0);
                double t53570 = t53560*t53561*t53494*t53486*1.0E5;
                double t53564 = -t53570+t53563;
                double t53565 = t53518*t53519;
                double t53566 = t53530*t53543*t53535;
                double t53567 = t53565+t53566;
                double t53569 = 1.0/(c*c);
                double t53571 = dirac(t53564);
                double t53577 = a4*a4;
                double t53578 = t53480*t53481*t53577*t53479*2.0;
                double t53579 = exp(t53578);
                double t53580 = sqrt(t53482);
                double t53581 = t53480*t53481*t53577*t53479;
                double t53582 = t53581+1.0;
                double t53583 = 1.0/(t53582*t53582);
                double t53584 = a5*gamma_aa*t53476*t53487*t53488;
                double t53585 = t53584+1.0;
                double t53596 = raa2*t53580;
                double t53586 = exp(-t53596);
                double t53587 = t53586-1.0;
                double t53588 = kaa2*t53587;
                double t53589 = pow(t53482,2.0/5.0);
                double t53597 = raa1*t53589;
                double t53590 = exp(-t53597);
                double t53591 = t53590-1.0;
                double t53592 = kaa1*t53591;
                double t53593 = -kaa0+t53592+t53588;
                double t53594 = 1.0/(t53593*t53593);
                double t53595 = c*c0*t53583*t53477*t53585*t53594*t53579*(2.0/3.0);
                double t53598 = 1.0/t53582;
                double t53599 = c*c0*t53477*t53585*t53594*t53579*(2.0/3.0);
                double t53604 = a5*c0*t53492*t53476*t53594*t53579*(2.0/3.0);
                double t53605 = c*c0*gamma_aa*t53505*t53481*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53600 = t53604+t53605;
                double t53601 = sqrt(t53599);
                double t53602 = t53577*t53577;
                double t53603 = 1.0/pow(rho_a,3.2E1/3.0);
                double t53606 = 1.0/sqrt(t53599);
                double t53607 = 1.0/(t53582*t53582*t53582);
                double t53608 = t53601*t53598*6.0;
                double t53609 = c*c0*t53583*t53477*t53585*t53594*t53579*4.0;
                double t53610 = t53608+t53609+3.0;
                double t53611 = 1.0/t53610;
                double t53613 = a5*c0*t53492*t53583*t53476*t53594*t53579*(2.0/3.0);
                double t53614 = c*c0*gamma_aa*t53505*t53481*t53583*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53615 = c*c0*gamma_aa*t53505*t53481*t53607*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53612 = t53613+t53614-t53615;
                double t53616 = exp(t53595);
                double t53617 = Ei(-t53595);
                double t53618 = t53612*t53612;
                double t53619 = 1.0/(t53582*t53582*t53582*t53582);
                double t53620 = a5*c0*gamma_aa*t53516*t53481*t53583*t53476*t53594*t53577*t53579*(1.6E1/3.0);
                double t53621 = c*c0*t53505*t53481*t53583*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53622 = c*c0*t53521*t53602*t53522*t53583*t53585*t53594*t53479*t53579*(3.2E1/3.0);
                double t53623 = c*c0*t53521*t53602*t53522*t53619*t53585*t53594*t53479*t53579*1.6E1;
                double t53655 = a5*c0*gamma_aa*t53516*t53481*t53607*t53476*t53594*t53577*t53579*(1.6E1/3.0);
                double t53656 = c*c0*t53505*t53481*t53607*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53657 = c*c0*t53521*t53602*t53522*t53607*t53585*t53594*t53479*t53579*(6.4E1/3.0);
                double t53624 = t53620+t53621+t53622+t53623-t53655-t53656-t53657;
                double t53625 = t53601*t53598*4.0;
                double t53626 = c*c0*t53583*t53477*t53585*t53594*t53579*(8.0/3.0);
                double t53627 = t53625+t53626+6.0;
                double t53628 = a5*c0*t53616*t53617*t53492*t53583*t53476*t53594*t53579*(2.0/3.0);
                double t53629 = c*c0*t53612*t53616*t53617*t53583*t53477*t53585*t53594*t53579*(2.0/3.0);
                double t53630 = c*c0*gamma_aa*t53505*t53481*t53616*t53617*t53583*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53672 = c*c0*gamma_aa*t53505*t53481*t53607*t53616*t53617*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53631 = t53630+t53613+t53614-t53615-t53672+t53628+t53629;
                double t53632 = c*c0*t53616*t53617*t53583*t53477*t53585*t53594*t53579*(2.0/3.0);
                double t53633 = t53632+1.0;
                double t53634 = t53600*t53606*t53598*3.0;
                double t53635 = a5*c0*t53492*t53583*t53476*t53594*t53579*4.0;
                double t53636 = c*c0*gamma_aa*t53505*t53481*t53583*t53585*t53594*t53577*t53579*1.6E1;
                double t53639 = gamma_aa*t53601*t53480*t53481*t53583*t53577*1.2E1;
                double t53640 = c*c0*gamma_aa*t53505*t53481*t53607*t53585*t53594*t53577*t53579*1.6E1;
                double t53637 = -t53640+t53634+t53635+t53636-t53639;
                double t53638 = 1.0/(t53610*t53610);
                double t53641 = t53600*t53606*t53598*2.0;
                double t53642 = a5*c0*t53492*t53583*t53476*t53594*t53579*(8.0/3.0);
                double t53643 = c*c0*gamma_aa*t53505*t53481*t53583*t53585*t53594*t53577*t53579*(3.2E1/3.0);
                double t53670 = gamma_aa*t53601*t53480*t53481*t53583*t53577*8.0;
                double t53671 = c*c0*gamma_aa*t53505*t53481*t53607*t53585*t53594*t53577*t53579*(3.2E1/3.0);
                double t53644 = t53641+t53642+t53643-t53670-t53671;
                double t53645 = a5*c0*gamma_aa*t53516*t53481*t53476*t53594*t53577*t53579*(1.6E1/3.0);
                double t53646 = c*c0*t53505*t53481*t53585*t53594*t53577*t53579*(8.0/3.0);
                double t53647 = c*c0*t53521*t53602*t53522*t53585*t53594*t53479*t53579*(3.2E1/3.0);
                double t53648 = t53645+t53646+t53647;
                double t53649 = t53600*t53600;
                double t53650 = 1.0/pow(t53599,3.0/2.0);
                double t53651 = 1.0/t53585;
                double t53652 = exp(-t53578);
                double t53653 = t53582*t53582;
                double t53654 = t53593*t53593;
                double t53658 = 1.0/(rho_a*rho_a);
                double t53659 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a);
                double t53660 = c*c;
                double t53661 = 1.0/pow(rho_a,2.0/3.0);
                double t53662 = k1*t53580;
                double t53663 = c*k2*t53477;
                double t53664 = t53662+t53663;
                double t53665 = 1.0/(t53664*t53664);
                double t53669 = t53660*t53661*t53665;
                double t53666 = exp(-t53669);
                double t53667 = dirac(t53564,1.0);
                double t53668 = t53562*t53562;
                double t53673 = t53616*t53617;
                double t53674 = t53611*t53633*t53627;
                double t53675 = t53673+t53674;
                double t53676 = t53560*t53480*t53561*t53481*t53486*t53478*2.0E5;
                double t53677 = a3*a3;
                double t53678 = 1.0/pow(rho_a,1.4E1/3.0);
                double t53679 = 1.0/pow(t53490,5.0/2.0);
                double t53680 = t53561*t53481*t53494*t53486*t53569*t53677*t53678*t53679*7.5E4;
                double t53681 = t53520*t53522*t53603*t53560*t53561*t53494*t53486*t53479*4.0E5;
                double t53682 = 1.0/pow(rho_a,2.3E1/3.0);
                double t53683 = a3*gamma_aa*t53561*t53481*t53682*t53476*t53494*t53486*t53478*t53487*t53568*2.0E5;
                double t53684 = t53680+t53681+t53683+t53676-t53560*t53480*t53561*t53481*t53494*t53486*t53478*2.0E5-a3*t53504*t53561*t53476*t53486*t53487*t53568*t53488*1.0E5-gamma_aa*t53504*t53560*t53480*t53561*t53481*t53486*t53478*4.0E5;
                v_gamma_aa_gamma_aa[Q] += scale * rho_b*(c0*heaviside(c*c0*t53477*(-2.0/3.0)+t53560*t53494*t53486*exp(-t53480*t53481*t53478*t53479)*1.0E5)*(t53530*t53535*(t53524*t53533*2.0-t53525*t53544-a3*c0*t53504*t53506*t53492*t53476*t53496*t53499*(3.2E1/3.0)+c*c0*t53512*t53513*t53490*t53477*t53496*t53499*1.6E1+c*c0*t53500*t53505*t53481*t53490*t53478*t53496*t53499*(3.2E1/3.0)-c*c0*t53505*t53506*t53481*t53490*t53478*t53496*t53499*(3.2E1/3.0)+a3*c0*gamma_aa*t53500*t53516*t53481*t53476*t53478*t53496*t53499*(6.4E1/3.0)+c*c0*t53500*t53520*t53521*t53522*t53490*t53496*t53479*t53499*(1.28E2/3.0)-c*c0*gamma_aa*t53504*t53505*t53506*t53481*t53490*t53478*t53496*t53499*(1.28E2/3.0))+t53530*t53543*(t53514+t53523+t53515+t53525+t53517-t53526-(t53504*t53508*2.0)/t53494+gamma_aa*t53480*t53481*t53508*t53478*4.0+a3*t53508*t53554*t53476*t53487*t53488-a3*c0*t53504*t53506*t53492*t53476*t53496*t53499*(8.0/3.0)-c*c0*t53505*t53506*t53481*t53490*t53478*t53496*t53499*(8.0/3.0)+a3*c0*t53500*t53508*t53518*t53492*t53519*t53476*t53496*t53499*(4.0/3.0)-a3*c0*t53504*t53506*t53518*t53492*t53519*t53476*t53496*t53499*(8.0/3.0)+c*c0*t53500*t53524*t53490*t53518*t53519*t53477*t53496*t53499*(2.0/3.0)+c*c0*t53500*t53525*t53490*t53518*t53519*t53477*t53496*t53499*(2.0/3.0)+c*c0*t53512*t53513*t53490*t53518*t53519*t53477*t53496*t53499*4.0+c*c0*t53500*t53505*t53481*t53490*t53518*t53519*t53478*t53496*t53499*(8.0/3.0)-c*c0*t53504*t53506*t53490*t53508*t53518*t53519*t53477*t53496*t53499*(8.0/3.0)-c*c0*t53505*t53506*t53481*t53490*t53518*t53519*t53478*t53496*t53499*(8.0/3.0)+a3*c0*gamma_aa*t53500*t53516*t53481*t53518*t53519*t53476*t53478*t53496*t53499*(1.6E1/3.0)+c*c0*t53500*t53520*t53521*t53522*t53490*t53518*t53519*t53496*t53479*t53499*(3.2E1/3.0)+c*c0*gamma_aa*t53500*t53505*t53481*t53490*t53508*t53518*t53519*t53478*t53496*t53499*(1.6E1/3.0)-c*c0*gamma_aa*t53504*t53505*t53506*t53481*t53490*t53518*t53519*t53478*t53496*t53499*(3.2E1/3.0))+t53530*t53553*t53539*2.0+t53524*t53518*t53519+t53525*t53518*t53519-t53540*t53543*t53553*t53548*2.0-t53540*t53535*t53539*t53548*2.0-t53540*t53543*t53535*(t53524*t53533*3.0-t53525*t53544*(3.0/2.0)-a3*c0*t53504*t53506*t53492*t53476*t53496*t53499*1.6E1+c*c0*t53512*t53513*t53490*t53477*t53496*t53499*2.4E1+c*c0*t53500*t53505*t53481*t53490*t53478*t53496*t53499*1.6E1-c*c0*t53505*t53506*t53481*t53490*t53478*t53496*t53499*1.6E1+a3*c0*gamma_aa*t53500*t53516*t53481*t53476*t53478*t53496*t53499*3.2E1+c*c0*t53500*t53520*t53521*t53522*t53490*t53496*t53479*t53499*6.4E1-c*c0*gamma_aa*t53504*t53505*t53506*t53481*t53490*t53478*t53496*t53499*6.4E1)+t53543*t53535*1.0/(t53529*t53529*t53529)*(t53548*t53548)*2.0+t53524*t53554*t53555*t53556*t53557*t53558*t53487*t53559*(3.0/2.0)+t53525*t53554*t53555*t53556*t53557*t53558*t53487*t53559*(3.0/2.0)+t53504*t53508*t53554*t53555*t53556*t53494*t53557*t53558*t53487*3.0-a3*1.0/(t53490*t53490)*t53508*t53555*t53476*t53557*t53558*t53559*t53658*t53569*(3.0/2.0)-gamma_aa*t53481*t53508*t53554*t53555*t53557*t53558*t53478*t53487*t53559*t53659*6.0)*(1.0/2.0)+c0*t53571*t53567*t53684*(1.0/2.0)-c0*t53567*t53667*t53668*(1.0/2.0)-c0*t53562*t53571*(t53530*t53543*t53553+t53530*t53535*t53539+t53508*t53518*t53519-t53540*t53543*t53535*t53548+t53508*t53554*t53555*t53556*t53557*t53558*t53487*t53559*(3.0/2.0)))+rho_a*(c0*t53666*heaviside(t53570-t53563)*(t53611*t53627*(t53620+t53621+t53622+t53623+t53618+gamma_aa*t53612*t53480*t53481*t53577*4.0+a5*t53612*t53651*t53476*t53487*t53488-gamma_aa*t53612*t53480*t53481*t53577*t53598*4.0-c*c0*t53505*t53481*t53607*t53585*t53594*t53577*t53579*(8.0/3.0)-a5*c0*gamma_aa*t53516*t53481*t53607*t53476*t53594*t53577*t53579*(1.6E1/3.0)+a5*c0*t53612*t53616*t53617*t53492*t53583*t53476*t53594*t53579*(4.0/3.0)-c*c0*t53521*t53602*t53522*t53607*t53585*t53594*t53479*t53579*(6.4E1/3.0)+c*c0*t53624*t53616*t53617*t53583*t53477*t53585*t53594*t53579*(2.0/3.0)+c*c0*t53616*t53617*t53618*t53583*t53477*t53585*t53594*t53579*(2.0/3.0)-c*c0*t53505*t53481*t53607*t53616*t53617*t53585*t53594*t53577*t53579*(8.0/3.0)+c*c0*t53505*t53481*t53616*t53617*t53583*t53585*t53594*t53577*t53579*(8.0/3.0)-a5*c0*gamma_aa*t53516*t53481*t53607*t53616*t53617*t53476*t53594*t53577*t53579*(1.6E1/3.0)+a5*c0*gamma_aa*t53516*t53481*t53616*t53617*t53583*t53476*t53594*t53577*t53579*(1.6E1/3.0)-c*c0*t53521*t53602*t53522*t53607*t53616*t53617*t53585*t53594*t53479*t53579*(6.4E1/3.0)+c*c0*t53521*t53602*t53522*t53616*t53617*t53583*t53585*t53594*t53479*t53579*(3.2E1/3.0)+c*c0*t53521*t53602*t53522*t53616*t53617*t53619*t53585*t53594*t53479*t53579*1.6E1-c*c0*gamma_aa*t53612*t53505*t53481*t53607*t53616*t53617*t53585*t53594*t53577*t53579*(1.6E1/3.0)+c*c0*gamma_aa*t53612*t53505*t53481*t53616*t53617*t53583*t53585*t53594*t53577*t53579*(1.6E1/3.0))+t53611*t53631*t53644*2.0+t53624*t53616*t53617+t53616*t53617*t53618-t53611*t53633*(t53650*t53649*t53598-t53606*t53648*t53598*2.0+t53601*t53480*t53481*t53583*t53577*8.0-t53601*t53602*t53522*t53603*t53607*t53479*3.2E1+gamma_aa*t53600*t53480*t53606*t53481*t53583*t53577*8.0+c*c0*t53505*t53481*t53607*t53585*t53594*t53577*t53579*(3.2E1/3.0)-c*c0*t53505*t53481*t53583*t53585*t53594*t53577*t53579*(3.2E1/3.0)+a5*c0*gamma_aa*t53516*t53481*t53607*t53476*t53594*t53577*t53579*(6.4E1/3.0)-a5*c0*gamma_aa*t53516*t53481*t53583*t53476*t53594*t53577*t53579*(6.4E1/3.0)+c*c0*t53521*t53602*t53522*t53607*t53585*t53594*t53479*t53579*(2.56E2/3.0)-c*c0*t53521*t53602*t53522*t53583*t53585*t53594*t53479*t53579*(1.28E2/3.0)-c*c0*t53521*t53602*t53522*t53619*t53585*t53594*t53479*t53579*6.4E1)-t53631*t53627*t53637*t53638*2.0-t53633*t53644*t53637*t53638*2.0+t53633*t53627*t53638*(t53650*t53649*t53598*(3.0/2.0)-t53606*t53648*t53598*3.0+t53601*t53480*t53481*t53583*t53577*1.2E1-t53601*t53602*t53522*t53603*t53607*t53479*4.8E1+gamma_aa*t53600*t53480*t53606*t53481*t53583*t53577*1.2E1+c*c0*t53505*t53481*t53607*t53585*t53594*t53577*t53579*1.6E1-c*c0*t53505*t53481*t53583*t53585*t53594*t53577*t53579*1.6E1+a5*c0*gamma_aa*t53516*t53481*t53607*t53476*t53594*t53577*t53579*3.2E1-a5*c0*gamma_aa*t53516*t53481*t53583*t53476*t53594*t53577*t53579*3.2E1+c*c0*t53521*t53602*t53522*t53607*t53585*t53594*t53479*t53579*1.28E2-c*c0*t53521*t53602*t53522*t53583*t53585*t53594*t53479*t53579*6.4E1-c*c0*t53521*t53602*t53522*t53619*t53585*t53594*t53479*t53579*9.6E1)+1.0/(t53610*t53610*t53610)*t53633*t53627*(t53637*t53637)*2.0+t53624*t53651*t53652*t53653*t53555*t53654*t53556*t53487*(3.0/2.0)+t53651*t53652*t53653*t53555*t53618*t53654*t53556*t53487*(3.0/2.0)-a5*t53612*t53652*t53653*t53555*t53654*t53476*1.0/(t53585*t53585)*t53658*t53569*(3.0/2.0)-gamma_aa*t53612*t53651*t53481*t53652*t53653*t53555*t53654*t53487*t53577*t53659*6.0+gamma_aa*t53612*t53651*t53481*t53652*t53555*t53582*t53654*t53487*t53577*t53659*6.0)*(1.0/2.0)+c0*t53571*t53666*t53675*t53684*(1.0/2.0)-c0*t53666*t53675*t53667*t53668*(1.0/2.0)-c0*t53562*t53571*t53666*(t53611*t53631*t53627+t53611*t53633*t53644+t53612*t53616*t53617-t53633*t53627*t53637*t53638+t53612*t53651*t53652*t53653*t53555*t53654*t53556*t53487*(3.0/2.0)));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t53690 = tspi_m13*tspi_m13;
                double t53691 = 1.0/pow(rho_b,1.0/3.0);
                double t53692 = a2*a2;
                double t53693 = gamma_bb*gamma_bb;
                double t53694 = 1.0/pow(rho_b,1.6E1/3.0);
                double t53695 = t53690*t53690;
                double t53696 = c*t53691;
                double t53697 = pow(t53696,4.0/5.0);
                double t53711 = rab1*t53697;
                double t53698 = exp(-t53711);
                double t53699 = t53698-1.0;
                double t53712 = kab1*t53699;
                double t53700 = kab0-t53712;
                double t53701 = 1.0/c;
                double t53702 = 1.0/pow(rho_b,7.0/3.0);
                double t53703 = a3*gamma_bb*t53701*t53702*t53690;
                double t53704 = t53703+1.0;
                double t53705 = t53692*t53693*t53694*t53695;
                double t53706 = 1.0/pow(rho_b,8.0/3.0);
                double t53707 = a1*gamma_bb*t53706*t53690;
                double t53708 = t53705+t53707+1.0;
                double t53709 = t53692*t53693*t53694*t53695*2.0;
                double t53710 = exp(t53709);
                double t53713 = 1.0/(t53700*t53700);
                double t53714 = 1.0/(t53708*t53708);
                double t53715 = c*c0*t53710*t53704*t53713*t53714*t53691*(2.0/3.0);
                double t53716 = a1*t53706*t53690;
                double t53717 = gamma_bb*t53692*t53694*t53695*2.0;
                double t53718 = t53716+t53717;
                double t53719 = 1.0/pow(rho_b,1.7E1/3.0);
                double t53720 = 1.0/(t53708*t53708*t53708);
                double t53721 = sqrt(t53715);
                double t53723 = a3*c0*t53710*t53713*t53714*t53706*t53690*(2.0/3.0);
                double t53724 = c*c0*t53710*t53720*t53704*t53713*t53691*t53718*(4.0/3.0);
                double t53725 = c*c0*gamma_bb*t53710*t53704*t53713*t53714*t53692*t53719*t53695*(8.0/3.0);
                double t53722 = t53723-t53724+t53725;
                double t53726 = t53718*t53718;
                double t53727 = 1.0/(t53708*t53708*t53708*t53708);
                double t53728 = c*c0*t53710*t53704*t53713*t53726*t53691*t53727*4.0;
                double t53729 = c*c0*t53710*t53704*t53713*t53714*t53692*t53719*t53695*(8.0/3.0);
                double t53730 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t53731 = a3*c0*gamma_bb*t53710*t53730*t53713*t53714*t53690*t53692*t53695*(1.6E1/3.0);
                double t53732 = exp(t53715);
                double t53733 = Ei(-t53715);
                double t53734 = t53692*t53692;
                double t53735 = 1.0/pow(rho_b,1.1E1);
                double t53736 = t53695*t53695;
                double t53737 = c*c0*t53710*t53704*t53713*t53714*t53734*t53735*t53736*t53693*(3.2E1/3.0);
                double t53740 = c*c0*gamma_bb*t53710*t53720*t53704*t53713*t53718*t53692*t53719*t53695*(3.2E1/3.0);
                double t53745 = a3*c0*t53710*t53720*t53713*t53706*t53690*t53718*(8.0/3.0);
                double t53746 = c*c0*t53710*t53720*t53704*t53713*t53692*t53719*t53695*(8.0/3.0);
                double t53738 = t53731-t53740-t53745+t53728+t53737-t53746+t53729;
                double t53739 = t53722*t53722;
                double t53741 = t53721*6.0;
                double t53742 = c*c0*t53710*t53704*t53713*t53714*t53691*4.0;
                double t53743 = t53741+t53742+3.0;
                double t53744 = 1.0/t53743;
                double t53747 = 1.0/sqrt(t53715);
                double t53748 = c*c0*t53710*t53704*t53713*t53714*t53732*t53733*t53691*(2.0/3.0);
                double t53749 = t53748+1.0;
                double t53750 = t53722*t53747*2.0;
                double t53751 = a3*c0*t53710*t53713*t53714*t53706*t53690*(8.0/3.0);
                double t53752 = c*c0*gamma_bb*t53710*t53704*t53713*t53714*t53692*t53719*t53695*(3.2E1/3.0);
                double t53789 = c*c0*t53710*t53720*t53704*t53713*t53691*t53718*(1.6E1/3.0);
                double t53753 = t53750+t53751+t53752-t53789;
                double t53754 = 1.0/(t53743*t53743);
                double t53755 = t53721*4.0;
                double t53756 = c*c0*t53710*t53704*t53713*t53714*t53691*(8.0/3.0);
                double t53757 = t53755+t53756+6.0;
                double t53758 = 1.0/pow(t53715,3.0/2.0);
                double t53759 = t53722*t53747*3.0;
                double t53760 = a3*c0*t53710*t53713*t53714*t53706*t53690*4.0;
                double t53761 = c*c0*gamma_bb*t53710*t53704*t53713*t53714*t53692*t53719*t53695*1.6E1;
                double t53763 = c*c0*t53710*t53720*t53704*t53713*t53691*t53718*8.0;
                double t53762 = t53760+t53761-t53763+t53759;
                double t53764 = a3*c0*t53710*t53713*t53714*t53732*t53706*t53733*t53690*(2.0/3.0);
                double t53765 = c*c0*t53710*t53704*t53713*t53722*t53714*t53732*t53733*t53691*(2.0/3.0);
                double t53766 = c*c0*gamma_bb*t53710*t53704*t53713*t53714*t53732*t53733*t53692*t53719*t53695*(8.0/3.0);
                double t53790 = c*c0*t53710*t53720*t53704*t53713*t53732*t53733*t53691*t53718*(4.0/3.0);
                double t53767 = t53723-t53724+t53725-t53790+t53764+t53765+t53766;
                double t53768 = 1.0/t53704;
                double t53769 = 1.0/c0;
                double t53770 = pow(rho_b,1.0/3.0);
                double t53771 = exp(-t53709);
                double t53772 = t53700*t53700;
                double t53773 = t53708*t53708;
                double t53774 = 1.0/sqrt(t53704);
                double t53775 = exp(-t53705);
                double t53782 = 1.0/pow(t53704,3.0/2.0);
                double t53786 = t53700*t53718*t53774*t53775*1.0E5;
                double t53787 = a3*t53700*t53701*t53702*t53690*t53708*t53782*t53775*5.0E4;
                double t53788 = gamma_bb*t53700*t53708*t53692*t53774*t53694*t53775*t53695*2.0E5;
                double t53776 = -t53786+t53787+t53788;
                double t53777 = c*c0*t53691*(2.0/3.0);
                double t53784 = t53700*t53708*t53774*t53775*1.0E5;
                double t53778 = -t53784+t53777;
                double t53779 = t53732*t53733;
                double t53780 = t53744*t53757*t53749;
                double t53781 = t53780+t53779;
                double t53783 = 1.0/(c*c);
                double t53785 = dirac(t53778);
                double t53791 = a4*a4;
                double t53792 = t53791*t53693*t53694*t53695*2.0;
                double t53793 = exp(t53792);
                double t53794 = sqrt(t53696);
                double t53795 = t53791*t53693*t53694*t53695;
                double t53796 = t53795+1.0;
                double t53797 = 1.0/(t53796*t53796);
                double t53798 = a5*gamma_bb*t53701*t53702*t53690;
                double t53799 = t53798+1.0;
                double t53810 = raa2*t53794;
                double t53800 = exp(-t53810);
                double t53801 = t53800-1.0;
                double t53802 = kaa2*t53801;
                double t53803 = pow(t53696,2.0/5.0);
                double t53811 = raa1*t53803;
                double t53804 = exp(-t53811);
                double t53805 = t53804-1.0;
                double t53806 = kaa1*t53805;
                double t53807 = -kaa0+t53802+t53806;
                double t53808 = 1.0/(t53807*t53807);
                double t53809 = c*c0*t53691*t53808*t53793*t53797*t53799*(2.0/3.0);
                double t53812 = 1.0/t53796;
                double t53813 = c*c0*t53691*t53808*t53793*t53799*(2.0/3.0);
                double t53818 = a5*c0*t53706*t53690*t53808*t53793*(2.0/3.0);
                double t53819 = c*c0*gamma_bb*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0);
                double t53814 = t53818+t53819;
                double t53815 = sqrt(t53813);
                double t53816 = t53791*t53791;
                double t53817 = 1.0/pow(rho_b,3.2E1/3.0);
                double t53820 = 1.0/sqrt(t53813);
                double t53821 = 1.0/(t53796*t53796*t53796);
                double t53822 = t53812*t53815*6.0;
                double t53823 = c*c0*t53691*t53808*t53793*t53797*t53799*4.0;
                double t53824 = t53822+t53823+3.0;
                double t53825 = 1.0/t53824;
                double t53827 = a5*c0*t53706*t53690*t53808*t53793*t53797*(2.0/3.0);
                double t53828 = c*c0*gamma_bb*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(8.0/3.0);
                double t53829 = c*c0*gamma_bb*t53821*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0);
                double t53826 = t53827+t53828-t53829;
                double t53830 = exp(t53809);
                double t53831 = Ei(-t53809);
                double t53832 = t53826*t53826;
                double t53833 = 1.0/(t53796*t53796*t53796*t53796);
                double t53834 = a5*c0*gamma_bb*t53730*t53690*t53808*t53791*t53793*t53695*t53797*(1.6E1/3.0);
                double t53835 = c*c0*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(8.0/3.0);
                double t53836 = c*c0*t53735*t53816*t53736*t53808*t53693*t53793*t53797*t53799*(3.2E1/3.0);
                double t53837 = c*c0*t53833*t53735*t53816*t53736*t53808*t53693*t53793*t53799*1.6E1;
                double t53869 = a5*c0*gamma_bb*t53730*t53821*t53690*t53808*t53791*t53793*t53695*(1.6E1/3.0);
                double t53870 = c*c0*t53821*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0);
                double t53871 = c*c0*t53821*t53735*t53816*t53736*t53808*t53693*t53793*t53799*(6.4E1/3.0);
                double t53838 = t53834-t53870+t53835-t53871+t53836+t53837-t53869;
                double t53839 = t53812*t53815*4.0;
                double t53840 = c*c0*t53691*t53808*t53793*t53797*t53799*(8.0/3.0);
                double t53841 = t53840+t53839+6.0;
                double t53842 = a5*c0*t53830*t53831*t53706*t53690*t53808*t53793*t53797*(2.0/3.0);
                double t53843 = c*c0*t53830*t53831*t53691*t53808*t53826*t53793*t53797*t53799*(2.0/3.0);
                double t53844 = c*c0*gamma_bb*t53830*t53831*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(8.0/3.0);
                double t53886 = c*c0*gamma_bb*t53821*t53830*t53831*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0);
                double t53845 = t53842+t53843+t53844+t53827+t53828-t53829-t53886;
                double t53846 = c*c0*t53830*t53831*t53691*t53808*t53793*t53797*t53799*(2.0/3.0);
                double t53847 = t53846+1.0;
                double t53848 = t53820*t53812*t53814*3.0;
                double t53849 = a5*c0*t53706*t53690*t53808*t53793*t53797*4.0;
                double t53850 = c*c0*gamma_bb*t53808*t53719*t53791*t53793*t53695*t53797*t53799*1.6E1;
                double t53853 = gamma_bb*t53815*t53791*t53694*t53695*t53797*1.2E1;
                double t53854 = c*c0*gamma_bb*t53821*t53808*t53719*t53791*t53793*t53695*t53799*1.6E1;
                double t53851 = t53850-t53853-t53854+t53848+t53849;
                double t53852 = 1.0/(t53824*t53824);
                double t53855 = t53820*t53812*t53814*2.0;
                double t53856 = a5*c0*t53706*t53690*t53808*t53793*t53797*(8.0/3.0);
                double t53857 = c*c0*gamma_bb*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(3.2E1/3.0);
                double t53884 = gamma_bb*t53815*t53791*t53694*t53695*t53797*8.0;
                double t53885 = c*c0*gamma_bb*t53821*t53808*t53719*t53791*t53793*t53695*t53799*(3.2E1/3.0);
                double t53858 = t53855+t53856+t53857-t53884-t53885;
                double t53859 = a5*c0*gamma_bb*t53730*t53690*t53808*t53791*t53793*t53695*(1.6E1/3.0);
                double t53860 = c*c0*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0);
                double t53861 = c*c0*t53735*t53816*t53736*t53808*t53693*t53793*t53799*(3.2E1/3.0);
                double t53862 = t53860+t53861+t53859;
                double t53863 = t53814*t53814;
                double t53864 = 1.0/pow(t53813,3.0/2.0);
                double t53865 = 1.0/t53799;
                double t53866 = exp(-t53792);
                double t53867 = t53796*t53796;
                double t53868 = t53807*t53807;
                double t53872 = 1.0/(rho_b*rho_b);
                double t53873 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b);
                double t53874 = c*c;
                double t53875 = 1.0/pow(rho_b,2.0/3.0);
                double t53876 = k1*t53794;
                double t53877 = c*k2*t53691;
                double t53878 = t53876+t53877;
                double t53879 = 1.0/(t53878*t53878);
                double t53883 = t53874*t53875*t53879;
                double t53880 = exp(-t53883);
                double t53881 = dirac(t53778,1.0);
                double t53882 = t53776*t53776;
                double t53887 = t53830*t53831;
                double t53888 = t53841*t53825*t53847;
                double t53889 = t53887+t53888;
                double t53890 = t53700*t53692*t53774*t53694*t53775*t53695*2.0E5;
                double t53891 = a3*a3;
                double t53892 = 1.0/pow(rho_b,1.4E1/3.0);
                double t53893 = 1.0/pow(t53704,5.0/2.0);
                double t53894 = t53700*t53708*t53783*t53891*t53775*t53892*t53695*t53893*7.5E4;
                double t53895 = t53700*t53734*t53708*t53736*t53817*t53693*t53774*t53775*4.0E5;
                double t53896 = 1.0/pow(rho_b,2.3E1/3.0);
                double t53897 = a3*gamma_bb*t53700*t53701*t53690*t53708*t53692*t53782*t53775*t53695*t53896*2.0E5;
                double t53898 = t53890+t53894+t53895+t53897-t53700*t53708*t53692*t53774*t53694*t53775*t53695*2.0E5-a3*t53700*t53701*t53702*t53690*t53718*t53782*t53775*1.0E5-gamma_bb*t53700*t53718*t53692*t53774*t53694*t53775*t53695*4.0E5;
                v_gamma_bb_gamma_bb[Q] += scale * rho_a*(c0*heaviside(c*c0*t53691*(-2.0/3.0)+t53700*t53708*t53774*exp(-t53692*t53693*t53694*t53695)*1.0E5)*(t53744*t53749*(t53738*t53747*2.0-t53739*t53758-a3*c0*t53710*t53720*t53713*t53706*t53690*t53718*(3.2E1/3.0)+c*c0*t53710*t53704*t53713*t53726*t53691*t53727*1.6E1-c*c0*t53710*t53720*t53704*t53713*t53692*t53719*t53695*(3.2E1/3.0)+c*c0*t53710*t53704*t53713*t53714*t53692*t53719*t53695*(3.2E1/3.0)+a3*c0*gamma_bb*t53710*t53730*t53713*t53714*t53690*t53692*t53695*(6.4E1/3.0)+c*c0*t53710*t53704*t53713*t53714*t53734*t53735*t53736*t53693*(1.28E2/3.0)-c*c0*gamma_bb*t53710*t53720*t53704*t53713*t53718*t53692*t53719*t53695*(1.28E2/3.0))+t53744*t53757*(t53731-t53740+t53728+t53737+t53729+t53739-(t53722*t53718*2.0)/t53708+gamma_bb*t53722*t53692*t53694*t53695*4.0+a3*t53701*t53702*t53722*t53690*t53768-a3*c0*t53710*t53720*t53713*t53706*t53690*t53718*(8.0/3.0)-c*c0*t53710*t53720*t53704*t53713*t53692*t53719*t53695*(8.0/3.0)+a3*c0*t53710*t53713*t53722*t53714*t53732*t53706*t53733*t53690*(4.0/3.0)-a3*c0*t53710*t53720*t53713*t53732*t53706*t53733*t53690*t53718*(8.0/3.0)+c*c0*t53710*t53704*t53713*t53714*t53732*t53733*t53691*t53738*(2.0/3.0)+c*c0*t53710*t53704*t53713*t53714*t53732*t53733*t53691*t53739*(2.0/3.0)+c*c0*t53710*t53704*t53713*t53732*t53733*t53726*t53691*t53727*4.0-c*c0*t53710*t53720*t53704*t53713*t53722*t53732*t53733*t53691*t53718*(8.0/3.0)-c*c0*t53710*t53720*t53704*t53713*t53732*t53733*t53692*t53719*t53695*(8.0/3.0)+c*c0*t53710*t53704*t53713*t53714*t53732*t53733*t53692*t53719*t53695*(8.0/3.0)+a3*c0*gamma_bb*t53710*t53730*t53713*t53714*t53732*t53733*t53690*t53692*t53695*(1.6E1/3.0)+c*c0*t53710*t53704*t53713*t53714*t53732*t53733*t53734*t53735*t53736*t53693*(3.2E1/3.0)+c*c0*gamma_bb*t53710*t53704*t53713*t53722*t53714*t53732*t53733*t53692*t53719*t53695*(1.6E1/3.0)-c*c0*gamma_bb*t53710*t53720*t53704*t53713*t53732*t53733*t53718*t53692*t53719*t53695*(3.2E1/3.0))+t53732*t53733*t53738+t53732*t53733*t53739+t53744*t53753*t53767*2.0-t53753*t53762*t53754*t53749*2.0-t53762*t53754*t53757*t53767*2.0-t53754*t53757*t53749*(t53738*t53747*3.0-t53739*t53758*(3.0/2.0)-a3*c0*t53710*t53720*t53713*t53706*t53690*t53718*1.6E1+c*c0*t53710*t53704*t53713*t53726*t53691*t53727*2.4E1-c*c0*t53710*t53720*t53704*t53713*t53692*t53719*t53695*1.6E1+c*c0*t53710*t53704*t53713*t53714*t53692*t53719*t53695*1.6E1+a3*c0*gamma_bb*t53710*t53730*t53713*t53714*t53690*t53692*t53695*3.2E1+c*c0*t53710*t53704*t53713*t53714*t53734*t53735*t53736*t53693*6.4E1-c*c0*gamma_bb*t53710*t53720*t53704*t53713*t53718*t53692*t53719*t53695*6.4E1)+1.0/(t53743*t53743*t53743)*(t53762*t53762)*t53757*t53749*2.0+t53701*t53770*t53771*t53772*t53773*t53738*t53768*t53769*(3.0/2.0)+t53701*t53770*t53771*t53772*t53773*t53739*t53768*t53769*(3.0/2.0)+t53701*t53722*t53770*t53708*t53771*t53718*t53772*t53768*t53769*3.0-a3*1.0/(t53704*t53704)*t53722*t53690*t53771*t53772*t53773*t53872*t53783*t53769*(3.0/2.0)-gamma_bb*t53701*t53722*t53771*t53772*t53692*t53773*t53873*t53695*t53768*t53769*6.0)*(1.0/2.0)-c0*t53781*t53881*t53882*(1.0/2.0)+c0*t53781*t53785*t53898*(1.0/2.0)-c0*t53776*t53785*(t53722*t53732*t53733+t53744*t53753*t53749+t53744*t53757*t53767-t53762*t53754*t53757*t53749+t53701*t53722*t53770*t53771*t53772*t53773*t53768*t53769*(3.0/2.0)))+rho_b*(c0*t53880*heaviside(t53784-t53777)*(t53841*t53825*(t53832+t53834+t53835+t53836+t53837+gamma_bb*t53826*t53791*t53694*t53695*4.0+a5*t53701*t53702*t53690*t53826*t53865-gamma_bb*t53812*t53826*t53791*t53694*t53695*4.0-c*c0*t53821*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0)-a5*c0*gamma_bb*t53730*t53821*t53690*t53808*t53791*t53793*t53695*(1.6E1/3.0)+a5*c0*t53830*t53831*t53706*t53690*t53808*t53826*t53793*t53797*(4.0/3.0)-c*c0*t53821*t53735*t53816*t53736*t53808*t53693*t53793*t53799*(6.4E1/3.0)+c*c0*t53830*t53831*t53832*t53691*t53808*t53793*t53797*t53799*(2.0/3.0)+c*c0*t53830*t53831*t53691*t53808*t53793*t53838*t53797*t53799*(2.0/3.0)-c*c0*t53821*t53830*t53831*t53808*t53719*t53791*t53793*t53695*t53799*(8.0/3.0)+c*c0*t53830*t53831*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(8.0/3.0)-a5*c0*gamma_bb*t53730*t53821*t53830*t53831*t53690*t53808*t53791*t53793*t53695*(1.6E1/3.0)+a5*c0*gamma_bb*t53730*t53830*t53831*t53690*t53808*t53791*t53793*t53695*t53797*(1.6E1/3.0)-c*c0*t53821*t53830*t53831*t53735*t53816*t53736*t53808*t53693*t53793*t53799*(6.4E1/3.0)+c*c0*t53830*t53831*t53833*t53735*t53816*t53736*t53808*t53693*t53793*t53799*1.6E1+c*c0*t53830*t53831*t53735*t53816*t53736*t53808*t53693*t53793*t53797*t53799*(3.2E1/3.0)-c*c0*gamma_bb*t53821*t53830*t53831*t53808*t53826*t53719*t53791*t53793*t53695*t53799*(1.6E1/3.0)+c*c0*gamma_bb*t53830*t53831*t53808*t53826*t53719*t53791*t53793*t53695*t53797*t53799*(1.6E1/3.0))+t53830*t53831*t53832+t53830*t53831*t53838+t53825*t53845*t53858*2.0+t53825*t53847*(t53820*t53812*t53862*2.0-t53812*t53863*t53864-t53815*t53791*t53694*t53695*t53797*8.0+t53821*t53815*t53816*t53736*t53817*t53693*3.2E1-gamma_bb*t53820*t53814*t53791*t53694*t53695*t53797*8.0-c*c0*t53821*t53808*t53719*t53791*t53793*t53695*t53799*(3.2E1/3.0)+c*c0*t53808*t53719*t53791*t53793*t53695*t53797*t53799*(3.2E1/3.0)-a5*c0*gamma_bb*t53730*t53821*t53690*t53808*t53791*t53793*t53695*(6.4E1/3.0)+a5*c0*gamma_bb*t53730*t53690*t53808*t53791*t53793*t53695*t53797*(6.4E1/3.0)-c*c0*t53821*t53735*t53816*t53736*t53808*t53693*t53793*t53799*(2.56E2/3.0)+c*c0*t53833*t53735*t53816*t53736*t53808*t53693*t53793*t53799*6.4E1+c*c0*t53735*t53816*t53736*t53808*t53693*t53793*t53797*t53799*(1.28E2/3.0))-t53841*t53851*t53852*t53845*2.0-t53851*t53852*t53847*t53858*2.0-t53841*t53852*t53847*(t53820*t53812*t53862*3.0-t53812*t53863*t53864*(3.0/2.0)-t53815*t53791*t53694*t53695*t53797*1.2E1+t53821*t53815*t53816*t53736*t53817*t53693*4.8E1-gamma_bb*t53820*t53814*t53791*t53694*t53695*t53797*1.2E1-c*c0*t53821*t53808*t53719*t53791*t53793*t53695*t53799*1.6E1+c*c0*t53808*t53719*t53791*t53793*t53695*t53797*t53799*1.6E1-a5*c0*gamma_bb*t53730*t53821*t53690*t53808*t53791*t53793*t53695*3.2E1+a5*c0*gamma_bb*t53730*t53690*t53808*t53791*t53793*t53695*t53797*3.2E1-c*c0*t53821*t53735*t53816*t53736*t53808*t53693*t53793*t53799*1.28E2+c*c0*t53833*t53735*t53816*t53736*t53808*t53693*t53793*t53799*9.6E1+c*c0*t53735*t53816*t53736*t53808*t53693*t53793*t53797*t53799*6.4E1)+t53841*1.0/(t53824*t53824*t53824)*(t53851*t53851)*t53847*2.0+t53701*t53832*t53770*t53865*t53866*t53867*t53769*t53868*(3.0/2.0)+t53701*t53770*t53838*t53865*t53866*t53867*t53769*t53868*(3.0/2.0)-a5*t53690*t53826*t53872*t53783*t53866*t53867*t53769*t53868*1.0/(t53799*t53799)*(3.0/2.0)-gamma_bb*t53701*t53826*t53791*t53873*t53865*t53695*t53866*t53867*t53769*t53868*6.0+gamma_bb*t53701*t53826*t53791*t53873*t53865*t53695*t53866*t53769*t53796*t53868*6.0)*(1.0/2.0)-c0*t53880*t53881*t53882*t53889*(1.0/2.0)+c0*t53880*t53785*t53889*t53898*(1.0/2.0)-c0*t53880*t53776*t53785*(t53830*t53831*t53826+t53841*t53825*t53845+t53825*t53847*t53858-t53841*t53851*t53852*t53847+t53701*t53770*t53826*t53865*t53866*t53867*t53769*t53868*(3.0/2.0)));
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t52724 = tspi_m13*tspi_m13;
                double t52725 = 1.0/pow(rho_a,1.0/3.0);
                double t52726 = a2*a2;
                double t52727 = gamma_aa*gamma_aa;
                double t52728 = 1.0/pow(rho_a,1.6E1/3.0);
                double t52729 = t52724*t52724;
                double t52730 = c*t52725;
                double t52731 = a4*a4;
                double t52732 = 1.0/c;
                double t52733 = 1.0/pow(rho_a,7.0/3.0);
                double t52734 = sqrt(t52730);
                double t52735 = t52731*t52727*t52728*t52729*2.0;
                double t52736 = exp(t52735);
                double t52737 = t52731*t52727*t52728*t52729;
                double t52738 = t52737+1.0;
                double t52739 = 1.0/(t52738*t52738);
                double t52740 = a5*gamma_aa*t52732*t52724*t52733;
                double t52741 = t52740+1.0;
                double t52752 = raa2*t52734;
                double t52742 = exp(-t52752);
                double t52743 = t52742-1.0;
                double t52744 = kaa2*t52743;
                double t52745 = pow(t52730,2.0/5.0);
                double t52753 = raa1*t52745;
                double t52746 = exp(-t52753);
                double t52747 = t52746-1.0;
                double t52748 = kaa1*t52747;
                double t52749 = -kaa0+t52744+t52748;
                double t52750 = 1.0/(t52749*t52749);
                double t52751 = c*c0*t52741*t52750*t52725*t52736*t52739*(2.0/3.0);
                double t52754 = 1.0/pow(rho_a,8.0/3.0);
                double t52755 = 1.0/pow(rho_a,4.0/3.0);
                double t52756 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52757 = 1.0/pow(rho_a,2.0E1/3.0);
                double t52758 = 1.0/(t52738*t52738*t52738);
                double t52759 = t52731*t52731;
                double t52760 = 1.0/pow(rho_a,1.2E1);
                double t52761 = t52729*t52729;
                double t52762 = 1.0/sqrt(t52730);
                double t52763 = c*kaa2*raa2*t52742*t52762*t52755*(1.0/6.0);
                double t52764 = 1.0/pow(t52730,3.0/5.0);
                double t52765 = c*kaa1*raa1*t52746*t52755*t52764*(2.0/1.5E1);
                double t52766 = t52763+t52765;
                double t52767 = 1.0/(t52749*t52749*t52749);
                double t52768 = 1.0/pow(rho_a,1.7E1/3.0);
                double t52769 = 1.0/t52738;
                double t52770 = c*c0*t52741*t52750*t52725*t52736*(2.0/3.0);
                double t52771 = sqrt(t52770);
                double t52772 = 1.0/pow(rho_a,1.1E1/3.0);
                double t52773 = exp(t52751);
                double t52774 = Ei(-t52751);
                double t52775 = c*c0*t52741*t52750*t52736*t52755*t52739*(2.0/9.0);
                double t52776 = a5*c0*gamma_aa*t52750*t52724*t52736*t52772*t52739*(1.4E1/9.0);
                double t52777 = c*c0*t52741*t52725*t52736*t52739*t52766*t52767*(4.0/3.0);
                double t52778 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52739*t52757*(6.4E1/9.0);
                double t52779 = t52771*t52769*6.0;
                double t52780 = c*c0*t52741*t52750*t52725*t52736*t52739*4.0;
                double t52781 = t52780+t52779+3.0;
                double t52782 = 1.0/t52781;
                double t52783 = a5*c0*t52750*t52724*t52736*t52754*t52739*(2.0/3.0);
                double t52784 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52768*(8.0/3.0);
                double t52785 = 1.0/sqrt(t52770);
                double t52788 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52758*t52768*(8.0/3.0);
                double t52786 = t52783+t52784-t52788;
                double t52799 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52757*t52758*(6.4E1/9.0);
                double t52787 = t52775+t52776+t52777+t52778-t52799;
                double t52789 = 1.0/pow(rho_a,1.9E1/3.0);
                double t52790 = a5*c0*t52750*t52724*t52736*t52772*t52739*(1.6E1/9.0);
                double t52791 = a5*c0*t52724*t52736*t52754*t52739*t52766*t52767*(4.0/3.0);
                double t52792 = a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52739*(4.0E1/3.0);
                double t52793 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52757*(1.36E2/9.0);
                double t52794 = c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52739*t52759*(2.56E2/9.0);
                double t52795 = 1.0/(t52738*t52738*t52738*t52738);
                double t52796 = c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52759*t52795*(1.28E2/3.0);
                double t52797 = c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52739*t52766*t52767*t52768*(1.6E1/3.0);
                double t52800 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52757*t52758*(1.36E2/9.0);
                double t52801 = c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52758*t52759*(5.12E2/9.0);
                double t52802 = c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52766*t52758*t52767*t52768*(1.6E1/3.0);
                double t52859 = a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52758*(4.0E1/3.0);
                double t52798 = -t52800-t52801-t52802+t52790+t52791+t52792+t52793+t52794+t52796-t52859+t52797;
                double t52803 = a5*c0*t52750*t52724*t52736*t52754*(2.0/3.0);
                double t52804 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52768*(8.0/3.0);
                double t52805 = t52803+t52804;
                double t52806 = c*c0*t52741*t52750*t52736*t52755*(2.0/9.0);
                double t52807 = a5*c0*gamma_aa*t52750*t52724*t52736*t52772*(1.4E1/9.0);
                double t52808 = c*c0*t52741*t52725*t52736*t52766*t52767*(4.0/3.0);
                double t52809 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52757*(6.4E1/9.0);
                double t52810 = t52806+t52807+t52808+t52809;
                double t52811 = t52771*t52769*4.0;
                double t52812 = c*c0*t52741*t52750*t52725*t52736*t52739*(8.0/3.0);
                double t52813 = t52811+t52812+6.0;
                double t52814 = a5*c0*t52750*t52724*t52736*t52754*t52773*t52774*t52739*(2.0/3.0);
                double t52815 = c*c0*t52741*t52750*t52725*t52736*t52773*t52774*t52739*t52786*(2.0/3.0);
                double t52816 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52739*t52768*(8.0/3.0);
                double t52817 = c*c0*t52741*t52750*t52725*t52736*t52773*t52774*t52739*(2.0/3.0);
                double t52818 = t52817+1.0;
                double t52819 = 1.0/(t52781*t52781);
                double t52820 = a5*c0*t52750*t52724*t52736*t52772*(1.6E1/9.0);
                double t52821 = a5*c0*t52724*t52736*t52754*t52766*t52767*(4.0/3.0);
                double t52822 = a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*(4.0E1/3.0);
                double t52823 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52757*(1.36E2/9.0);
                double t52824 = c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52759*(2.56E2/9.0);
                double t52825 = c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52766*t52767*t52768*(1.6E1/3.0);
                double t52826 = t52820+t52821+t52822+t52823+t52824+t52825;
                double t52827 = 1.0/pow(t52770,3.0/2.0);
                double t52828 = 1.0/pow(rho_a,3.5E1/3.0);
                double t52829 = t52805*t52785*t52769*2.0;
                double t52830 = a5*c0*t52750*t52724*t52736*t52754*t52739*(8.0/3.0);
                double t52831 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52768*(3.2E1/3.0);
                double t52893 = gamma_aa*t52731*t52771*t52728*t52729*t52739*8.0;
                double t52894 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52758*t52768*(3.2E1/3.0);
                double t52832 = t52830+t52831+t52829-t52893-t52894;
                double t52833 = t52810*t52785*t52769*3.0;
                double t52834 = c*c0*t52741*t52750*t52736*t52755*t52739*(4.0/3.0);
                double t52835 = a5*c0*gamma_aa*t52750*t52724*t52736*t52772*t52739*(2.8E1/3.0);
                double t52836 = c*c0*t52741*t52725*t52736*t52739*t52766*t52767*8.0;
                double t52837 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52739*t52757*(1.28E2/3.0);
                double t52856 = t52731*t52771*t52727*t52729*t52739*t52789*3.2E1;
                double t52857 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52757*t52758*(1.28E2/3.0);
                double t52838 = t52833+t52834+t52835+t52836+t52837-t52856-t52857;
                double t52839 = t52810*t52785*t52769*2.0;
                double t52840 = c*c0*t52741*t52750*t52736*t52755*t52739*(8.0/9.0);
                double t52841 = a5*c0*gamma_aa*t52750*t52724*t52736*t52772*t52739*(5.6E1/9.0);
                double t52842 = c*c0*t52741*t52725*t52736*t52739*t52766*t52767*(1.6E1/3.0);
                double t52843 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52739*t52757*(2.56E2/9.0);
                double t52888 = t52731*t52771*t52727*t52729*t52739*t52789*(6.4E1/3.0);
                double t52889 = c*c0*t52731*t52741*t52750*t52727*t52736*t52729*t52757*t52758*(2.56E2/9.0);
                double t52844 = t52840+t52841+t52842+t52843+t52839-t52888-t52889;
                double t52845 = t52805*t52785*t52769*3.0;
                double t52846 = a5*c0*t52750*t52724*t52736*t52754*t52739*4.0;
                double t52847 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52768*1.6E1;
                double t52854 = gamma_aa*t52731*t52771*t52728*t52729*t52739*1.2E1;
                double t52855 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52758*t52768*1.6E1;
                double t52848 = t52845-t52854+t52846-t52855+t52847;
                double t52849 = c*c0*t52741*t52750*t52736*t52755*t52773*t52774*t52739*(2.0/9.0);
                double t52850 = c*c0*t52741*t52725*t52736*t52773*t52774*t52739*t52766*t52767*(4.0/3.0);
                double t52851 = c*c0*t52741*t52750*t52725*t52736*t52773*t52774*t52739*t52787*(2.0/3.0);
                double t52852 = a5*c0*gamma_aa*t52750*t52724*t52736*t52772*t52773*t52774*t52739*(1.4E1/9.0);
                double t52853 = c*c0*t52731*t52741*t52750*t52727*t52736*t52773*t52729*t52774*t52739*t52757*(6.4E1/9.0);
                double t52858 = 1.0/t52741;
                double t52860 = 1.0/c0;
                double t52861 = pow(rho_a,1.0/3.0);
                double t52862 = exp(-t52735);
                double t52863 = t52738*t52738;
                double t52864 = t52749*t52749;
                double t52865 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52890 = c*c0*t52731*t52741*t52750*t52727*t52736*t52773*t52729*t52774*t52757*t52758*(6.4E1/9.0);
                double t52866 = t52850+t52851+t52852+t52853-t52890+t52775+t52776+t52777+t52849+t52778-t52799;
                double t52895 = c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52758*t52768*(8.0/3.0);
                double t52867 = t52814+t52815+t52816+t52783+t52784-t52895-t52788;
                double t52868 = t52726*t52727*t52728*t52729;
                double t52869 = pow(t52730,4.0/5.0);
                double t52886 = rab1*t52869;
                double t52870 = exp(-t52886);
                double t52871 = t52870-1.0;
                double t52887 = kab1*t52871;
                double t52872 = kab0-t52887;
                double t52873 = a3*gamma_aa*t52732*t52724*t52733;
                double t52874 = t52873+1.0;
                double t52875 = 1.0/sqrt(t52874);
                double t52876 = a1*gamma_aa*t52724*t52754;
                double t52877 = t52876+t52868+1.0;
                double t52878 = c*c;
                double t52879 = 1.0/pow(rho_a,2.0/3.0);
                double t52880 = k1*t52734;
                double t52881 = c*k2*t52725;
                double t52882 = t52880+t52881;
                double t52883 = 1.0/(t52882*t52882);
                double t52892 = t52883*t52878*t52879;
                double t52884 = exp(-t52892);
                double t52885 = exp(-t52868);
                double t52891 = c*c0*t52725*(2.0/3.0);
                double t52896 = t52872*t52875*t52885*t52877*1.0E5;
                double t52897 = 1.0/pow(rho_a,1.0E1/3.0);
                double t52898 = 1.0/pow(t52874,3.0/2.0);
                double t52899 = t52726*t52727*t52729*t52789*(1.6E1/3.0);
                double t52900 = a1*gamma_aa*t52724*t52772*(8.0/3.0);
                double t52901 = t52900+t52899;
                double t52902 = a1*t52724*t52754;
                double t52903 = gamma_aa*t52726*t52728*t52729*2.0;
                double t52904 = t52902+t52903;
                double t52905 = 1.0/(c*c);
                double t52906 = 1.0/pow(t52730,1.0/5.0);
                double t52907 = t52891-t52896;
                double t52908 = dirac(t52907);
                double t52909 = t52773*t52774*t52786;
                double t52910 = t52832*t52782*t52818;
                double t52911 = t52813*t52782*t52867;
                double t52912 = t52732*t52860*t52861*t52862*t52863*t52864*t52786*t52858*(3.0/2.0);
                double t53046 = t52813*t52818*t52819*t52848;
                double t52913 = t52910+t52911+t52912+t52909-t53046;
                double t52914 = t52773*t52774;
                double t52915 = t52813*t52782*t52818;
                double t52916 = t52914+t52915;
                double t52917 = 1.0/pow(rho_a,5.0/3.0);
                double t52918 = t52917*t52883*t52878*(2.0/3.0);
                double t52919 = 1.0/(t52882*t52882*t52882);
                double t52920 = c*k2*t52755*(1.0/3.0);
                double t52921 = c*k1*t52762*t52755*(1.0/6.0);
                double t52922 = t52920+t52921;
                double t52923 = t52918-t52922*t52919*t52878*t52879*2.0;
                double t52924 = a3*t52732*t52724*t52733*t52872*t52885*t52877*t52898*5.0E4;
                double t52925 = gamma_aa*t52726*t52728*t52872*t52729*t52875*t52885*t52877*2.0E5;
                double t52927 = t52904*t52872*t52875*t52885*1.0E5;
                double t52926 = t52924+t52925-t52927;
                double t52928 = c*c0*t52755*(2.0/9.0);
                double t52929 = t52726*t52727*t52872*t52729*t52875*t52885*t52877*t52789*(1.6E6/3.0);
                double t52930 = a3*gamma_aa*t52732*t52724*t52872*t52885*t52877*t52897*t52898*(3.5E5/3.0);
                double t53040 = t52901*t52872*t52875*t52885*1.0E5;
                double t53041 = c*kab1*rab1*t52870*t52906*t52755*t52875*t52885*t52877*(8.0E4/3.0);
                double t52931 = t52930+t52928+t52929-t53040-t53041;
                double t52932 = -t52891+t52896;
                double t52933 = heaviside(t52932);
                double t52934 = t52726*t52727*t52728*t52729*2.0;
                double t52935 = exp(t52934);
                double t52936 = 1.0/(t52872*t52872);
                double t52937 = 1.0/(t52877*t52877);
                double t52938 = c*c0*t52725*t52935*t52936*t52874*t52937*(2.0/3.0);
                double t52939 = 1.0/(t52877*t52877*t52877);
                double t52940 = exp(t52938);
                double t52941 = Ei(-t52938);
                double t52942 = c*c0*t52755*t52935*t52936*t52874*t52937*(2.0/9.0);
                double t52943 = a3*c0*gamma_aa*t52724*t52772*t52935*t52936*t52937*(1.4E1/9.0);
                double t52944 = c*c0*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52937*(6.4E1/9.0);
                double t52945 = 1.0/(t52872*t52872*t52872);
                double t52946 = sqrt(t52938);
                double t52947 = t52946*6.0;
                double t52948 = c*c0*t52725*t52935*t52936*t52874*t52937*4.0;
                double t52949 = t52947+t52948+3.0;
                double t52950 = 1.0/t52949;
                double t52973 = c*c0*t52901*t52725*t52935*t52936*t52874*t52939*(4.0/3.0);
                double t52974 = c0*kab1*rab1*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(1.6E1/4.5E1);
                double t52951 = t52942+t52943+t52944-t52973-t52974;
                double t52952 = 1.0/sqrt(t52938);
                double t52953 = a3*c0*t52724*t52754*t52935*t52936*t52937*(2.0/3.0);
                double t52954 = c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52874*t52937*t52768*(8.0/3.0);
                double t52956 = c*c0*t52904*t52725*t52935*t52936*t52874*t52939*(4.0/3.0);
                double t52955 = t52953+t52954-t52956;
                double t52957 = a1*t52724*t52772*(8.0/3.0);
                double t52958 = gamma_aa*t52726*t52729*t52789*(3.2E1/3.0);
                double t52959 = t52957+t52958;
                double t52960 = t52726*t52726;
                double t52961 = a3*c0*t52901*t52724*t52754*t52935*t52936*t52939*(4.0/3.0);
                double t52962 = c*c0*t52904*t52755*t52935*t52936*t52874*t52939*(4.0/9.0);
                double t52963 = c*c0*t52725*t52935*t52936*t52874*t52939*t52959*(4.0/3.0);
                double t52964 = 1.0/(t52877*t52877*t52877*t52877);
                double t52965 = a3*c0*gamma_aa*t52724*t52904*t52772*t52935*t52936*t52939*(2.8E1/9.0);
                double t52966 = c*c0*gamma_aa*t52901*t52726*t52935*t52729*t52936*t52874*t52768*t52939*(1.6E1/3.0);
                double t52967 = c*c0*t52904*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52939*(1.28E2/9.0);
                double t52968 = 1.0/(rho_a*rho_a*rho_a*rho_a);
                double t52969 = a3*c*c0*kab1*rab1*t52724*t52870*t52906*t52935*t52945*t52937*t52968*(1.6E1/4.5E1);
                double t52970 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t52971 = c0*gamma_aa*kab1*rab1*t52726*t52870*t52906*t52970*t52935*t52729*t52945*t52874*t52937*t52878*(6.4E1/4.5E1);
                double t52976 = a3*c0*t52724*t52772*t52935*t52936*t52937*(1.6E1/9.0);
                double t52977 = c*c0*t52901*t52904*t52725*t52935*t52936*t52874*t52964*4.0;
                double t52978 = a3*c0*t52724*t52726*t52727*t52935*t52729*t52756*t52936*t52937*(4.0E1/3.0);
                double t52979 = c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52757*t52874*t52937*(1.36E2/9.0);
                double t52980 = c*c0*gamma_aa*t52760*t52761*t52960*t52727*t52935*t52936*t52874*t52937*(2.56E2/9.0);
                double t52981 = c0*kab1*rab1*t52904*t52870*t52906*t52917*t52935*t52945*t52874*t52939*t52878*(3.2E1/4.5E1);
                double t52972 = t52961+t52962+t52971-t52980+t52963-t52981+t52965+t52966+t52967-t52976-t52977+t52969-t52978-t52979;
                double t52975 = 1.0/rho_a;
                double t52982 = c*c0*t52940*t52725*t52941*t52935*t52936*t52874*t52937*(2.0/3.0);
                double t52983 = t52982+1.0;
                double t52984 = t52952*t52955*2.0;
                double t52985 = a3*c0*t52724*t52754*t52935*t52936*t52937*(8.0/3.0);
                double t52986 = c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52874*t52937*t52768*(3.2E1/3.0);
                double t53038 = c*c0*t52904*t52725*t52935*t52936*t52874*t52939*(1.6E1/3.0);
                double t52987 = t52984+t52985+t52986-t53038;
                double t52988 = 1.0/(t52949*t52949);
                double t52989 = t52951*t52952*2.0;
                double t52990 = c*c0*t52755*t52935*t52936*t52874*t52937*(8.0/9.0);
                double t52991 = a3*c0*gamma_aa*t52724*t52772*t52935*t52936*t52937*(5.6E1/9.0);
                double t52992 = c*c0*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52937*(2.56E2/9.0);
                double t53024 = c*c0*t52901*t52725*t52935*t52936*t52874*t52939*(1.6E1/3.0);
                double t53025 = c0*kab1*rab1*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(6.4E1/4.5E1);
                double t52993 = t52990+t52991+t52992+t52989-t53024-t53025;
                double t52994 = t52946*4.0;
                double t52995 = c*c0*t52725*t52935*t52936*t52874*t52937*(8.0/3.0);
                double t52996 = t52994+t52995+6.0;
                double t52997 = t52952*t52955*3.0;
                double t52998 = a3*c0*t52724*t52754*t52935*t52936*t52937*4.0;
                double t52999 = c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52874*t52937*t52768*1.6E1;
                double t53015 = c*c0*t52904*t52725*t52935*t52936*t52874*t52939*8.0;
                double t53000 = t52997+t52998+t52999-t53015;
                double t53001 = c*c0*t52940*t52941*t52755*t52935*t52936*t52874*t52937*(2.0/9.0);
                double t53002 = a3*c0*gamma_aa*t52724*t52940*t52941*t52772*t52935*t52936*t52937*(1.4E1/9.0);
                double t53003 = c*c0*t52940*t52725*t52941*t52951*t52935*t52936*t52874*t52937*(2.0/3.0);
                double t53004 = c*c0*t52940*t52941*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52937*(6.4E1/9.0);
                double t53005 = t52951*t52952*3.0;
                double t53006 = c*c0*t52755*t52935*t52936*t52874*t52937*(4.0/3.0);
                double t53007 = a3*c0*gamma_aa*t52724*t52772*t52935*t52936*t52937*(2.8E1/3.0);
                double t53008 = c*c0*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52937*(1.28E2/3.0);
                double t53016 = c*c0*t52901*t52725*t52935*t52936*t52874*t52939*8.0;
                double t53017 = c0*kab1*rab1*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(3.2E1/1.5E1);
                double t53009 = t53005+t53006+t53007-t53016+t53008-t53017;
                double t53010 = a3*c0*t52724*t52940*t52941*t52754*t52935*t52936*t52937*(2.0/3.0);
                double t53011 = c*c0*t52940*t52725*t52941*t52935*t52936*t52874*t52937*t52955*(2.0/3.0);
                double t53012 = c*c0*gamma_aa*t52940*t52941*t52726*t52935*t52729*t52936*t52874*t52937*t52768*(8.0/3.0);
                double t53039 = c*c0*t52904*t52940*t52725*t52941*t52935*t52936*t52874*t52939*(4.0/3.0);
                double t53013 = t52953+t52954-t52956+t53010+t53011+t53012-t53039;
                double t53014 = 1.0/pow(t52938,3.0/2.0);
                double t53018 = 1.0/t52874;
                double t53019 = exp(-t52934);
                double t53020 = t52872*t52872;
                double t53021 = t52877*t52877;
                double t53022 = 1.0/(rho_a*rho_a);
                double t53023 = t52942+t52943+t52944-t52973-t52974+t53001+t53002+t53003+t53004-c*c0*t52901*t52940*t52725*t52941*t52935*t52936*t52874*t52939*(4.0/3.0)-c0*kab1*rab1*t52940*t52941*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(1.6E1/4.5E1);
                double t53026 = a3*t52732*t52724*t52872*t52885*t52877*t52897*t52898*(3.5E5/3.0);
                double t53027 = a3*t52901*t52732*t52724*t52733*t52872*t52885*t52898*5.0E4;
                double t53028 = gamma_aa*t52726*t52872*t52729*t52875*t52885*t52877*t52789*(3.2E6/3.0);
                double t53029 = gamma_aa*t52901*t52726*t52728*t52872*t52729*t52875*t52885*2.0E5;
                double t53030 = t52904*t52726*t52727*t52872*t52729*t52875*t52885*t52789*(1.6E6/3.0);
                double t53031 = a3*a3;
                double t53032 = 1.0/pow(t52874,5.0/2.0);
                double t53033 = a3*gamma_aa*t52732*t52724*t52904*t52872*t52885*t52897*t52898*(3.5E5/3.0);
                double t53034 = a3*kab1*rab1*t52724*t52870*t52906*t52772*t52885*t52877*t52898*(4.0E4/3.0);
                double t53035 = 1.0/pow(rho_a,2.6E1/3.0);
                double t53036 = c*gamma_aa*kab1*rab1*t52726*t52870*t52906*t52729*t52757*t52875*t52885*t52877*(1.6E5/3.0);
                double t53037 = t53030+t53033+t53034+t53026+t53027+t53036+t53028+t53029-t52872*t52875*t52885*t52959*1.0E5-c*kab1*rab1*t52904*t52870*t52906*t52755*t52875*t52885*(8.0E4/3.0)-gamma_aa*t52761*t52960*t52727*t52872*t52828*t52875*t52885*t52877*(3.2E6/3.0)-gamma_aa*t52905*t52872*t52729*t52768*t52885*t52877*t53031*t53032*1.75E5-a3*t52732*t52724*t52726*t52727*t52872*t52729*t52885*t52877*t52898*t53035*5.0E5;
                double t53042 = dirac(t52907,1.0);
                double t53043 = t52940*t52941;
                double t53044 = t52950*t52983*t52996;
                double t53045 = t53043+t53044;
                v_rho_a_gamma_aa[Q] += scale * rho_a*(c0*t52884*heaviside(c*c0*t52725*(-2.0/3.0)+t52872*t52875*t52877*exp(-t52726*t52727*t52728*t52729)*1.0E5)*(t52782*t52818*(t52826*t52785*t52769*2.0-t52810*t52805*t52827*t52769-gamma_aa*t52731*t52771*t52729*t52739*t52789*(1.28E2/3.0)+a5*c0*t52750*t52724*t52736*t52772*t52739*(6.4E1/9.0)-gamma_aa*t52810*t52731*t52728*t52729*t52739*t52785*4.0+gamma_aa*t52761*t52771*t52727*t52828*t52758*t52759*(2.56E2/3.0)-t52731*t52805*t52727*t52729*t52739*t52785*t52789*(3.2E1/3.0)+a5*c0*t52724*t52736*t52754*t52739*t52766*t52767*(1.6E1/3.0)+c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52757*(5.44E2/9.0)-c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52757*t52758*(5.44E2/9.0)+a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52739*(1.6E2/3.0)-a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52758*(1.6E2/3.0)+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52739*t52759*(1.024E3/9.0)-c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52758*t52759*(2.048E3/9.0)+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52759*t52795*(5.12E2/3.0)+c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52739*t52766*t52767*t52768*(6.4E1/3.0)-c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52766*t52758*t52767*t52768*(6.4E1/3.0))+t52813*t52782*(-t52800-t52801-t52802+t52790+t52791+t52792+t52793+t52794+t52796-t52859+t52797+t52786*t52975*(1.0/3.0)+t52786*t52787+(t52766*t52786*2.0)/t52749+t52731*t52727*t52729*t52786*t52789*(3.2E1/3.0)-t52731*t52727*t52729*t52786*t52769*t52789*(3.2E1/3.0)+a5*gamma_aa*t52732*t52724*t52786*t52858*t52897*(7.0/3.0)+a5*c0*t52750*t52724*t52736*t52772*t52773*t52774*t52739*(1.6E1/9.0)+a5*c0*t52750*t52724*t52736*t52754*t52773*t52774*t52739*t52787*(2.0/3.0)+a5*c0*t52724*t52736*t52754*t52773*t52774*t52739*t52766*t52767*(4.0/3.0)+c*c0*t52741*t52750*t52725*t52736*t52773*t52774*t52739*t52798*(2.0/3.0)+c*c0*t52741*t52750*t52736*t52755*t52773*t52774*t52739*t52786*(2.0/9.0)+a5*c0*gamma_aa*t52750*t52724*t52736*t52772*t52773*t52774*t52739*t52786*(1.4E1/9.0)+c*c0*t52741*t52750*t52725*t52736*t52773*t52774*t52739*t52786*t52787*(2.0/3.0)+c*c0*t52741*t52725*t52736*t52773*t52774*t52739*t52766*t52767*t52786*(4.0/3.0)+c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52739*t52757*(1.36E2/9.0)-c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52757*t52758*(1.36E2/9.0)+a5*c0*t52731*t52750*t52724*t52727*t52736*t52773*t52729*t52756*t52774*t52739*(4.0E1/3.0)-a5*c0*t52731*t52750*t52724*t52727*t52736*t52773*t52729*t52756*t52774*t52758*(4.0E1/3.0)+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52773*t52774*t52739*t52759*(2.56E2/9.0)-c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52773*t52774*t52758*t52759*(5.12E2/9.0)+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52773*t52774*t52759*t52795*(1.28E2/3.0)+c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52739*t52768*t52787*(8.0/3.0)-c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52773*t52729*t52774*t52758*t52768*t52787*(8.0/3.0)+c*c0*gamma_aa*t52731*t52741*t52736*t52773*t52729*t52774*t52739*t52766*t52767*t52768*(1.6E1/3.0)-c*c0*gamma_aa*t52731*t52741*t52736*t52773*t52729*t52774*t52766*t52758*t52767*t52768*(1.6E1/3.0)+c*c0*t52731*t52741*t52750*t52727*t52736*t52773*t52729*t52774*t52739*t52757*t52786*(6.4E1/9.0)-c*c0*t52731*t52741*t52750*t52727*t52736*t52773*t52729*t52774*t52757*t52758*t52786*(6.4E1/9.0))+t52832*t52782*t52866+t52844*t52782*t52867+t52773*t52774*t52798-t52832*t52818*t52819*t52838-t52813*t52819*t52838*t52867-t52813*t52819*t52848*t52866-t52844*t52818*t52819*t52848+t52773*t52774*t52786*t52787-t52813*t52818*t52819*(t52826*t52785*t52769*3.0-t52810*t52805*t52827*t52769*(3.0/2.0)-gamma_aa*t52731*t52771*t52729*t52739*t52789*6.4E1+a5*c0*t52750*t52724*t52736*t52772*t52739*(3.2E1/3.0)-gamma_aa*t52810*t52731*t52728*t52729*t52739*t52785*6.0+gamma_aa*t52761*t52771*t52727*t52828*t52758*t52759*1.28E2-t52731*t52805*t52727*t52729*t52739*t52785*t52789*1.6E1+a5*c0*t52724*t52736*t52754*t52739*t52766*t52767*8.0+c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52739*t52757*(2.72E2/3.0)-c*c0*gamma_aa*t52731*t52741*t52750*t52736*t52729*t52757*t52758*(2.72E2/3.0)+a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52739*8.0E1-a5*c0*t52731*t52750*t52724*t52727*t52736*t52729*t52756*t52758*8.0E1+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52739*t52759*(5.12E2/3.0)-c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52758*t52759*(1.024E3/3.0)+c*c0*gamma_aa*t52741*t52750*t52760*t52761*t52727*t52736*t52759*t52795*2.56E2+c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52739*t52766*t52767*t52768*3.2E1-c*c0*gamma_aa*t52731*t52741*t52736*t52729*t52766*t52758*t52767*t52768*3.2E1)+t52813*1.0/(t52781*t52781*t52781)*t52818*t52838*t52848*2.0+t52732*t52860*t52861*t52862*t52863*t52864*t52858*t52798*(3.0/2.0)+t52732*t52860*t52861*t52862*t52863*t52864*t52786*t52858*t52787*(3.0/2.0)-a5*1.0/(t52741*t52741)*t52724*t52860*t52905*t52862*t52863*t52864*t52787*t53022*(3.0/2.0)-gamma_aa*t52731*t52732*t52860*t52862*t52863*t52729*t52864*t52865*t52858*t52787*6.0+gamma_aa*t52731*t52732*t52860*t52862*t52729*t52738*t52864*t52865*t52858*t52787*6.0)*(-1.0/2.0)+c0*t52913*t52923*t52933*t52884*(1.0/2.0)+c0*t52913*t52931*t52908*t52884*(1.0/2.0)+c0*t52916*t52908*t52884*t53037*(1.0/2.0)+c0*t52926*t52884*dirac(t52891-t52872*t52875*t52885*t52877*1.0E5)*(t52813*t52782*t52866+t52844*t52782*t52818+t52773*t52774*t52787-t52813*t52818*t52819*t52838+t52732*t52860*t52861*t52862*t52863*t52864*t52858*t52787*(3.0/2.0))*(1.0/2.0)-c0*t52923*t52916*t52908*t52926*t52884*(1.0/2.0)+c0*t52931*t52916*t52926*t52884*t53042*(1.0/2.0))+rho_b*(c0*t52933*(t52950*t52983*(t52952*t52972*2.0+t52951*t52955*t53014-a3*c0*t52724*t52772*t52935*t52936*t52937*(6.4E1/9.0)+a3*c0*t52901*t52724*t52754*t52935*t52936*t52939*(1.6E1/3.0)+c*c0*t52904*t52755*t52935*t52936*t52874*t52939*(1.6E1/9.0)+c*c0*t52725*t52935*t52936*t52874*t52939*t52959*(1.6E1/3.0)+a3*c0*gamma_aa*t52724*t52904*t52772*t52935*t52936*t52939*(1.12E2/9.0)-c*c0*t52901*t52904*t52725*t52935*t52936*t52874*t52964*1.6E1-c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52757*t52874*t52937*(5.44E2/9.0)-a3*c0*t52724*t52726*t52727*t52935*t52729*t52756*t52936*t52937*(1.6E2/3.0)-c*c0*gamma_aa*t52760*t52761*t52960*t52727*t52935*t52936*t52874*t52937*(1.024E3/9.0)+c*c0*gamma_aa*t52901*t52726*t52935*t52729*t52936*t52874*t52768*t52939*(6.4E1/3.0)+c*c0*t52904*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52939*(5.12E2/9.0)+a3*c*c0*kab1*rab1*t52724*t52870*t52906*t52935*t52945*t52937*t52968*(6.4E1/4.5E1)-c0*kab1*rab1*t52904*t52870*t52906*t52917*t52935*t52945*t52874*t52939*t52878*(1.28E2/4.5E1)+c0*gamma_aa*kab1*rab1*t52726*t52870*t52906*t52970*t52935*t52729*t52945*t52874*t52937*t52878*(2.56E2/4.5E1))+t52950*t52996*(t52961+t52962+t52971-t52980+t52963-t52981+t52965+t52966+t52967-t52976-t52977+t52969-t52978-t52979-t52951*t52955-t52955*t52975*(1.0/3.0)+(t52901*t52955*2.0)/t52877-t52726*t52727*t52729*t52955*t52789*(3.2E1/3.0)-a3*gamma_aa*t52732*t52724*t52955*t52897*t53018*(7.0/3.0)+(c*kab1*rab1*t52870*t52906*t52755*t52955*(8.0/1.5E1))/t52872-a3*c0*t52724*t52940*t52941*t52772*t52935*t52936*t52937*(1.6E1/9.0)+a3*c0*t52901*t52724*t52940*t52941*t52754*t52935*t52936*t52939*(4.0/3.0)-a3*c0*t52724*t52940*t52941*t52951*t52754*t52935*t52936*t52937*(2.0/3.0)+c*c0*t52904*t52940*t52941*t52755*t52935*t52936*t52874*t52939*(4.0/9.0)+c*c0*t52940*t52725*t52941*t52935*t52936*t52972*t52874*t52937*(2.0/3.0)-c*c0*t52940*t52941*t52755*t52935*t52936*t52874*t52937*t52955*(2.0/9.0)+c*c0*t52940*t52725*t52941*t52935*t52936*t52874*t52939*t52959*(4.0/3.0)+a3*c0*gamma_aa*t52724*t52904*t52940*t52941*t52772*t52935*t52936*t52939*(2.8E1/9.0)-a3*c0*gamma_aa*t52724*t52940*t52941*t52772*t52935*t52936*t52937*t52955*(1.4E1/9.0)-c*c0*t52901*t52904*t52940*t52725*t52941*t52935*t52936*t52874*t52964*4.0+c*c0*t52904*t52940*t52725*t52941*t52951*t52935*t52936*t52874*t52939*(4.0/3.0)+c*c0*t52901*t52940*t52725*t52941*t52935*t52936*t52874*t52955*t52939*(4.0/3.0)-c*c0*t52940*t52725*t52941*t52951*t52935*t52936*t52874*t52937*t52955*(2.0/3.0)-c*c0*gamma_aa*t52940*t52941*t52726*t52935*t52729*t52936*t52757*t52874*t52937*(1.36E2/9.0)-a3*c0*t52724*t52940*t52941*t52726*t52727*t52935*t52729*t52756*t52936*t52937*(4.0E1/3.0)-c*c0*gamma_aa*t52760*t52940*t52761*t52941*t52960*t52727*t52935*t52936*t52874*t52937*(2.56E2/9.0)+c*c0*gamma_aa*t52901*t52940*t52941*t52726*t52935*t52729*t52936*t52874*t52768*t52939*(1.6E1/3.0)-c*c0*gamma_aa*t52940*t52941*t52726*t52951*t52935*t52729*t52936*t52874*t52937*t52768*(8.0/3.0)+c*c0*t52904*t52940*t52941*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52939*(1.28E2/9.0)-c*c0*t52940*t52941*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52937*t52955*(6.4E1/9.0)+a3*c*c0*kab1*rab1*t52724*t52940*t52941*t52870*t52906*t52935*t52945*t52937*t52968*(1.6E1/4.5E1)-c0*kab1*rab1*t52904*t52940*t52941*t52870*t52906*t52917*t52935*t52945*t52874*t52939*t52878*(3.2E1/4.5E1)+c0*kab1*rab1*t52940*t52941*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52955*t52878*(1.6E1/4.5E1)+c0*gamma_aa*kab1*rab1*t52940*t52941*t52726*t52870*t52906*t52970*t52935*t52729*t52945*t52874*t52937*t52878*(6.4E1/4.5E1))+t52940*t52941*t52972-t52950*t52993*t53013-t52950*t52987*(t52942+t52943+t52944+t53001+t53002+t53003+t53004-c*c0*t52901*t52725*t52935*t52936*t52874*t52939*(4.0/3.0)-c*c0*t52901*t52940*t52725*t52941*t52935*t52936*t52874*t52939*(4.0/3.0)-c0*kab1*rab1*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(1.6E1/4.5E1)-c0*kab1*rab1*t52940*t52941*t52870*t52906*t52917*t52935*t52945*t52874*t52937*t52878*(1.6E1/4.5E1))-t52940*t52941*t52951*t52955+t52983*t52993*t52988*t53000+t52983*t52987*t52988*t53009+t52996*t52988*t53000*t53023+t52996*t52988*t53013*t53009-t52983*t52996*t52988*(t52952*t52972*3.0+t52951*t52955*t53014*(3.0/2.0)-a3*c0*t52724*t52772*t52935*t52936*t52937*(3.2E1/3.0)+a3*c0*t52901*t52724*t52754*t52935*t52936*t52939*8.0+c*c0*t52904*t52755*t52935*t52936*t52874*t52939*(8.0/3.0)+c*c0*t52725*t52935*t52936*t52874*t52939*t52959*8.0+a3*c0*gamma_aa*t52724*t52904*t52772*t52935*t52936*t52939*(5.6E1/3.0)-c*c0*t52901*t52904*t52725*t52935*t52936*t52874*t52964*2.4E1-c*c0*gamma_aa*t52726*t52935*t52729*t52936*t52757*t52874*t52937*(2.72E2/3.0)-a3*c0*t52724*t52726*t52727*t52935*t52729*t52756*t52936*t52937*8.0E1-c*c0*gamma_aa*t52760*t52761*t52960*t52727*t52935*t52936*t52874*t52937*(5.12E2/3.0)+c*c0*gamma_aa*t52901*t52726*t52935*t52729*t52936*t52874*t52768*t52939*3.2E1+c*c0*t52904*t52726*t52727*t52935*t52729*t52936*t52757*t52874*t52939*(2.56E2/3.0)+a3*c*c0*kab1*rab1*t52724*t52870*t52906*t52935*t52945*t52937*t52968*(3.2E1/1.5E1)-c0*kab1*rab1*t52904*t52870*t52906*t52917*t52935*t52945*t52874*t52939*t52878*(6.4E1/1.5E1)+c0*gamma_aa*kab1*rab1*t52726*t52870*t52906*t52970*t52935*t52729*t52945*t52874*t52937*t52878*(1.28E2/1.5E1))-t52983*1.0/(t52949*t52949*t52949)*t52996*t53000*t53009*2.0+t52732*t52860*t52861*t52972*t53020*t53021*t53018*t53019*(3.0/2.0)-t52732*t52904*t52860*t52861*t52951*t52877*t53020*t53018*t53019*3.0-t52732*t52860*t52861*t52951*t52955*t53020*t53021*t53018*t53019*(3.0/2.0)+a3*t52724*t52860*t52905*t52951*1.0/(t52874*t52874)*t53020*t53021*t53022*t53019*(3.0/2.0)+gamma_aa*t52732*t52860*t52726*t52951*t52729*t52865*t53020*t53021*t53018*t53019*6.0)*(1.0/2.0)+c0*t52908*t53045*t53037*(1.0/2.0)+c0*t52931*t52908*(t52940*t52941*t52955+t52950*t52983*t52987+t52950*t52996*t53013-t52983*t52996*t52988*t53000+t52732*t52860*t52861*t52955*t53020*t53021*t53018*t53019*(3.0/2.0))*(1.0/2.0)+c0*t52908*t52926*(t52940*t52941*t52951+t52950*t52983*t52993+t52950*t52996*t53023-t52983*t52996*t52988*t53009+t52732*t52860*t52861*t52951*t53020*t53021*t53018*t53019*(3.0/2.0))*(1.0/2.0)+c0*t52931*t52926*t53042*t53045*(1.0/2.0))+c0*t52913*t52933*t52884*(1.0/2.0)-c0*t52916*t52908*t52926*t52884*(1.0/2.0);
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t53049 = tspi_m13*tspi_m13;
                double t53050 = 1.0/pow(rho_b,1.0/3.0);
                double t53051 = a2*a2;
                double t53052 = gamma_bb*gamma_bb;
                double t53053 = 1.0/pow(rho_b,1.6E1/3.0);
                double t53054 = t53049*t53049;
                double t53055 = t53051*t53052*t53053*t53054*2.0;
                double t53056 = exp(t53055);
                double t53057 = c*t53050;
                double t53058 = pow(t53057,4.0/5.0);
                double t53070 = rab1*t53058;
                double t53059 = exp(-t53070);
                double t53060 = t53059-1.0;
                double t53071 = kab1*t53060;
                double t53061 = kab0-t53071;
                double t53062 = 1.0/c;
                double t53063 = 1.0/pow(rho_b,7.0/3.0);
                double t53064 = a3*gamma_bb*t53062*t53063*t53049;
                double t53065 = t53064+1.0;
                double t53066 = t53051*t53052*t53053*t53054;
                double t53067 = 1.0/pow(rho_b,8.0/3.0);
                double t53068 = a1*gamma_bb*t53049*t53067;
                double t53069 = t53066+t53068+1.0;
                double t53072 = 1.0/(t53061*t53061);
                double t53073 = 1.0/(t53069*t53069);
                double t53074 = c*c0*t53050*t53072*t53073*t53056*t53065*(2.0/3.0);
                double t53075 = a1*t53049*t53067;
                double t53076 = gamma_bb*t53051*t53053*t53054*2.0;
                double t53077 = t53075+t53076;
                double t53078 = 1.0/(t53069*t53069*t53069);
                double t53079 = 1.0/pow(rho_b,1.7E1/3.0);
                double t53080 = exp(t53074);
                double t53081 = Ei(-t53074);
                double t53082 = a3*c0*t53072*t53073*t53056*t53049*t53067*(2.0/3.0);
                double t53083 = c*c0*gamma_bb*t53051*t53054*t53072*t53073*t53056*t53065*t53079*(8.0/3.0);
                double t53090 = c*c0*t53050*t53072*t53056*t53065*t53077*t53078*(4.0/3.0);
                double t53084 = -t53090+t53082+t53083;
                double t53085 = sqrt(t53074);
                double t53086 = t53085*6.0;
                double t53087 = c*c0*t53050*t53072*t53073*t53056*t53065*4.0;
                double t53088 = t53086+t53087+3.0;
                double t53089 = 1.0/t53088;
                double t53091 = c*c0*t53050*t53080*t53072*t53081*t53073*t53056*t53065*(2.0/3.0);
                double t53092 = t53091+1.0;
                double t53093 = t53085*4.0;
                double t53094 = c*c0*t53050*t53072*t53073*t53056*t53065*(8.0/3.0);
                double t53095 = t53093+t53094+6.0;
                double t53096 = 1.0/sqrt(t53074);
                double t53097 = 1.0/sqrt(t53065);
                double t53098 = exp(-t53066);
                v_rho_a_gamma_bb[Q] += scale * c0*heaviside(c*c0*t53050*(-2.0/3.0)+t53061*t53069*t53097*exp(-t53051*t53052*t53053*t53054)*1.0E5)*(t53080*t53081*t53084+t53095*t53089*(-t53090+t53082+t53083+a3*c0*t53080*t53072*t53081*t53073*t53056*t53049*t53067*(2.0/3.0)+c*c0*t53050*t53080*t53072*t53081*t53073*t53056*t53065*t53084*(2.0/3.0)-c*c0*t53050*t53080*t53072*t53081*t53056*t53065*t53077*t53078*(4.0/3.0)+c*c0*gamma_bb*t53051*t53080*t53054*t53072*t53081*t53073*t53056*t53065*t53079*(8.0/3.0))+t53092*t53089*(t53084*t53096*2.0+a3*c0*t53072*t53073*t53056*t53049*t53067*(8.0/3.0)-c*c0*t53050*t53072*t53056*t53065*t53077*t53078*(1.6E1/3.0)+c*c0*gamma_bb*t53051*t53054*t53072*t53073*t53056*t53065*t53079*(3.2E1/3.0))-t53092*t53095*1.0/(t53088*t53088)*(t53084*t53096*3.0+a3*c0*t53072*t53073*t53056*t53049*t53067*4.0-c*c0*t53050*t53072*t53056*t53065*t53077*t53078*8.0+c*c0*gamma_bb*t53051*t53054*t53072*t53073*t53056*t53065*t53079*1.6E1)+(pow(rho_b,1.0/3.0)*(t53061*t53061)*t53062*t53084*(t53069*t53069)*exp(-t53055)*(3.0/2.0))/(c0*t53065))*(1.0/2.0)-c0*dirac(c*c0*t53050*(2.0/3.0)-t53061*t53069*t53097*t53098*1.0E5)*(t53080*t53081+t53092*t53095*t53089)*(t53061*t53077*t53097*t53098*-1.0E5+a3*t53061*t53062*t53063*1.0/pow(t53065,3.0/2.0)*t53049*t53069*t53098*5.0E4+gamma_bb*t53051*t53061*t53053*t53054*t53069*t53097*t53098*2.0E5)*(1.0/2.0);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t53100 = tspi_m13*tspi_m13;
                double t53101 = 1.0/pow(rho_a,1.0/3.0);
                double t53102 = a2*a2;
                double t53103 = gamma_aa*gamma_aa;
                double t53104 = 1.0/pow(rho_a,1.6E1/3.0);
                double t53105 = t53100*t53100;
                double t53106 = t53102*t53103*t53104*t53105*2.0;
                double t53107 = exp(t53106);
                double t53108 = c*t53101;
                double t53109 = pow(t53108,4.0/5.0);
                double t53121 = rab1*t53109;
                double t53110 = exp(-t53121);
                double t53111 = t53110-1.0;
                double t53122 = kab1*t53111;
                double t53112 = kab0-t53122;
                double t53113 = 1.0/c;
                double t53114 = 1.0/pow(rho_a,7.0/3.0);
                double t53115 = a3*gamma_aa*t53100*t53113*t53114;
                double t53116 = t53115+1.0;
                double t53117 = t53102*t53103*t53104*t53105;
                double t53118 = 1.0/pow(rho_a,8.0/3.0);
                double t53119 = a1*gamma_aa*t53100*t53118;
                double t53120 = t53117+t53119+1.0;
                double t53123 = 1.0/(t53112*t53112);
                double t53124 = 1.0/(t53120*t53120);
                double t53125 = c*c0*t53101*t53123*t53124*t53107*t53116*(2.0/3.0);
                double t53126 = a1*t53100*t53118;
                double t53127 = gamma_aa*t53102*t53104*t53105*2.0;
                double t53128 = t53126+t53127;
                double t53129 = 1.0/(t53120*t53120*t53120);
                double t53130 = 1.0/pow(rho_a,1.7E1/3.0);
                double t53131 = exp(t53125);
                double t53132 = Ei(-t53125);
                double t53133 = a3*c0*t53100*t53123*t53124*t53107*t53118*(2.0/3.0);
                double t53134 = c*c0*gamma_aa*t53102*t53130*t53105*t53123*t53124*t53107*t53116*(8.0/3.0);
                double t53141 = c*c0*t53101*t53123*t53107*t53116*t53128*t53129*(4.0/3.0);
                double t53135 = -t53141+t53133+t53134;
                double t53136 = sqrt(t53125);
                double t53137 = t53136*6.0;
                double t53138 = c*c0*t53101*t53123*t53124*t53107*t53116*4.0;
                double t53139 = t53137+t53138+3.0;
                double t53140 = 1.0/t53139;
                double t53142 = c*c0*t53101*t53131*t53123*t53132*t53124*t53107*t53116*(2.0/3.0);
                double t53143 = t53142+1.0;
                double t53144 = t53136*4.0;
                double t53145 = c*c0*t53101*t53123*t53124*t53107*t53116*(8.0/3.0);
                double t53146 = t53144+t53145+6.0;
                double t53147 = 1.0/sqrt(t53125);
                double t53148 = 1.0/sqrt(t53116);
                double t53149 = exp(-t53117);
                v_rho_b_gamma_aa[Q] += scale * c0*heaviside(c*c0*t53101*(-2.0/3.0)+t53120*t53112*t53148*exp(-t53102*t53103*t53104*t53105)*1.0E5)*(t53131*t53132*t53135+t53140*t53146*(-t53141+t53133+t53134+a3*c0*t53100*t53131*t53123*t53132*t53124*t53107*t53118*(2.0/3.0)+c*c0*t53101*t53131*t53123*t53132*t53124*t53107*t53116*t53135*(2.0/3.0)-c*c0*t53101*t53131*t53123*t53132*t53107*t53116*t53128*t53129*(4.0/3.0)+c*c0*gamma_aa*t53102*t53130*t53131*t53105*t53123*t53132*t53124*t53107*t53116*(8.0/3.0))+t53140*t53143*(t53135*t53147*2.0+a3*c0*t53100*t53123*t53124*t53107*t53118*(8.0/3.0)-c*c0*t53101*t53123*t53107*t53116*t53128*t53129*(1.6E1/3.0)+c*c0*gamma_aa*t53102*t53130*t53105*t53123*t53124*t53107*t53116*(3.2E1/3.0))-t53143*t53146*1.0/(t53139*t53139)*(t53135*t53147*3.0+a3*c0*t53100*t53123*t53124*t53107*t53118*4.0-c*c0*t53101*t53123*t53107*t53116*t53128*t53129*8.0+c*c0*gamma_aa*t53102*t53130*t53105*t53123*t53124*t53107*t53116*1.6E1)+(pow(rho_a,1.0/3.0)*(t53120*t53120)*(t53112*t53112)*t53113*t53135*exp(-t53106)*(3.0/2.0))/(c0*t53116))*(1.0/2.0)-c0*dirac(c*c0*t53101*(2.0/3.0)-t53120*t53112*t53148*t53149*1.0E5)*(t53131*t53132+t53140*t53143*t53146)*(t53112*t53128*t53148*t53149*-1.0E5+a3*t53100*t53120*t53112*t53113*t53114*1.0/pow(t53116,3.0/2.0)*t53149*5.0E4+gamma_aa*t53102*t53120*t53112*t53104*t53105*t53148*t53149*2.0E5)*(1.0/2.0);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t53152 = tspi_m13*tspi_m13;
                double t53153 = 1.0/pow(rho_b,1.0/3.0);
                double t53154 = a2*a2;
                double t53155 = gamma_bb*gamma_bb;
                double t53156 = 1.0/pow(rho_b,1.6E1/3.0);
                double t53157 = t53152*t53152;
                double t53158 = c*t53153;
                double t53159 = a4*a4;
                double t53160 = 1.0/c;
                double t53161 = 1.0/pow(rho_b,7.0/3.0);
                double t53162 = sqrt(t53158);
                double t53163 = t53155*t53156*t53157*t53159*2.0;
                double t53164 = exp(t53163);
                double t53165 = t53155*t53156*t53157*t53159;
                double t53166 = t53165+1.0;
                double t53167 = 1.0/(t53166*t53166);
                double t53168 = a5*gamma_bb*t53160*t53152*t53161;
                double t53169 = t53168+1.0;
                double t53180 = raa2*t53162;
                double t53170 = exp(-t53180);
                double t53171 = t53170-1.0;
                double t53172 = kaa2*t53171;
                double t53173 = pow(t53158,2.0/5.0);
                double t53181 = raa1*t53173;
                double t53174 = exp(-t53181);
                double t53175 = t53174-1.0;
                double t53176 = kaa1*t53175;
                double t53177 = -kaa0+t53172+t53176;
                double t53178 = 1.0/(t53177*t53177);
                double t53179 = c*c0*t53153*t53164*t53167*t53169*t53178*(2.0/3.0);
                double t53182 = 1.0/pow(rho_b,8.0/3.0);
                double t53183 = 1.0/pow(rho_b,4.0/3.0);
                double t53184 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t53185 = 1.0/pow(rho_b,2.0E1/3.0);
                double t53186 = 1.0/(t53166*t53166*t53166);
                double t53187 = t53159*t53159;
                double t53188 = 1.0/pow(rho_b,1.2E1);
                double t53189 = t53157*t53157;
                double t53190 = 1.0/sqrt(t53158);
                double t53191 = c*kaa2*raa2*t53170*t53190*t53183*(1.0/6.0);
                double t53192 = 1.0/pow(t53158,3.0/5.0);
                double t53193 = c*kaa1*raa1*t53174*t53183*t53192*(2.0/1.5E1);
                double t53194 = t53191+t53193;
                double t53195 = 1.0/(t53177*t53177*t53177);
                double t53196 = 1.0/pow(rho_b,1.7E1/3.0);
                double t53197 = 1.0/t53166;
                double t53198 = c*c0*t53153*t53164*t53169*t53178*(2.0/3.0);
                double t53199 = sqrt(t53198);
                double t53200 = 1.0/pow(rho_b,1.1E1/3.0);
                double t53201 = exp(t53179);
                double t53202 = Ei(-t53179);
                double t53203 = c*c0*t53164*t53183*t53167*t53169*t53178*(2.0/9.0);
                double t53204 = a5*c0*gamma_bb*t53200*t53152*t53164*t53167*t53178*(1.4E1/9.0);
                double t53205 = c*c0*t53153*t53164*t53167*t53194*t53195*t53169*(4.0/3.0);
                double t53206 = c*c0*t53155*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(6.4E1/9.0);
                double t53207 = t53197*t53199*6.0;
                double t53208 = c*c0*t53153*t53164*t53167*t53169*t53178*4.0;
                double t53209 = t53207+t53208+3.0;
                double t53210 = 1.0/t53209;
                double t53211 = a5*c0*t53152*t53164*t53182*t53167*t53178*(2.0/3.0);
                double t53212 = c*c0*gamma_bb*t53164*t53157*t53167*t53159*t53169*t53178*t53196*(8.0/3.0);
                double t53213 = 1.0/sqrt(t53198);
                double t53216 = c*c0*gamma_bb*t53164*t53157*t53159*t53186*t53169*t53178*t53196*(8.0/3.0);
                double t53214 = t53211+t53212-t53216;
                double t53227 = c*c0*t53155*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(6.4E1/9.0);
                double t53215 = t53203+t53204+t53205+t53206-t53227;
                double t53217 = 1.0/pow(rho_b,1.9E1/3.0);
                double t53218 = a5*c0*t53200*t53152*t53164*t53167*t53178*(1.6E1/9.0);
                double t53219 = a5*c0*t53152*t53164*t53182*t53167*t53194*t53195*(4.0/3.0);
                double t53220 = a5*c0*t53152*t53155*t53164*t53157*t53184*t53167*t53159*t53178*(4.0E1/3.0);
                double t53221 = c*c0*gamma_bb*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(1.36E2/9.0);
                double t53222 = c*c0*gamma_bb*t53155*t53164*t53167*t53169*t53178*t53187*t53188*t53189*(2.56E2/9.0);
                double t53223 = 1.0/(t53166*t53166*t53166*t53166);
                double t53224 = c*c0*gamma_bb*t53223*t53155*t53164*t53169*t53178*t53187*t53188*t53189*(1.28E2/3.0);
                double t53225 = c*c0*gamma_bb*t53164*t53157*t53167*t53194*t53159*t53195*t53169*t53196*(1.6E1/3.0);
                double t53228 = c*c0*gamma_bb*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(1.36E2/9.0);
                double t53229 = c*c0*gamma_bb*t53155*t53164*t53186*t53169*t53178*t53187*t53188*t53189*(5.12E2/9.0);
                double t53230 = c*c0*gamma_bb*t53164*t53157*t53194*t53159*t53186*t53195*t53169*t53196*(1.6E1/3.0);
                double t53287 = a5*c0*t53152*t53155*t53164*t53157*t53184*t53159*t53186*t53178*(4.0E1/3.0);
                double t53226 = t53220+t53221-t53230+t53222+t53224+t53225+t53218+t53219-t53228-t53229-t53287;
                double t53231 = a5*c0*t53152*t53164*t53182*t53178*(2.0/3.0);
                double t53232 = c*c0*gamma_bb*t53164*t53157*t53159*t53169*t53178*t53196*(8.0/3.0);
                double t53233 = t53231+t53232;
                double t53234 = c*c0*t53164*t53183*t53169*t53178*(2.0/9.0);
                double t53235 = a5*c0*gamma_bb*t53200*t53152*t53164*t53178*(1.4E1/9.0);
                double t53236 = c*c0*t53153*t53164*t53194*t53195*t53169*(4.0/3.0);
                double t53237 = c*c0*t53155*t53164*t53157*t53185*t53159*t53169*t53178*(6.4E1/9.0);
                double t53238 = t53234+t53235+t53236+t53237;
                double t53239 = t53197*t53199*4.0;
                double t53240 = c*c0*t53153*t53164*t53167*t53169*t53178*(8.0/3.0);
                double t53241 = t53240+t53239+6.0;
                double t53242 = a5*c0*t53201*t53202*t53152*t53164*t53182*t53167*t53178*(2.0/3.0);
                double t53243 = c*c0*t53201*t53202*t53214*t53153*t53164*t53167*t53169*t53178*(2.0/3.0);
                double t53244 = c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53167*t53159*t53169*t53178*t53196*(8.0/3.0);
                double t53245 = c*c0*t53201*t53202*t53153*t53164*t53167*t53169*t53178*(2.0/3.0);
                double t53246 = t53245+1.0;
                double t53247 = 1.0/(t53209*t53209);
                double t53248 = a5*c0*t53200*t53152*t53164*t53178*(1.6E1/9.0);
                double t53249 = a5*c0*t53152*t53164*t53182*t53194*t53195*(4.0/3.0);
                double t53250 = a5*c0*t53152*t53155*t53164*t53157*t53184*t53159*t53178*(4.0E1/3.0);
                double t53251 = c*c0*gamma_bb*t53164*t53157*t53185*t53159*t53169*t53178*(1.36E2/9.0);
                double t53252 = c*c0*gamma_bb*t53155*t53164*t53169*t53178*t53187*t53188*t53189*(2.56E2/9.0);
                double t53253 = c*c0*gamma_bb*t53164*t53157*t53194*t53159*t53195*t53169*t53196*(1.6E1/3.0);
                double t53254 = t53250+t53251+t53252+t53253+t53248+t53249;
                double t53255 = 1.0/pow(t53198,3.0/2.0);
                double t53256 = 1.0/pow(rho_b,3.5E1/3.0);
                double t53257 = t53213*t53233*t53197*2.0;
                double t53258 = a5*c0*t53152*t53164*t53182*t53167*t53178*(8.0/3.0);
                double t53259 = c*c0*gamma_bb*t53164*t53157*t53167*t53159*t53169*t53178*t53196*(3.2E1/3.0);
                double t53321 = gamma_bb*t53156*t53157*t53167*t53159*t53199*8.0;
                double t53322 = c*c0*gamma_bb*t53164*t53157*t53159*t53186*t53169*t53178*t53196*(3.2E1/3.0);
                double t53260 = -t53321-t53322+t53257+t53258+t53259;
                double t53261 = t53213*t53238*t53197*3.0;
                double t53262 = c*c0*t53164*t53183*t53167*t53169*t53178*(4.0/3.0);
                double t53263 = a5*c0*gamma_bb*t53200*t53152*t53164*t53167*t53178*(2.8E1/3.0);
                double t53264 = c*c0*t53153*t53164*t53167*t53194*t53195*t53169*8.0;
                double t53265 = c*c0*t53155*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(1.28E2/3.0);
                double t53284 = t53217*t53155*t53157*t53167*t53159*t53199*3.2E1;
                double t53285 = c*c0*t53155*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(1.28E2/3.0);
                double t53266 = t53261+t53262+t53263+t53264+t53265-t53284-t53285;
                double t53267 = t53213*t53238*t53197*2.0;
                double t53268 = c*c0*t53164*t53183*t53167*t53169*t53178*(8.0/9.0);
                double t53269 = a5*c0*gamma_bb*t53200*t53152*t53164*t53167*t53178*(5.6E1/9.0);
                double t53270 = c*c0*t53153*t53164*t53167*t53194*t53195*t53169*(1.6E1/3.0);
                double t53271 = c*c0*t53155*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(2.56E2/9.0);
                double t53316 = t53217*t53155*t53157*t53167*t53159*t53199*(6.4E1/3.0);
                double t53317 = c*c0*t53155*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(2.56E2/9.0);
                double t53272 = t53270+t53271-t53316-t53317+t53267+t53268+t53269;
                double t53273 = t53213*t53233*t53197*3.0;
                double t53274 = a5*c0*t53152*t53164*t53182*t53167*t53178*4.0;
                double t53275 = c*c0*gamma_bb*t53164*t53157*t53167*t53159*t53169*t53178*t53196*1.6E1;
                double t53282 = gamma_bb*t53156*t53157*t53167*t53159*t53199*1.2E1;
                double t53283 = c*c0*gamma_bb*t53164*t53157*t53159*t53186*t53169*t53178*t53196*1.6E1;
                double t53276 = t53273-t53282+t53274-t53283+t53275;
                double t53277 = c*c0*t53201*t53202*t53164*t53183*t53167*t53169*t53178*(2.0/9.0);
                double t53278 = c*c0*t53201*t53202*t53153*t53164*t53167*t53194*t53195*t53169*(4.0/3.0);
                double t53279 = c*c0*t53201*t53202*t53215*t53153*t53164*t53167*t53169*t53178*(2.0/3.0);
                double t53280 = a5*c0*gamma_bb*t53200*t53201*t53202*t53152*t53164*t53167*t53178*(1.4E1/9.0);
                double t53281 = c*c0*t53201*t53202*t53155*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(6.4E1/9.0);
                double t53286 = 1.0/t53169;
                double t53288 = 1.0/c0;
                double t53289 = pow(rho_b,1.0/3.0);
                double t53290 = exp(-t53163);
                double t53291 = t53166*t53166;
                double t53292 = t53177*t53177;
                double t53293 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b);
                double t53318 = c*c0*t53201*t53202*t53155*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(6.4E1/9.0);
                double t53294 = t53203+t53204+t53205+t53206+t53280-t53227+t53281-t53318+t53277+t53278+t53279;
                double t53323 = c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53159*t53186*t53169*t53178*t53196*(8.0/3.0);
                double t53295 = t53211+t53212+t53242-t53323-t53216+t53243+t53244;
                double t53296 = t53154*t53155*t53156*t53157;
                double t53297 = pow(t53158,4.0/5.0);
                double t53314 = rab1*t53297;
                double t53298 = exp(-t53314);
                double t53299 = t53298-1.0;
                double t53315 = kab1*t53299;
                double t53300 = kab0-t53315;
                double t53301 = a3*gamma_bb*t53160*t53152*t53161;
                double t53302 = t53301+1.0;
                double t53303 = 1.0/sqrt(t53302);
                double t53304 = a1*gamma_bb*t53152*t53182;
                double t53305 = t53304+t53296+1.0;
                double t53306 = c*c;
                double t53307 = 1.0/pow(rho_b,2.0/3.0);
                double t53308 = k1*t53162;
                double t53309 = c*k2*t53153;
                double t53310 = t53308+t53309;
                double t53311 = 1.0/(t53310*t53310);
                double t53320 = t53311*t53306*t53307;
                double t53312 = exp(-t53320);
                double t53313 = exp(-t53296);
                double t53319 = c*c0*t53153*(2.0/3.0);
                double t53324 = t53300*t53303*t53313*t53305*1.0E5;
                double t53325 = 1.0/pow(rho_b,1.0E1/3.0);
                double t53326 = 1.0/pow(t53302,3.0/2.0);
                double t53327 = t53154*t53217*t53155*t53157*(1.6E1/3.0);
                double t53328 = a1*gamma_bb*t53200*t53152*(8.0/3.0);
                double t53329 = t53327+t53328;
                double t53330 = a1*t53152*t53182;
                double t53331 = gamma_bb*t53154*t53156*t53157*2.0;
                double t53332 = t53330+t53331;
                double t53333 = 1.0/(c*c);
                double t53334 = 1.0/pow(t53158,1.0/5.0);
                double t53335 = -t53324+t53319;
                double t53336 = dirac(t53335);
                double t53337 = t53201*t53202*t53214;
                double t53338 = t53210*t53260*t53246;
                double t53339 = t53210*t53241*t53295;
                double t53340 = t53160*t53214*t53290*t53291*t53292*t53286*t53288*t53289*(3.0/2.0);
                double t53474 = t53241*t53246*t53247*t53276;
                double t53341 = t53340+t53337+t53338+t53339-t53474;
                double t53342 = t53201*t53202;
                double t53343 = t53210*t53241*t53246;
                double t53344 = t53342+t53343;
                double t53345 = 1.0/pow(rho_b,5.0/3.0);
                double t53346 = t53311*t53306*t53345*(2.0/3.0);
                double t53347 = 1.0/(t53310*t53310*t53310);
                double t53348 = c*k2*t53183*(1.0/3.0);
                double t53349 = c*k1*t53190*t53183*(1.0/6.0);
                double t53350 = t53348+t53349;
                double t53351 = t53346-t53350*t53306*t53307*t53347*2.0;
                double t53352 = a3*t53300*t53160*t53313*t53152*t53161*t53305*t53326*5.0E4;
                double t53353 = gamma_bb*t53300*t53303*t53313*t53305*t53154*t53156*t53157*2.0E5;
                double t53355 = t53300*t53303*t53313*t53332*1.0E5;
                double t53354 = t53352+t53353-t53355;
                double t53356 = c*c0*t53183*(2.0/9.0);
                double t53357 = t53300*t53303*t53313*t53305*t53154*t53217*t53155*t53157*(1.6E6/3.0);
                double t53358 = a3*gamma_bb*t53300*t53160*t53313*t53152*t53305*t53325*t53326*(3.5E5/3.0);
                double t53468 = t53300*t53303*t53313*t53329*1.0E5;
                double t53469 = c*kab1*rab1*t53303*t53313*t53305*t53334*t53183*t53298*(8.0E4/3.0);
                double t53359 = t53356+t53357+t53358-t53468-t53469;
                double t53360 = t53324-t53319;
                double t53361 = heaviside(t53360);
                double t53362 = t53154*t53155*t53156*t53157*2.0;
                double t53363 = exp(t53362);
                double t53364 = 1.0/(t53300*t53300);
                double t53365 = 1.0/(t53305*t53305);
                double t53366 = c*c0*t53302*t53153*t53363*t53364*t53365*(2.0/3.0);
                double t53367 = 1.0/(t53305*t53305*t53305);
                double t53368 = exp(t53366);
                double t53369 = Ei(-t53366);
                double t53370 = c*c0*t53302*t53183*t53363*t53364*t53365*(2.0/9.0);
                double t53371 = a3*c0*gamma_bb*t53200*t53152*t53363*t53364*t53365*(1.4E1/9.0);
                double t53372 = c*c0*t53302*t53154*t53155*t53363*t53157*t53364*t53185*t53365*(6.4E1/9.0);
                double t53373 = 1.0/(t53300*t53300*t53300);
                double t53374 = sqrt(t53366);
                double t53375 = t53374*6.0;
                double t53376 = c*c0*t53302*t53153*t53363*t53364*t53365*4.0;
                double t53377 = t53375+t53376+3.0;
                double t53378 = 1.0/t53377;
                double t53401 = c*c0*t53302*t53153*t53363*t53364*t53329*t53367*(4.0/3.0);
                double t53402 = c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53298*(1.6E1/4.5E1);
                double t53379 = -t53401-t53402+t53370+t53371+t53372;
                double t53380 = 1.0/sqrt(t53366);
                double t53381 = a3*c0*t53152*t53182*t53363*t53364*t53365*(2.0/3.0);
                double t53382 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53365*t53196*(8.0/3.0);
                double t53384 = c*c0*t53302*t53332*t53153*t53363*t53364*t53367*(4.0/3.0);
                double t53383 = t53381+t53382-t53384;
                double t53385 = a1*t53200*t53152*(8.0/3.0);
                double t53386 = gamma_bb*t53154*t53217*t53157*(3.2E1/3.0);
                double t53387 = t53385+t53386;
                double t53388 = t53154*t53154;
                double t53389 = a3*c0*t53152*t53182*t53363*t53364*t53329*t53367*(4.0/3.0);
                double t53390 = c*c0*t53302*t53332*t53183*t53363*t53364*t53367*(4.0/9.0);
                double t53391 = c*c0*t53302*t53153*t53363*t53364*t53367*t53387*(4.0/3.0);
                double t53392 = 1.0/(t53305*t53305*t53305*t53305);
                double t53393 = a3*c0*gamma_bb*t53200*t53152*t53332*t53363*t53364*t53367*(2.8E1/9.0);
                double t53394 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53329*t53196*t53367*(1.6E1/3.0);
                double t53395 = c*c0*t53302*t53332*t53154*t53155*t53363*t53157*t53364*t53185*t53367*(1.28E2/9.0);
                double t53396 = 1.0/(rho_b*rho_b*rho_b*rho_b);
                double t53397 = a3*c*c0*kab1*rab1*t53152*t53334*t53363*t53373*t53365*t53396*t53298*(1.6E1/4.5E1);
                double t53398 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t53399 = c0*gamma_bb*kab1*rab1*t53302*t53306*t53154*t53334*t53363*t53157*t53373*t53365*t53298*t53398*(6.4E1/4.5E1);
                double t53404 = a3*c0*t53200*t53152*t53363*t53364*t53365*(1.6E1/9.0);
                double t53405 = c*c0*t53302*t53332*t53153*t53363*t53364*t53329*t53392*4.0;
                double t53406 = a3*c0*t53152*t53154*t53155*t53363*t53157*t53184*t53364*t53365*(4.0E1/3.0);
                double t53407 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53185*t53365*(1.36E2/9.0);
                double t53408 = c*c0*gamma_bb*t53302*t53155*t53363*t53364*t53365*t53188*t53189*t53388*(2.56E2/9.0);
                double t53409 = c0*kab1*rab1*t53302*t53332*t53306*t53334*t53345*t53363*t53373*t53367*t53298*(3.2E1/4.5E1);
                double t53400 = -t53404-t53405-t53406-t53407+t53390-t53408+t53391-t53409+t53393+t53394+t53395+t53397+t53389+t53399;
                double t53403 = 1.0/rho_b;
                double t53410 = c*c0*t53302*t53153*t53363*t53364*t53365*t53368*t53369*(2.0/3.0);
                double t53411 = t53410+1.0;
                double t53412 = t53380*t53383*2.0;
                double t53413 = a3*c0*t53152*t53182*t53363*t53364*t53365*(8.0/3.0);
                double t53414 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53365*t53196*(3.2E1/3.0);
                double t53466 = c*c0*t53302*t53332*t53153*t53363*t53364*t53367*(1.6E1/3.0);
                double t53415 = t53412+t53413+t53414-t53466;
                double t53416 = 1.0/(t53377*t53377);
                double t53417 = t53380*t53379*2.0;
                double t53418 = c*c0*t53302*t53183*t53363*t53364*t53365*(8.0/9.0);
                double t53419 = a3*c0*gamma_bb*t53200*t53152*t53363*t53364*t53365*(5.6E1/9.0);
                double t53420 = c*c0*t53302*t53154*t53155*t53363*t53157*t53364*t53185*t53365*(2.56E2/9.0);
                double t53452 = c*c0*t53302*t53153*t53363*t53364*t53329*t53367*(1.6E1/3.0);
                double t53453 = c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53298*(6.4E1/4.5E1);
                double t53421 = t53420-t53452+t53417-t53453+t53418+t53419;
                double t53422 = t53374*4.0;
                double t53423 = c*c0*t53302*t53153*t53363*t53364*t53365*(8.0/3.0);
                double t53424 = t53422+t53423+6.0;
                double t53425 = t53380*t53383*3.0;
                double t53426 = a3*c0*t53152*t53182*t53363*t53364*t53365*4.0;
                double t53427 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53365*t53196*1.6E1;
                double t53443 = c*c0*t53302*t53332*t53153*t53363*t53364*t53367*8.0;
                double t53428 = t53425-t53443+t53426+t53427;
                double t53429 = c*c0*t53302*t53183*t53363*t53364*t53365*t53368*t53369*(2.0/9.0);
                double t53430 = a3*c0*gamma_bb*t53200*t53152*t53363*t53364*t53365*t53368*t53369*(1.4E1/9.0);
                double t53431 = c*c0*t53302*t53153*t53363*t53364*t53365*t53368*t53369*t53379*(2.0/3.0);
                double t53432 = c*c0*t53302*t53154*t53155*t53363*t53157*t53364*t53185*t53365*t53368*t53369*(6.4E1/9.0);
                double t53433 = t53380*t53379*3.0;
                double t53434 = c*c0*t53302*t53183*t53363*t53364*t53365*(4.0/3.0);
                double t53435 = a3*c0*gamma_bb*t53200*t53152*t53363*t53364*t53365*(2.8E1/3.0);
                double t53436 = c*c0*t53302*t53154*t53155*t53363*t53157*t53364*t53185*t53365*(1.28E2/3.0);
                double t53444 = c*c0*t53302*t53153*t53363*t53364*t53329*t53367*8.0;
                double t53445 = c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53298*(3.2E1/1.5E1);
                double t53437 = t53433+t53434+t53435-t53444+t53436-t53445;
                double t53438 = a3*c0*t53152*t53182*t53363*t53364*t53365*t53368*t53369*(2.0/3.0);
                double t53439 = c*c0*t53302*t53153*t53363*t53364*t53365*t53383*t53368*t53369*(2.0/3.0);
                double t53440 = c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53365*t53196*t53368*t53369*(8.0/3.0);
                double t53467 = c*c0*t53302*t53332*t53153*t53363*t53364*t53367*t53368*t53369*(4.0/3.0);
                double t53441 = t53440+t53381+t53382-t53384+t53438+t53439-t53467;
                double t53442 = 1.0/pow(t53366,3.0/2.0);
                double t53446 = 1.0/t53302;
                double t53447 = exp(-t53362);
                double t53448 = t53300*t53300;
                double t53449 = t53305*t53305;
                double t53450 = 1.0/(rho_b*rho_b);
                double t53451 = -t53401-t53402+t53430+t53431+t53432+t53370+t53371+t53372+t53429-c*c0*t53302*t53153*t53363*t53364*t53329*t53367*t53368*t53369*(4.0/3.0)-c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53368*t53369*t53298*(1.6E1/4.5E1);
                double t53454 = a3*t53300*t53160*t53313*t53152*t53305*t53325*t53326*(3.5E5/3.0);
                double t53455 = a3*t53300*t53160*t53313*t53152*t53161*t53326*t53329*5.0E4;
                double t53456 = gamma_bb*t53300*t53303*t53313*t53305*t53154*t53217*t53157*(3.2E6/3.0);
                double t53457 = gamma_bb*t53300*t53303*t53313*t53154*t53156*t53157*t53329*2.0E5;
                double t53458 = t53300*t53303*t53313*t53332*t53154*t53217*t53155*t53157*(1.6E6/3.0);
                double t53459 = a3*a3;
                double t53460 = 1.0/pow(t53302,5.0/2.0);
                double t53461 = a3*gamma_bb*t53300*t53160*t53313*t53152*t53332*t53325*t53326*(3.5E5/3.0);
                double t53462 = a3*kab1*rab1*t53200*t53313*t53152*t53305*t53334*t53326*t53298*(4.0E4/3.0);
                double t53463 = 1.0/pow(rho_b,2.6E1/3.0);
                double t53464 = c*gamma_bb*kab1*rab1*t53303*t53313*t53305*t53154*t53334*t53157*t53185*t53298*(1.6E5/3.0);
                double t53465 = t53461+t53462+t53454+t53455+t53464+t53456+t53457+t53458-t53300*t53303*t53313*t53387*1.0E5-c*kab1*rab1*t53303*t53313*t53332*t53334*t53183*t53298*(8.0E4/3.0)-gamma_bb*t53300*t53313*t53305*t53333*t53460*t53157*t53196*t53459*1.75E5-gamma_bb*t53300*t53303*t53313*t53305*t53155*t53256*t53189*t53388*(3.2E6/3.0)-a3*t53300*t53160*t53313*t53152*t53305*t53154*t53155*t53326*t53157*t53463*5.0E5;
                double t53470 = dirac(t53335,1.0);
                double t53471 = t53368*t53369;
                double t53472 = t53411*t53424*t53378;
                double t53473 = t53471+t53472;
                v_rho_b_gamma_bb[Q] += scale * rho_b*(c0*t53312*heaviside(c*c0*t53153*(-2.0/3.0)+t53300*t53303*t53305*exp(-t53154*t53155*t53156*t53157)*1.0E5)*(t53210*t53246*(t53213*t53254*t53197*2.0-t53233*t53255*t53238*t53197-gamma_bb*t53217*t53157*t53167*t53159*t53199*(1.28E2/3.0)+a5*c0*t53200*t53152*t53164*t53167*t53178*(6.4E1/9.0)-gamma_bb*t53213*t53156*t53157*t53238*t53167*t53159*4.0+gamma_bb*t53155*t53256*t53186*t53187*t53189*t53199*(2.56E2/3.0)-t53213*t53233*t53217*t53155*t53157*t53167*t53159*(3.2E1/3.0)+a5*c0*t53152*t53164*t53182*t53167*t53194*t53195*(1.6E1/3.0)+c*c0*gamma_bb*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(5.44E2/9.0)-c*c0*gamma_bb*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(5.44E2/9.0)+a5*c0*t53152*t53155*t53164*t53157*t53184*t53167*t53159*t53178*(1.6E2/3.0)-a5*c0*t53152*t53155*t53164*t53157*t53184*t53159*t53186*t53178*(1.6E2/3.0)+c*c0*gamma_bb*t53223*t53155*t53164*t53169*t53178*t53187*t53188*t53189*(5.12E2/3.0)+c*c0*gamma_bb*t53164*t53157*t53167*t53194*t53159*t53195*t53169*t53196*(6.4E1/3.0)-c*c0*gamma_bb*t53164*t53157*t53194*t53159*t53186*t53195*t53169*t53196*(6.4E1/3.0)+c*c0*gamma_bb*t53155*t53164*t53167*t53169*t53178*t53187*t53188*t53189*(1.024E3/9.0)-c*c0*gamma_bb*t53155*t53164*t53186*t53169*t53178*t53187*t53188*t53189*(2.048E3/9.0))+t53210*t53241*(t53220+t53221-t53230+t53222+t53224+t53225+t53218+t53219-t53228-t53229-t53287+t53214*t53403*(1.0/3.0)+t53214*t53215+(t53214*t53194*2.0)/t53177+t53214*t53217*t53155*t53157*t53159*(3.2E1/3.0)-t53214*t53217*t53155*t53157*t53159*t53197*(3.2E1/3.0)+a5*gamma_bb*t53160*t53214*t53152*t53325*t53286*(7.0/3.0)+a5*c0*t53200*t53201*t53202*t53152*t53164*t53167*t53178*(1.6E1/9.0)+a5*c0*t53201*t53202*t53152*t53215*t53164*t53182*t53167*t53178*(2.0/3.0)+a5*c0*t53201*t53202*t53152*t53164*t53182*t53167*t53194*t53195*(4.0/3.0)+c*c0*t53201*t53202*t53214*t53164*t53183*t53167*t53169*t53178*(2.0/9.0)+c*c0*t53201*t53202*t53153*t53226*t53164*t53167*t53169*t53178*(2.0/3.0)+a5*c0*gamma_bb*t53200*t53201*t53202*t53214*t53152*t53164*t53167*t53178*(1.4E1/9.0)+c*c0*t53201*t53202*t53214*t53215*t53153*t53164*t53167*t53169*t53178*(2.0/3.0)+c*c0*t53201*t53202*t53214*t53153*t53164*t53167*t53194*t53195*t53169*(4.0/3.0)+c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(1.36E2/9.0)-c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(1.36E2/9.0)+a5*c0*t53201*t53202*t53152*t53155*t53164*t53157*t53184*t53167*t53159*t53178*(4.0E1/3.0)-a5*c0*t53201*t53202*t53152*t53155*t53164*t53157*t53184*t53159*t53186*t53178*(4.0E1/3.0)+c*c0*gamma_bb*t53201*t53202*t53215*t53164*t53157*t53167*t53159*t53169*t53178*t53196*(8.0/3.0)-c*c0*gamma_bb*t53201*t53202*t53215*t53164*t53157*t53159*t53186*t53169*t53178*t53196*(8.0/3.0)+c*c0*gamma_bb*t53201*t53202*t53223*t53155*t53164*t53169*t53178*t53187*t53188*t53189*(1.28E2/3.0)+c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53167*t53194*t53159*t53195*t53169*t53196*(1.6E1/3.0)-c*c0*gamma_bb*t53201*t53202*t53164*t53157*t53194*t53159*t53186*t53195*t53169*t53196*(1.6E1/3.0)+c*c0*gamma_bb*t53201*t53202*t53155*t53164*t53167*t53169*t53178*t53187*t53188*t53189*(2.56E2/9.0)-c*c0*gamma_bb*t53201*t53202*t53155*t53164*t53186*t53169*t53178*t53187*t53188*t53189*(5.12E2/9.0)+c*c0*t53201*t53202*t53214*t53155*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(6.4E1/9.0)-c*c0*t53201*t53202*t53214*t53155*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(6.4E1/9.0))+t53201*t53202*t53226+t53210*t53260*t53294+t53210*t53272*t53295+t53201*t53202*t53214*t53215-t53260*t53246*t53247*t53266-t53241*t53247*t53266*t53295-t53241*t53247*t53276*t53294-t53272*t53246*t53247*t53276-t53241*t53246*t53247*(t53213*t53254*t53197*3.0-t53233*t53255*t53238*t53197*(3.0/2.0)-gamma_bb*t53217*t53157*t53167*t53159*t53199*6.4E1+a5*c0*t53200*t53152*t53164*t53167*t53178*(3.2E1/3.0)-gamma_bb*t53213*t53156*t53157*t53238*t53167*t53159*6.0+gamma_bb*t53155*t53256*t53186*t53187*t53189*t53199*1.28E2-t53213*t53233*t53217*t53155*t53157*t53167*t53159*1.6E1+a5*c0*t53152*t53164*t53182*t53167*t53194*t53195*8.0+c*c0*gamma_bb*t53164*t53157*t53167*t53185*t53159*t53169*t53178*(2.72E2/3.0)-c*c0*gamma_bb*t53164*t53157*t53185*t53159*t53186*t53169*t53178*(2.72E2/3.0)+a5*c0*t53152*t53155*t53164*t53157*t53184*t53167*t53159*t53178*8.0E1-a5*c0*t53152*t53155*t53164*t53157*t53184*t53159*t53186*t53178*8.0E1+c*c0*gamma_bb*t53223*t53155*t53164*t53169*t53178*t53187*t53188*t53189*2.56E2+c*c0*gamma_bb*t53164*t53157*t53167*t53194*t53159*t53195*t53169*t53196*3.2E1-c*c0*gamma_bb*t53164*t53157*t53194*t53159*t53186*t53195*t53169*t53196*3.2E1+c*c0*gamma_bb*t53155*t53164*t53167*t53169*t53178*t53187*t53188*t53189*(5.12E2/3.0)-c*c0*gamma_bb*t53155*t53164*t53186*t53169*t53178*t53187*t53188*t53189*(1.024E3/3.0))+t53241*1.0/(t53209*t53209*t53209)*t53246*t53266*t53276*2.0+t53160*t53226*t53290*t53291*t53292*t53286*t53288*t53289*(3.0/2.0)+t53160*t53214*t53215*t53290*t53291*t53292*t53286*t53288*t53289*(3.0/2.0)-a5*t53152*t53215*t53333*t53450*t53290*t53291*t53292*1.0/(t53169*t53169)*t53288*(3.0/2.0)-gamma_bb*t53160*t53215*t53290*t53291*t53157*t53292*t53293*t53159*t53286*t53288*6.0+gamma_bb*t53160*t53215*t53290*t53157*t53166*t53292*t53293*t53159*t53286*t53288*6.0)*(-1.0/2.0)+c0*t53312*t53341*t53351*t53361*(1.0/2.0)+c0*t53312*t53341*t53336*t53359*(1.0/2.0)+c0*t53312*t53344*t53336*t53465*(1.0/2.0)+c0*t53312*t53354*dirac(t53319-t53300*t53303*t53313*t53305*1.0E5)*(t53201*t53202*t53215+t53210*t53241*t53294+t53210*t53272*t53246-t53241*t53246*t53247*t53266+t53160*t53215*t53290*t53291*t53292*t53286*t53288*t53289*(3.0/2.0))*(1.0/2.0)-c0*t53312*t53351*t53344*t53336*t53354*(1.0/2.0)+c0*t53312*t53344*t53470*t53354*t53359*(1.0/2.0))+rho_a*(c0*t53361*(t53411*t53378*(t53400*t53380*2.0+t53442*t53383*t53379-a3*c0*t53200*t53152*t53363*t53364*t53365*(6.4E1/9.0)+a3*c0*t53152*t53182*t53363*t53364*t53329*t53367*(1.6E1/3.0)+c*c0*t53302*t53332*t53183*t53363*t53364*t53367*(1.6E1/9.0)+c*c0*t53302*t53153*t53363*t53364*t53367*t53387*(1.6E1/3.0)+a3*c0*gamma_bb*t53200*t53152*t53332*t53363*t53364*t53367*(1.12E2/9.0)-c*c0*t53302*t53332*t53153*t53363*t53364*t53329*t53392*1.6E1-c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53185*t53365*(5.44E2/9.0)-a3*c0*t53152*t53154*t53155*t53363*t53157*t53184*t53364*t53365*(1.6E2/3.0)+c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53329*t53196*t53367*(6.4E1/3.0)-c*c0*gamma_bb*t53302*t53155*t53363*t53364*t53365*t53188*t53189*t53388*(1.024E3/9.0)+c*c0*t53302*t53332*t53154*t53155*t53363*t53157*t53364*t53185*t53367*(5.12E2/9.0)+a3*c*c0*kab1*rab1*t53152*t53334*t53363*t53373*t53365*t53396*t53298*(6.4E1/4.5E1)-c0*kab1*rab1*t53302*t53332*t53306*t53334*t53345*t53363*t53373*t53367*t53298*(1.28E2/4.5E1)+c0*gamma_bb*kab1*rab1*t53302*t53306*t53154*t53334*t53363*t53157*t53373*t53365*t53298*t53398*(2.56E2/4.5E1))-t53424*t53378*(t53404+t53405+t53406+t53407-t53390+t53408-t53391+t53409-t53393-t53394-t53395-t53397-t53389-t53399+t53403*t53383*(1.0/3.0)+t53383*t53379-(t53329*t53383*2.0)/t53305+t53154*t53217*t53155*t53157*t53383*(3.2E1/3.0)+a3*gamma_bb*t53160*t53152*t53325*t53383*t53446*(7.0/3.0)-(c*kab1*rab1*t53334*t53183*t53383*t53298*(8.0/1.5E1))/t53300+a3*c0*t53200*t53152*t53363*t53364*t53365*t53368*t53369*(1.6E1/9.0)-a3*c0*t53152*t53182*t53363*t53364*t53329*t53367*t53368*t53369*(4.0/3.0)+a3*c0*t53152*t53182*t53363*t53364*t53365*t53368*t53369*t53379*(2.0/3.0)-c*c0*t53400*t53302*t53153*t53363*t53364*t53365*t53368*t53369*(2.0/3.0)-c*c0*t53302*t53332*t53183*t53363*t53364*t53367*t53368*t53369*(4.0/9.0)+c*c0*t53302*t53183*t53363*t53364*t53365*t53383*t53368*t53369*(2.0/9.0)-c*c0*t53302*t53153*t53363*t53364*t53367*t53368*t53369*t53387*(4.0/3.0)-a3*c0*gamma_bb*t53200*t53152*t53332*t53363*t53364*t53367*t53368*t53369*(2.8E1/9.0)+a3*c0*gamma_bb*t53200*t53152*t53363*t53364*t53365*t53383*t53368*t53369*(1.4E1/9.0)+c*c0*t53302*t53332*t53153*t53363*t53364*t53329*t53392*t53368*t53369*4.0-c*c0*t53302*t53332*t53153*t53363*t53364*t53367*t53368*t53369*t53379*(4.0/3.0)-c*c0*t53302*t53153*t53363*t53364*t53329*t53383*t53367*t53368*t53369*(4.0/3.0)+c*c0*t53302*t53153*t53363*t53364*t53365*t53383*t53368*t53369*t53379*(2.0/3.0)+c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53185*t53365*t53368*t53369*(1.36E2/9.0)+a3*c0*t53152*t53154*t53155*t53363*t53157*t53184*t53364*t53365*t53368*t53369*(4.0E1/3.0)-c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53329*t53196*t53367*t53368*t53369*(1.6E1/3.0)+c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53365*t53196*t53368*t53369*t53379*(8.0/3.0)+c*c0*gamma_bb*t53302*t53155*t53363*t53364*t53365*t53188*t53368*t53189*t53369*t53388*(2.56E2/9.0)-c*c0*t53302*t53332*t53154*t53155*t53363*t53157*t53364*t53185*t53367*t53368*t53369*(1.28E2/9.0)+c*c0*t53302*t53154*t53155*t53363*t53157*t53364*t53185*t53365*t53383*t53368*t53369*(6.4E1/9.0)-a3*c*c0*kab1*rab1*t53152*t53334*t53363*t53373*t53365*t53368*t53369*t53396*t53298*(1.6E1/4.5E1)+c0*kab1*rab1*t53302*t53332*t53306*t53334*t53345*t53363*t53373*t53367*t53368*t53369*t53298*(3.2E1/4.5E1)-c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53383*t53368*t53369*t53298*(1.6E1/4.5E1)-c0*gamma_bb*kab1*rab1*t53302*t53306*t53154*t53334*t53363*t53157*t53373*t53365*t53368*t53369*t53298*t53398*(6.4E1/4.5E1))-t53421*t53441*t53378+t53400*t53368*t53369-t53415*t53378*(t53430+t53431+t53432+t53370+t53371+t53372+t53429-c*c0*t53302*t53153*t53363*t53364*t53329*t53367*(4.0/3.0)-c*c0*t53302*t53153*t53363*t53364*t53329*t53367*t53368*t53369*(4.0/3.0)-c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53298*(1.6E1/4.5E1)-c0*kab1*rab1*t53302*t53306*t53334*t53345*t53363*t53373*t53365*t53368*t53369*t53298*(1.6E1/4.5E1))+t53411*t53421*t53416*t53428+t53411*t53415*t53416*t53437+t53441*t53424*t53416*t53437+t53424*t53451*t53416*t53428-t53383*t53368*t53369*t53379-t53411*t53424*t53416*(t53400*t53380*3.0+t53442*t53383*t53379*(3.0/2.0)-a3*c0*t53200*t53152*t53363*t53364*t53365*(3.2E1/3.0)+a3*c0*t53152*t53182*t53363*t53364*t53329*t53367*8.0+c*c0*t53302*t53332*t53183*t53363*t53364*t53367*(8.0/3.0)+c*c0*t53302*t53153*t53363*t53364*t53367*t53387*8.0+a3*c0*gamma_bb*t53200*t53152*t53332*t53363*t53364*t53367*(5.6E1/3.0)-c*c0*t53302*t53332*t53153*t53363*t53364*t53329*t53392*2.4E1-c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53185*t53365*(2.72E2/3.0)-a3*c0*t53152*t53154*t53155*t53363*t53157*t53184*t53364*t53365*8.0E1+c*c0*gamma_bb*t53302*t53154*t53363*t53157*t53364*t53329*t53196*t53367*3.2E1-c*c0*gamma_bb*t53302*t53155*t53363*t53364*t53365*t53188*t53189*t53388*(5.12E2/3.0)+c*c0*t53302*t53332*t53154*t53155*t53363*t53157*t53364*t53185*t53367*(2.56E2/3.0)+a3*c*c0*kab1*rab1*t53152*t53334*t53363*t53373*t53365*t53396*t53298*(3.2E1/1.5E1)-c0*kab1*rab1*t53302*t53332*t53306*t53334*t53345*t53363*t53373*t53367*t53298*(6.4E1/1.5E1)+c0*gamma_bb*kab1*rab1*t53302*t53306*t53154*t53334*t53363*t53157*t53373*t53365*t53298*t53398*(1.28E2/1.5E1))-t53411*t53424*t53428*t53437*1.0/(t53377*t53377*t53377)*2.0+t53400*t53160*t53446*t53447*t53448*t53449*t53288*t53289*(3.0/2.0)-t53160*t53305*t53332*t53446*t53447*t53448*t53288*t53289*t53379*3.0-t53160*t53383*t53446*t53447*t53448*t53449*t53288*t53289*t53379*(3.0/2.0)+a3*1.0/(t53302*t53302)*t53152*t53333*t53450*t53447*t53448*t53449*t53288*t53379*(3.0/2.0)+gamma_bb*t53160*t53154*t53157*t53293*t53446*t53447*t53448*t53449*t53288*t53379*6.0)*(1.0/2.0)+c0*t53336*t53473*t53465*(1.0/2.0)+c0*t53336*t53359*(t53411*t53415*t53378+t53441*t53424*t53378+t53383*t53368*t53369-t53411*t53424*t53416*t53428+t53160*t53383*t53446*t53447*t53448*t53449*t53288*t53289*(3.0/2.0))*(1.0/2.0)+c0*t53336*t53354*(t53411*t53421*t53378+t53424*t53451*t53378+t53368*t53369*t53379-t53411*t53424*t53416*t53437+t53160*t53446*t53447*t53448*t53449*t53288*t53289*t53379*(3.0/2.0))*(1.0/2.0)+c0*t53470*t53354*t53473*t53359*(1.0/2.0))+c0*t53312*t53341*t53361*(1.0/2.0)-c0*t53312*t53344*t53336*t53354*(1.0/2.0);
            }
            
        }
    }
}

}
