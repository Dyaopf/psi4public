/**********************************************************
* wB97Xf_functional.cc: definitions for wB97Xf_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wB97Xf_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wB97Xf_Functional::wB97Xf_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wB97Xf";
    description_ = "wB97X Hybrid Range-Corrected Power Series GGA (adjusted k)";
    citation_ = "J. Chai and M. Head-Gordon, J. Chem. Phys., 128, pp. 084106, 2008";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 2.3703099999999999E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.1399500000000000E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 6.5840500000000004E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -3.7813200000000000E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -4.3387900000000004E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 1.8230799999999999E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -3.1742999999999999E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.7290099999999999E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 8.4229399999999999E-01;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 7.2647899999999999E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 1.0476000000000001E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -5.7063499999999996E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 1.3279400000000001E+01;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wB97Xf_Functional::~wB97Xf_Functional()
{
}
void wB97Xf_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t183918 = 1.0/pow(rho_a[index],1.0/3.0);
            double t183919 = c*t183918;
            double t183920 = sqrt(t183919);
            double t183921 = pow(t183919,3.0/2.0);
            double t183922 = c*c;
            double t183923 = 1.0/pow(rho_a[index],2.0/3.0);
            double t183924 = 1.0/c0p;
            double t183925 = b1p*t183920;
            double t183926 = b3p*t183921;
            double t183927 = b4p*t183922*t183923;
            double t183928 = b2p*c*t183918;
            double t183929 = t183925+t183926+t183927+t183928;
            double t183930 = 1.0/t183929;
            double t183931 = t183930*t183924*(1.0/2.0);
            double t183932 = t183931+1.0;
            double t183933 = log(t183932);
            double t183934 = a1p*c*t183918;
            double t183935 = t183934+1.0;
            double t183936 = rho_a[index]*2.0;
            double t183937 = 1.0/pow(t183936,1.0/3.0);
            double t183938 = c*t183937;
            double t183939 = gamma_aa[index]*gamma_aa[index];
            double t183940 = gcab*gcab;
            double t183941 = t183939*t183939;
            double t183942 = t183940*t183940;
            double t183943 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t183944 = 1.0/pow(rho_a[index],8.0/3.0);
            double t183945 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t183946 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t183947 = pow(2.0,1.0/3.0);
            double t183948 = t183947*2.0;
            double t183949 = t183948-2.0;
            double t183950 = two_13*2.0;
            double t183951 = t183950-2.0;
            double t183952 = 1.0/t183951;
            double t183953 = 1.0/c0f;
            double t183954 = b1f*t183920;
            double t183955 = b3f*t183921;
            double t183956 = b4f*t183922*t183923;
            double t183957 = b2f*c*t183918;
            double t183958 = t183954+t183955+t183956+t183957;
            double t183959 = 1.0/t183958;
            double t183960 = t183953*t183959*(1.0/2.0);
            double t183961 = t183960+1.0;
            double t183962 = log(t183961);
            double t183963 = a1f*c*t183918;
            double t183964 = t183963+1.0;
            double t183965 = c0f*t183962*t183964*2.0;
            double t183966 = c0p*t183933*t183935*2.0;
            double t183967 = gcaa*gcaa;
            double t183968 = t183967*t183967;
            double t183969 = gx*gx;
            double t183970 = t183969*t183969;
            double t183971 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t183972 = gamma_aa[index]*gx*t183944*4.0;
            double t183973 = gamma_aa[index]*gx*t183945*t183939*t183969*4.0;
            double t183974 = t183946*t183939*t183969*6.0;
            double t183975 = t183941*t183943*t183970;
            double t183976 = t183972+t183973+t183974+t183975+1.0;
            double t183977 = 1.0/t183976;
            double t183978 = cx4*t183941*t183943*t183970*t183977*(4.190715359480463E15/2.251799813685248E15);
            double t183979 = gamma_aa[index]*gx*t183944;
            double t183980 = t183979+1.0;
            double t183981 = 1.0/t183980;
            double t183982 = cx1*gamma_aa[index]*gx*t183944*t183981*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183983 = gamma_aa[index]*gx*t183944*3.0;
            double t183984 = gamma_aa[index]*gx*t183945*t183939*t183969;
            double t183985 = t183946*t183939*t183969*3.0;
            double t183986 = t183983+t183984+t183985+1.0;
            double t183987 = 1.0/t183986;
            double t183988 = cx3*gamma_aa[index]*gx*t183945*t183939*t183969*t183987*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183989 = gamma_aa[index]*gx*t183944*2.0;
            double t183990 = t183946*t183939*t183969;
            double t183991 = t183990+t183989+1.0;
            double t183992 = 1.0/t183991;
            double t183993 = cx2*t183946*t183992*t183939*t183969*(4.190715359480463E15/2.251799813685248E15);
            double t183994 = t183971+t183982+t183993+t183978+t183988;
            double t183995 = 1.0/(omega*omega);
            double t183996 = pow(rho_a[index],2.0/3.0);
            double t183997 = 1.0/t183994;
            double t183998 = exp(t183995*t183996*t183997*(-1.4000771998813E29/4.951760157141521E27));
            double t183999 = sqrt(t183994);
            functional_[index] = (rho_a[index]*(t183966+t183952*t183949*(t183965-c0p*t183933*t183935*2.0))*2.0- \
               c0p*rho_a[index]*log((t183924*(1.0/2.0))/(b1p*sqrt(t183938)+b3p*pow(t183938,3.0/2.0)+b4p*t183922*1.0/ \
               pow(t183936,2.0/3.0)+b2p*c*t183937)+1.0)*(a1p*c*t183937+1.0)*4.0)*(ccab0+(ccab2*t183940*t183946*t183939) \
               /(gamma_aa[index]*gcab*t183944*2.0+t183940*t183946*t183939+1.0)+(ccab1*gamma_aa[index]*gcab*t183944) \
               /(gamma_aa[index]*gcab*t183944+1.0)+(ccab4*t183941*t183942*t183943)/(gamma_aa[index]*gcab*t183944* \
               4.0+t183941*t183942*t183943+t183940*t183946*t183939*6.0+gamma_aa[index]*gcab*t183940*t183945*t183939* \
               4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t183940*t183945*t183939)/(gamma_aa[index]*gcab*t183944*3.0+t183940* \
               t183946*t183939*3.0+gamma_aa[index]*gcab*t183940*t183945*t183939+1.0))-rho_a[index]*(t183966+t183952* \
               t183949*(t183965-t183966))*(ccaa0+(ccaa2*t183946*t183939*t183967)/(gamma_aa[index]*gcaa*t183944*2.0+ \
               t183946*t183939*t183967+1.0)+(ccaa1*gamma_aa[index]*gcaa*t183944)/(gamma_aa[index]*gcaa*t183944+1.0) \
               +(ccaa4*t183941*t183943*t183968)/(gamma_aa[index]*gcaa*t183944*4.0+t183941*t183943*t183968+t183946* \
               t183939*t183967*6.0+gamma_aa[index]*gcaa*t183945*t183939*t183967*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t183945*t183939*t183967)/(gamma_aa[index]*gcaa*t183944*3.0+t183946*t183939*t183967*3.0+gamma_aa[index]* \
               gcaa*t183945*t183939*t183967+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t183918*t183999*(erf((pow(rho_a[index],1.0/ \
               3.0)*1.0/sqrt(t183994)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t183918*t183999*(-t183998+(omega*omega)*t183923*t183994*(t183998-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_aa[index]*gx*t183944*t183981+cx2*t183946*t183992*t183939*t183969+cx4*t183941* \
               t183943*t183970*t183977+cx3*gamma_aa[index]*gx*t183945*t183939*t183969*t183987)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t184001 = gamma_aa[index]*gamma_aa[index];
            double t184002 = gcab*gcab;
            double t184003 = t184001*t184001;
            double t184004 = t184002*t184002;
            double t184005 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t184006 = 1.0/pow(rho_a[index],8.0/3.0);
            double t184007 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t184008 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t184009 = rho_a[index]*2.0;
            double t184010 = 1.0/pow(t184009,1.0/3.0);
            double t184011 = c*t184010;
            double t184012 = sqrt(t184011);
            double t184013 = b1p*t184012;
            double t184014 = pow(t184011,3.0/2.0);
            double t184015 = b3p*t184014;
            double t184016 = b2p*c*t184010;
            double t184017 = c*c;
            double t184018 = 1.0/pow(t184009,2.0/3.0);
            double t184019 = b4p*t184017*t184018;
            double t184020 = t184013+t184015+t184016+t184019;
            double t184021 = 1.0/pow(t184009,4.0/3.0);
            double t184022 = 1.0/c0p;
            double t184023 = 1.0/t184020;
            double t184024 = t184022*t184023*(1.0/2.0);
            double t184025 = t184024+1.0;
            double t184026 = 1.0/pow(rho_a[index],1.0/3.0);
            double t184027 = c*t184026;
            double t184028 = sqrt(t184027);
            double t184029 = b1f*t184028;
            double t184030 = pow(t184027,3.0/2.0);
            double t184031 = b3f*t184030;
            double t184032 = 1.0/pow(rho_a[index],2.0/3.0);
            double t184033 = b4f*t184032*t184017;
            double t184034 = b2f*c*t184026;
            double t184035 = t184031+t184033+t184034+t184029;
            double t184036 = 1.0/pow(rho_a[index],4.0/3.0);
            double t184037 = b1p*t184028;
            double t184038 = b3p*t184030;
            double t184039 = b4p*t184032*t184017;
            double t184040 = b2p*c*t184026;
            double t184041 = t184040+t184037+t184038+t184039;
            double t184042 = 1.0/pow(rho_a[index],5.0/3.0);
            double t184043 = 1.0/sqrt(t184027);
            double t184044 = 1.0/c0f;
            double t184045 = 1.0/t184035;
            double t184046 = t184044*t184045*(1.0/2.0);
            double t184047 = t184046+1.0;
            double t184048 = 1.0/t184041;
            double t184049 = t184022*t184048*(1.0/2.0);
            double t184050 = t184049+1.0;
            double t184051 = a1p*c*t184026;
            double t184052 = t184051+1.0;
            double t184053 = 1.0/t184050;
            double t184054 = 1.0/(t184041*t184041);
            double t184055 = b4p*t184042*t184017*(2.0/3.0);
            double t184056 = b2p*c*t184036*(1.0/3.0);
            double t184057 = b1p*c*t184043*t184036*(1.0/6.0);
            double t184058 = b3p*c*t184036*t184028*(1.0/2.0);
            double t184059 = t184055+t184056+t184057+t184058;
            double t184060 = t184052*t184053*t184054*t184059;
            double t184061 = log(t184050);
            double t184062 = log(t184025);
            double t184063 = a1p*c*t184010;
            double t184064 = t184063+1.0;
            double t184065 = pow(2.0,1.0/3.0);
            double t184066 = t184065*2.0;
            double t184067 = t184066-2.0;
            double t184068 = two_13*2.0;
            double t184069 = t184068-2.0;
            double t184070 = 1.0/t184069;
            double t184071 = log(t184047);
            double t184072 = a1f*c*t184026;
            double t184073 = t184072+1.0;
            double t184074 = c0f*t184071*t184073*2.0;
            double t184076 = c0p*t184052*t184061*2.0;
            double t184075 = t184074-t184076;
            double t184077 = gcaa*gcaa;
            double t184078 = t184077*t184077;
            double t184079 = t184070*t184075*t184067;
            double t184080 = t184076+t184079;
            double t184081 = gamma_aa[index]*gcab*t184006*4.0;
            double t184082 = gamma_aa[index]*gcab*t184001*t184002*t184007*4.0;
            double t184083 = t184001*t184002*t184008*6.0;
            double t184084 = t184003*t184004*t184005;
            double t184085 = t184081+t184082+t184083+t184084+1.0;
            double t184086 = 1.0/t184085;
            double t184087 = gamma_aa[index]*gcab*t184006;
            double t184088 = t184087+1.0;
            double t184089 = 1.0/t184088;
            double t184090 = gamma_aa[index]*gcab*t184006*3.0;
            double t184091 = gamma_aa[index]*gcab*t184001*t184002*t184007;
            double t184092 = t184001*t184002*t184008*3.0;
            double t184093 = t184090+t184091+t184092+1.0;
            double t184094 = 1.0/t184093;
            double t184095 = gamma_aa[index]*gcab*t184006*2.0;
            double t184096 = t184001*t184002*t184008;
            double t184097 = t184095+t184096+1.0;
            double t184098 = 1.0/t184097;
            double t184099 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t184100 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t184101 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t184102 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t184103 = gamma_aa[index]*gcaa*t184006*4.0;
            double t184104 = gamma_aa[index]*gcaa*t184001*t184007*t184077*4.0;
            double t184105 = t184001*t184008*t184077*6.0;
            double t184106 = t184003*t184005*t184078;
            double t184107 = t184103+t184104+t184105+t184106+1.0;
            double t184108 = 1.0/t184107;
            double t184109 = gamma_aa[index]*gcaa*t184006;
            double t184110 = t184109+1.0;
            double t184111 = 1.0/t184110;
            double t184112 = gamma_aa[index]*gcaa*t184006*3.0;
            double t184113 = gamma_aa[index]*gcaa*t184001*t184007*t184077;
            double t184114 = t184001*t184008*t184077*3.0;
            double t184115 = t184112+t184113+t184114+1.0;
            double t184116 = 1.0/t184115;
            double t184117 = gamma_aa[index]*gcaa*t184006*2.0;
            double t184118 = t184001*t184008*t184077;
            double t184119 = t184117+t184118+1.0;
            double t184120 = 1.0/t184119;
            double t184121 = 1.0/t184047;
            double t184122 = 1.0/(t184035*t184035);
            double t184123 = b4f*t184042*t184017*(2.0/3.0);
            double t184124 = b2f*c*t184036*(1.0/3.0);
            double t184125 = b1f*c*t184043*t184036*(1.0/6.0);
            double t184126 = b3f*c*t184036*t184028*(1.0/2.0);
            double t184127 = t184123+t184124+t184125+t184126;
            double t184128 = a1f*c*c0f*t184071*t184036*(2.0/3.0);
            double t184129 = a1p*c*c0p*t184061*t184036*(2.0/3.0);
            double t184130 = ccaa4*t184003*t184005*t184108*t184078;
            double t184131 = ccaa1*gamma_aa[index]*gcaa*t184111*t184006;
            double t184132 = ccaa3*gamma_aa[index]*gcaa*t184001*t184007*t184116*t184077;
            double t184133 = ccaa2*t184001*t184120*t184008*t184077;
            double t184134 = ccaa0+t184130+t184131+t184132+t184133;
            double t184135 = gx*gx;
            double t184136 = t184135*t184135;
            double t184137 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t184138 = gamma_aa[index]*gx*t184006*4.0;
            double t184139 = gamma_aa[index]*gx*t184001*t184007*t184135*4.0;
            double t184140 = t184001*t184008*t184135*6.0;
            double t184141 = t184003*t184005*t184136;
            double t184142 = t184140+t184141+t184138+t184139+1.0;
            double t184143 = 1.0/t184142;
            double t184144 = cx4*t184003*t184005*t184143*t184136*(4.190715359480463E15/2.251799813685248E15);
            double t184145 = gamma_aa[index]*gx*t184006;
            double t184146 = t184145+1.0;
            double t184147 = 1.0/t184146;
            double t184148 = cx1*gamma_aa[index]*gx*t184006*t184147*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184149 = gamma_aa[index]*gx*t184006*3.0;
            double t184150 = gamma_aa[index]*gx*t184001*t184007*t184135;
            double t184151 = t184001*t184008*t184135*3.0;
            double t184152 = t184150+t184151+t184149+1.0;
            double t184153 = 1.0/t184152;
            double t184154 = cx3*gamma_aa[index]*gx*t184001*t184007*t184135*t184153*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184155 = gamma_aa[index]*gx*t184006*2.0;
            double t184156 = t184001*t184008*t184135;
            double t184157 = t184155+t184156+1.0;
            double t184158 = 1.0/t184157;
            double t184159 = cx2*t184001*t184008*t184135*t184158*(4.190715359480463E15/2.251799813685248E15);
            double t184160 = t184144+t184154+t184137+t184148+t184159;
            double t184161 = 1.0/omega;
            double t184162 = 1.0/(omega*omega);
            double t184163 = pow(rho_a[index],2.0/3.0);
            double t184164 = 1.0/t184160;
            double t184166 = t184162*t184163*t184164*(1.4000771998813E29/4.951760157141521E27);
            double t184165 = exp(-t184166);
            double t184167 = cx4*t184003*t184102*t184143*t184136*(1.396905119826821E15/7.0368744177664E13);
            double t184168 = cx1*gamma_aa[index]*gx*t184100*t184147*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t184169 = cx3*gamma_aa[index]*gx*t184001*t184101*t184135*t184153*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t184170 = cx2*t184001*t184135*t184158*t184099*(1.396905119826821E15/1.40737488355328E14);
            double t184171 = 1.0/(t184146*t184146);
            double t184172 = gamma_aa[index]*gx*t184100*8.0;
            double t184173 = gamma_aa[index]*gx*t184001*t184101*t184135*8.0;
            double t184174 = t184001*t184135*t184099*1.6E1;
            double t184175 = t184172+t184173+t184174;
            double t184176 = 1.0/(t184152*t184152);
            double t184177 = gamma_aa[index]*gx*t184100*(3.2E1/3.0);
            double t184178 = gamma_aa[index]*gx*t184001*t184101*t184135*3.2E1;
            double t184179 = t184001*t184135*t184099*3.2E1;
            double t184180 = t184003*t184102*t184136*(3.2E1/3.0);
            double t184181 = t184180+t184177+t184178+t184179;
            double t184182 = 1.0/(t184142*t184142);
            double t184183 = gamma_aa[index]*gx*t184100*(1.6E1/3.0);
            double t184184 = t184001*t184135*t184099*(1.6E1/3.0);
            double t184185 = t184183+t184184;
            double t184186 = 1.0/(t184157*t184157);
            double t184190 = cx1*t184001*t184135*t184171*t184099*(1.396905119826821E15/2.81474976710656E14);
            double t184191 = cx3*gamma_aa[index]*gx*t184001*t184007*t184135*t184175*t184176*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t184192 = cx4*t184003*t184005*t184136*t184181*t184182*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184193 = cx2*t184001*t184008*t184135*t184185*t184186*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184187 = t184170-t184190-t184191-t184192-t184193+t184167+t184168+t184169;
            double t184188 = omega*omega;
            double t184189 = t184165-1.0;
            double t184194 = t184026*t184162*t184164*(1.4000771998813E29/7.427640235712282E27);
            double t184195 = 1.0/(t184160*t184160);
            double t184196 = t184162*t184163*t184195*t184187*(1.4000771998813E29/4.951760157141521E27);
            double t184197 = t184194+t184196;
            double t184198 = sqrt(t184160);
            double t184199 = t184032*t184160*t184188*t184189*(2.475880078570761E27/1.4000771998813E29);
            double t184200 = -t184165+t184199+3.0/2.0;
            double t184201 = 1.0/sqrt(t184160);
            double t184202 = pow(rho_a[index],1.0/3.0);
            double t184203 = t184201*t184202*t184161*(3.74176054803257E14/7.0368744177664E13);
            double t184204 = erf(t184203);
            double t184205 = t184204*(3.991211251234741E15/2.251799813685248E15);
            double t184207 = omega*t184200*t184026*t184198*(7.0368744177664E13/3.74176054803257E14);
            double t184206 = t184205-t184207;
            double t184208 = cx4*t184003*t184005*t184143*t184136;
            double t184209 = cx1*gamma_aa[index]*gx*t184006*t184147;
            double t184210 = cx3*gamma_aa[index]*gx*t184001*t184007*t184135*t184153;
            double t184211 = cx2*t184001*t184008*t184135*t184158;
            double t184212 = cx0+t184210+t184211+t184208+t184209;
            double t184213 = pow(rho_a[index],4.0/3.0);
            double t184214 = omega*t184026*t184206*t184198*(2.81474976710656E14/1.122528164409771E15);
            double t184215 = t184214-1.0;
            v_rho_a_[index] = -(rho_a[index]*t184080*2.0-c0p*rho_a[index]*t184062*t184064*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t184100*t184089*(4.0/3.0)+ccab4*t184003*t184102*t184004*t184086*(1.6E1/3.0)+ccab2*t184001*t184002* \
               t184098*t184099*(8.0/3.0)-ccab1*t184001*t184002*1.0/(t184088*t184088)*t184099*(4.0/3.0)-ccab2*t184001* \
               t184002*t184008*1.0/(t184097*t184097)*(gamma_aa[index]*gcab*t184100*(8.0/3.0)+t184001*t184002*t184099* \
               (8.0/3.0))-ccab4*t184003*t184004*t184005*1.0/(t184085*t184085)*(gamma_aa[index]*gcab*t184100*(1.6E1/ \
               3.0)+t184003*t184102*t184004*(1.6E1/3.0)+t184001*t184002*t184099*1.6E1+gamma_aa[index]*gcab*t184001* \
               t184002*t184101*1.6E1)+ccab3*gamma_aa[index]*gcab*t184001*t184002*t184101*t184094*4.0-ccab3*gamma_aa[index]* \
               gcab*t184001*t184002*t184007*1.0/(t184093*t184093)*(gamma_aa[index]*gcab*t184100*4.0+t184001*t184002* \
               t184099*8.0+gamma_aa[index]*gcab*t184001*t184002*t184101*4.0))-t184080*t184134-(rho_a[index]*((1.0/ \
               (t184020*t184020)*t184064*(b4p*t184017*1.0/pow(t184009,5.0/3.0)*(2.0/3.0)+b2p*c*t184021*(1.0/3.0)+ \
               b3p*c*t184012*t184021*(1.0/2.0)+b1p*c*1.0/sqrt(t184011)*t184021*(1.0/6.0)))/t184025-a1p*c*c0p*t184021* \
               t184062*(2.0/3.0))*2.0+rho_a[index]*(-t184060+t184129+t184070*t184067*(t184060+t184128-t184121*t184122* \
               t184073*t184127-a1p*c*c0p*t184061*t184036*(2.0/3.0)))-c0p*t184052*t184061*2.0+c0p*t184062*t184064* \
               2.0-t184070*t184075*t184067)*(ccab0+ccab1*gamma_aa[index]*gcab*t184006*t184089+ccab2*t184001*t184002* \
               t184008*t184098+ccab4*t184003*t184004*t184005*t184086+ccab3*gamma_aa[index]*gcab*t184001*t184002*t184007* \
               t184094)+rho_a[index]*t184080*(ccaa1*gamma_aa[index]*gcaa*t184100*t184111*(8.0/3.0)+ccaa4*t184003* \
               t184102*t184108*t184078*(3.2E1/3.0)+ccaa2*t184001*t184120*t184077*t184099*(1.6E1/3.0)-ccaa1*t184001* \
               1.0/(t184110*t184110)*t184077*t184099*(8.0/3.0)-ccaa2*t184001*t184008*1.0/(t184119*t184119)*t184077* \
               (gamma_aa[index]*gcaa*t184100*(1.6E1/3.0)+t184001*t184077*t184099*(1.6E1/3.0))-ccaa4*t184003*t184005* \
               1.0/(t184107*t184107)*t184078*(gamma_aa[index]*gcaa*t184100*(3.2E1/3.0)+t184003*t184102*t184078*(3.2E1/ \
               3.0)+t184001*t184077*t184099*3.2E1+gamma_aa[index]*gcaa*t184001*t184101*t184077*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t184001*t184101*t184116*t184077*8.0-ccaa3*gamma_aa[index]*gcaa*t184001*t184007*1.0/(t184115*t184115) \
               *t184077*(gamma_aa[index]*gcaa*t184100*8.0+t184001*t184077*t184099*1.6E1+gamma_aa[index]*gcaa*t184001* \
               t184101*t184077*8.0))+rho_a[index]*t184134*(-t184060+t184129+t184070*t184067*(t184060+t184128-t184129- \
               t184121*t184122*t184073*t184127))+c0*t184212*t184213*(omega*t184206*t184036*t184198*(2.81474976710656E14/ \
               3.367584493229313E15)-omega*t184026*t184198*(1.0/sqrt(3.141592653589793)*t184165*(t184201*t184032* \
               t184161*(3.74176054803257E14/2.11106232532992E14)+t184202*1.0/pow(t184160,3.0/2.0)*t184161*t184187* \
               (3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t184200* \
               t184036*t184198*(7.0368744177664E13/1.122528164409771E15)+omega*t184026*t184198*(-t184165*t184197+ \
               t184042*t184160*t184188*t184189*(4.951760157141521E27/4.2002315996439E29)+t184032*t184187*t184188* \
               t184189*(2.475880078570761E27/1.4000771998813E29)+t184032*t184160*t184165*t184188*t184197*(2.475880078570761E27/ \
               1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t184200*t184201*t184026*t184187* \
               (3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)+omega*t184201* \
               t184026*t184206*t184187*(1.40737488355328E14/1.122528164409771E15))-c0*t184202*t184212*t184215*(4.0/ \
               3.0)+c0*t184213*t184215*(cx1*gamma_aa[index]*gx*t184100*t184147*(8.0/3.0)-cx1*t184001*t184135*t184171* \
               t184099*(8.0/3.0)+cx2*t184001*t184135*t184158*t184099*(1.6E1/3.0)+cx4*t184003*t184102*t184143*t184136* \
               (3.2E1/3.0)-cx2*t184001*t184008*t184135*t184185*t184186-cx4*t184003*t184005*t184136*t184181*t184182+ \
               cx3*gamma_aa[index]*gx*t184001*t184101*t184135*t184153*8.0-cx3*gamma_aa[index]*gx*t184001*t184007* \
               t184135*t184175*t184176);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t184217 = 1.0/pow(rho_a[index],1.0/3.0);
                double t184218 = c*t184217;
                double t184219 = sqrt(t184218);
                double t184220 = pow(t184218,3.0/2.0);
                double t184221 = c*c;
                double t184222 = 1.0/pow(rho_a[index],2.0/3.0);
                double t184223 = 1.0/c0p;
                double t184224 = b1p*t184219;
                double t184225 = b3p*t184220;
                double t184226 = b4p*t184221*t184222;
                double t184227 = b2p*c*t184217;
                double t184228 = t184224+t184225+t184226+t184227;
                double t184229 = 1.0/t184228;
                double t184230 = t184223*t184229*(1.0/2.0);
                double t184231 = t184230+1.0;
                double t184232 = log(t184231);
                double t184233 = a1p*c*t184217;
                double t184234 = t184233+1.0;
                double t184235 = rho_a[index]*2.0;
                double t184236 = 1.0/pow(t184235,1.0/3.0);
                double t184237 = c*t184236;
                double t184238 = 1.0/pow(rho_a[index],8.0/3.0);
                double t184239 = gamma_aa[index]*gamma_aa[index];
                double t184240 = gcab*gcab;
                double t184241 = t184240*t184240;
                double t184242 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t184243 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t184244 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t184245 = gamma_aa[index]*gcab*t184238;
                double t184246 = t184245+1.0;
                double t184247 = gamma_aa[index]*gcab*t184238*3.0;
                double t184248 = gamma_aa[index]*gcab*t184240*t184244*t184239;
                double t184249 = t184240*t184243*t184239*3.0;
                double t184250 = t184247+t184248+t184249+1.0;
                double t184251 = t184239*t184239;
                double t184252 = gamma_aa[index]*gcab*t184238*4.0;
                double t184253 = gamma_aa[index]*gcab*t184240*t184244*t184239*4.0;
                double t184254 = t184240*t184243*t184239*6.0;
                double t184255 = t184241*t184242*t184251;
                double t184256 = t184252+t184253+t184254+t184255+1.0;
                double t184257 = gamma_aa[index]*gcab*t184238*2.0;
                double t184258 = t184240*t184243*t184239;
                double t184259 = t184257+t184258+1.0;
                double t184260 = pow(2.0,1.0/3.0);
                double t184261 = t184260*2.0;
                double t184262 = t184261-2.0;
                double t184263 = two_13*2.0;
                double t184264 = t184263-2.0;
                double t184265 = 1.0/t184264;
                double t184266 = 1.0/c0f;
                double t184267 = b1f*t184219;
                double t184268 = b3f*t184220;
                double t184269 = b4f*t184221*t184222;
                double t184270 = b2f*c*t184217;
                double t184271 = t184270+t184267+t184268+t184269;
                double t184272 = 1.0/t184271;
                double t184273 = t184272*t184266*(1.0/2.0);
                double t184274 = t184273+1.0;
                double t184275 = log(t184274);
                double t184276 = a1f*c*t184217;
                double t184277 = t184276+1.0;
                double t184278 = c0f*t184275*t184277*2.0;
                double t184279 = c0p*t184232*t184234*2.0;
                double t184280 = gcaa*gcaa;
                double t184281 = t184280*t184280;
                double t184282 = gamma_aa[index]*gcaa*t184238;
                double t184283 = t184282+1.0;
                double t184284 = gamma_aa[index]*gcaa*t184238*3.0;
                double t184285 = gamma_aa[index]*gcaa*t184244*t184280*t184239;
                double t184286 = t184243*t184280*t184239*3.0;
                double t184287 = t184284+t184285+t184286+1.0;
                double t184288 = gamma_aa[index]*gcaa*t184238*4.0;
                double t184289 = gamma_aa[index]*gcaa*t184244*t184280*t184239*4.0;
                double t184290 = t184243*t184280*t184239*6.0;
                double t184291 = t184242*t184251*t184281;
                double t184292 = t184290+t184291+t184288+t184289+1.0;
                double t184293 = gamma_aa[index]*gcaa*t184238*2.0;
                double t184294 = t184243*t184280*t184239;
                double t184295 = t184293+t184294+1.0;
                double t184296 = gx*gx;
                double t184297 = t184296*t184296;
                double t184298 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t184299 = gamma_aa[index]*gx*t184238*4.0;
                double t184300 = gamma_aa[index]*gx*t184244*t184239*t184296*4.0;
                double t184301 = t184243*t184239*t184296*6.0;
                double t184302 = t184242*t184251*t184297;
                double t184303 = t184300+t184301+t184302+t184299+1.0;
                double t184304 = 1.0/t184303;
                double t184305 = cx4*t184304*t184242*t184251*t184297*(4.190715359480463E15/2.251799813685248E15);
                double t184306 = gamma_aa[index]*gx*t184238;
                double t184307 = t184306+1.0;
                double t184308 = 1.0/t184307;
                double t184309 = cx1*gamma_aa[index]*gx*t184308*t184238*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184310 = gamma_aa[index]*gx*t184238*3.0;
                double t184311 = gamma_aa[index]*gx*t184244*t184239*t184296;
                double t184312 = t184243*t184239*t184296*3.0;
                double t184313 = t184310+t184311+t184312+1.0;
                double t184314 = 1.0/t184313;
                double t184315 = cx3*gamma_aa[index]*gx*t184314*t184244*t184239*t184296*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184316 = gamma_aa[index]*gx*t184238*2.0;
                double t184317 = t184243*t184239*t184296;
                double t184318 = t184316+t184317+1.0;
                double t184319 = 1.0/t184318;
                double t184320 = cx2*t184243*t184319*t184239*t184296*(4.190715359480463E15/2.251799813685248E15);
                double t184321 = t184320+t184305+t184315+t184309+t184298;
                double t184322 = 1.0/(omega*omega);
                double t184323 = pow(rho_a[index],2.0/3.0);
                double t184324 = 1.0/t184321;
                double t184328 = t184322*t184323*t184324*(1.4000771998813E29/4.951760157141521E27);
                double t184325 = exp(-t184328);
                double t184326 = sqrt(t184321);
                double t184327 = pow(rho_a[index],4.0/3.0);
                double t184329 = 1.0/(t184307*t184307);
                double t184330 = gx*t184238*3.0;
                double t184331 = gamma_aa[index]*t184243*t184296*6.0;
                double t184332 = gx*t184244*t184239*t184296*3.0;
                double t184333 = t184330+t184331+t184332;
                double t184334 = 1.0/(t184313*t184313);
                double t184335 = gx*t184238*4.0;
                double t184336 = gamma_aa[index]*t184243*t184296*1.2E1;
                double t184337 = gx*t184244*t184239*t184296*1.2E1;
                double t184338 = gamma_aa[index]*t184242*t184239*t184297*4.0;
                double t184339 = t184335+t184336+t184337+t184338;
                double t184340 = 1.0/(t184303*t184303);
                double t184341 = gx*t184238*2.0;
                double t184342 = gamma_aa[index]*t184243*t184296*2.0;
                double t184343 = t184341+t184342;
                double t184344 = 1.0/(t184318*t184318);
                double t184345 = omega*omega;
                double t184346 = t184325-1.0;
                double t184347 = cx1*gx*t184308*t184238*(4.190715359480463E15/2.251799813685248E15);
                double t184348 = cx4*gamma_aa[index]*t184304*t184242*t184239*t184297*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t184349 = cx2*gamma_aa[index]*t184243*t184319*t184296*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t184350 = cx3*gx*t184314*t184244*t184239*t184296*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t184352 = cx1*gamma_aa[index]*t184243*t184329*t184296*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184353 = cx3*gamma_aa[index]*gx*t184333*t184244*t184334*t184239*t184296*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t184354 = cx4*t184340*t184242*t184251*t184339*t184297*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184355 = cx2*t184243*t184343*t184344*t184239*t184296*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184351 = t184350-t184352-t184353-t184354-t184355+t184347+t184348+t184349;
                double t184356 = t184222*t184321*t184345*t184346*(2.475880078570761E27/1.4000771998813E29);
                double t184357 = -t184325+t184356+3.0/2.0;
                double t184358 = 1.0/sqrt(t184321);
                double t184359 = 1.0/omega;
                double t184360 = pow(rho_a[index],1.0/3.0);
                double t184361 = t184360*t184358*t184359*(3.74176054803257E14/7.0368744177664E13);
                double t184362 = erf(t184361);
                double t184363 = t184362*(3.991211251234741E15/2.251799813685248E15);
                double t184364 = t184363-omega*t184217*t184326*t184357*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = (rho_a[index]*(t184279+t184262*t184265*(t184278-c0p*t184232*t184234*2.0))*2.0- \
                   c0p*rho_a[index]*log((t184223*(1.0/2.0))/(b1p*sqrt(t184237)+b3p*pow(t184237,3.0/2.0)+b4p*t184221*1.0/ \
                   pow(t184235,2.0/3.0)+b2p*c*t184236)+1.0)*(a1p*c*t184236+1.0)*4.0)*((ccab1*gcab*t184238*(1.0/2.0))/ \
                   t184246-ccab1*gamma_aa[index]*t184240*t184243*1.0/(t184246*t184246)*(1.0/2.0)+(ccab2*gamma_aa[index]* \
                   t184240*t184243)/t184259-ccab2*t184240*t184243*t184239*1.0/(t184259*t184259)*(gcab*t184238+gamma_aa[index]* \
                   t184240*t184243)+(ccab4*gamma_aa[index]*t184241*t184242*t184239*2.0)/t184256+(ccab3*gcab*t184240*t184244* \
                   t184239*(3.0/2.0))/t184250-ccab4*t184241*t184242*t184251*1.0/(t184256*t184256)*(gcab*t184238*2.0+gamma_aa[index]* \
                   t184240*t184243*6.0+gamma_aa[index]*t184241*t184242*t184239*2.0+gcab*t184240*t184244*t184239*6.0)- \
                   ccab3*gamma_aa[index]*gcab*t184240*1.0/(t184250*t184250)*t184244*t184239*(gcab*t184238*(3.0/2.0)+gamma_aa[index]* \
                   t184240*t184243*3.0+gcab*t184240*t184244*t184239*(3.0/2.0)))*2.0-rho_a[index]*(t184279+t184262*t184265* \
                   (t184278-t184279))*((ccaa1*gcaa*t184238)/t184283-ccaa1*gamma_aa[index]*t184243*t184280*1.0/(t184283* \
                   t184283)+(ccaa2*gamma_aa[index]*t184243*t184280*2.0)/t184295-ccaa2*t184243*t184280*t184239*1.0/(t184295* \
                   t184295)*(gcaa*t184238*2.0+gamma_aa[index]*t184243*t184280*2.0)+(ccaa4*gamma_aa[index]*t184242*t184281* \
                   t184239*4.0)/t184292+(ccaa3*gcaa*t184244*t184280*t184239*3.0)/t184287-ccaa4*t184242*t184251*t184281* \
                   1.0/(t184292*t184292)*(gcaa*t184238*4.0+gamma_aa[index]*t184243*t184280*1.2E1+gamma_aa[index]*t184242* \
                   t184281*t184239*4.0+gcaa*t184244*t184280*t184239*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t184244*t184280* \
                   t184239*1.0/(t184287*t184287)*(gcaa*t184238*3.0+gamma_aa[index]*t184243*t184280*6.0+gcaa*t184244*t184280* \
                   t184239*3.0))*2.0-c0*t184327*(omega*t184217*t184326*t184364*(2.81474976710656E14/1.122528164409771E15) \
                   -1.0)*(cx1*gx*t184308*t184238-cx1*gamma_aa[index]*t184243*t184329*t184296+cx2*gamma_aa[index]*t184243* \
                   t184319*t184296*2.0-cx2*t184243*t184343*t184344*t184239*t184296-cx4*t184340*t184242*t184251*t184339* \
                   t184297+cx4*gamma_aa[index]*t184304*t184242*t184239*t184297*4.0+cx3*gx*t184314*t184244*t184239*t184296* \
                   3.0-cx3*gamma_aa[index]*gx*t184333*t184244*t184334*t184239*t184296)*2.0+c0*t184327*(omega*t184217* \
                   t184326*(omega*t184217*t184326*(t184324*t184351*t184325*(1.0/2.0)+t184222*t184351*t184345*t184346* \
                   (2.475880078570761E27/1.4000771998813E29)-1.0/(t184321*t184321)*t184322*t184323*t184351*t184325*(1.4000771998813E29/ \
                   4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14)+omega*t184351*t184217*t184357*t184358* \
                   (3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793)*1.0/pow(t184321,3.0/2.0)*t184351* \
                   t184360*t184325*t184359*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t184351*t184217*t184364*t184358*(1.40737488355328E14/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]* \
                   gx*t184308*t184238+cx2*t184243*t184319*t184239*t184296+cx4*t184304*t184242*t184251*t184297+cx3*gamma_aa[index]* \
                   gx*t184314*t184244*t184239*t184296)*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t184367 = rho_a[index]*2.0;
            double t184368 = 1.0/pow(t184367,1.0/3.0);
            double t184369 = c*t184368;
            double t184370 = sqrt(t184369);
            double t184371 = b1p*t184370;
            double t184372 = pow(t184369,3.0/2.0);
            double t184373 = b3p*t184372;
            double t184374 = b2p*c*t184368;
            double t184375 = c*c;
            double t184376 = 1.0/pow(t184367,2.0/3.0);
            double t184377 = b4p*t184375*t184376;
            double t184378 = t184371+t184373+t184374+t184377;
            double t184379 = 1.0/pow(t184367,8.0/3.0);
            double t184380 = 1.0/pow(t184367,7.0/3.0);
            double t184381 = 1.0/sqrt(t184369);
            double t184382 = 1.0/c0p;
            double t184383 = 1.0/t184378;
            double t184384 = t184382*t184383*(1.0/2.0);
            double t184385 = t184384+1.0;
            double t184386 = 1.0/t184385;
            double t184387 = a1p*c*t184368;
            double t184388 = t184387+1.0;
            double t184389 = 1.0/pow(t184367,4.0/3.0);
            double t184391 = b2p*c*t184389*(1.0/3.0);
            double t184392 = 1.0/pow(t184367,5.0/3.0);
            double t184393 = b4p*t184392*t184375*(2.0/3.0);
            double t184394 = b1p*c*t184381*t184389*(1.0/6.0);
            double t184395 = b3p*c*t184370*t184389*(1.0/2.0);
            double t184390 = t184391+t184393+t184394+t184395;
            double t184396 = t184390*t184390;
            double t184397 = 1.0/(t184378*t184378);
            double t184398 = log(t184385);
            double t184399 = gamma_aa[index]*gamma_aa[index];
            double t184400 = gcab*gcab;
            double t184401 = t184399*t184399;
            double t184402 = t184400*t184400;
            double t184403 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t184404 = 1.0/pow(rho_a[index],8.0/3.0);
            double t184405 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t184406 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t184407 = two_13*2.0;
            double t184408 = t184407-2.0;
            double t184409 = 1.0/t184408;
            double t184410 = 1.0/pow(rho_a[index],1.0/3.0);
            double t184411 = c*t184410;
            double t184412 = sqrt(t184411);
            double t184413 = pow(t184411,3.0/2.0);
            double t184414 = 1.0/pow(rho_a[index],2.0/3.0);
            double t184415 = b1p*t184412;
            double t184416 = b3p*t184413;
            double t184417 = b4p*t184414*t184375;
            double t184418 = b2p*c*t184410;
            double t184419 = t184415+t184416+t184417+t184418;
            double t184420 = 1.0/t184419;
            double t184421 = t184420*t184382*(1.0/2.0);
            double t184422 = t184421+1.0;
            double t184423 = log(t184422);
            double t184424 = a1p*c*t184410;
            double t184425 = t184424+1.0;
            double t184426 = gamma_aa[index]*gcab*t184404*4.0;
            double t184427 = gamma_aa[index]*gcab*t184400*t184405*t184399*4.0;
            double t184428 = t184400*t184406*t184399*6.0;
            double t184429 = t184401*t184402*t184403;
            double t184430 = t184426+t184427+t184428+t184429+1.0;
            double t184431 = 1.0/t184430;
            double t184432 = gamma_aa[index]*gcab*t184404;
            double t184433 = t184432+1.0;
            double t184434 = 1.0/t184433;
            double t184435 = gamma_aa[index]*gcab*t184404*3.0;
            double t184436 = gamma_aa[index]*gcab*t184400*t184405*t184399;
            double t184437 = t184400*t184406*t184399*3.0;
            double t184438 = t184435+t184436+t184437+1.0;
            double t184439 = 1.0/t184438;
            double t184440 = gamma_aa[index]*gcab*t184404*2.0;
            double t184441 = t184400*t184406*t184399;
            double t184442 = t184440+t184441+1.0;
            double t184443 = 1.0/t184442;
            double t184444 = 1.0/pow(rho_a[index],1.0E1);
            double t184445 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t184447 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t184448 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t184450 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t184457 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t184458 = gamma_aa[index]*gcab*t184447*(1.6E1/3.0);
            double t184459 = gamma_aa[index]*gcab*t184400*t184450*t184399*1.6E1;
            double t184460 = t184400*t184448*t184399*1.6E1;
            double t184461 = t184401*t184402*t184457*(1.6E1/3.0);
            double t184446 = t184460+t184461+t184458+t184459;
            double t184464 = gamma_aa[index]*gcab*t184447*(8.0/3.0);
            double t184465 = t184400*t184448*t184399*(8.0/3.0);
            double t184449 = t184464+t184465;
            double t184451 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t184452 = 1.0/(t184438*t184438);
            double t184453 = gamma_aa[index]*gcab*t184447*4.0;
            double t184454 = gamma_aa[index]*gcab*t184400*t184450*t184399*4.0;
            double t184455 = t184400*t184448*t184399*8.0;
            double t184456 = t184453+t184454+t184455;
            double t184462 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t184463 = 1.0/(t184430*t184430);
            double t184466 = 1.0/(t184442*t184442);
            double t184467 = pow(2.0,1.0/3.0);
            double t184468 = t184467*2.0;
            double t184469 = t184468-2.0;
            double t184470 = a1f*c*t184410;
            double t184471 = t184470+1.0;
            double t184472 = 1.0/c0f;
            double t184473 = b1f*t184412;
            double t184474 = b3f*t184413;
            double t184475 = b4f*t184414*t184375;
            double t184476 = b2f*c*t184410;
            double t184477 = t184473+t184474+t184475+t184476;
            double t184478 = 1.0/t184477;
            double t184479 = t184472*t184478*(1.0/2.0);
            double t184480 = t184479+1.0;
            double t184481 = 1.0/pow(rho_a[index],4.0/3.0);
            double t184482 = 1.0/pow(rho_a[index],5.0/3.0);
            double t184483 = 1.0/sqrt(t184411);
            double t184484 = log(t184480);
            double t184485 = 1.0/t184422;
            double t184486 = 1.0/(t184419*t184419);
            double t184487 = b4p*t184482*t184375*(2.0/3.0);
            double t184488 = b2p*c*t184481*(1.0/3.0);
            double t184489 = b1p*c*t184481*t184483*(1.0/6.0);
            double t184490 = b3p*c*t184412*t184481*(1.0/2.0);
            double t184491 = t184490+t184487+t184488+t184489;
            double t184492 = t184425*t184491*t184485*t184486;
            double t184493 = gcaa*gcaa;
            double t184494 = t184493*t184493;
            double t184495 = 1.0/t184480;
            double t184496 = 1.0/(t184477*t184477);
            double t184497 = b4f*t184482*t184375*(2.0/3.0);
            double t184498 = b2f*c*t184481*(1.0/3.0);
            double t184499 = b1f*c*t184481*t184483*(1.0/6.0);
            double t184500 = b3f*c*t184412*t184481*(1.0/2.0);
            double t184501 = t184500+t184497+t184498+t184499;
            double t184502 = a1f*c*c0f*t184481*t184484*(2.0/3.0);
            double t184503 = a1p*c*c0p*t184423*t184481*(2.0/3.0);
            double t184504 = c0f*t184471*t184484*2.0;
            double t184505 = c0p*t184423*t184425*2.0;
            double t184506 = 1.0/(t184433*t184433);
            double t184507 = ccab4*t184401*t184402*t184403*t184431;
            double t184508 = ccab1*gamma_aa[index]*gcab*t184404*t184434;
            double t184509 = ccab3*gamma_aa[index]*gcab*t184400*t184405*t184439*t184399;
            double t184510 = ccab2*t184400*t184406*t184443*t184399;
            double t184511 = ccab0+t184510+t184507+t184508+t184509;
            double t184512 = b2p*c*t184380*(4.0/9.0);
            double t184513 = b4p*t184375*t184379*(1.0E1/9.0);
            double t184514 = 1.0/pow(t184369,3.0/2.0);
            double t184515 = b3p*t184381*t184375*t184379*(1.0/1.2E1);
            double t184516 = b1p*c*t184380*t184381*(2.0/9.0);
            double t184517 = b3p*c*t184370*t184380*(2.0/3.0);
            double t184518 = t184512+t184513+t184515+t184516+t184517-b1p*t184514*t184375*t184379*(1.0/3.6E1);
            double t184519 = t184518*t184386*t184388*t184397;
            double t184520 = 1.0/(t184378*t184378*t184378);
            double t184521 = 1.0/(t184385*t184385);
            double t184522 = 1.0/(t184378*t184378*t184378*t184378);
            double t184523 = t184521*t184522*t184382*t184396*t184388*(1.0/2.0);
            double t184524 = 1.0/d2fz0;
            double t184525 = 1.0/(rho_a[index]*rho_a[index]);
            double t184526 = 1.0/Aa;
            double t184527 = b1a*t184370;
            double t184528 = b3a*t184372;
            double t184529 = b2a*c*t184368;
            double t184530 = b4a*t184375*t184376;
            double t184531 = t184530+t184527+t184528+t184529;
            double t184532 = 1.0/t184531;
            double t184533 = t184532*t184526*(1.0/2.0);
            double t184534 = t184533+1.0;
            double t184535 = log(t184534);
            double t184536 = a1a*c*t184368;
            double t184537 = t184536+1.0;
            double t184538 = a1p*c*t184390*t184386*t184397*t184389*(2.0/3.0);
            double t184539 = 1.0/pow(rho_a[index],7.0/3.0);
            double t184540 = 1.0/pow(t184411,3.0/2.0);
            double t184541 = t184501*t184501;
            double t184542 = t184491*t184491;
            double t184543 = 1.0/(t184419*t184419*t184419);
            double t184544 = t184425*t184542*t184543*t184485*2.0;
            double t184545 = b4p*t184404*t184375*(1.0E1/9.0);
            double t184546 = b2p*c*t184539*(4.0/9.0);
            double t184547 = b3p*t184404*t184375*t184483*(1.0/1.2E1);
            double t184548 = b1p*c*t184483*t184539*(2.0/9.0);
            double t184549 = b3p*c*t184412*t184539*(2.0/3.0);
            double t184625 = b1p*t184404*t184540*t184375*(1.0/3.6E1);
            double t184550 = -t184625+t184545+t184546+t184547+t184548+t184549;
            double t184551 = 1.0/(t184422*t184422);
            double t184552 = 1.0/(t184419*t184419*t184419*t184419);
            double t184553 = a1p*c*c0p*t184423*t184539*(8.0/9.0);
            double t184588 = t184501*t184471*t184495*t184496;
            double t184554 = t184502-t184503+t184492-t184588;
            double t184555 = a1p*c*c0p*t184389*t184398*(4.0/3.0);
            double t184556 = t184504-t184505;
            double t184557 = gamma_aa[index]*gcaa*t184404*4.0;
            double t184558 = gamma_aa[index]*gcaa*t184405*t184493*t184399*4.0;
            double t184559 = t184406*t184493*t184399*6.0;
            double t184560 = t184401*t184403*t184494;
            double t184561 = t184560+t184557+t184558+t184559+1.0;
            double t184562 = 1.0/t184561;
            double t184563 = gamma_aa[index]*gcaa*t184404;
            double t184564 = t184563+1.0;
            double t184565 = 1.0/t184564;
            double t184566 = gamma_aa[index]*gcaa*t184404*3.0;
            double t184567 = gamma_aa[index]*gcaa*t184405*t184493*t184399;
            double t184568 = t184406*t184493*t184399*3.0;
            double t184569 = t184566+t184567+t184568+1.0;
            double t184570 = 1.0/t184569;
            double t184571 = gamma_aa[index]*gcaa*t184404*2.0;
            double t184572 = t184406*t184493*t184399;
            double t184573 = t184571+t184572+1.0;
            double t184574 = 1.0/t184573;
            double t184575 = t184409*t184556*t184469;
            double t184576 = t184505+t184575;
            double t184577 = 1.0/(t184433*t184433*t184433);
            double t184578 = ccab1*gamma_aa[index]*gcab*t184400*t184444*t184577*t184399*(3.2E1/9.0);
            double t184579 = t184446*t184446;
            double t184580 = 1.0/(t184430*t184430*t184430);
            double t184581 = ccab4*t184401*t184402*t184403*t184580*t184579*2.0;
            double t184582 = t184449*t184449;
            double t184583 = 1.0/(t184442*t184442*t184442);
            double t184584 = ccab2*t184400*t184406*t184582*t184583*t184399*2.0;
            double t184585 = t184456*t184456;
            double t184586 = 1.0/(t184438*t184438*t184438);
            double t184587 = ccab3*gamma_aa[index]*gcab*t184400*t184405*t184585*t184586*t184399*2.0;
            double t184589 = t184409*t184554*t184469;
            double t184590 = ccaa4*t184401*t184562*t184457*t184494*(3.2E1/3.0);
            double t184591 = ccaa1*gamma_aa[index]*gcaa*t184447*t184565*(8.0/3.0);
            double t184592 = ccaa3*gamma_aa[index]*gcaa*t184450*t184570*t184493*t184399*8.0;
            double t184593 = ccaa2*t184448*t184493*t184574*t184399*(1.6E1/3.0);
            double t184594 = 1.0/(t184564*t184564);
            double t184595 = gamma_aa[index]*gcaa*t184447*8.0;
            double t184596 = gamma_aa[index]*gcaa*t184450*t184493*t184399*8.0;
            double t184597 = t184448*t184493*t184399*1.6E1;
            double t184598 = t184595+t184596+t184597;
            double t184599 = 1.0/(t184569*t184569);
            double t184600 = gamma_aa[index]*gcaa*t184447*(3.2E1/3.0);
            double t184601 = gamma_aa[index]*gcaa*t184450*t184493*t184399*3.2E1;
            double t184602 = t184448*t184493*t184399*3.2E1;
            double t184603 = t184401*t184457*t184494*(3.2E1/3.0);
            double t184604 = t184600+t184601+t184602+t184603;
            double t184605 = 1.0/(t184561*t184561);
            double t184606 = gamma_aa[index]*gcaa*t184447*(1.6E1/3.0);
            double t184607 = t184448*t184493*t184399*(1.6E1/3.0);
            double t184608 = t184606+t184607;
            double t184609 = 1.0/(t184573*t184573);
            double t184610 = t184590+t184591+t184592+t184593-ccaa1*t184448*t184493*t184594*t184399*(8.0/3.0)- \
               ccaa4*t184401*t184403*t184604*t184605*t184494-ccaa2*t184406*t184608*t184609*t184493*t184399-ccaa3* \
               gamma_aa[index]*gcaa*t184405*t184493*t184399*t184598*t184599;
            double t184611 = t184503-t184492+t184589;
            double t184612 = ccaa4*t184401*t184403*t184562*t184494;
            double t184613 = ccaa1*gamma_aa[index]*gcaa*t184404*t184565;
            double t184614 = ccaa3*gamma_aa[index]*gcaa*t184405*t184570*t184493*t184399;
            double t184615 = ccaa2*t184406*t184493*t184574*t184399;
            double t184616 = ccaa0+t184612+t184613+t184614+t184615;
            double t184617 = 1.0/(t184477*t184477*t184477);
            double t184618 = b4f*t184404*t184375*(1.0E1/9.0);
            double t184619 = b2f*c*t184539*(4.0/9.0);
            double t184620 = b3f*t184404*t184375*t184483*(1.0/1.2E1);
            double t184621 = b1f*c*t184483*t184539*(2.0/9.0);
            double t184622 = b3f*c*t184412*t184539*(2.0/3.0);
            double t184623 = t184620+t184621+t184622+t184618+t184619-b1f*t184404*t184540*t184375*(1.0/3.6E1);
            double t184624 = t184623*t184471*t184495*t184496;
            double t184626 = t184550*t184425*t184485*t184486;
            double t184627 = 1.0/(t184480*t184480);
            double t184628 = 1.0/(t184477*t184477*t184477*t184477);
            double t184629 = t184541*t184471*t184472*t184627*t184628*(1.0/2.0);
            double t184630 = t184425*t184542*t184551*t184552*t184382*(1.0/2.0);
            double t184631 = a1f*c*t184501*t184481*t184495*t184496*(2.0/3.0);
            double t184632 = a1p*c*t184481*t184491*t184485*t184486*(2.0/3.0);
            double t184633 = gx*gx;
            double t184634 = t184633*t184633;
            double t184635 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t184636 = gamma_aa[index]*gx*t184404*4.0;
            double t184637 = gamma_aa[index]*gx*t184405*t184633*t184399*4.0;
            double t184638 = t184406*t184633*t184399*6.0;
            double t184639 = t184401*t184403*t184634;
            double t184640 = t184636+t184637+t184638+t184639+1.0;
            double t184641 = 1.0/t184640;
            double t184642 = cx4*t184401*t184403*t184641*t184634*(4.190715359480463E15/2.251799813685248E15);
            double t184643 = gamma_aa[index]*gx*t184404;
            double t184644 = t184643+1.0;
            double t184645 = 1.0/t184644;
            double t184646 = cx1*gamma_aa[index]*gx*t184404*t184645*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184647 = gamma_aa[index]*gx*t184404*3.0;
            double t184648 = gamma_aa[index]*gx*t184405*t184633*t184399;
            double t184649 = t184406*t184633*t184399*3.0;
            double t184650 = t184647+t184648+t184649+1.0;
            double t184651 = 1.0/t184650;
            double t184652 = cx3*gamma_aa[index]*gx*t184405*t184633*t184651*t184399*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184653 = gamma_aa[index]*gx*t184404*2.0;
            double t184654 = t184406*t184633*t184399;
            double t184655 = t184653+t184654+1.0;
            double t184656 = 1.0/t184655;
            double t184657 = cx2*t184406*t184633*t184656*t184399*(4.190715359480463E15/2.251799813685248E15);
            double t184658 = t184642+t184652+t184635+t184646+t184657;
            double t184659 = 1.0/(omega*omega);
            double t184660 = pow(rho_a[index],2.0/3.0);
            double t184661 = 1.0/t184658;
            double t184680 = t184660*t184661*t184659*(1.4000771998813E29/4.951760157141521E27);
            double t184662 = exp(-t184680);
            double t184663 = sqrt(t184658);
            double t184671 = gamma_aa[index]*gx*t184447*(3.2E1/3.0);
            double t184672 = gamma_aa[index]*gx*t184450*t184633*t184399*3.2E1;
            double t184673 = t184633*t184448*t184399*3.2E1;
            double t184674 = t184401*t184634*t184457*(3.2E1/3.0);
            double t184664 = t184671+t184672+t184673+t184674;
            double t184676 = gamma_aa[index]*gx*t184447*(1.6E1/3.0);
            double t184677 = t184633*t184448*t184399*(1.6E1/3.0);
            double t184665 = t184676+t184677;
            double t184666 = 1.0/(t184650*t184650);
            double t184667 = gamma_aa[index]*gx*t184447*8.0;
            double t184668 = gamma_aa[index]*gx*t184450*t184633*t184399*8.0;
            double t184669 = t184633*t184448*t184399*1.6E1;
            double t184670 = t184667+t184668+t184669;
            double t184675 = 1.0/(t184640*t184640);
            double t184678 = 1.0/(t184655*t184655);
            double t184679 = pow(rho_a[index],1.0/3.0);
            double t184681 = 1.0/omega;
            double t184682 = 1.0/sqrt(t184658);
            double t184683 = 1.0/(t184644*t184644);
            double t184684 = omega*omega;
            double t184685 = t184662-1.0;
            double t184686 = t184414*t184684*t184658*t184685*(2.475880078570761E27/1.4000771998813E29);
            double t184687 = -t184662+t184686+3.0/2.0;
            double t184688 = cx4*t184401*t184641*t184634*t184457*(1.396905119826821E15/7.0368744177664E13);
            double t184689 = cx1*gamma_aa[index]*gx*t184447*t184645*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t184690 = cx3*gamma_aa[index]*gx*t184450*t184633*t184651*t184399*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t184691 = cx2*t184633*t184448*t184656*t184399*(1.396905119826821E15/1.40737488355328E14);
            double t184693 = cx1*t184633*t184448*t184683*t184399*(1.396905119826821E15/2.81474976710656E14);
            double t184694 = cx3*gamma_aa[index]*gx*t184405*t184633*t184670*t184666*t184399*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t184695 = cx4*t184401*t184403*t184634*t184664*t184675*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184696 = cx2*t184406*t184633*t184665*t184399*t184678*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184692 = t184690+t184691-t184693-t184694-t184695-t184696+t184688+t184689;
            double t184697 = t184410*t184661*t184659*(1.4000771998813E29/7.427640235712282E27);
            double t184698 = 1.0/(t184658*t184658);
            double t184699 = t184660*t184692*t184659*t184698*(1.4000771998813E29/4.951760157141521E27);
            double t184700 = t184697+t184699;
            double t184701 = t184681*t184682*t184679*(3.74176054803257E14/7.0368744177664E13);
            double t184702 = erf(t184701);
            double t184703 = t184702*(3.991211251234741E15/2.251799813685248E15);
            double t184705 = omega*t184410*t184663*t184687*(7.0368744177664E13/3.74176054803257E14);
            double t184704 = t184703-t184705;
            double t184706 = omega*t184410*t184704*t184663*(2.81474976710656E14/1.122528164409771E15);
            double t184707 = t184706-1.0;
            double t184708 = cx4*t184401*t184403*t184641*t184634;
            double t184709 = cx1*gamma_aa[index]*gx*t184404*t184645;
            double t184710 = cx3*gamma_aa[index]*gx*t184405*t184633*t184651*t184399;
            double t184711 = cx2*t184406*t184633*t184656*t184399;
            double t184712 = cx0+t184710+t184711+t184708+t184709;
            double t184713 = pow(rho_a[index],4.0/3.0);
            double t184714 = 1.0/sqrt(3.141592653589793);
            double t184715 = t184414*t184681*t184682*(3.74176054803257E14/2.11106232532992E14);
            double t184716 = 1.0/pow(t184658,3.0/2.0);
            double t184717 = t184716*t184681*t184692*t184679*(3.74176054803257E14/1.40737488355328E14);
            double t184718 = t184715+t184717;
            double t184719 = t184714*t184662*t184718*(3.991211251234741E15/1.125899906842624E15);
            double t184720 = omega*t184481*t184663*t184687*(7.0368744177664E13/1.122528164409771E15);
            double t184721 = t184482*t184684*t184658*t184685*(4.951760157141521E27/4.2002315996439E29);
            double t184722 = t184414*t184692*t184684*t184685*(2.475880078570761E27/1.4000771998813E29);
            double t184723 = t184700*t184414*t184662*t184684*t184658*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t184747 = t184700*t184662;
            double t184724 = t184721+t184722+t184723-t184747;
            double t184725 = omega*t184410*t184724*t184663*(7.0368744177664E13/3.74176054803257E14);
            double t184726 = omega*t184410*t184682*t184692*t184687*(3.5184372088832E13/3.74176054803257E14);
            double t184727 = t184720+t184725+t184726+t184719;
            double t184728 = 1.0/(t184644*t184644*t184644);
            double t184729 = t184664*t184664;
            double t184730 = 1.0/(t184640*t184640*t184640);
            double t184731 = t184665*t184665;
            double t184732 = 1.0/(t184655*t184655*t184655);
            double t184733 = gamma_aa[index]*gx*t184451*(8.8E1/3.0);
            double t184734 = gamma_aa[index]*gx*t184444*t184633*t184399*7.2E1;
            double t184735 = t184633*t184445*t184399*(3.04E2/3.0);
            double t184736 = t184733+t184734+t184735;
            double t184737 = t184670*t184670;
            double t184738 = 1.0/(t184650*t184650*t184650);
            double t184739 = gamma_aa[index]*gx*t184451*(3.52E2/9.0);
            double t184740 = gamma_aa[index]*gx*t184444*t184633*t184399*2.88E2;
            double t184741 = t184633*t184445*t184399*(6.08E2/3.0);
            double t184742 = t184401*t184462*t184634*(1.12E3/9.0);
            double t184743 = t184740+t184741+t184742+t184739;
            double t184744 = gamma_aa[index]*gx*t184451*(1.76E2/9.0);
            double t184745 = t184633*t184445*t184399*(3.04E2/9.0);
            double t184746 = t184744+t184745;
            double t184748 = t184692*t184692;
            double t184749 = cx4*t184401*t184641*t184462*t184634*(4.889167919393874E16/2.11106232532992E14);
            double t184750 = cx1*gamma_aa[index]*gx*t184451*t184645*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t184751 = cx3*gamma_aa[index]*gx*t184444*t184633*t184651*t184399*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t184752 = cx2*t184633*t184445*t184656*t184399*(2.65411972767096E16/4.22212465065984E14);
            double t184753 = cx1*gamma_aa[index]*gx*t184444*t184633*t184728*t184399*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t184754 = cx4*t184401*t184403*t184730*t184634*t184729*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t184755 = cx2*t184406*t184731*t184633*t184732*t184399*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t184756 = cx3*gamma_aa[index]*gx*t184405*t184633*t184737*t184738*t184399*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t184758 = cx1*t184633*t184445*t184683*t184399*(1.257214607844139E16/2.81474976710656E14);
            double t184759 = cx3*gamma_aa[index]*gx*t184450*t184633*t184670*t184666*t184399*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t184760 = cx3*gamma_aa[index]*gx*t184405*t184633*t184736*t184666*t184399*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t184761 = cx4*t184401*t184634*t184457*t184664*t184675*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t184762 = cx4*t184401*t184403*t184634*t184743*t184675*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184763 = cx2*t184633*t184448*t184665*t184399*t184678*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t184764 = cx2*t184406*t184633*t184746*t184399*t184678*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t184757 = t184750+t184751-t184760+t184752-t184761+t184753-t184762+t184754-t184763+t184755- \
               t184764+t184756+t184749-t184758-t184759;
            double t184765 = t184481*t184661*t184659*(1.4000771998813E29/2.228292070713684E28);
            double t184766 = 1.0/(t184658*t184658*t184658);
            double t184767 = t184660*t184757*t184659*t184698*(1.4000771998813E29/4.951760157141521E27);
            double t184768 = t184765+t184767-t184410*t184692*t184659*t184698*(1.4000771998813E29/3.713820117856141E27) \
               -t184660*t184748*t184766*t184659*(1.4000771998813E29/2.475880078570761E27);
            double t184769 = t184700*t184700;
            double t184770 = omega*t184704*t184481*t184663*(2.81474976710656E14/3.367584493229313E15);
            double t184771 = omega*t184410*t184704*t184682*t184692*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t184772 = t184770+t184771-omega*t184410*t184663*t184727*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t184773 = cx4*t184401*t184641*t184634*t184457*(3.2E1/3.0);
            double t184774 = cx1*gamma_aa[index]*gx*t184447*t184645*(8.0/3.0);
            double t184775 = cx3*gamma_aa[index]*gx*t184450*t184633*t184651*t184399*8.0;
            double t184776 = cx2*t184633*t184448*t184656*t184399*(1.6E1/3.0);
            double t184777 = t184773+t184774+t184775+t184776-cx1*t184633*t184448*t184683*t184399*(8.0/3.0)-cx2* \
               t184406*t184633*t184665*t184399*t184678-cx4*t184401*t184403*t184634*t184664*t184675-cx3*gamma_aa[index]* \
               gx*t184405*t184633*t184670*t184666*t184399;
            v_rho_a_rho_a_[index] = -t184511*(-t184555-rho_a[index]*(t184523+t184519+t184538-t184520*t184386* \
               t184396*t184388*2.0-a1p*c*c0p*t184380*t184398*(8.0/9.0)+Aa*t184524*t184525*t184409*t184535*t184537* \
               (4.0/9.0))*2.0+rho_a[index]*(t184630+t184632-t184544-t184553+t184626+t184409*t184469*(t184631+t184624+ \
               t184544+t184553+t184629-t184541*t184471*t184617*t184495*2.0-t184550*t184425*t184485*t184486-a1f*c* \
               c0f*t184484*t184539*(8.0/9.0)-t184425*t184542*t184551*t184552*t184382*(1.0/2.0)-a1p*c*t184481*t184491* \
               t184485*t184486*(2.0/3.0)))+t184409*t184554*t184469*2.0-t184425*t184491*t184485*t184486*2.0+t184390* \
               t184386*t184388*t184397*2.0+a1p*c*c0p*t184423*t184481*(4.0/3.0))+t184610*t184576*2.0+(rho_a[index]* \
               (t184505+t184409*t184469*(t184504-c0p*t184423*t184425*2.0))*2.0-c0p*rho_a[index]*t184388*t184398*4.0) \
               *(t184581+t184584+t184578+t184587+ccab1*gamma_aa[index]*gcab*t184451*t184434*(4.4E1/9.0)+ccab4*t184401* \
               t184402*t184431*t184462*(3.68E2/9.0)-ccab1*t184400*t184506*t184445*t184399*(7.6E1/9.0)+ccab2*t184400* \
               t184443*t184445*t184399*(4.0E1/3.0)-ccab4*t184401*t184402*t184463*t184446*t184457*(3.2E1/3.0)-ccab2* \
               t184400*t184448*t184466*t184449*t184399*(1.6E1/3.0)-ccab2*t184400*t184406*t184466*t184399*(gamma_aa[index]* \
               gcab*t184451*(8.8E1/9.0)+t184400*t184445*t184399*(4.0E1/3.0))-ccab4*t184401*t184402*t184403*t184463* \
               (gamma_aa[index]*gcab*t184451*(1.76E2/9.0)+t184401*t184402*t184462*(3.68E2/9.0)+t184400*t184445*t184399* \
               8.0E1+gamma_aa[index]*gcab*t184400*t184444*t184399*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t184400* \
               t184444*t184439*t184399*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t184400*t184405*t184452*t184399*(gamma_aa[index]* \
               gcab*t184451*(4.4E1/3.0)+t184400*t184445*t184399*4.0E1+gamma_aa[index]*gcab*t184400*t184444*t184399* \
               (7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t184400*t184450*t184452*t184456*t184399*8.0)+t184616*(t184503- \
               t184492+t184409*t184469*(t184502+t184492-t184501*t184471*t184495*t184496-a1p*c*c0p*t184423*t184481* \
               (2.0/3.0)))*2.0+(rho_a[index]*t184576*2.0-c0p*rho_a[index]*t184388*t184398*4.0)*(t184581+t184584+t184578+ \
               t184587+ccab4*t184401*t184402*t184431*t184462*(6.4E1/3.0)-ccab2*t184401*t184402*t184462*t184466*(3.2E1/ \
               9.0)-ccab1*t184400*t184506*t184445*t184399*(3.2E1/9.0)+ccab2*t184400*t184443*t184445*t184399*(3.2E1/ \
               9.0)-ccab4*t184401*t184402*t184463*t184446*t184457*(3.2E1/3.0)-ccab2*t184400*t184448*t184466*t184449* \
               t184399*(1.6E1/3.0)-ccab4*t184401*t184402*t184403*t184463*(t184401*t184402*t184462*(6.4E1/3.0)+t184400* \
               t184445*t184399*(6.4E1/3.0)+gamma_aa[index]*gcab*t184400*t184444*t184399*(1.28E2/3.0))+ccab3*gamma_aa[index]* \
               gcab*t184400*t184444*t184439*t184399*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t184400*t184405*t184452* \
               t184399*(t184400*t184445*t184399*(3.2E1/3.0)+gamma_aa[index]*gcab*t184400*t184444*t184399*(3.2E1/3.0) \
               )-ccab3*gamma_aa[index]*gcab*t184400*t184450*t184452*t184456*t184399*8.0)+t184511*(t184555+rho_a[index]* \
               (t184523+t184519+t184538-t184520*t184386*t184396*t184388*2.0-a1p*c*c0p*t184380*t184398*(8.0/9.0)-Aa* \
               t184524*t184525*t184409*t184535*t184537*(4.0/9.0))*2.0-t184390*t184386*t184388*t184397*2.0)+(-t184505+ \
               rho_a[index]*t184611+rho_a[index]*(t184390*t184386*t184388*t184397-a1p*c*c0p*t184389*t184398*(2.0/ \
               3.0))*2.0+c0p*t184388*t184398*2.0-t184409*t184556*t184469)*(ccab1*gamma_aa[index]*gcab*t184434*t184447* \
               (4.0/3.0)+ccab4*t184401*t184402*t184431*t184457*(1.6E1/3.0)-ccab1*t184400*t184506*t184448*t184399* \
               (4.0/3.0)+ccab2*t184400*t184443*t184448*t184399*(8.0/3.0)-ccab4*t184401*t184402*t184403*t184463*t184446- \
               ccab2*t184400*t184406*t184466*t184449*t184399+ccab3*gamma_aa[index]*gcab*t184400*t184450*t184439*t184399* \
               4.0-ccab3*gamma_aa[index]*gcab*t184400*t184405*t184452*t184456*t184399)*4.0+rho_a[index]*t184616*(t184630+ \
               t184632-t184544-t184553+t184626-t184409*t184469*(t184630-t184631+t184632-t184624-t184544-t184553+t184626- \
               t184629+t184541*t184471*t184617*t184495*2.0+a1f*c*c0f*t184484*t184539*(8.0/9.0)))-rho_a[index]*t184576* \
               (ccaa1*gamma_aa[index]*gcaa*t184451*t184565*(8.8E1/9.0)+ccaa4*t184401*t184462*t184562*t184494*(1.12E3/ \
               9.0)+ccaa2*t184445*t184493*t184574*t184399*(3.04E2/9.0)-ccaa1*t184445*t184493*t184594*t184399*2.4E1- \
               ccaa4*t184401*t184604*t184605*t184457*t184494*(6.4E1/3.0)-ccaa2*t184608*t184609*t184448*t184493*t184399* \
               (3.2E1/3.0)-ccaa2*t184406*t184609*t184493*t184399*(gamma_aa[index]*gcaa*t184451*(1.76E2/9.0)+t184445* \
               t184493*t184399*(3.04E2/9.0))-ccaa4*t184401*t184403*t184605*t184494*(gamma_aa[index]*gcaa*t184451* \
               (3.52E2/9.0)+t184401*t184462*t184494*(1.12E3/9.0)+t184445*t184493*t184399*(6.08E2/3.0)+gamma_aa[index]* \
               gcaa*t184444*t184493*t184399*2.88E2)+ccaa4*t184401*t184403*(t184604*t184604)*1.0/(t184561*t184561* \
               t184561)*t184494*2.0+ccaa2*t184406*(t184608*t184608)*1.0/(t184573*t184573*t184573)*t184493*t184399* \
               2.0+ccaa3*gamma_aa[index]*gcaa*t184444*t184570*t184493*t184399*7.2E1+ccaa1*gamma_aa[index]*gcaa*t184444* \
               1.0/(t184564*t184564*t184564)*t184493*t184399*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t184405*t184493* \
               1.0/(t184569*t184569*t184569)*t184399*(t184598*t184598)*2.0-ccaa3*gamma_aa[index]*gcaa*t184405*t184493* \
               t184399*t184599*(gamma_aa[index]*gcaa*t184451*(8.8E1/3.0)+t184445*t184493*t184399*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t184444*t184493*t184399*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t184450*t184493*t184399*t184598*t184599* \
               1.6E1)-rho_a[index]*t184610*t184611*2.0-c0*t184414*t184712*t184707*(4.0/9.0)+c0*t184712*t184772*t184679* \
               (8.0/3.0)-c0*t184713*t184772*t184777*2.0+c0*t184707*t184777*t184679*(8.0/3.0)+c0*t184712*t184713*(omega* \
               t184704*t184663*t184539*(-1.125899906842624E15/1.010275347968794E16)+omega*t184481*t184663*t184727* \
               (5.62949953421312E14/3.367584493229313E15)+omega*t184410*t184663*(t184714*t184662*(t184482*t184681* \
               t184682*(3.74176054803257E14/3.16659348799488E14)-t184414*t184716*t184681*t184692*(3.74176054803257E14/ \
               2.11106232532992E14)+t184716*t184681*t184757*t184679*(3.74176054803257E14/1.40737488355328E14)-t184681* \
               1.0/pow(t184658,5.0/2.0)*t184748*t184679*(1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/ \
               1.125899906842624E15)+omega*t184481*t184724*t184663*(1.40737488355328E14/1.122528164409771E15)+omega* \
               t184663*t184539*t184687*(2.81474976710656E14/3.367584493229313E15)+t184700*t184714*t184662*t184718* \
               (3.991211251234741E15/1.125899906842624E15)+omega*t184410*t184663*(-t184662*t184768-t184662*t184769+ \
               t184404*t184684*t184658*t184685*(2.475880078570761E28/1.26006947989317E30)+t184414*t184684*t184685* \
               t184757*(2.475880078570761E27/1.4000771998813E29)+t184482*t184692*t184684*t184685*(9.903520314283042E27/ \
               4.2002315996439E29)+t184700*t184414*t184662*t184692*t184684*(4.951760157141521E27/1.4000771998813E29) \
               +t184700*t184482*t184662*t184684*t184658*(9.903520314283042E27/4.2002315996439E29)+t184414*t184662* \
               t184684*t184658*t184768*(2.475880078570761E27/1.4000771998813E29)+t184414*t184662*t184684*t184658* \
               t184769*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t184410*t184724*t184682*t184692*(7.0368744177664E13/3.74176054803257E14)-omega*t184410*t184716*t184748* \
               t184687*(1.7592186044416E13/3.74176054803257E14)+omega*t184410*t184682*t184757*t184687*(3.5184372088832E13/ \
               3.74176054803257E14)+omega*t184481*t184682*t184692*t184687*(7.0368744177664E13/1.122528164409771E15) \
               )*(2.81474976710656E14/1.122528164409771E15)+omega*t184410*t184704*t184716*t184748*(7.0368744177664E13/ \
               1.122528164409771E15)-omega*t184410*t184704*t184682*t184757*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t184410*t184682*t184727*t184692*(2.81474976710656E14/1.122528164409771E15)-omega*t184704*t184481* \
               t184682*t184692*(2.81474976710656E14/3.367584493229313E15))-c0*t184713*t184707*(cx1*gamma_aa[index]* \
               gx*t184451*t184645*(8.8E1/9.0)-cx1*t184633*t184445*t184683*t184399*2.4E1+cx2*t184633*t184445*t184656* \
               t184399*(3.04E2/9.0)+cx4*t184401*t184641*t184462*t184634*(1.12E3/9.0)+cx2*t184406*t184731*t184633* \
               t184732*t184399*2.0-cx2*t184406*t184633*t184746*t184399*t184678-cx2*t184633*t184448*t184665*t184399* \
               t184678*(3.2E1/3.0)+cx4*t184401*t184403*t184730*t184634*t184729*2.0-cx4*t184401*t184403*t184634*t184743* \
               t184675-cx4*t184401*t184634*t184457*t184664*t184675*(6.4E1/3.0)+cx1*gamma_aa[index]*gx*t184444*t184633* \
               t184728*t184399*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t184444*t184633*t184651*t184399*7.2E1-cx3*gamma_aa[index]* \
               gx*t184450*t184633*t184670*t184666*t184399*1.6E1-cx3*gamma_aa[index]*gx*t184405*t184633*t184736*t184666* \
               t184399+cx3*gamma_aa[index]*gx*t184405*t184633*t184737*t184738*t184399*2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t184779 = 1.0/pow(rho_a[index],1.0/3.0);
                double t184780 = c*t184779;
                double t184781 = sqrt(t184780);
                double t184782 = pow(t184780,3.0/2.0);
                double t184783 = c*c;
                double t184784 = 1.0/pow(rho_a[index],2.0/3.0);
                double t184785 = 1.0/c0p;
                double t184786 = b1p*t184781;
                double t184787 = b3p*t184782;
                double t184788 = b4p*t184783*t184784;
                double t184789 = b2p*c*t184779;
                double t184790 = t184786+t184787+t184788+t184789;
                double t184791 = 1.0/t184790;
                double t184792 = t184791*t184785*(1.0/2.0);
                double t184793 = t184792+1.0;
                double t184794 = log(t184793);
                double t184795 = a1p*c*t184779;
                double t184796 = t184795+1.0;
                double t184797 = 1.0/pow(rho_a[index],8.0/3.0);
                double t184798 = gamma_aa[index]*gamma_aa[index];
                double t184799 = gcaa*gcaa;
                double t184800 = t184799*t184799;
                double t184801 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t184802 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t184803 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t184804 = gamma_aa[index]*gcaa*t184797;
                double t184805 = t184804+1.0;
                double t184806 = gamma_aa[index]*gcaa*t184797*3.0;
                double t184807 = gamma_aa[index]*gcaa*t184803*t184798*t184799;
                double t184808 = t184802*t184798*t184799*3.0;
                double t184809 = t184806+t184807+t184808+1.0;
                double t184810 = t184798*t184798;
                double t184811 = gamma_aa[index]*gcaa*t184797*4.0;
                double t184812 = gamma_aa[index]*gcaa*t184803*t184798*t184799*4.0;
                double t184813 = t184802*t184798*t184799*6.0;
                double t184814 = t184800*t184801*t184810;
                double t184815 = t184811+t184812+t184813+t184814+1.0;
                double t184816 = gamma_aa[index]*gcaa*t184797*2.0;
                double t184817 = t184802*t184798*t184799;
                double t184818 = t184816+t184817+1.0;
                double t184819 = pow(2.0,1.0/3.0);
                double t184820 = t184819*2.0;
                double t184821 = t184820-2.0;
                double t184822 = two_13*2.0;
                double t184823 = t184822-2.0;
                double t184824 = 1.0/t184823;
                double t184825 = 1.0/c0f;
                double t184826 = b1f*t184781;
                double t184827 = b3f*t184782;
                double t184828 = b4f*t184783*t184784;
                double t184829 = b2f*c*t184779;
                double t184830 = t184826+t184827+t184828+t184829;
                double t184831 = 1.0/t184830;
                double t184832 = t184831*t184825*(1.0/2.0);
                double t184833 = t184832+1.0;
                double t184834 = log(t184833);
                double t184835 = a1f*c*t184779;
                double t184836 = t184835+1.0;
                double t184837 = c0f*t184834*t184836*2.0;
                double t184838 = c0p*t184794*t184796*2.0;
                double t184839 = rho_a[index]*2.0;
                double t184840 = 1.0/pow(t184839,1.0/3.0);
                double t184841 = c*t184840;
                double t184842 = gcab*gcab;
                double t184843 = t184842*t184842;
                double t184844 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t184845 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t184846 = gamma_aa[index]*gcab*t184797*2.0;
                double t184847 = t184802*t184842*t184798;
                double t184848 = t184846+t184847+1.0;
                double t184849 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t184850 = gamma_aa[index]*gcab*t184797;
                double t184851 = t184850+1.0;
                double t184852 = gamma_aa[index]*gcab*t184797*3.0;
                double t184853 = gamma_aa[index]*gcab*t184803*t184842*t184798;
                double t184854 = t184802*t184842*t184798*3.0;
                double t184855 = t184852+t184853+t184854+1.0;
                double t184856 = gamma_aa[index]*gcab*t184797*4.0;
                double t184857 = gamma_aa[index]*gcab*t184803*t184842*t184798*4.0;
                double t184858 = t184802*t184842*t184798*6.0;
                double t184859 = t184801*t184810*t184843;
                double t184860 = t184856+t184857+t184858+t184859+1.0;
                double t184861 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t184862 = 1.0/(t184848*t184848);
                double t184863 = 1.0/(t184855*t184855);
                double t184864 = 1.0/(t184860*t184860);
                double t184865 = gamma_aa[index]*gcab*t184861*(8.0/3.0);
                double t184866 = t184842*t184844*t184798*(8.0/3.0);
                double t184867 = t184865+t184866;
                double t184868 = gcab*t184797;
                double t184869 = gamma_aa[index]*t184802*t184842;
                double t184870 = t184868+t184869;
                double t184871 = gcab*t184797*(3.0/2.0);
                double t184872 = gamma_aa[index]*t184802*t184842*3.0;
                double t184873 = gcab*t184803*t184842*t184798*(3.0/2.0);
                double t184874 = t184871+t184872+t184873;
                double t184875 = gamma_aa[index]*gcab*t184861*4.0;
                double t184876 = gamma_aa[index]*gcab*t184842*t184849*t184798*4.0;
                double t184877 = t184842*t184844*t184798*8.0;
                double t184878 = t184875+t184876+t184877;
                double t184879 = gamma_aa[index]*gcab*t184861*(1.6E1/3.0);
                double t184880 = gamma_aa[index]*gcab*t184842*t184849*t184798*1.6E1;
                double t184881 = t184842*t184844*t184798*1.6E1;
                double t184882 = t184810*t184843*t184845*(1.6E1/3.0);
                double t184883 = t184880+t184881+t184882+t184879;
                double t184884 = gcab*t184797*2.0;
                double t184885 = gamma_aa[index]*t184802*t184842*6.0;
                double t184886 = gcab*t184803*t184842*t184798*6.0;
                double t184887 = gamma_aa[index]*t184801*t184843*t184798*2.0;
                double t184888 = t184884+t184885+t184886+t184887;
                double t184889 = t184837-t184838;
                double t184890 = t184821*t184824*t184889;
                double t184891 = t184890+t184838;
                double t184892 = rho_a[index]*t184891*2.0;
                double t184893 = sqrt(t184841);
                double t184894 = b1p*t184893;
                double t184895 = pow(t184841,3.0/2.0);
                double t184896 = b3p*t184895;
                double t184897 = b2p*c*t184840;
                double t184898 = 1.0/pow(t184839,2.0/3.0);
                double t184899 = b4p*t184783*t184898;
                double t184900 = t184894+t184896+t184897+t184899;
                double t184901 = 1.0/t184900;
                double t184902 = t184901*t184785*(1.0/2.0);
                double t184903 = t184902+1.0;
                double t184904 = log(t184903);
                double t184905 = a1p*c*t184840;
                double t184906 = t184905+1.0;
                double t184907 = t184892-c0p*rho_a[index]*t184904*t184906*4.0;
                double t184908 = 1.0/t184860;
                double t184909 = 1.0/t184848;
                double t184910 = 1.0/t184855;
                double t184911 = 1.0/(t184851*t184851);
                double t184912 = 1.0/(t184851*t184851*t184851);
                double t184913 = ccab3*gcab*t184803*t184842*t184863*t184878*t184798*(3.0/2.0);
                double t184914 = ccab2*gamma_aa[index]*t184802*t184842*t184862*t184867;
                double t184915 = ccab3*gamma_aa[index]*gcab*t184842*t184863*t184874*t184849*t184798*4.0;
                double t184916 = ccab4*gamma_aa[index]*t184801*t184843*t184864*t184883*t184798*2.0;
                double t184917 = ccab4*t184810*t184843*t184845*t184864*t184888*(1.6E1/3.0);
                double t184918 = ccab2*t184842*t184870*t184844*t184862*t184798*(8.0/3.0);
                double t184919 = gamma_aa[index]*t184842*t184844*4.0;
                double t184920 = 1.0/(t184848*t184848*t184848);
                double t184921 = 1.0/(t184855*t184855*t184855);
                double t184922 = 1.0/(t184860*t184860*t184860);
                double t184923 = 1.0/pow(t184839,4.0/3.0);
                double t184924 = 1.0/pow(rho_a[index],4.0/3.0);
                double t184925 = 1.0/pow(rho_a[index],5.0/3.0);
                double t184926 = 1.0/sqrt(t184780);
                double t184927 = 1.0/t184793;
                double t184928 = 1.0/(t184790*t184790);
                double t184929 = b4p*t184925*t184783*(2.0/3.0);
                double t184930 = b2p*c*t184924*(1.0/3.0);
                double t184931 = b1p*c*t184924*t184926*(1.0/6.0);
                double t184932 = b3p*c*t184924*t184781*(1.0/2.0);
                double t184933 = t184930+t184931+t184932+t184929;
                double t184934 = t184933*t184927*t184928*t184796;
                double t184935 = 1.0/t184851;
                double t184936 = 1.0/t184805;
                double t184937 = 1.0/t184815;
                double t184938 = 1.0/t184818;
                double t184939 = 1.0/t184809;
                double t184940 = 1.0/(t184805*t184805);
                double t184941 = 1.0/(t184809*t184809);
                double t184942 = 1.0/(t184818*t184818);
                double t184943 = gcaa*t184797*3.0;
                double t184944 = gamma_aa[index]*t184802*t184799*6.0;
                double t184945 = gcaa*t184803*t184798*t184799*3.0;
                double t184946 = t184943+t184944+t184945;
                double t184947 = 1.0/(t184815*t184815);
                double t184948 = gcaa*t184797*4.0;
                double t184949 = gamma_aa[index]*t184802*t184799*1.2E1;
                double t184950 = gcaa*t184803*t184798*t184799*1.2E1;
                double t184951 = gamma_aa[index]*t184800*t184801*t184798*4.0;
                double t184952 = t184950+t184951+t184948+t184949;
                double t184953 = gcaa*t184797*2.0;
                double t184954 = gamma_aa[index]*t184802*t184799*2.0;
                double t184955 = t184953+t184954;
                double t184956 = gamma_aa[index]*gcaa*t184861*(1.6E1/3.0);
                double t184957 = t184844*t184798*t184799*(1.6E1/3.0);
                double t184958 = t184956+t184957;
                double t184959 = gamma_aa[index]*gcaa*t184861*8.0;
                double t184960 = gamma_aa[index]*gcaa*t184849*t184798*t184799*8.0;
                double t184961 = t184844*t184798*t184799*1.6E1;
                double t184962 = t184960+t184961+t184959;
                double t184963 = gamma_aa[index]*gcaa*t184861*(3.2E1/3.0);
                double t184964 = gamma_aa[index]*gcaa*t184849*t184798*t184799*3.2E1;
                double t184965 = t184844*t184798*t184799*3.2E1;
                double t184966 = t184800*t184810*t184845*(3.2E1/3.0);
                double t184967 = t184963+t184964+t184965+t184966;
                double t184968 = 1.0/t184833;
                double t184969 = 1.0/(t184830*t184830);
                double t184970 = b4f*t184925*t184783*(2.0/3.0);
                double t184971 = b2f*c*t184924*(1.0/3.0);
                double t184972 = b1f*c*t184924*t184926*(1.0/6.0);
                double t184973 = b3f*c*t184924*t184781*(1.0/2.0);
                double t184974 = t184970+t184971+t184972+t184973;
                double t184975 = a1f*c*c0f*t184834*t184924*(2.0/3.0);
                double t184976 = a1p*c*c0p*t184924*t184794*(2.0/3.0);
                double t184977 = ccaa1*gcaa*t184936*t184797;
                double t184978 = ccaa4*gamma_aa[index]*t184800*t184801*t184937*t184798*4.0;
                double t184979 = ccaa2*gamma_aa[index]*t184802*t184938*t184799*2.0;
                double t184980 = ccaa3*gcaa*t184803*t184939*t184798*t184799*3.0;
                double t184981 = t184980+t184977+t184978+t184979-ccaa1*gamma_aa[index]*t184802*t184940*t184799-ccaa4* \
                   t184800*t184801*t184810*t184952*t184947-ccaa2*t184802*t184942*t184955*t184798*t184799-ccaa3*gamma_aa[index]* \
                   gcaa*t184803*t184941*t184946*t184798*t184799;
                double t184982 = gx*gx;
                double t184983 = t184982*t184982;
                double t184984 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t184985 = gamma_aa[index]*gx*t184797*4.0;
                double t184986 = gamma_aa[index]*gx*t184803*t184982*t184798*4.0;
                double t184987 = t184802*t184982*t184798*6.0;
                double t184988 = t184801*t184810*t184983;
                double t184989 = t184985+t184986+t184987+t184988+1.0;
                double t184990 = 1.0/t184989;
                double t184991 = cx4*t184801*t184810*t184990*t184983*(4.190715359480463E15/2.251799813685248E15);
                double t184992 = gamma_aa[index]*gx*t184797;
                double t184993 = t184992+1.0;
                double t184994 = 1.0/t184993;
                double t184995 = cx1*gamma_aa[index]*gx*t184994*t184797*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t184996 = gamma_aa[index]*gx*t184797*3.0;
                double t184997 = gamma_aa[index]*gx*t184803*t184982*t184798;
                double t184998 = t184802*t184982*t184798*3.0;
                double t184999 = t184996+t184997+t184998+1.0;
                double t185000 = 1.0/t184999;
                double t185001 = cx3*gamma_aa[index]*gx*t185000*t184803*t184982*t184798*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185002 = gamma_aa[index]*gx*t184797*2.0;
                double t185003 = t184802*t184982*t184798;
                double t185004 = t185002+t185003+1.0;
                double t185005 = 1.0/t185004;
                double t185006 = cx2*t185005*t184802*t184982*t184798*(4.190715359480463E15/2.251799813685248E15);
                double t185007 = t185001+t185006+t184991+t184984+t184995;
                double t185008 = 1.0/omega;
                double t185009 = 1.0/(omega*omega);
                double t185010 = pow(rho_a[index],2.0/3.0);
                double t185011 = 1.0/t185007;
                double t185013 = t185010*t185011*t185009*(1.4000771998813E29/4.951760157141521E27);
                double t185012 = exp(-t185013);
                double t185014 = cx4*t184810*t184845*t184990*t184983*(1.396905119826821E15/7.0368744177664E13);
                double t185015 = cx1*gamma_aa[index]*gx*t184861*t184994*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t185016 = cx3*gamma_aa[index]*gx*t185000*t184982*t184849*t184798*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t185017 = cx2*t185005*t184844*t184982*t184798*(1.396905119826821E15/1.40737488355328E14);
                double t185018 = 1.0/(t184993*t184993);
                double t185019 = gamma_aa[index]*gx*t184861*8.0;
                double t185020 = gamma_aa[index]*gx*t184982*t184849*t184798*8.0;
                double t185021 = t184844*t184982*t184798*1.6E1;
                double t185022 = t185020+t185021+t185019;
                double t185023 = 1.0/(t184999*t184999);
                double t185024 = gamma_aa[index]*gx*t184861*(3.2E1/3.0);
                double t185025 = gamma_aa[index]*gx*t184982*t184849*t184798*3.2E1;
                double t185026 = t184844*t184982*t184798*3.2E1;
                double t185027 = t184810*t184845*t184983*(3.2E1/3.0);
                double t185028 = t185024+t185025+t185026+t185027;
                double t185029 = 1.0/(t184989*t184989);
                double t185030 = gamma_aa[index]*gx*t184861*(1.6E1/3.0);
                double t185031 = t184844*t184982*t184798*(1.6E1/3.0);
                double t185032 = t185030+t185031;
                double t185033 = 1.0/(t185004*t185004);
                double t185037 = cx1*t185018*t184844*t184982*t184798*(1.396905119826821E15/2.81474976710656E14);
                double t185038 = cx3*gamma_aa[index]*gx*t185022*t185023*t184803*t184982*t184798*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t185039 = cx4*t184801*t184810*t185028*t185029*t184983*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185040 = cx2*t185032*t185033*t184802*t184982*t184798*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185034 = -t185040+t185014+t185015+t185016+t185017-t185037-t185038-t185039;
                double t185035 = omega*omega;
                double t185036 = t185012-1.0;
                double t185041 = t185011*t185009*t184779*(1.4000771998813E29/7.427640235712282E27);
                double t185042 = 1.0/(t185007*t185007);
                double t185043 = t185010*t185042*t185034*t185009*(1.4000771998813E29/4.951760157141521E27);
                double t185044 = t185041+t185043;
                double t185045 = sqrt(t185007);
                double t185046 = t185007*t185035*t185036*t184784*(2.475880078570761E27/1.4000771998813E29);
                double t185047 = -t185012+t185046+3.0/2.0;
                double t185048 = 1.0/sqrt(t185007);
                double t185049 = pow(rho_a[index],1.0/3.0);
                double t185050 = t185008*t185048*t185049*(3.74176054803257E14/7.0368744177664E13);
                double t185051 = erf(t185050);
                double t185052 = t185051*(3.991211251234741E15/2.251799813685248E15);
                double t185054 = omega*t185045*t185047*t184779*(7.0368744177664E13/3.74176054803257E14);
                double t185053 = t185052-t185054;
                double t185055 = cx1*gx*t184994*t184797;
                double t185056 = cx4*gamma_aa[index]*t184801*t184990*t184983*t184798*4.0;
                double t185057 = cx2*gamma_aa[index]*t185005*t184802*t184982*2.0;
                double t185058 = cx3*gx*t185000*t184803*t184982*t184798*3.0;
                double t185059 = gx*t184797*3.0;
                double t185060 = gamma_aa[index]*t184802*t184982*6.0;
                double t185061 = gx*t184803*t184982*t184798*3.0;
                double t185062 = t185060+t185061+t185059;
                double t185063 = gx*t184797*4.0;
                double t185064 = gamma_aa[index]*t184802*t184982*1.2E1;
                double t185065 = gx*t184803*t184982*t184798*1.2E1;
                double t185066 = gamma_aa[index]*t184801*t184983*t184798*4.0;
                double t185067 = t185063+t185064+t185065+t185066;
                double t185068 = gx*t184797*2.0;
                double t185069 = gamma_aa[index]*t184802*t184982*2.0;
                double t185070 = t185068+t185069;
                double t185071 = t185055+t185056+t185057+t185058-cx1*gamma_aa[index]*t184802*t185018*t184982-cx2* \
                   t185033*t185070*t184802*t184982*t184798-cx4*t184801*t184810*t185029*t185067*t184983-cx3*gamma_aa[index]* \
                   gx*t185023*t185062*t184803*t184982*t184798;
                double t185072 = pow(rho_a[index],4.0/3.0);
                double t185073 = 1.0/sqrt(3.141592653589793);
                double t185074 = 1.0/pow(t185007,3.0/2.0);
                double t185075 = cx1*gx*t184994*t184797*(4.190715359480463E15/2.251799813685248E15);
                double t185076 = cx4*gamma_aa[index]*t184801*t184990*t184983*t184798*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t185077 = cx2*gamma_aa[index]*t185005*t184802*t184982*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185078 = cx3*gx*t185000*t184803*t184982*t184798*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t185080 = cx1*gamma_aa[index]*t184802*t185018*t184982*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185081 = cx3*gamma_aa[index]*gx*t185023*t185062*t184803*t184982*t184798*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t185082 = cx4*t184801*t184810*t185029*t185067*t184983*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185083 = cx2*t185033*t185070*t184802*t184982*t184798*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185079 = -t185080-t185081-t185082-t185083+t185075+t185076+t185077+t185078;
                double t185084 = cx1*gamma_aa[index]*t185018*t184844*t184982*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t185085 = 1.0/(t184993*t184993*t184993);
                double t185086 = cx3*gx*t185022*t185023*t184803*t184982*t184798*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t185087 = cx2*gamma_aa[index]*t185032*t185033*t184802*t184982*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185088 = cx3*gamma_aa[index]*gx*t185023*t185062*t184982*t184849*t184798*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t185089 = gx*t184861*8.0;
                double t185090 = gamma_aa[index]*t184844*t184982*3.2E1;
                double t185091 = gx*t184982*t184849*t184798*2.4E1;
                double t185092 = t185090+t185091+t185089;
                double t185093 = cx3*gamma_aa[index]*gx*t185023*t184803*t185092*t184982*t184798*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t185094 = cx4*gamma_aa[index]*t184801*t185028*t185029*t184983*t184798*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t185095 = cx4*t184810*t185029*t185067*t184845*t184983*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t185096 = gx*t184861*(3.2E1/3.0);
                double t185097 = gamma_aa[index]*t184844*t184982*6.4E1;
                double t185098 = gx*t184982*t184849*t184798*9.6E1;
                double t185099 = gamma_aa[index]*t184845*t184983*t184798*(1.28E2/3.0);
                double t185100 = t185096+t185097+t185098+t185099;
                double t185101 = cx4*t185100*t184801*t184810*t185029*t184983*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185102 = cx2*t185033*t185070*t184844*t184982*t184798*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t185103 = gx*t184861*(1.6E1/3.0);
                double t185104 = gamma_aa[index]*t184844*t184982*(3.2E1/3.0);
                double t185105 = t185103+t185104;
                double t185106 = cx2*t185033*t185105*t184802*t184982*t184798*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185107 = 1.0/(t185004*t185004*t185004);
                double t185108 = 1.0/(t184999*t184999*t184999);
                double t185109 = 1.0/(t184989*t184989*t184989);
                double t185111 = cx1*gx*t184861*t184994*(1.396905119826821E15/2.81474976710656E14);
                double t185112 = cx4*gamma_aa[index]*t184845*t184990*t184983*t184798*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t185113 = cx2*gamma_aa[index]*t185005*t184844*t184982*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t185114 = cx3*gx*t185000*t184982*t184849*t184798*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t185115 = cx1*gx*t185085*t184982*t184849*t184798*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t185116 = cx2*t185032*t185070*t185107*t184802*t184982*t184798*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185117 = cx3*gamma_aa[index]*gx*t185022*t185062*t185108*t184803*t184982*t184798*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t185118 = cx4*t184801*t184810*t185028*t185109*t185067*t184983*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185110 = t185101+t185102-t185111-t185112-t185113-t185114+t185106-t185115-t185116-t185117- \
                   t185118+t185084+t185093+t185094+t185086+t185095+t185087+t185088;
                double t185119 = t185010*t185110*t185042*t185009*(1.4000771998813E29/4.951760157141521E27);
                double t185120 = t185042*t185009*t185079*t184779*(1.4000771998813E29/7.427640235712282E27);
                double t185121 = 1.0/(t185007*t185007*t185007);
                double t185122 = t185010*t185121*t185034*t185009*t185079*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t185123 = t185120+t185122+t185119;
                double t185124 = t185011*t185012*t185079*(1.0/2.0);
                double t185125 = t185035*t185036*t185079*t184784*(2.475880078570761E27/1.4000771998813E29);
                double t185134 = t185010*t185012*t185042*t185009*t185079*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t185126 = t185124+t185125-t185134;
                double t185127 = t185007*t185035*t185036*t184925*(4.951760157141521E27/4.2002315996439E29);
                double t185128 = t185034*t185035*t185036*t184784*(2.475880078570761E27/1.4000771998813E29);
                double t185129 = t185012*t185007*t185035*t185044*t184784*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t185141 = t185012*t185044;
                double t185130 = -t185141+t185127+t185128+t185129;
                double t185131 = t185008*t185048*t184784*(3.74176054803257E14/2.11106232532992E14);
                double t185132 = t185034*t185008*t185074*t185049*(3.74176054803257E14/1.40737488355328E14);
                double t185133 = t185131+t185132;
                double t185135 = omega*t185045*t185126*t184779*(7.0368744177664E13/3.74176054803257E14);
                double t185136 = omega*t185047*t185048*t185079*t184779*(3.5184372088832E13/3.74176054803257E14);
                double t185137 = t185012*t185008*t185073*t185074*t185049*t185079*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t185138 = t185135+t185136+t185137;
                double t185139 = t185012*t185133*t185073*(3.991211251234741E15/1.125899906842624E15);
                double t185140 = omega*t185045*t185047*t184924*(7.0368744177664E13/1.122528164409771E15);
                double t185142 = omega*t185130*t185045*t184779*(7.0368744177664E13/3.74176054803257E14);
                double t185143 = omega*t185034*t185047*t185048*t184779*(3.5184372088832E13/3.74176054803257E14);
                double t185144 = t185140+t185142+t185143+t185139;
                double t185145 = cx4*t184801*t184810*t184990*t184983;
                double t185146 = cx1*gamma_aa[index]*gx*t184994*t184797;
                double t185147 = cx3*gamma_aa[index]*gx*t185000*t184803*t184982*t184798;
                double t185148 = cx2*t185005*t184802*t184982*t184798;
                double t185149 = cx0+t185145+t185146+t185147+t185148;
                double t185150 = omega*t185045*t185138*t184779*(2.81474976710656E14/1.122528164409771E15);
                double t185151 = t185150-omega*t185053*t185048*t185079*t184779*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t185152 = omega*t185053*t185045*t184779*(2.81474976710656E14/1.122528164409771E15);
                double t185153 = t185152-1.0;
                v_rho_a_gamma_aa_[index] = t184907*(t184913+t184914+t184915+t184916+t184917+t184918+ccab1*gamma_aa[index]* \
                   t184911*t184842*t184844*(4.0/3.0)-ccab2*gamma_aa[index]*t184842*t184844*t184909*(4.0/3.0)+ccab4*t184801* \
                   t184810*t184843*t184864*(gamma_aa[index]*t184842*t184844*8.0+gamma_aa[index]*t184843*t184845*t184798* \
                   8.0+gcab*t184842*t184849*t184798*1.6E1)+ccab2*gamma_aa[index]*t184843*t184862*t184845*t184798*(4.0/ \
                   3.0)-ccab4*gamma_aa[index]*t184843*t184845*t184908*t184798*8.0-ccab1*gcab*t184912*t184842*t184849* \
                   t184798*(4.0/3.0)-ccab3*gcab*t184910*t184842*t184849*t184798*4.0-ccab4*t184801*t184810*t184922*t184843* \
                   t184883*t184888*2.0-ccab2*t184802*t184920*t184842*t184870*t184867*t184798*2.0+ccab3*gamma_aa[index]* \
                   gcab*t184803*t184842*t184863*t184798*(t184919+gcab*t184842*t184849*t184798*4.0)-ccab3*gamma_aa[index]* \
                   gcab*t184803*t184921*t184842*t184874*t184878*t184798*2.0)-t184981*(t184838+t184821*t184824*(t184837- \
                   c0p*t184794*t184796*2.0))-(-t184890-t184838+rho_a[index]*((1.0/(t184900*t184900)*t184906*(b4p*t184783* \
                   1.0/pow(t184839,5.0/3.0)*(2.0/3.0)+b2p*c*t184923*(1.0/3.0)+b3p*c*t184923*t184893*(1.0/2.0)+b1p*c*1.0/ \
                   sqrt(t184841)*t184923*(1.0/6.0)))/t184903-a1p*c*c0p*t184904*t184923*(2.0/3.0))*2.0+rho_a[index]*(- \
                   t184934+t184976+t184821*t184824*(t184934+t184975-t184836*t184974*t184968*t184969-a1p*c*c0p*t184924* \
                   t184794*(2.0/3.0)))+c0p*t184904*t184906*2.0)*(ccab1*gcab*t184935*t184797*(1.0/2.0)-ccab1*gamma_aa[index]* \
                   t184802*t184911*t184842*(1.0/2.0)+ccab2*gamma_aa[index]*t184802*t184842*t184909-ccab4*t184801*t184810* \
                   t184843*t184864*t184888-ccab2*t184802*t184842*t184870*t184862*t184798+ccab4*gamma_aa[index]*t184801* \
                   t184843*t184908*t184798*2.0+ccab3*gcab*t184910*t184803*t184842*t184798*(3.0/2.0)-ccab3*gamma_aa[index]* \
                   gcab*t184803*t184842*t184863*t184874*t184798)*2.0+t184907*(t184913+t184914+t184915+t184916+t184917+ \
                   t184918-ccab1*gcab*t184861*t184935*(4.0/3.0)+ccab1*gamma_aa[index]*t184911*t184842*t184844*(8.0/3.0) \
                   -ccab2*gamma_aa[index]*t184842*t184844*t184909*4.0+ccab4*t184801*t184810*t184843*t184864*(gcab*t184861* \
                   (1.6E1/3.0)+gamma_aa[index]*t184842*t184844*2.4E1+gamma_aa[index]*t184843*t184845*t184798*(4.0E1/3.0) \
                   +gcab*t184842*t184849*t184798*3.2E1)+ccab2*t184802*t184842*t184862*t184798*(t184919+gcab*t184861*(8.0/ \
                   3.0))-ccab4*gamma_aa[index]*t184843*t184845*t184908*t184798*(4.0E1/3.0)-ccab1*gcab*t184912*t184842* \
                   t184849*t184798*(4.0/3.0)-ccab3*gcab*t184910*t184842*t184849*t184798*8.0-ccab4*t184801*t184810*t184922* \
                   t184843*t184883*t184888*2.0-ccab2*t184802*t184920*t184842*t184870*t184867*t184798*2.0+ccab3*gamma_aa[index]* \
                   gcab*t184803*t184842*t184863*t184798*(gcab*t184861*4.0+gamma_aa[index]*t184842*t184844*1.2E1+gcab* \
                   t184842*t184849*t184798*8.0)-ccab3*gamma_aa[index]*gcab*t184803*t184921*t184842*t184874*t184878*t184798* \
                   2.0)-rho_a[index]*t184891*(ccaa1*gcaa*t184861*t184936*(-8.0/3.0)+ccaa1*gamma_aa[index]*t184940*t184844* \
                   t184799*8.0-ccaa2*gamma_aa[index]*t184844*t184938*t184799*(3.2E1/3.0)+ccaa4*t184800*t184810*t184952* \
                   t184845*t184947*(3.2E1/3.0)+ccaa2*t184942*t184844*t184955*t184798*t184799*(1.6E1/3.0)+ccaa4*t184800* \
                   t184801*t184810*t184947*(gcaa*t184861*(3.2E1/3.0)+gamma_aa[index]*t184844*t184799*6.4E1+gamma_aa[index]* \
                   t184800*t184845*t184798*(1.28E2/3.0)+gcaa*t184849*t184798*t184799*9.6E1)-ccaa1*gcaa*1.0/(t184805*t184805* \
                   t184805)*t184849*t184798*t184799*(1.6E1/3.0)+ccaa2*t184802*t184942*t184798*t184799*(gcaa*t184861*(1.6E1/ \
                   3.0)+gamma_aa[index]*t184844*t184799*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t184800*t184845*t184937*t184798* \
                   (1.28E2/3.0)+ccaa2*gamma_aa[index]*t184802*t184942*t184958*t184799*2.0-ccaa3*gcaa*t184849*t184939* \
                   t184798*t184799*2.4E1+ccaa4*gamma_aa[index]*t184800*t184801*t184947*t184967*t184798*4.0+ccaa3*gcaa* \
                   t184803*t184941*t184962*t184798*t184799*3.0-ccaa4*t184800*t184801*t184810*1.0/(t184815*t184815*t184815) \
                   *t184952*t184967*2.0-ccaa2*t184802*1.0/(t184818*t184818*t184818)*t184955*t184958*t184798*t184799*2.0+ \
                   ccaa3*gamma_aa[index]*gcaa*t184803*t184941*t184798*t184799*(gcaa*t184861*8.0+gamma_aa[index]*t184844* \
                   t184799*3.2E1+gcaa*t184849*t184798*t184799*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t184941*t184946*t184849* \
                   t184798*t184799*8.0-ccaa3*gamma_aa[index]*gcaa*t184803*1.0/(t184809*t184809*t184809)*t184962*t184946* \
                   t184798*t184799*2.0)+rho_a[index]*t184981*(-t184934+t184976+t184821*t184824*(t184934+t184975-t184976- \
                   t184836*t184974*t184968*t184969))-c0*t185072*t185153*(cx1*gx*t184861*t184994*(-8.0/3.0)+cx1*gamma_aa[index]* \
                   t185018*t184844*t184982*8.0-cx2*gamma_aa[index]*t185005*t184844*t184982*(3.2E1/3.0)+cx2*t185033*t185105* \
                   t184802*t184982*t184798+cx2*t185033*t185070*t184844*t184982*t184798*(1.6E1/3.0)+cx4*t185100*t184801* \
                   t184810*t185029*t184983+cx4*t184810*t185029*t185067*t184845*t184983*(3.2E1/3.0)+cx2*gamma_aa[index]* \
                   t185032*t185033*t184802*t184982*2.0-cx4*gamma_aa[index]*t184845*t184990*t184983*t184798*(1.28E2/3.0) \
                   -cx1*gx*t185085*t184982*t184849*t184798*(1.6E1/3.0)-cx3*gx*t185000*t184982*t184849*t184798*2.4E1+cx4* \
                   gamma_aa[index]*t184801*t185028*t185029*t184983*t184798*4.0+cx3*gx*t185022*t185023*t184803*t184982* \
                   t184798*3.0-cx2*t185032*t185070*t185107*t184802*t184982*t184798*2.0-cx4*t184801*t184810*t185028*t185109* \
                   t185067*t184983*2.0+cx3*gamma_aa[index]*gx*t185023*t184803*t185092*t184982*t184798+cx3*gamma_aa[index]* \
                   gx*t185023*t185062*t184982*t184849*t184798*8.0-cx3*gamma_aa[index]*gx*t185022*t185062*t185108*t184803* \
                   t184982*t184798*2.0)-c0*t185071*t185153*t185049*(4.0/3.0)+c0*t185151*t185049*t185149*(4.0/3.0)-c0* \
                   t185072*t185149*(omega*t185045*t184779*(t185012*t185073*(t185110*t185008*t185074*t185049*(3.74176054803257E14/ \
                   1.40737488355328E14)+t185008*t185074*t185079*t184784*(3.74176054803257E14/4.22212465065984E14)+1.0/ \
                   pow(t185007,5.0/2.0)*t185034*t185008*t185049*t185079*(1.122528164409771E15/2.81474976710656E14))*(- \
                   3.991211251234741E15/1.125899906842624E15)+omega*t185045*t185126*t184924*(7.0368744177664E13/1.122528164409771E15) \
                   +omega*t185045*t184779*(t185012*t185123+t185011*t185012*t185044*t185079*(1.0/2.0)+t185012*t185042* \
                   t185034*t185079*(1.0/2.0)-t185110*t185035*t185036*t184784*(2.475880078570761E27/1.4000771998813E29) \
                   +t185035*t185036*t184925*t185079*(4.951760157141521E27/4.2002315996439E29)+(t185011*t185012*t185079* \
                   (1.0/3.0))/rho_a[index]-t185012*t185123*t185007*t185035*t184784*(2.475880078570761E27/1.4000771998813E29) \
                   +t185012*t185035*t185044*t185079*t184784*(2.475880078570761E27/1.4000771998813E29)-t185010*t185012* \
                   t185042*t185044*t185009*t185079*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   -omega*t185110*t185047*t185048*t184779*(3.5184372088832E13/3.74176054803257E14)+omega*t185034*t185126* \
                   t185048*t184779*(3.5184372088832E13/3.74176054803257E14)+omega*t185047*t185048*t184924*t185079*(3.5184372088832E13/ \
                   1.122528164409771E15)+omega*t185130*t185048*t185079*t184779*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t185034*t185047*t185074*t185079*t184779*(1.7592186044416E13/3.74176054803257E14)+t185010*t185012* \
                   t185042*t185133*t185009*t185073*t185079*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t185045*t185138*t184924*(2.81474976710656E14/3.367584493229313E15)+omega* \
                   t185110*t185053*t185048*t184779*(1.40737488355328E14/1.122528164409771E15)-omega*t185053*t185048*t184924* \
                   t185079*(1.40737488355328E14/3.367584493229313E15)+omega*t185034*t185048*t185138*t184779*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t185144*t185048*t185079*t184779*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t185034*t185053*t185074*t185079*t184779*(7.0368744177664E13/1.122528164409771E15))-c0*t185151* \
                   t185072*(cx1*gamma_aa[index]*gx*t184861*t184994*(8.0/3.0)-cx1*t185018*t184844*t184982*t184798*(8.0/ \
                   3.0)+cx2*t185005*t184844*t184982*t184798*(1.6E1/3.0)+cx4*t184810*t184845*t184990*t184983*(3.2E1/3.0) \
                   -cx2*t185032*t185033*t184802*t184982*t184798-cx4*t184801*t184810*t185028*t185029*t184983+cx3*gamma_aa[index]* \
                   gx*t185000*t184982*t184849*t184798*8.0-cx3*gamma_aa[index]*gx*t185022*t185023*t184803*t184982*t184798) \
                   +c0*t185071*t185072*(omega*t185053*t185045*t184924*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t185045*t185144*t184779*(2.81474976710656E14/1.122528164409771E15)+omega*t185034*t185053*t185048*t184779* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t185155 = 1.0/pow(rho_a[index],1.0/3.0);
                double t185156 = c*t185155;
                double t185157 = sqrt(t185156);
                double t185158 = pow(t185156,3.0/2.0);
                double t185159 = c*c;
                double t185160 = 1.0/pow(rho_a[index],2.0/3.0);
                double t185161 = 1.0/c0p;
                double t185162 = b1p*t185157;
                double t185163 = b3p*t185158;
                double t185164 = b4p*t185160*t185159;
                double t185165 = b2p*c*t185155;
                double t185166 = t185162+t185163+t185164+t185165;
                double t185167 = 1.0/t185166;
                double t185168 = t185161*t185167*(1.0/2.0);
                double t185169 = t185168+1.0;
                double t185170 = log(t185169);
                double t185171 = a1p*c*t185155;
                double t185172 = t185171+1.0;
                double t185173 = rho_a[index]*2.0;
                double t185174 = 1.0/pow(t185173,1.0/3.0);
                double t185175 = c*t185174;
                double t185176 = gcab*gcab;
                double t185177 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t185178 = 1.0/pow(rho_a[index],8.0/3.0);
                double t185179 = gamma_aa[index]*gamma_aa[index];
                double t185180 = t185176*t185176;
                double t185181 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t185182 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t185183 = gamma_aa[index]*gcab*t185178;
                double t185184 = t185183+1.0;
                double t185185 = gamma_aa[index]*gcab*t185178*2.0;
                double t185186 = t185176*t185177*t185179;
                double t185187 = t185185+t185186+1.0;
                double t185188 = gamma_aa[index]*gcab*t185178*3.0;
                double t185189 = gamma_aa[index]*gcab*t185182*t185176*t185179;
                double t185190 = t185176*t185177*t185179*3.0;
                double t185191 = t185190+t185188+t185189+1.0;
                double t185192 = t185179*t185179;
                double t185208 = gcab*t185178*2.0;
                double t185209 = gamma_aa[index]*t185176*t185177*6.0;
                double t185210 = gcab*t185182*t185176*t185179*6.0;
                double t185211 = gamma_aa[index]*t185180*t185181*t185179*2.0;
                double t185193 = t185210+t185211+t185208+t185209;
                double t185194 = gamma_aa[index]*gcab*t185178*4.0;
                double t185195 = gamma_aa[index]*gcab*t185182*t185176*t185179*4.0;
                double t185196 = t185176*t185177*t185179*6.0;
                double t185197 = t185180*t185181*t185192;
                double t185198 = t185194+t185195+t185196+t185197+1.0;
                double t185201 = gcab*t185178;
                double t185202 = gamma_aa[index]*t185176*t185177;
                double t185199 = t185201+t185202;
                double t185200 = 1.0/(t185191*t185191);
                double t185203 = 1.0/(t185187*t185187);
                double t185204 = gcab*t185178*(3.0/2.0);
                double t185205 = gamma_aa[index]*t185176*t185177*3.0;
                double t185206 = gcab*t185182*t185176*t185179*(3.0/2.0);
                double t185207 = t185204+t185205+t185206;
                double t185212 = 1.0/(t185198*t185198);
                double t185213 = pow(2.0,1.0/3.0);
                double t185214 = t185213*2.0;
                double t185215 = t185214-2.0;
                double t185216 = two_13*2.0;
                double t185217 = t185216-2.0;
                double t185218 = 1.0/t185217;
                double t185219 = 1.0/c0f;
                double t185220 = b1f*t185157;
                double t185221 = b3f*t185158;
                double t185222 = b4f*t185160*t185159;
                double t185223 = b2f*c*t185155;
                double t185224 = t185220+t185221+t185222+t185223;
                double t185225 = 1.0/t185224;
                double t185226 = t185225*t185219*(1.0/2.0);
                double t185227 = t185226+1.0;
                double t185228 = log(t185227);
                double t185229 = a1f*c*t185155;
                double t185230 = t185229+1.0;
                double t185231 = c0f*t185230*t185228*2.0;
                double t185232 = c0p*t185170*t185172*2.0;
                double t185233 = gcaa*gcaa;
                double t185234 = t185233*t185233;
                double t185235 = gamma_aa[index]*gcaa*t185178;
                double t185236 = t185235+1.0;
                double t185237 = gamma_aa[index]*gcaa*t185178*2.0;
                double t185238 = t185233*t185177*t185179;
                double t185239 = t185237+t185238+1.0;
                double t185240 = gamma_aa[index]*gcaa*t185178*3.0;
                double t185241 = gamma_aa[index]*gcaa*t185233*t185182*t185179;
                double t185242 = t185233*t185177*t185179*3.0;
                double t185243 = t185240+t185241+t185242+1.0;
                double t185259 = gcaa*t185178*4.0;
                double t185260 = gamma_aa[index]*t185233*t185177*1.2E1;
                double t185261 = gcaa*t185233*t185182*t185179*1.2E1;
                double t185262 = gamma_aa[index]*t185234*t185181*t185179*4.0;
                double t185244 = t185260+t185261+t185262+t185259;
                double t185245 = gamma_aa[index]*gcaa*t185178*4.0;
                double t185246 = gamma_aa[index]*gcaa*t185233*t185182*t185179*4.0;
                double t185247 = t185233*t185177*t185179*6.0;
                double t185248 = t185234*t185181*t185192;
                double t185249 = t185245+t185246+t185247+t185248+1.0;
                double t185252 = gcaa*t185178*2.0;
                double t185253 = gamma_aa[index]*t185233*t185177*2.0;
                double t185250 = t185252+t185253;
                double t185251 = 1.0/(t185243*t185243);
                double t185254 = 1.0/(t185239*t185239);
                double t185255 = gcaa*t185178*3.0;
                double t185256 = gamma_aa[index]*t185233*t185177*6.0;
                double t185257 = gcaa*t185233*t185182*t185179*3.0;
                double t185258 = t185255+t185256+t185257;
                double t185263 = 1.0/(t185249*t185249);
                double t185264 = gx*gx;
                double t185265 = t185264*t185264;
                double t185266 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t185267 = gamma_aa[index]*gx*t185178*4.0;
                double t185268 = gamma_aa[index]*gx*t185182*t185264*t185179*4.0;
                double t185269 = t185264*t185177*t185179*6.0;
                double t185270 = t185181*t185192*t185265;
                double t185271 = t185270+t185267+t185268+t185269+1.0;
                double t185272 = 1.0/t185271;
                double t185273 = cx4*t185181*t185272*t185192*t185265*(4.190715359480463E15/2.251799813685248E15);
                double t185274 = gamma_aa[index]*gx*t185178;
                double t185275 = t185274+1.0;
                double t185276 = 1.0/t185275;
                double t185277 = cx1*gamma_aa[index]*gx*t185276*t185178*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185278 = gamma_aa[index]*gx*t185178*3.0;
                double t185279 = gamma_aa[index]*gx*t185182*t185264*t185179;
                double t185280 = t185264*t185177*t185179*3.0;
                double t185281 = t185280+t185278+t185279+1.0;
                double t185282 = 1.0/t185281;
                double t185283 = cx3*gamma_aa[index]*gx*t185182*t185264*t185282*t185179*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185284 = gamma_aa[index]*gx*t185178*2.0;
                double t185285 = t185264*t185177*t185179;
                double t185286 = t185284+t185285+1.0;
                double t185287 = 1.0/t185286;
                double t185288 = cx2*t185264*t185177*t185179*t185287*(4.190715359480463E15/2.251799813685248E15);
                double t185289 = t185273+t185283+t185266+t185277+t185288;
                double t185290 = 1.0/t185289;
                double t185291 = 1.0/(omega*omega);
                double t185292 = pow(rho_a[index],2.0/3.0);
                double t185315 = t185290*t185291*t185292*(1.4000771998813E29/4.951760157141521E27);
                double t185293 = exp(-t185315);
                double t185294 = cx1*gx*t185276*t185178*(4.190715359480463E15/2.251799813685248E15);
                double t185295 = cx4*gamma_aa[index]*t185181*t185272*t185265*t185179*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t185296 = cx2*gamma_aa[index]*t185264*t185177*t185287*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185297 = cx3*gx*t185182*t185264*t185282*t185179*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t185298 = 1.0/(t185275*t185275);
                double t185299 = gx*t185178*3.0;
                double t185300 = gamma_aa[index]*t185264*t185177*6.0;
                double t185301 = gx*t185182*t185264*t185179*3.0;
                double t185302 = t185300+t185301+t185299;
                double t185303 = 1.0/(t185281*t185281);
                double t185304 = gx*t185178*4.0;
                double t185305 = gamma_aa[index]*t185264*t185177*1.2E1;
                double t185306 = gx*t185182*t185264*t185179*1.2E1;
                double t185307 = gamma_aa[index]*t185181*t185265*t185179*4.0;
                double t185308 = t185304+t185305+t185306+t185307;
                double t185309 = 1.0/(t185271*t185271);
                double t185310 = gx*t185178*2.0;
                double t185311 = gamma_aa[index]*t185264*t185177*2.0;
                double t185312 = t185310+t185311;
                double t185313 = 1.0/(t185286*t185286);
                double t185316 = cx1*gamma_aa[index]*t185264*t185177*t185298*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185317 = cx3*gamma_aa[index]*gx*t185302*t185303*t185182*t185264*t185179*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t185318 = cx4*t185181*t185308*t185192*t185309*t185265*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185319 = cx2*t185312*t185313*t185264*t185177*t185179*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185314 = -t185316-t185317-t185318-t185319+t185294+t185295+t185296+t185297;
                double t185320 = omega*omega;
                double t185321 = t185293-1.0;
                double t185322 = sqrt(t185289);
                double t185323 = 1.0/omega;
                double t185324 = pow(rho_a[index],1.0/3.0);
                double t185325 = 1.0/sqrt(t185289);
                double t185326 = t185320*t185321*t185160*t185289*(2.475880078570761E27/1.4000771998813E29);
                double t185327 = t185326-t185293+3.0/2.0;
                double t185328 = pow(rho_a[index],4.0/3.0);
                double t185329 = t185323*t185324*t185325*(3.74176054803257E14/7.0368744177664E13);
                double t185330 = erf(t185329);
                double t185331 = t185330*(3.991211251234741E15/2.251799813685248E15);
                double t185374 = omega*t185322*t185155*t185327*(7.0368744177664E13/3.74176054803257E14);
                double t185332 = t185331-t185374;
                double t185333 = 1.0/(t185275*t185275*t185275);
                double t185334 = t185264*t185177*6.0;
                double t185335 = gamma_aa[index]*gx*t185182*t185264*6.0;
                double t185336 = t185334+t185335;
                double t185337 = t185308*t185308;
                double t185338 = 1.0/(t185271*t185271*t185271);
                double t185339 = t185312*t185312;
                double t185340 = 1.0/(t185286*t185286*t185286);
                double t185341 = t185264*t185177*1.2E1;
                double t185342 = gamma_aa[index]*gx*t185182*t185264*2.4E1;
                double t185343 = t185181*t185265*t185179*1.2E1;
                double t185344 = t185341+t185342+t185343;
                double t185345 = t185302*t185302;
                double t185346 = 1.0/(t185281*t185281*t185281);
                double t185347 = cx1*t185264*t185177*t185298*(4.190715359480463E15/1.125899906842624E15);
                double t185348 = cx2*t185313*t185181*t185265*t185179*(4.190715359480463E15/1.125899906842624E15);
                double t185349 = cx3*gamma_aa[index]*gx*t185303*t185182*t185264*t185336*t185179*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t185350 = cx3*gx*t185302*t185303*t185182*t185264*t185179*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t185351 = cx4*t185181*t185344*t185192*t185309*t185265*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t185352 = cx2*gamma_aa[index]*t185312*t185313*t185264*t185177*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t185353 = cx4*gamma_aa[index]*t185181*t185308*t185309*t185265*t185179*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t185357 = cx2*t185264*t185177*t185287*(4.190715359480463E15/1.125899906842624E15);
                double t185358 = cx3*gamma_aa[index]*gx*t185182*t185264*t185282*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t185359 = cx4*t185181*t185272*t185265*t185179*(1.257214607844139E16/5.62949953421312E14);
                double t185360 = cx1*gamma_aa[index]*gx*t185333*t185182*t185264*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185361 = cx4*t185181*t185192*t185265*t185337*t185338*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185362 = cx2*t185340*t185264*t185177*t185339*t185179*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t185363 = cx3*gamma_aa[index]*gx*t185182*t185264*t185345*t185346*t185179*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t185354 = t185350+t185351-t185360+t185352-t185361+t185353-t185362-t185363+t185347+t185348- \
                   t185357+t185349-t185358-t185359;
                double t185355 = t185314*t185314;
                double t185356 = 1.0/(t185289*t185289);
                double t185364 = t185314*t185290*t185293*(1.0/2.0);
                double t185365 = t185320*t185321*t185160*t185314*(2.475880078570761E27/1.4000771998813E29);
                double t185369 = t185314*t185291*t185292*t185293*t185356*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t185366 = t185364+t185365-t185369;
                double t185367 = 1.0/pow(t185289,3.0/2.0);
                double t185368 = 1.0/sqrt(3.141592653589793);
                double t185370 = omega*t185322*t185155*t185366*(7.0368744177664E13/3.74176054803257E14);
                double t185371 = omega*t185314*t185325*t185155*t185327*(3.5184372088832E13/3.74176054803257E14);
                double t185372 = t185314*t185323*t185324*t185293*t185367*t185368*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t185373 = t185370+t185371+t185372;
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t185232+t185215*t185218*(t185231-c0p*t185170*t185172* \
                   2.0))*2.0-c0p*rho_a[index]*log((t185161*(1.0/2.0))/(b1p*sqrt(t185175)+b3p*pow(t185175,3.0/2.0)+b4p* \
                   1.0/pow(t185173,2.0/3.0)*t185159+b2p*c*t185174)+1.0)*(a1p*c*t185174+1.0)*4.0)*(ccab1*1.0/(t185184* \
                   t185184)*t185176*t185177*(1.0/2.0)-(ccab2*t185176*t185177*(1.0/2.0))/t185187+ccab2*t185203*t185180* \
                   t185181*t185179*(1.0/2.0)-(ccab4*t185180*t185181*t185179*3.0)/t185198+ccab4*t185212*t185180*t185181* \
                   t185192*(t185176*t185177*3.0+t185180*t185181*t185179*3.0+gamma_aa[index]*gcab*t185182*t185176*6.0) \
                   -(ccab3*gamma_aa[index]*gcab*t185182*t185176*(3.0/2.0))/t185191-ccab1*gamma_aa[index]*gcab*t185182* \
                   1.0/(t185184*t185184*t185184)*t185176*(1.0/2.0)-ccab4*t185180*t185181*t185192*(t185193*t185193)*1.0/ \
                   (t185198*t185198*t185198)*2.0-ccab2*t185176*t185177*1.0/(t185187*t185187*t185187)*t185179*(t185199* \
                   t185199)*2.0+ccab2*gamma_aa[index]*t185203*t185176*t185177*t185199*2.0+ccab4*gamma_aa[index]*t185212* \
                   t185180*t185181*t185193*t185179*4.0+ccab3*gcab*t185200*t185207*t185182*t185176*t185179*3.0+ccab3*gamma_aa[index]* \
                   gcab*t185200*t185182*t185176*t185179*(t185176*t185177*(3.0/2.0)+gamma_aa[index]*gcab*t185182*t185176* \
                   (3.0/2.0))-ccab3*gamma_aa[index]*gcab*(t185207*t185207)*t185182*1.0/(t185191*t185191*t185191)*t185176* \
                   t185179*2.0)*-4.0+rho_a[index]*(t185232+t185215*t185218*(t185231-t185232))*(ccaa1*t185233*1.0/(t185236* \
                   t185236)*t185177*2.0-(ccaa2*t185233*t185177*2.0)/t185239+ccaa2*t185234*t185181*t185254*t185179*2.0- \
                   (ccaa4*t185234*t185181*t185179*1.2E1)/t185249+ccaa4*t185234*t185181*t185263*t185192*(t185233*t185177* \
                   1.2E1+t185234*t185181*t185179*1.2E1+gamma_aa[index]*gcaa*t185233*t185182*2.4E1)-(ccaa3*gamma_aa[index]* \
                   gcaa*t185233*t185182*6.0)/t185243-ccaa1*gamma_aa[index]*gcaa*t185233*t185182*1.0/(t185236*t185236* \
                   t185236)*2.0-ccaa4*t185234*t185181*(t185244*t185244)*t185192*1.0/(t185249*t185249*t185249)*2.0-ccaa2* \
                   (t185250*t185250)*t185233*1.0/(t185239*t185239*t185239)*t185177*t185179*2.0+ccaa2*gamma_aa[index]* \
                   t185250*t185233*t185254*t185177*4.0+ccaa4*gamma_aa[index]*t185234*t185181*t185244*t185263*t185179* \
                   8.0+ccaa3*gcaa*t185233*t185251*t185182*t185258*t185179*6.0+ccaa3*gamma_aa[index]*gcaa*t185233*t185251* \
                   t185182*t185179*(t185233*t185177*6.0+gamma_aa[index]*gcaa*t185233*t185182*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t185233*1.0/(t185243*t185243*t185243)*t185182*(t185258*t185258)*t185179*2.0)*2.0+c0*t185328*(omega* \
                   t185322*t185155*(omega*t185322*t185155*(t185290*t185354*t185293*(1.0/2.0)+t185320*t185321*t185160* \
                   t185354*(2.475880078570761E27/1.4000771998813E29)-t185291*t185292*t185355*t185293*1.0/(t185289*t185289* \
                   t185289)*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega*omega*omega)*t185328*t185355* \
                   t185293*1.0/(t185289*t185289*t185289*t185289)*(1.960216165627461E58/2.451992865385422E55)-t185291* \
                   t185354*t185292*t185293*t185356*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   -omega*t185314*t185325*t185155*t185366*(7.0368744177664E13/3.74176054803257E14)+omega*t185325*t185155* \
                   t185327*t185354*(3.5184372088832E13/3.74176054803257E14)+omega*t185155*t185327*t185355*t185367*(1.7592186044416E13/ \
                   3.74176054803257E14)+t185323*t185324*t185354*t185293*t185367*t185368*(1.493415679873386E30/1.584563250285287E29) \
                   +t185323*t185324*t185355*t185293*t185368*1.0/pow(t185289,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29) \
                   -1.0/(omega*omega*omega)*rho_a[index]*t185355*t185293*t185368*1.0/pow(t185289,7.0/2.0)*(2.090897243335959E59/ \
                   7.846377169233351E56))*(-2.81474976710656E14/1.122528164409771E15)+omega*t185332*t185325*t185155*t185354* \
                   (1.40737488355328E14/1.122528164409771E15)+omega*t185314*t185325*t185155*t185373*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t185332*t185155*t185355*t185367*(7.0368744177664E13/1.122528164409771E15) \
                   )*(cx0+cx1*gamma_aa[index]*gx*t185276*t185178+cx2*t185264*t185177*t185179*t185287+cx4*t185181*t185272* \
                   t185192*t185265+cx3*gamma_aa[index]*gx*t185182*t185264*t185282*t185179)*2.0+c0*t185328*(omega*t185322* \
                   t185155*t185373*(2.81474976710656E14/1.122528164409771E15)-omega*t185314*t185332*t185325*t185155*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx1*gx*t185276*t185178-cx1*gamma_aa[index]*t185264*t185177*t185298+cx2*gamma_aa[index]* \
                   t185264*t185177*t185287*2.0-cx2*t185312*t185313*t185264*t185177*t185179-cx4*t185181*t185308*t185192* \
                   t185309*t185265+cx4*gamma_aa[index]*t185181*t185272*t185265*t185179*4.0+cx3*gx*t185182*t185264*t185282* \
                   t185179*3.0-cx3*gamma_aa[index]*gx*t185302*t185303*t185182*t185264*t185179)*4.0+c0*t185328*(omega* \
                   t185322*t185332*t185155*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t185264*t185177*t185298* \
                   2.0-cx2*t185264*t185177*t185287*2.0+cx2*t185313*t185181*t185265*t185179*2.0-cx4*t185181*t185272*t185265* \
                   t185179*1.2E1-cx2*t185340*t185264*t185177*t185339*t185179*2.0+cx4*t185181*t185344*t185192*t185309* \
                   t185265-cx4*t185181*t185192*t185265*t185337*t185338*2.0-cx1*gamma_aa[index]*gx*t185333*t185182*t185264* \
                   2.0-cx3*gamma_aa[index]*gx*t185182*t185264*t185282*6.0+cx2*gamma_aa[index]*t185312*t185313*t185264* \
                   t185177*4.0+cx4*gamma_aa[index]*t185181*t185308*t185309*t185265*t185179*8.0+cx3*gx*t185302*t185303* \
                   t185182*t185264*t185179*6.0+cx3*gamma_aa[index]*gx*t185303*t185182*t185264*t185336*t185179-cx3*gamma_aa[index]* \
                   gx*t185182*t185264*t185345*t185346*t185179*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wB97Xf_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t177269 = 1.0/pow(rho_a[index],1.0/3.0);
            double t177270 = c*t177269;
            double t177271 = sqrt(t177270);
            double t177272 = pow(t177270,3.0/2.0);
            double t177273 = c*c;
            double t177274 = 1.0/pow(rho_a[index],2.0/3.0);
            double t177275 = 1.0/c0p;
            double t177276 = b1p*t177271;
            double t177277 = b3p*t177272;
            double t177278 = b4p*t177273*t177274;
            double t177279 = b2p*c*t177269;
            double t177280 = t177276+t177277+t177278+t177279;
            double t177281 = 1.0/t177280;
            double t177282 = t177281*t177275*(1.0/2.0);
            double t177283 = t177282+1.0;
            double t177284 = log(t177283);
            double t177285 = a1p*c*t177269;
            double t177286 = t177285+1.0;
            double t177287 = pow(2.0,1.0/3.0);
            double t177288 = t177287*2.0;
            double t177289 = t177288-2.0;
            double t177290 = two_13*2.0;
            double t177291 = t177290-2.0;
            double t177292 = 1.0/t177291;
            double t177293 = 1.0/c0f;
            double t177294 = 1.0/pow(rho_b[index],1.0/3.0);
            double t177295 = c*t177294;
            double t177296 = sqrt(t177295);
            double t177297 = pow(t177295,3.0/2.0);
            double t177298 = 1.0/pow(rho_b[index],2.0/3.0);
            double t177299 = b1p*t177296;
            double t177300 = b3p*t177297;
            double t177301 = b4p*t177273*t177298;
            double t177302 = b2p*c*t177294;
            double t177303 = t177300+t177301+t177302+t177299;
            double t177304 = 1.0/t177303;
            double t177305 = t177304*t177275*(1.0/2.0);
            double t177306 = t177305+1.0;
            double t177307 = log(t177306);
            double t177308 = a1p*c*t177294;
            double t177309 = t177308+1.0;
            double t177310 = c0p*t177307*t177309*2.0;
            double t177311 = rho_a[index]+rho_b[index];
            double t177312 = 1.0/pow(t177311,1.0/3.0);
            double t177313 = c*t177312;
            double t177314 = sqrt(t177313);
            double t177315 = pow(t177313,3.0/2.0);
            double t177316 = 1.0/pow(t177311,2.0/3.0);
            double t177317 = b1p*t177314;
            double t177318 = b3p*t177315;
            double t177319 = b4p*t177316*t177273;
            double t177320 = b2p*c*t177312;
            double t177321 = t177320+t177317+t177318+t177319;
            double t177322 = 1.0/t177321;
            double t177323 = t177322*t177275*(1.0/2.0);
            double t177324 = t177323+1.0;
            double t177325 = log(t177324);
            double t177326 = a1p*c*t177312;
            double t177327 = t177326+1.0;
            double t177328 = c0p*t177325*t177327*2.0;
            double t177329 = rho_a[index]-rho_b[index];
            double t177330 = t177329*t177329;
            double t177331 = 1.0/t177311;
            double t177332 = t177331*t177329;
            double t177333 = 1.0/(t177311*t177311*t177311*t177311);
            double t177334 = t177330*t177330;
            double t177335 = t177332+1.0;
            double t177336 = pow(t177335,4.0/3.0);
            double t177337 = -t177332+1.0;
            double t177338 = pow(t177337,4.0/3.0);
            double t177339 = t177336+t177338-2.0;
            double t177342 = 1.0/pow(rho_a[index],8.0/3.0);
            double t177343 = gamma_aa[index]*t177342*(1.0/2.0);
            double t177344 = 1.0/pow(rho_b[index],8.0/3.0);
            double t177345 = gamma_bb[index]*t177344*(1.0/2.0);
            double t177340 = t177343+t177345;
            double t177341 = gcab*gcab;
            double t177346 = t177340*t177340;
            double t177347 = t177341*t177341;
            double t177348 = t177346*t177346;
            double t177349 = c0p*t177284*t177286*2.0;
            double t177350 = b1f*t177271;
            double t177351 = b3f*t177272;
            double t177352 = b4f*t177273*t177274;
            double t177353 = b2f*c*t177269;
            double t177354 = t177350+t177351+t177352+t177353;
            double t177355 = 1.0/t177354;
            double t177356 = t177355*t177293*(1.0/2.0);
            double t177357 = t177356+1.0;
            double t177358 = log(t177357);
            double t177359 = a1f*c*t177269;
            double t177360 = t177359+1.0;
            double t177361 = t177349-c0f*t177360*t177358*2.0;
            double t177362 = t177349-t177361*t177292*t177289;
            double t177363 = gamma_aa[index]*gamma_aa[index];
            double t177364 = gcaa*gcaa;
            double t177365 = t177363*t177363;
            double t177366 = t177364*t177364;
            double t177367 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t177368 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t177369 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t177370 = b1f*t177296;
            double t177371 = b3f*t177297;
            double t177372 = b4f*t177273*t177298;
            double t177373 = b2f*c*t177294;
            double t177374 = t177370+t177371+t177372+t177373;
            double t177375 = 1.0/t177374;
            double t177376 = t177293*t177375*(1.0/2.0);
            double t177377 = t177376+1.0;
            double t177378 = log(t177377);
            double t177379 = a1f*c*t177294;
            double t177380 = t177379+1.0;
            double t177381 = t177310-c0f*t177380*t177378*2.0;
            double t177382 = t177310-t177381*t177292*t177289;
            double t177383 = gamma_bb[index]*gamma_bb[index];
            double t177384 = t177383*t177383;
            double t177385 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t177386 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t177387 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t177388 = gx*gx;
            double t177389 = t177388*t177388;
            double t177390 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t177391 = gamma_aa[index]*gx*t177342*4.0;
            double t177392 = gamma_aa[index]*gx*t177363*t177368*t177388*4.0;
            double t177393 = t177363*t177369*t177388*6.0;
            double t177394 = t177365*t177367*t177389;
            double t177395 = t177391+t177392+t177393+t177394+1.0;
            double t177396 = 1.0/t177395;
            double t177397 = cx4*t177365*t177367*t177396*t177389*(4.190715359480463E15/2.251799813685248E15);
            double t177398 = gamma_aa[index]*gx*t177342;
            double t177399 = t177398+1.0;
            double t177400 = 1.0/t177399;
            double t177401 = cx1*gamma_aa[index]*gx*t177400*t177342*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177402 = gamma_aa[index]*gx*t177342*3.0;
            double t177403 = gamma_aa[index]*gx*t177363*t177368*t177388;
            double t177404 = t177363*t177369*t177388*3.0;
            double t177405 = t177402+t177403+t177404+1.0;
            double t177406 = 1.0/t177405;
            double t177407 = cx3*gamma_aa[index]*gx*t177406*t177363*t177368*t177388*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177408 = gamma_aa[index]*gx*t177342*2.0;
            double t177409 = t177363*t177369*t177388;
            double t177410 = t177408+t177409+1.0;
            double t177411 = 1.0/t177410;
            double t177412 = cx2*t177411*t177363*t177369*t177388*(4.190715359480463E15/2.251799813685248E15);
            double t177413 = t177401+t177412+t177407+t177390+t177397;
            double t177414 = 1.0/(omega*omega);
            double t177415 = pow(rho_a[index],2.0/3.0);
            double t177416 = 1.0/t177413;
            double t177417 = exp(t177414*t177415*t177416*(-1.4000771998813E29/4.951760157141521E27));
            double t177418 = sqrt(t177413);
            double t177419 = 1.0/omega;
            double t177420 = gamma_bb[index]*gx*t177344*4.0;
            double t177421 = gamma_bb[index]*gx*t177383*t177386*t177388*4.0;
            double t177422 = t177383*t177387*t177388*6.0;
            double t177423 = t177384*t177385*t177389;
            double t177424 = t177420+t177421+t177422+t177423+1.0;
            double t177425 = 1.0/t177424;
            double t177426 = cx4*t177425*t177384*t177385*t177389*(4.190715359480463E15/2.251799813685248E15);
            double t177427 = gamma_bb[index]*gx*t177344;
            double t177428 = t177427+1.0;
            double t177429 = 1.0/t177428;
            double t177430 = cx1*gamma_bb[index]*gx*t177344*t177429*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177431 = gamma_bb[index]*gx*t177344*3.0;
            double t177432 = gamma_bb[index]*gx*t177383*t177386*t177388;
            double t177433 = t177383*t177387*t177388*3.0;
            double t177434 = t177431+t177432+t177433+1.0;
            double t177435 = 1.0/t177434;
            double t177436 = cx3*gamma_bb[index]*gx*t177435*t177383*t177386*t177388*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177437 = gamma_bb[index]*gx*t177344*2.0;
            double t177438 = t177383*t177387*t177388;
            double t177439 = t177437+t177438+1.0;
            double t177440 = 1.0/t177439;
            double t177441 = cx2*t177440*t177383*t177387*t177388*(4.190715359480463E15/2.251799813685248E15);
            double t177442 = t177430+t177441+t177390+t177426+t177436;
            double t177443 = omega*omega;
            double t177444 = pow(rho_b[index],2.0/3.0);
            double t177445 = 1.0/t177442;
            double t177446 = exp(t177414*t177444*t177445*(-1.4000771998813E29/4.951760157141521E27));
            double t177447 = sqrt(t177442);
            functional_[index] = (rho_a[index]*t177362+rho_b[index]*t177382-t177311*(t177328-t177333*t177334* \
               t177292*t177339*(t177328-c0f*log((t177293*(1.0/2.0))/(b1f*t177314+b3f*t177315+b2f*c*t177312+b4f*t177316* \
               t177273)+1.0)*(a1f*c*t177312+1.0)*2.0)+(Aa*t177292*t177339*log((1.0/2.0)/(Aa*(b1a*t177314+b3a*t177315+ \
               b2a*c*t177312+b4a*t177316*t177273))+1.0)*(t177333*t177334-1.0)*(a1a*c*t177312+1.0)*2.0)/d2fz0))*(ccab0+ \
               (ccab4*t177347*t177348)/(gcab*t177340*4.0+t177341*t177346*6.0+t177347*t177348+gcab*t177340*t177341* \
               t177346*4.0+1.0)+(ccab1*gcab*t177340)/(gcab*t177340+1.0)+(ccab2*t177341*t177346)/(gcab*t177340*2.0+ \
               t177341*t177346+1.0)+(ccab3*gcab*t177340*t177341*t177346)/(gcab*t177340*3.0+t177341*t177346*3.0+gcab* \
               t177340*t177341*t177346+1.0))-rho_a[index]*t177362*(ccaa0+(ccaa2*t177363*t177364*t177369)/(gamma_aa[index]* \
               gcaa*t177342*2.0+t177363*t177364*t177369+1.0)+(ccaa1*gamma_aa[index]*gcaa*t177342)/(gamma_aa[index]* \
               gcaa*t177342+1.0)+(ccaa4*t177365*t177366*t177367)/(gamma_aa[index]*gcaa*t177342*4.0+t177363*t177364* \
               t177369*6.0+t177365*t177366*t177367+gamma_aa[index]*gcaa*t177363*t177364*t177368*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t177363*t177364*t177368)/(gamma_aa[index]*gcaa*t177342*3.0+t177363*t177364*t177369*3.0+gamma_aa[index]* \
               gcaa*t177363*t177364*t177368+1.0))-rho_b[index]*t177382*(ccaa0+(ccaa2*t177364*t177383*t177387)/(gamma_bb[index]* \
               gcaa*t177344*2.0+t177364*t177383*t177387+1.0)+(ccaa1*gamma_bb[index]*gcaa*t177344)/(gamma_bb[index]* \
               gcaa*t177344+1.0)+(ccaa4*t177366*t177384*t177385)/(gamma_bb[index]*gcaa*t177344*4.0+t177364*t177383* \
               t177387*6.0+t177366*t177384*t177385+gamma_bb[index]*gcaa*t177364*t177383*t177386*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t177364*t177383*t177386)/(gamma_bb[index]*gcaa*t177344*3.0+t177364*t177383*t177387*3.0+gamma_bb[index]* \
               gcaa*t177364*t177383*t177386+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t177418*t177269*(erf(pow(rho_a[index],1.0/ \
               3.0)*1.0/sqrt(t177413)*t177419*(3.74176054803257E14/7.0368744177664E13))*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t177418*t177269*(-t177417+t177413*t177443*t177274*(t177417-1.0)*(2.475880078570761E27/1.4000771998813E29) \
               +3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-1.0) \
               *(cx0+cx1*gamma_aa[index]*gx*t177400*t177342+cx2*t177411*t177363*t177369*t177388+cx4*t177365*t177367* \
               t177396*t177389+cx3*gamma_aa[index]*gx*t177406*t177363*t177368*t177388)-c0*pow(rho_b[index],4.0/3.0) \
               *(omega*t177294*t177447*(erf(pow(rho_b[index],1.0/3.0)*1.0/sqrt(t177442)*t177419*(3.74176054803257E14/ \
               7.0368744177664E13))*(3.991211251234741E15/2.251799813685248E15)-omega*t177294*t177447*(-t177446+t177442* \
               t177443*t177298*(t177446-1.0)*(2.475880078570761E27/1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/ \
               3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx0+cx1*gamma_bb[index]*gx* \
               t177344*t177429+cx2*t177440*t177383*t177387*t177388+cx4*t177425*t177384*t177385*t177389+cx3*gamma_bb[index]* \
               gx*t177435*t177383*t177386*t177388);
        } else if (rho_a[index] > cutoff_) {
            double t182787 = 1.0/pow(rho_a[index],1.0/3.0);
            double t182788 = c*t182787;
            double t182789 = sqrt(t182788);
            double t182790 = pow(t182788,3.0/2.0);
            double t182791 = c*c;
            double t182792 = 1.0/pow(rho_a[index],2.0/3.0);
            double t182793 = 1.0/c0p;
            double t182794 = b1p*t182789;
            double t182795 = b3p*t182790;
            double t182796 = b4p*t182791*t182792;
            double t182797 = b2p*c*t182787;
            double t182798 = t182794+t182795+t182796+t182797;
            double t182799 = 1.0/t182798;
            double t182800 = t182793*t182799*(1.0/2.0);
            double t182801 = t182800+1.0;
            double t182802 = log(t182801);
            double t182803 = a1p*c*t182787;
            double t182804 = t182803+1.0;
            double t182805 = gamma_aa[index]*gamma_aa[index];
            double t182806 = gcaa*gcaa;
            double t182807 = t182805*t182805;
            double t182808 = t182806*t182806;
            double t182809 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t182810 = 1.0/pow(rho_a[index],8.0/3.0);
            double t182811 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t182812 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t182813 = gx*gx;
            double t182814 = t182813*t182813;
            double t182815 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t182816 = gamma_aa[index]*gx*t182810*4.0;
            double t182817 = gamma_aa[index]*gx*t182811*t182813*t182805*4.0;
            double t182818 = t182812*t182813*t182805*6.0;
            double t182819 = t182814*t182807*t182809;
            double t182820 = t182816+t182817+t182818+t182819+1.0;
            double t182821 = 1.0/t182820;
            double t182822 = cx4*t182821*t182814*t182807*t182809*(4.190715359480463E15/2.251799813685248E15);
            double t182823 = gamma_aa[index]*gx*t182810;
            double t182824 = t182823+1.0;
            double t182825 = 1.0/t182824;
            double t182826 = cx1*gamma_aa[index]*gx*t182810*t182825*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182827 = gamma_aa[index]*gx*t182810*3.0;
            double t182828 = gamma_aa[index]*gx*t182811*t182813*t182805;
            double t182829 = t182812*t182813*t182805*3.0;
            double t182830 = t182827+t182828+t182829+1.0;
            double t182831 = 1.0/t182830;
            double t182832 = cx3*gamma_aa[index]*gx*t182811*t182813*t182831*t182805*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182833 = gamma_aa[index]*gx*t182810*2.0;
            double t182834 = t182812*t182813*t182805;
            double t182835 = t182833+t182834+1.0;
            double t182836 = 1.0/t182835;
            double t182837 = cx2*t182812*t182813*t182805*t182836*(4.190715359480463E15/2.251799813685248E15);
            double t182838 = t182822+t182832+t182815+t182826+t182837;
            double t182839 = 1.0/(omega*omega);
            double t182840 = pow(rho_a[index],2.0/3.0);
            double t182841 = 1.0/t182838;
            double t182842 = exp(t182840*t182841*t182839*(-1.4000771998813E29/4.951760157141521E27));
            double t182843 = sqrt(t182838);
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t182789+ \
               b3f*t182790+b2f*c*t182787+b4f*t182791*t182792))+1.0)*(a1f*c*t182787+1.0)*2.0-c0p*t182802*t182804*2.0) \
               )/(two_13*2.0-2.0)+c0p*t182802*t182804*2.0)*(ccaa0+(ccaa2*t182812*t182805*t182806)/(gamma_aa[index]* \
               gcaa*t182810*2.0+t182812*t182805*t182806+1.0)+(ccaa1*gamma_aa[index]*gcaa*t182810)/(gamma_aa[index]* \
               gcaa*t182810+1.0)+(ccaa4*t182807*t182808*t182809)/(gamma_aa[index]*gcaa*t182810*4.0+t182812*t182805* \
               t182806*6.0+t182807*t182808*t182809+gamma_aa[index]*gcaa*t182811*t182805*t182806*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t182811*t182805*t182806)/(gamma_aa[index]*gcaa*t182810*3.0+t182812*t182805*t182806*3.0+gamma_aa[index]* \
               gcaa*t182811*t182805*t182806+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t182843*t182787*(erf((pow(rho_a[index],1.0/ \
               3.0)*1.0/sqrt(t182838)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t182843*t182787*(-t182842+(omega*omega)*t182792*t182838*(t182842-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_aa[index]*gx*t182810*t182825+cx2*t182812*t182813*t182805*t182836+cx4*t182821* \
               t182814*t182807*t182809+cx3*gamma_aa[index]*gx*t182811*t182813*t182831*t182805);
        } else if (rho_b[index] > cutoff_) {
            double t181692 = 1.0/pow(rho_b[index],1.0/3.0);
            double t181693 = c*t181692;
            double t181694 = sqrt(t181693);
            double t181695 = pow(t181693,3.0/2.0);
            double t181696 = c*c;
            double t181697 = 1.0/pow(rho_b[index],2.0/3.0);
            double t181698 = 1.0/c0p;
            double t181699 = b1p*t181694;
            double t181700 = b3p*t181695;
            double t181701 = b4p*t181696*t181697;
            double t181702 = b2p*c*t181692;
            double t181703 = t181700+t181701+t181702+t181699;
            double t181704 = 1.0/t181703;
            double t181705 = t181704*t181698*(1.0/2.0);
            double t181706 = t181705+1.0;
            double t181707 = log(t181706);
            double t181708 = a1p*c*t181692;
            double t181709 = t181708+1.0;
            double t181710 = gamma_bb[index]*gamma_bb[index];
            double t181711 = gcaa*gcaa;
            double t181712 = t181710*t181710;
            double t181713 = t181711*t181711;
            double t181714 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t181715 = 1.0/pow(rho_b[index],8.0/3.0);
            double t181716 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t181717 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t181718 = gx*gx;
            double t181719 = t181718*t181718;
            double t181720 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t181721 = gamma_bb[index]*gx*t181715*4.0;
            double t181722 = gamma_bb[index]*gx*t181710*t181716*t181718*4.0;
            double t181723 = t181710*t181717*t181718*6.0;
            double t181724 = t181712*t181714*t181719;
            double t181725 = t181721+t181722+t181723+t181724+1.0;
            double t181726 = 1.0/t181725;
            double t181727 = cx4*t181712*t181714*t181726*t181719*(4.190715359480463E15/2.251799813685248E15);
            double t181728 = gamma_bb[index]*gx*t181715;
            double t181729 = t181728+1.0;
            double t181730 = 1.0/t181729;
            double t181731 = cx1*gamma_bb[index]*gx*t181730*t181715*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181732 = gamma_bb[index]*gx*t181715*3.0;
            double t181733 = gamma_bb[index]*gx*t181710*t181716*t181718;
            double t181734 = t181710*t181717*t181718*3.0;
            double t181735 = t181732+t181733+t181734+1.0;
            double t181736 = 1.0/t181735;
            double t181737 = cx3*gamma_bb[index]*gx*t181710*t181716*t181718*t181736*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181738 = gamma_bb[index]*gx*t181715*2.0;
            double t181739 = t181710*t181717*t181718;
            double t181740 = t181738+t181739+1.0;
            double t181741 = 1.0/t181740;
            double t181742 = cx2*t181710*t181741*t181717*t181718*(4.190715359480463E15/2.251799813685248E15);
            double t181743 = t181720+t181731+t181742+t181727+t181737;
            double t181744 = 1.0/(omega*omega);
            double t181745 = pow(rho_b[index],2.0/3.0);
            double t181746 = 1.0/t181743;
            double t181747 = exp(t181744*t181745*t181746*(-1.4000771998813E29/4.951760157141521E27));
            double t181748 = sqrt(t181743);
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t181694+ \
               b3f*t181695+b2f*c*t181692+b4f*t181696*t181697))+1.0)*(a1f*c*t181692+1.0)*2.0-c0p*t181707*t181709*2.0) \
               )/(two_13*2.0-2.0)+c0p*t181707*t181709*2.0)*(ccaa0+(ccaa2*t181710*t181711*t181717)/(gamma_bb[index]* \
               gcaa*t181715*2.0+t181710*t181711*t181717+1.0)+(ccaa1*gamma_bb[index]*gcaa*t181715)/(gamma_bb[index]* \
               gcaa*t181715+1.0)+(ccaa4*t181712*t181713*t181714)/(gamma_bb[index]*gcaa*t181715*4.0+t181710*t181711* \
               t181717*6.0+t181712*t181713*t181714+gamma_bb[index]*gcaa*t181710*t181711*t181716*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t181710*t181711*t181716)/(gamma_bb[index]*gcaa*t181715*3.0+t181710*t181711*t181717*3.0+gamma_bb[index]* \
               gcaa*t181710*t181711*t181716+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t181692*t181748*(erf((pow(rho_b[index],1.0/ \
               3.0)*1.0/sqrt(t181743)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t181692*t181748*(-t181747+(omega*omega)*t181743*t181697*(t181747-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_bb[index]*gx*t181730*t181715+cx2*t181710*t181741*t181717*t181718+cx4*t181712* \
               t181714*t181726*t181719+cx3*gamma_bb[index]*gx*t181710*t181716*t181718*t181736);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t177449 = 1.0/pow(rho_a[index],1.0/3.0);
            double t177450 = c*t177449;
            double t177451 = sqrt(t177450);
            double t177452 = pow(t177450,3.0/2.0);
            double t177453 = c*c;
            double t177454 = 1.0/pow(rho_a[index],2.0/3.0);
            double t177455 = 1.0/c0p;
            double t177456 = b1p*t177451;
            double t177457 = b3p*t177452;
            double t177458 = b4p*t177453*t177454;
            double t177459 = b2p*c*t177449;
            double t177460 = t177456+t177457+t177458+t177459;
            double t177461 = 1.0/t177460;
            double t177462 = t177461*t177455*(1.0/2.0);
            double t177463 = t177462+1.0;
            double t177464 = log(t177463);
            double t177465 = a1p*c*t177449;
            double t177466 = t177465+1.0;
            double t177467 = gamma_aa[index]*gamma_aa[index];
            double t177468 = gcaa*gcaa;
            double t177469 = t177467*t177467;
            double t177470 = t177468*t177468;
            double t177471 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t177472 = 1.0/pow(rho_a[index],8.0/3.0);
            double t177473 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t177474 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t177475 = pow(2.0,1.0/3.0);
            double t177476 = t177475*2.0;
            double t177477 = t177476-2.0;
            double t177478 = two_13*2.0;
            double t177479 = t177478-2.0;
            double t177480 = 1.0/t177479;
            double t177481 = 1.0/c0f;
            double t177482 = b1f*t177451;
            double t177483 = b3f*t177452;
            double t177484 = b4f*t177453*t177454;
            double t177485 = b2f*c*t177449;
            double t177486 = t177482+t177483+t177484+t177485;
            double t177487 = 1.0/t177486;
            double t177488 = t177481*t177487*(1.0/2.0);
            double t177489 = t177488+1.0;
            double t177490 = log(t177489);
            double t177491 = a1f*c*t177449;
            double t177492 = t177491+1.0;
            double t177493 = c0f*t177490*t177492*2.0;
            double t177494 = c0p*t177464*t177466*2.0;
            double t177495 = 1.0/pow(rho_b[index],1.0/3.0);
            double t177496 = c*t177495;
            double t177497 = sqrt(t177496);
            double t177498 = pow(t177496,3.0/2.0);
            double t177499 = 1.0/pow(rho_b[index],2.0/3.0);
            double t177500 = b1p*t177497;
            double t177501 = b3p*t177498;
            double t177502 = b4p*t177453*t177499;
            double t177503 = b2p*c*t177495;
            double t177504 = t177500+t177501+t177502+t177503;
            double t177505 = 1.0/t177504;
            double t177506 = t177505*t177455*(1.0/2.0);
            double t177507 = t177506+1.0;
            double t177508 = log(t177507);
            double t177509 = a1p*c*t177495;
            double t177510 = t177509+1.0;
            double t177511 = c0p*t177510*t177508*2.0;
            double t177512 = rho_a[index]+rho_b[index];
            double t177513 = 1.0/pow(t177512,1.0/3.0);
            double t177514 = c*t177513;
            double t177515 = sqrt(t177514);
            double t177516 = pow(t177514,3.0/2.0);
            double t177517 = 1.0/pow(t177512,2.0/3.0);
            double t177518 = b1p*t177515;
            double t177519 = b3p*t177516;
            double t177520 = b4p*t177453*t177517;
            double t177521 = b2p*c*t177513;
            double t177522 = t177520+t177521+t177518+t177519;
            double t177523 = 1.0/t177522;
            double t177524 = t177523*t177455*(1.0/2.0);
            double t177525 = t177524+1.0;
            double t177526 = log(t177525);
            double t177527 = a1p*c*t177513;
            double t177528 = t177527+1.0;
            double t177529 = c0p*t177526*t177528*2.0;
            double t177530 = rho_a[index]-rho_b[index];
            double t177531 = t177530*t177530;
            double t177532 = 1.0/t177512;
            double t177533 = t177530*t177532;
            double t177534 = 1.0/(t177512*t177512*t177512*t177512);
            double t177535 = t177531*t177531;
            double t177536 = t177533+1.0;
            double t177537 = pow(t177536,4.0/3.0);
            double t177538 = -t177533+1.0;
            double t177539 = pow(t177538,4.0/3.0);
            double t177540 = t177537+t177539-2.0;
            double t177541 = gcab*gcab;
            double t177545 = gamma_aa[index]*t177472*(1.0/2.0);
            double t177546 = 1.0/pow(rho_b[index],8.0/3.0);
            double t177547 = gamma_bb[index]*t177546*(1.0/2.0);
            double t177542 = t177545+t177547;
            double t177543 = t177542*t177542;
            double t177544 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t177548 = t177541*t177541;
            double t177549 = t177543*t177543;
            double t177550 = t177541*t177543*6.0;
            double t177551 = gcab*t177541*t177542*t177543*4.0;
            double t177552 = t177548*t177549;
            double t177553 = gcab*t177542*4.0;
            double t177554 = t177550+t177551+t177552+t177553+1.0;
            double t177555 = gcab*t177542;
            double t177556 = t177555+1.0;
            double t177557 = t177541*t177543;
            double t177558 = gcab*t177542*2.0;
            double t177559 = t177557+t177558+1.0;
            double t177560 = t177541*t177543*3.0;
            double t177561 = gcab*t177541*t177542*t177543;
            double t177562 = gcab*t177542*3.0;
            double t177563 = t177560+t177561+t177562+1.0;
            double t177564 = 1.0/t177559;
            double t177565 = 1.0/t177563;
            double t177566 = 1.0/t177556;
            double t177567 = 1.0/t177554;
            double t177568 = 1.0/pow(t177512,4.0/3.0);
            double t177569 = b1f*t177515;
            double t177570 = b3f*t177516;
            double t177571 = b4f*t177453*t177517;
            double t177572 = b2f*c*t177513;
            double t177573 = t177570+t177571+t177572+t177569;
            double t177574 = 1.0/t177573;
            double t177575 = t177481*t177574*(1.0/2.0);
            double t177576 = t177575+1.0;
            double t177577 = log(t177576);
            double t177578 = a1f*c*t177513;
            double t177579 = t177578+1.0;
            double t177581 = c0f*t177577*t177579*2.0;
            double t177580 = -t177581+t177529;
            double t177582 = 1.0/(t177512*t177512);
            double t177610 = t177530*t177582;
            double t177583 = -t177610+t177532;
            double t177584 = t177581-t177529;
            double t177585 = 1.0/pow(t177512,5.0/3.0);
            double t177586 = 1.0/sqrt(t177514);
            double t177587 = 1.0/t177525;
            double t177588 = 1.0/(t177522*t177522);
            double t177589 = b4p*t177453*t177585*(2.0/3.0);
            double t177590 = b2p*c*t177568*(1.0/3.0);
            double t177591 = b1p*c*t177568*t177586*(1.0/6.0);
            double t177592 = b3p*c*t177515*t177568*(1.0/2.0);
            double t177593 = t177590+t177591+t177592+t177589;
            double t177594 = t177528*t177593*t177587*t177588;
            double t177595 = 1.0/d2fz0;
            double t177596 = 1.0/Aa;
            double t177597 = b1a*t177515;
            double t177598 = b3a*t177516;
            double t177599 = b4a*t177453*t177517;
            double t177600 = b2a*c*t177513;
            double t177601 = t177600+t177597+t177598+t177599;
            double t177602 = 1.0/t177601;
            double t177603 = t177602*t177596*(1.0/2.0);
            double t177604 = t177603+1.0;
            double t177605 = log(t177604);
            double t177606 = a1a*c*t177513;
            double t177607 = t177606+1.0;
            double t177608 = 1.0/(t177512*t177512*t177512*t177512*t177512);
            double t177609 = pow(t177536,1.0/3.0);
            double t177611 = t177609*t177583*(4.0/3.0);
            double t177612 = pow(t177538,1.0/3.0);
            double t177613 = t177611-t177612*t177583*(4.0/3.0);
            double t177614 = t177534*t177535;
            double t177615 = t177614-1.0;
            double t177616 = 1.0/pow(rho_a[index],4.0/3.0);
            double t177617 = 1.0/pow(rho_a[index],5.0/3.0);
            double t177618 = 1.0/sqrt(t177450);
            double t177619 = 1.0/t177463;
            double t177620 = 1.0/(t177460*t177460);
            double t177621 = b4p*t177453*t177617*(2.0/3.0);
            double t177622 = b2p*c*t177616*(1.0/3.0);
            double t177623 = b1p*c*t177616*t177618*(1.0/6.0);
            double t177624 = b3p*c*t177451*t177616*(1.0/2.0);
            double t177625 = t177621+t177622+t177623+t177624;
            double t177626 = t177620*t177625*t177466*t177619;
            double t177627 = t177493-t177494;
            double t177628 = t177480*t177627*t177477;
            double t177629 = Aa*t177540*t177605*t177480*t177615*t177607*t177595*2.0;
            double t177630 = t177628+t177494;
            double t177631 = gamma_aa[index]*gcaa*t177472*4.0;
            double t177632 = gamma_aa[index]*gcaa*t177473*t177467*t177468*4.0;
            double t177633 = t177474*t177467*t177468*6.0;
            double t177634 = t177470*t177471*t177469;
            double t177635 = t177631+t177632+t177633+t177634+1.0;
            double t177636 = 1.0/t177635;
            double t177637 = gamma_aa[index]*gcaa*t177472;
            double t177638 = t177637+1.0;
            double t177639 = 1.0/t177638;
            double t177640 = gamma_aa[index]*gcaa*t177472*3.0;
            double t177641 = gamma_aa[index]*gcaa*t177473*t177467*t177468;
            double t177642 = t177474*t177467*t177468*3.0;
            double t177643 = t177640+t177641+t177642+1.0;
            double t177644 = 1.0/t177643;
            double t177645 = gamma_aa[index]*gcaa*t177472*2.0;
            double t177646 = t177474*t177467*t177468;
            double t177647 = t177645+t177646+1.0;
            double t177648 = 1.0/t177647;
            double t177649 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t177650 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t177651 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t177652 = 1.0/t177489;
            double t177653 = 1.0/(t177486*t177486);
            double t177654 = b4f*t177453*t177617*(2.0/3.0);
            double t177655 = b2f*c*t177616*(1.0/3.0);
            double t177656 = b1f*c*t177616*t177618*(1.0/6.0);
            double t177657 = b3f*c*t177451*t177616*(1.0/2.0);
            double t177658 = t177654+t177655+t177656+t177657;
            double t177659 = a1f*c*c0f*t177490*t177616*(2.0/3.0);
            double t177660 = a1p*c*c0p*t177616*t177464*(2.0/3.0);
            double t177661 = ccaa4*t177470*t177471*t177636*t177469;
            double t177662 = ccaa1*gamma_aa[index]*gcaa*t177472*t177639;
            double t177663 = ccaa3*gamma_aa[index]*gcaa*t177473*t177644*t177467*t177468;
            double t177664 = ccaa2*t177474*t177467*t177468*t177648;
            double t177665 = ccaa0+t177661+t177662+t177663+t177664;
            double t177666 = gx*gx;
            double t177667 = t177666*t177666;
            double t177668 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t177669 = gamma_aa[index]*gx*t177472*4.0;
            double t177670 = gamma_aa[index]*gx*t177473*t177467*t177666*4.0;
            double t177671 = t177474*t177467*t177666*6.0;
            double t177672 = t177471*t177469*t177667;
            double t177673 = t177670+t177671+t177672+t177669+1.0;
            double t177674 = 1.0/t177673;
            double t177675 = cx4*t177471*t177674*t177469*t177667*(4.190715359480463E15/2.251799813685248E15);
            double t177676 = gamma_aa[index]*gx*t177472;
            double t177677 = t177676+1.0;
            double t177678 = 1.0/t177677;
            double t177679 = cx1*gamma_aa[index]*gx*t177472*t177678*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177680 = gamma_aa[index]*gx*t177472*3.0;
            double t177681 = gamma_aa[index]*gx*t177473*t177467*t177666;
            double t177682 = t177474*t177467*t177666*3.0;
            double t177683 = t177680+t177681+t177682+1.0;
            double t177684 = 1.0/t177683;
            double t177685 = cx3*gamma_aa[index]*gx*t177473*t177467*t177666*t177684*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177686 = gamma_aa[index]*gx*t177472*2.0;
            double t177687 = t177474*t177467*t177666;
            double t177688 = t177686+t177687+1.0;
            double t177689 = 1.0/t177688;
            double t177690 = cx2*t177474*t177467*t177666*t177689*(4.190715359480463E15/2.251799813685248E15);
            double t177691 = t177690+t177675+t177685+t177668+t177679;
            double t177692 = 1.0/omega;
            double t177693 = 1.0/(omega*omega);
            double t177694 = pow(rho_a[index],2.0/3.0);
            double t177695 = 1.0/t177691;
            double t177697 = t177693*t177694*t177695*(1.4000771998813E29/4.951760157141521E27);
            double t177696 = exp(-t177697);
            double t177698 = cx4*t177651*t177674*t177469*t177667*(1.396905119826821E15/7.0368744177664E13);
            double t177699 = cx1*gamma_aa[index]*gx*t177544*t177678*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t177700 = cx3*gamma_aa[index]*gx*t177650*t177467*t177666*t177684*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t177701 = cx2*t177467*t177666*t177649*t177689*(1.396905119826821E15/1.40737488355328E14);
            double t177702 = 1.0/(t177677*t177677);
            double t177703 = gamma_aa[index]*gx*t177544*8.0;
            double t177704 = gamma_aa[index]*gx*t177650*t177467*t177666*8.0;
            double t177705 = t177467*t177666*t177649*1.6E1;
            double t177706 = t177703+t177704+t177705;
            double t177707 = 1.0/(t177683*t177683);
            double t177708 = gamma_aa[index]*gx*t177544*(3.2E1/3.0);
            double t177709 = gamma_aa[index]*gx*t177650*t177467*t177666*3.2E1;
            double t177710 = t177467*t177666*t177649*3.2E1;
            double t177711 = t177651*t177469*t177667*(3.2E1/3.0);
            double t177712 = t177710+t177711+t177708+t177709;
            double t177713 = 1.0/(t177673*t177673);
            double t177714 = gamma_aa[index]*gx*t177544*(1.6E1/3.0);
            double t177715 = t177467*t177666*t177649*(1.6E1/3.0);
            double t177716 = t177714+t177715;
            double t177717 = 1.0/(t177688*t177688);
            double t177721 = cx1*t177702*t177467*t177666*t177649*(1.396905119826821E15/2.81474976710656E14);
            double t177722 = cx3*gamma_aa[index]*gx*t177706*t177473*t177707*t177467*t177666*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t177723 = cx4*t177712*t177713*t177471*t177469*t177667*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177724 = cx2*t177716*t177474*t177717*t177467*t177666*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177718 = t177700+t177701-t177721-t177722-t177723-t177724+t177698+t177699;
            double t177719 = omega*omega;
            double t177720 = t177696-1.0;
            double t177725 = t177449*t177693*t177695*(1.4000771998813E29/7.427640235712282E27);
            double t177726 = 1.0/(t177691*t177691);
            double t177727 = t177726*t177718*t177693*t177694*(1.4000771998813E29/4.951760157141521E27);
            double t177728 = t177725+t177727;
            double t177729 = sqrt(t177691);
            double t177730 = t177720*t177454*t177691*t177719*(2.475880078570761E27/1.4000771998813E29);
            double t177731 = t177730-t177696+3.0/2.0;
            double t177732 = 1.0/sqrt(t177691);
            double t177733 = pow(rho_a[index],1.0/3.0);
            double t177734 = t177732*t177733*t177692*(3.74176054803257E14/7.0368744177664E13);
            double t177735 = erf(t177734);
            double t177736 = t177735*(3.991211251234741E15/2.251799813685248E15);
            double t177738 = omega*t177731*t177449*t177729*(7.0368744177664E13/3.74176054803257E14);
            double t177737 = t177736-t177738;
            double t177739 = cx4*t177471*t177674*t177469*t177667;
            double t177740 = cx1*gamma_aa[index]*gx*t177472*t177678;
            double t177741 = cx3*gamma_aa[index]*gx*t177473*t177467*t177666*t177684;
            double t177742 = cx2*t177474*t177467*t177666*t177689;
            double t177743 = cx0+t177740+t177741+t177742+t177739;
            double t177744 = pow(rho_a[index],4.0/3.0);
            double t177745 = omega*t177449*t177737*t177729*(2.81474976710656E14/1.122528164409771E15);
            double t177746 = t177745-1.0;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t177542*t177566+ccab2*t177541*t177543*t177564+ccab4*t177548* \
               t177549*t177567+ccab3*gcab*t177541*t177542*t177543*t177565)*(t177529-t177628-t177494+t177629+rho_a[index]* \
               (t177660-t177626+t177480*t177477*(t177626+t177659-t177652*t177653*t177492*t177658-a1p*c*c0p*t177616* \
               t177464*(2.0/3.0)))-t177512*(-t177594+t177540*t177480*t177534*t177535*(t177594-(1.0/(t177573*t177573) \
               *t177579*(b2f*c*t177568*(1.0/3.0)+b4f*t177453*t177585*(2.0/3.0)+b1f*c*t177568*t177586*(1.0/6.0)+b3f* \
               c*t177515*t177568*(1.0/2.0)))/t177576+a1f*c*c0f*t177568*t177577*(2.0/3.0)-a1p*c*c0p*t177526*t177568* \
               (2.0/3.0))+a1p*c*c0p*t177526*t177568*(2.0/3.0)-t177613*t177480*t177534*t177535*t177584+t177540*t177480* \
               t177535*t177608*t177584*4.0+t177530*t177531*t177540*t177480*t177534*t177580*4.0+Aa*t177540*t177605* \
               t177480*t177607*t177595*(t177535*t177608*4.0-t177530*t177531*t177534*4.0)*2.0-Aa*t177613*t177605*t177480* \
               t177615*t177607*t177595*2.0-(1.0/(t177601*t177601)*t177540*t177480*t177615*t177607*t177595*(b2a*c* \
               t177568*(1.0/3.0)+b4a*t177453*t177585*(2.0/3.0)+b1a*c*t177568*t177586*(1.0/6.0)+b3a*c*t177515*t177568* \
               (1.0/2.0)))/t177604+Aa*a1a*c*t177540*t177605*t177480*t177615*t177568*t177595*(2.0/3.0))+t177540*t177480* \
               t177534*t177535*t177584)-t177665*(t177494+t177480*t177477*(t177493-c0p*t177464*t177466*2.0))-(rho_a[index]* \
               t177630+rho_b[index]*(t177511-t177480*t177477*(t177511-c0f*log((t177481*(1.0/2.0))/(b1f*t177497+b3f* \
               t177498+b2f*c*t177495+b4f*t177453*t177499)+1.0)*(a1f*c*t177495+1.0)*2.0))-t177512*(t177529+t177629- \
               t177540*t177480*t177534*t177535*t177580))*(ccab1*gamma_aa[index]*gcab*t177544*t177566*(4.0/3.0)-ccab2* \
               t177541*t177543*1.0/(t177559*t177559)*(gamma_aa[index]*gcab*t177544*(8.0/3.0)+gamma_aa[index]*t177541* \
               t177542*t177544*(8.0/3.0))-ccab4*1.0/(t177554*t177554)*t177548*t177549*(gamma_aa[index]*gcab*t177544* \
               (1.6E1/3.0)+gamma_aa[index]*t177541*t177542*t177544*1.6E1+gamma_aa[index]*gcab*t177541*t177543*t177544* \
               1.6E1+gamma_aa[index]*t177542*t177543*t177544*t177548*(1.6E1/3.0))-ccab1*gamma_aa[index]*t177541*t177542* \
               t177544*1.0/(t177556*t177556)*(4.0/3.0)+ccab2*gamma_aa[index]*t177541*t177542*t177544*t177564*(8.0/ \
               3.0)-ccab3*gcab*t177541*t177542*t177543*1.0/(t177563*t177563)*(gamma_aa[index]*gcab*t177544*4.0+gamma_aa[index]* \
               t177541*t177542*t177544*8.0+gamma_aa[index]*gcab*t177541*t177543*t177544*4.0)+ccab3*gamma_aa[index]* \
               gcab*t177541*t177543*t177544*t177565*4.0+ccab4*gamma_aa[index]*t177542*t177543*t177544*t177548*t177567* \
               (1.6E1/3.0))+rho_a[index]*t177630*(ccaa1*gamma_aa[index]*gcaa*t177544*t177639*(8.0/3.0)+ccaa4*t177470* \
               t177651*t177636*t177469*(3.2E1/3.0)+ccaa2*t177467*t177468*t177648*t177649*(1.6E1/3.0)-ccaa1*t177467* \
               1.0/(t177638*t177638)*t177468*t177649*(8.0/3.0)-ccaa2*t177474*t177467*1.0/(t177647*t177647)*t177468* \
               (gamma_aa[index]*gcaa*t177544*(1.6E1/3.0)+t177467*t177468*t177649*(1.6E1/3.0))-ccaa4*t177470*t177471* \
               1.0/(t177635*t177635)*t177469*(gamma_aa[index]*gcaa*t177544*(3.2E1/3.0)+t177470*t177651*t177469*(3.2E1/ \
               3.0)+t177467*t177468*t177649*3.2E1+gamma_aa[index]*gcaa*t177650*t177467*t177468*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t177650*t177644*t177467*t177468*8.0-ccaa3*gamma_aa[index]*gcaa*1.0/(t177643*t177643)*t177473* \
               t177467*t177468*(gamma_aa[index]*gcaa*t177544*8.0+t177467*t177468*t177649*1.6E1+gamma_aa[index]*gcaa* \
               t177650*t177467*t177468*8.0))-rho_a[index]*t177665*(-t177660+t177626+t177480*t177477*(t177660-t177626- \
               t177659+t177652*t177653*t177492*t177658))+c0*t177743*t177744*(omega*t177616*t177737*t177729*(2.81474976710656E14/ \
               3.367584493229313E15)-omega*t177449*t177729*(1.0/sqrt(3.141592653589793)*t177696*(t177732*t177454* \
               t177692*(3.74176054803257E14/2.11106232532992E14)+t177733*1.0/pow(t177691,3.0/2.0)*t177718*t177692* \
               (3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t177731* \
               t177616*t177729*(7.0368744177664E13/1.122528164409771E15)+omega*t177449*t177729*(-t177728*t177696+ \
               t177720*t177454*t177718*t177719*(2.475880078570761E27/1.4000771998813E29)+t177720*t177617*t177691* \
               t177719*(4.951760157141521E27/4.2002315996439E29)+t177454*t177691*t177719*t177728*t177696*(2.475880078570761E27/ \
               1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t177731*t177732*t177718*t177449* \
               (3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)+omega*t177732* \
               t177718*t177449*t177737*(1.40737488355328E14/1.122528164409771E15))-c0*t177733*t177743*t177746*(4.0/ \
               3.0)+c0*t177744*t177746*(cx1*gamma_aa[index]*gx*t177544*t177678*(8.0/3.0)-cx1*t177702*t177467*t177666* \
               t177649*(8.0/3.0)+cx2*t177467*t177666*t177649*t177689*(1.6E1/3.0)+cx4*t177651*t177674*t177469*t177667* \
               (3.2E1/3.0)-cx2*t177716*t177474*t177717*t177467*t177666-cx4*t177712*t177713*t177471*t177469*t177667+ \
               cx3*gamma_aa[index]*gx*t177650*t177467*t177666*t177684*8.0-cx3*gamma_aa[index]*gx*t177706*t177473* \
               t177707*t177467*t177666);
        } else if (rho_a[index] > cutoff_) {
            double t182845 = 1.0/pow(rho_a[index],1.0/3.0);
            double t182846 = c*t182845;
            double t182847 = sqrt(t182846);
            double t182848 = pow(t182846,3.0/2.0);
            double t182849 = c*c;
            double t182850 = 1.0/pow(rho_a[index],2.0/3.0);
            double t182851 = 1.0/c0p;
            double t182852 = b1p*t182847;
            double t182853 = b3p*t182848;
            double t182854 = b4p*t182850*t182849;
            double t182855 = b2p*c*t182845;
            double t182856 = t182852+t182853+t182854+t182855;
            double t182857 = 1.0/t182856;
            double t182858 = t182851*t182857*(1.0/2.0);
            double t182859 = t182858+1.0;
            double t182860 = log(t182859);
            double t182861 = a1p*c*t182845;
            double t182862 = t182861+1.0;
            double t182863 = gamma_aa[index]*gamma_aa[index];
            double t182864 = gcaa*gcaa;
            double t182865 = t182863*t182863;
            double t182866 = t182864*t182864;
            double t182867 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t182868 = 1.0/pow(rho_a[index],8.0/3.0);
            double t182869 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t182870 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t182871 = pow(2.0,1.0/3.0);
            double t182872 = t182871*2.0;
            double t182873 = t182872-2.0;
            double t182874 = two_13*2.0;
            double t182875 = t182874-2.0;
            double t182876 = 1.0/t182875;
            double t182877 = 1.0/c0f;
            double t182878 = b1f*t182847;
            double t182879 = b3f*t182848;
            double t182880 = b4f*t182850*t182849;
            double t182881 = b2f*c*t182845;
            double t182882 = t182880+t182881+t182878+t182879;
            double t182883 = 1.0/t182882;
            double t182884 = t182883*t182877*(1.0/2.0);
            double t182885 = t182884+1.0;
            double t182886 = log(t182885);
            double t182887 = a1f*c*t182845;
            double t182888 = t182887+1.0;
            double t182889 = c0f*t182886*t182888*2.0;
            double t182890 = c0p*t182860*t182862*2.0;
            double t182891 = gamma_aa[index]*gcaa*t182868*4.0;
            double t182892 = gamma_aa[index]*gcaa*t182863*t182864*t182869*4.0;
            double t182893 = t182870*t182863*t182864*6.0;
            double t182894 = t182865*t182866*t182867;
            double t182895 = t182891+t182892+t182893+t182894+1.0;
            double t182896 = 1.0/t182895;
            double t182897 = gamma_aa[index]*gcaa*t182868;
            double t182898 = t182897+1.0;
            double t182899 = 1.0/t182898;
            double t182900 = gamma_aa[index]*gcaa*t182868*3.0;
            double t182901 = gamma_aa[index]*gcaa*t182863*t182864*t182869;
            double t182902 = t182870*t182863*t182864*3.0;
            double t182903 = t182900+t182901+t182902+1.0;
            double t182904 = 1.0/t182903;
            double t182905 = gamma_aa[index]*gcaa*t182868*2.0;
            double t182906 = t182870*t182863*t182864;
            double t182907 = t182905+t182906+1.0;
            double t182908 = 1.0/t182907;
            double t182909 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t182910 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t182911 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t182912 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t182913 = 1.0/pow(rho_a[index],4.0/3.0);
            double t182914 = 1.0/pow(rho_a[index],5.0/3.0);
            double t182915 = 1.0/sqrt(t182846);
            double t182916 = 1.0/t182859;
            double t182917 = 1.0/(t182856*t182856);
            double t182918 = b4p*t182914*t182849*(2.0/3.0);
            double t182919 = b2p*c*t182913*(1.0/3.0);
            double t182920 = b1p*c*t182913*t182915*(1.0/6.0);
            double t182921 = b3p*c*t182913*t182847*(1.0/2.0);
            double t182922 = t182920+t182921+t182918+t182919;
            double t182923 = t182922*t182862*t182916*t182917;
            double t182924 = ccaa4*t182865*t182866*t182867*t182896;
            double t182925 = ccaa1*gamma_aa[index]*gcaa*t182868*t182899;
            double t182926 = ccaa3*gamma_aa[index]*gcaa*t182904*t182863*t182864*t182869;
            double t182927 = ccaa2*t182870*t182863*t182908*t182864;
            double t182928 = ccaa0+t182924+t182925+t182926+t182927;
            double t182929 = gx*gx;
            double t182930 = t182929*t182929;
            double t182931 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t182932 = gamma_aa[index]*gx*t182868*4.0;
            double t182933 = gamma_aa[index]*gx*t182863*t182929*t182869*4.0;
            double t182934 = t182870*t182863*t182929*6.0;
            double t182935 = t182930*t182865*t182867;
            double t182936 = t182932+t182933+t182934+t182935+1.0;
            double t182937 = 1.0/t182936;
            double t182938 = cx4*t182930*t182865*t182937*t182867*(4.190715359480463E15/2.251799813685248E15);
            double t182939 = gamma_aa[index]*gx*t182868;
            double t182940 = t182939+1.0;
            double t182941 = 1.0/t182940;
            double t182942 = cx1*gamma_aa[index]*gx*t182941*t182868*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182943 = gamma_aa[index]*gx*t182868*3.0;
            double t182944 = gamma_aa[index]*gx*t182863*t182929*t182869;
            double t182945 = t182870*t182863*t182929*3.0;
            double t182946 = t182943+t182944+t182945+1.0;
            double t182947 = 1.0/t182946;
            double t182948 = cx3*gamma_aa[index]*gx*t182863*t182929*t182947*t182869*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182949 = gamma_aa[index]*gx*t182868*2.0;
            double t182950 = t182870*t182863*t182929;
            double t182951 = t182950+t182949+1.0;
            double t182952 = 1.0/t182951;
            double t182953 = cx2*t182870*t182952*t182863*t182929*(4.190715359480463E15/2.251799813685248E15);
            double t182954 = t182931+t182942+t182953+t182938+t182948;
            double t182955 = 1.0/omega;
            double t182956 = 1.0/(omega*omega);
            double t182957 = pow(rho_a[index],2.0/3.0);
            double t182958 = 1.0/t182954;
            double t182960 = t182956*t182957*t182958*(1.4000771998813E29/4.951760157141521E27);
            double t182959 = exp(-t182960);
            double t182961 = cx4*t182912*t182930*t182865*t182937*(1.396905119826821E15/7.0368744177664E13);
            double t182962 = cx1*gamma_aa[index]*gx*t182910*t182941*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t182963 = cx3*gamma_aa[index]*gx*t182911*t182863*t182929*t182947*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t182964 = cx2*t182952*t182863*t182909*t182929*(1.396905119826821E15/1.40737488355328E14);
            double t182965 = 1.0/(t182940*t182940);
            double t182966 = gamma_aa[index]*gx*t182910*8.0;
            double t182967 = gamma_aa[index]*gx*t182911*t182863*t182929*8.0;
            double t182968 = t182863*t182909*t182929*1.6E1;
            double t182969 = t182966+t182967+t182968;
            double t182970 = 1.0/(t182946*t182946);
            double t182971 = gamma_aa[index]*gx*t182910*(3.2E1/3.0);
            double t182972 = gamma_aa[index]*gx*t182911*t182863*t182929*3.2E1;
            double t182973 = t182863*t182909*t182929*3.2E1;
            double t182974 = t182912*t182930*t182865*(3.2E1/3.0);
            double t182975 = t182971+t182972+t182973+t182974;
            double t182976 = 1.0/(t182936*t182936);
            double t182977 = gamma_aa[index]*gx*t182910*(1.6E1/3.0);
            double t182978 = t182863*t182909*t182929*(1.6E1/3.0);
            double t182979 = t182977+t182978;
            double t182980 = 1.0/(t182951*t182951);
            double t182984 = cx1*t182863*t182909*t182929*t182965*(1.396905119826821E15/2.81474976710656E14);
            double t182985 = cx3*gamma_aa[index]*gx*t182970*t182863*t182929*t182869*t182969*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t182986 = cx4*t182930*t182865*t182867*t182975*t182976*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182987 = cx2*t182870*t182863*t182980*t182929*t182979*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182981 = t182961+t182962+t182963+t182964-t182984-t182985-t182986-t182987;
            double t182982 = omega*omega;
            double t182983 = t182959-1.0;
            double t182988 = t182845*t182956*t182958*(1.4000771998813E29/7.427640235712282E27);
            double t182989 = 1.0/(t182954*t182954);
            double t182990 = t182981*t182956*t182957*t182989*(1.4000771998813E29/4.951760157141521E27);
            double t182991 = t182990+t182988;
            double t182992 = sqrt(t182954);
            double t182993 = t182850*t182954*t182982*t182983*(2.475880078570761E27/1.4000771998813E29);
            double t182994 = t182993-t182959+3.0/2.0;
            double t182995 = 1.0/sqrt(t182954);
            double t182996 = pow(rho_a[index],1.0/3.0);
            double t182997 = t182955*t182995*t182996*(3.74176054803257E14/7.0368744177664E13);
            double t182998 = erf(t182997);
            double t182999 = t182998*(3.991211251234741E15/2.251799813685248E15);
            double t183001 = omega*t182845*t182992*t182994*(7.0368744177664E13/3.74176054803257E14);
            double t183000 = -t183001+t182999;
            double t183002 = cx4*t182930*t182865*t182937*t182867;
            double t183003 = cx1*gamma_aa[index]*gx*t182941*t182868;
            double t183004 = cx3*gamma_aa[index]*gx*t182863*t182929*t182947*t182869;
            double t183005 = cx2*t182870*t182952*t182863*t182929;
            double t183006 = cx0+t183002+t183003+t183004+t183005;
            double t183007 = pow(rho_a[index],4.0/3.0);
            double t183008 = omega*t183000*t182845*t182992*(2.81474976710656E14/1.122528164409771E15);
            double t183009 = t183008-1.0;
            v_rho_a_[index] = -t182928*(t182890+t182873*t182876*(t182889-c0p*t182860*t182862*2.0))+rho_a[index]* \
               t182928*(-t182923+t182873*t182876*(t182923-(1.0/(t182882*t182882)*t182888*(b2f*c*t182913*(1.0/3.0) \
               +b4f*t182914*t182849*(2.0/3.0)+b1f*c*t182913*t182915*(1.0/6.0)+b3f*c*t182913*t182847*(1.0/2.0)))/t182885+ \
               a1f*c*c0f*t182913*t182886*(2.0/3.0)-a1p*c*c0p*t182913*t182860*(2.0/3.0))+a1p*c*c0p*t182913*t182860* \
               (2.0/3.0))+rho_a[index]*(t182890-t182873*t182876*(t182890-t182889))*(ccaa1*gamma_aa[index]*gcaa*t182910* \
               t182899*(8.0/3.0)+ccaa2*t182863*t182908*t182864*t182909*(1.6E1/3.0)+ccaa4*t182912*t182865*t182866* \
               t182896*(3.2E1/3.0)-ccaa1*t182863*t182864*t182909*1.0/(t182898*t182898)*(8.0/3.0)-ccaa2*t182870*1.0/ \
               (t182907*t182907)*t182863*t182864*(gamma_aa[index]*gcaa*t182910*(1.6E1/3.0)+t182863*t182864*t182909* \
               (1.6E1/3.0))-ccaa4*t182865*t182866*t182867*1.0/(t182895*t182895)*(gamma_aa[index]*gcaa*t182910*(3.2E1/ \
               3.0)+t182912*t182865*t182866*(3.2E1/3.0)+t182863*t182864*t182909*3.2E1+gamma_aa[index]*gcaa*t182911* \
               t182863*t182864*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t182911*t182904*t182863*t182864*8.0-ccaa3*gamma_aa[index]* \
               gcaa*1.0/(t182903*t182903)*t182863*t182864*t182869*(gamma_aa[index]*gcaa*t182910*8.0+t182863*t182864* \
               t182909*1.6E1+gamma_aa[index]*gcaa*t182911*t182863*t182864*8.0))+c0*t183006*t183007*(omega*t183000* \
               t182913*t182992*(2.81474976710656E14/3.367584493229313E15)-omega*t182845*t182992*(1.0/sqrt(3.141592653589793) \
               *t182959*(t182850*t182955*t182995*(3.74176054803257E14/2.11106232532992E14)+1.0/pow(t182954,3.0/2.0) \
               *t182981*t182955*t182996*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t182913*t182992*t182994*(7.0368744177664E13/1.122528164409771E15)+omega*t182845*t182992*(-t182991* \
               t182959+t182850*t182981*t182982*t182983*(2.475880078570761E27/1.4000771998813E29)+t182914*t182954* \
               t182982*t182983*(4.951760157141521E27/4.2002315996439E29)+t182850*t182954*t182982*t182991*t182959* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t182845* \
               t182981*t182994*t182995*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t183000*t182845*t182981*t182995*(1.40737488355328E14/1.122528164409771E15))-c0*t183006*t183009* \
               t182996*(4.0/3.0)+c0*t183007*t183009*(cx1*gamma_aa[index]*gx*t182910*t182941*(8.0/3.0)-cx1*t182863* \
               t182909*t182929*t182965*(8.0/3.0)+cx2*t182952*t182863*t182909*t182929*(1.6E1/3.0)+cx4*t182912*t182930* \
               t182865*t182937*(3.2E1/3.0)-cx2*t182870*t182863*t182980*t182929*t182979-cx4*t182930*t182865*t182867* \
               t182975*t182976+cx3*gamma_aa[index]*gx*t182911*t182863*t182929*t182947*8.0-cx3*gamma_aa[index]*gx* \
               t182970*t182863*t182929*t182869*t182969);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t177748 = 1.0/pow(rho_b[index],1.0/3.0);
            double t177749 = c*t177748;
            double t177750 = sqrt(t177749);
            double t177751 = pow(t177749,3.0/2.0);
            double t177752 = c*c;
            double t177753 = 1.0/pow(rho_b[index],2.0/3.0);
            double t177754 = 1.0/c0p;
            double t177755 = b1p*t177750;
            double t177756 = b3p*t177751;
            double t177757 = b4p*t177752*t177753;
            double t177758 = b2p*c*t177748;
            double t177759 = t177755+t177756+t177757+t177758;
            double t177760 = 1.0/t177759;
            double t177761 = t177760*t177754*(1.0/2.0);
            double t177762 = t177761+1.0;
            double t177763 = log(t177762);
            double t177764 = a1p*c*t177748;
            double t177765 = t177764+1.0;
            double t177766 = gamma_bb[index]*gamma_bb[index];
            double t177767 = gcaa*gcaa;
            double t177768 = t177766*t177766;
            double t177769 = t177767*t177767;
            double t177770 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t177771 = 1.0/pow(rho_b[index],8.0/3.0);
            double t177772 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t177773 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t177774 = pow(2.0,1.0/3.0);
            double t177775 = t177774*2.0;
            double t177776 = t177775-2.0;
            double t177777 = two_13*2.0;
            double t177778 = t177777-2.0;
            double t177779 = 1.0/t177778;
            double t177780 = 1.0/c0f;
            double t177781 = 1.0/pow(rho_a[index],1.0/3.0);
            double t177782 = c*t177781;
            double t177783 = sqrt(t177782);
            double t177784 = pow(t177782,3.0/2.0);
            double t177785 = 1.0/pow(rho_a[index],2.0/3.0);
            double t177786 = b1p*t177783;
            double t177787 = b3p*t177784;
            double t177788 = b4p*t177752*t177785;
            double t177789 = b2p*c*t177781;
            double t177790 = t177786+t177787+t177788+t177789;
            double t177791 = 1.0/t177790;
            double t177792 = t177754*t177791*(1.0/2.0);
            double t177793 = t177792+1.0;
            double t177794 = log(t177793);
            double t177795 = a1p*c*t177781;
            double t177796 = t177795+1.0;
            double t177797 = c0p*t177794*t177796*2.0;
            double t177798 = b1f*t177750;
            double t177799 = b3f*t177751;
            double t177800 = b4f*t177752*t177753;
            double t177801 = b2f*c*t177748;
            double t177802 = t177800+t177801+t177798+t177799;
            double t177803 = 1.0/t177802;
            double t177804 = t177803*t177780*(1.0/2.0);
            double t177805 = t177804+1.0;
            double t177806 = log(t177805);
            double t177807 = a1f*c*t177748;
            double t177808 = t177807+1.0;
            double t177809 = c0f*t177806*t177808*2.0;
            double t177810 = c0p*t177763*t177765*2.0;
            double t177811 = rho_a[index]+rho_b[index];
            double t177812 = 1.0/pow(t177811,1.0/3.0);
            double t177813 = c*t177812;
            double t177814 = sqrt(t177813);
            double t177815 = pow(t177813,3.0/2.0);
            double t177816 = 1.0/pow(t177811,2.0/3.0);
            double t177817 = b1p*t177814;
            double t177818 = b3p*t177815;
            double t177819 = b4p*t177752*t177816;
            double t177820 = b2p*c*t177812;
            double t177821 = t177820+t177817+t177818+t177819;
            double t177822 = 1.0/t177821;
            double t177823 = t177822*t177754*(1.0/2.0);
            double t177824 = t177823+1.0;
            double t177825 = log(t177824);
            double t177826 = a1p*c*t177812;
            double t177827 = t177826+1.0;
            double t177828 = c0p*t177825*t177827*2.0;
            double t177829 = rho_a[index]-rho_b[index];
            double t177830 = t177829*t177829;
            double t177831 = 1.0/t177811;
            double t177832 = t177831*t177829;
            double t177833 = 1.0/(t177811*t177811*t177811*t177811);
            double t177834 = t177830*t177830;
            double t177835 = t177832+1.0;
            double t177836 = pow(t177835,4.0/3.0);
            double t177837 = -t177832+1.0;
            double t177838 = pow(t177837,4.0/3.0);
            double t177839 = t177836+t177838-2.0;
            double t177840 = gcab*gcab;
            double t177844 = 1.0/pow(rho_a[index],8.0/3.0);
            double t177845 = gamma_aa[index]*t177844*(1.0/2.0);
            double t177846 = gamma_bb[index]*t177771*(1.0/2.0);
            double t177841 = t177845+t177846;
            double t177842 = t177841*t177841;
            double t177843 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t177847 = t177840*t177840;
            double t177848 = t177842*t177842;
            double t177849 = t177840*t177842*6.0;
            double t177850 = gcab*t177840*t177841*t177842*4.0;
            double t177851 = t177847*t177848;
            double t177852 = gcab*t177841*4.0;
            double t177853 = t177850+t177851+t177852+t177849+1.0;
            double t177854 = gcab*t177841;
            double t177855 = t177854+1.0;
            double t177856 = t177840*t177842;
            double t177857 = gcab*t177841*2.0;
            double t177858 = t177856+t177857+1.0;
            double t177859 = t177840*t177842*3.0;
            double t177860 = gcab*t177840*t177841*t177842;
            double t177861 = gcab*t177841*3.0;
            double t177862 = t177860+t177861+t177859+1.0;
            double t177863 = 1.0/t177858;
            double t177864 = 1.0/t177862;
            double t177865 = 1.0/t177855;
            double t177866 = 1.0/t177853;
            double t177867 = 1.0/pow(t177811,4.0/3.0);
            double t177868 = b1f*t177814;
            double t177869 = b3f*t177815;
            double t177870 = b4f*t177752*t177816;
            double t177871 = b2f*c*t177812;
            double t177872 = t177870+t177871+t177868+t177869;
            double t177873 = 1.0/t177872;
            double t177874 = t177780*t177873*(1.0/2.0);
            double t177875 = t177874+1.0;
            double t177876 = log(t177875);
            double t177877 = a1f*c*t177812;
            double t177878 = t177877+1.0;
            double t177880 = c0f*t177876*t177878*2.0;
            double t177879 = -t177880+t177828;
            double t177881 = 1.0/(t177811*t177811);
            double t177882 = t177881*t177829;
            double t177883 = t177831+t177882;
            double t177884 = t177880-t177828;
            double t177885 = 1.0/pow(t177811,5.0/3.0);
            double t177886 = 1.0/sqrt(t177813);
            double t177887 = 1.0/t177824;
            double t177888 = 1.0/(t177821*t177821);
            double t177889 = b4p*t177752*t177885*(2.0/3.0);
            double t177890 = b2p*c*t177867*(1.0/3.0);
            double t177891 = b1p*c*t177867*t177886*(1.0/6.0);
            double t177892 = b3p*c*t177814*t177867*(1.0/2.0);
            double t177893 = t177890+t177891+t177892+t177889;
            double t177894 = 1.0/d2fz0;
            double t177895 = 1.0/Aa;
            double t177896 = b1a*t177814;
            double t177897 = b3a*t177815;
            double t177898 = b4a*t177752*t177816;
            double t177899 = b2a*c*t177812;
            double t177900 = t177896+t177897+t177898+t177899;
            double t177901 = 1.0/t177900;
            double t177902 = t177901*t177895*(1.0/2.0);
            double t177903 = t177902+1.0;
            double t177904 = log(t177903);
            double t177905 = a1a*c*t177812;
            double t177906 = t177905+1.0;
            double t177907 = 1.0/(t177811*t177811*t177811*t177811*t177811);
            double t177908 = pow(t177835,1.0/3.0);
            double t177909 = t177908*t177883*(4.0/3.0);
            double t177910 = pow(t177837,1.0/3.0);
            double t177911 = t177909-t177910*t177883*(4.0/3.0);
            double t177912 = t177833*t177834;
            double t177913 = t177912-1.0;
            double t177914 = 1.0/pow(rho_b[index],4.0/3.0);
            double t177915 = 1.0/pow(rho_b[index],5.0/3.0);
            double t177916 = 1.0/sqrt(t177749);
            double t177917 = 1.0/t177762;
            double t177918 = 1.0/(t177759*t177759);
            double t177919 = b4p*t177752*t177915*(2.0/3.0);
            double t177920 = b2p*c*t177914*(1.0/3.0);
            double t177921 = b1p*c*t177914*t177916*(1.0/6.0);
            double t177922 = b3p*c*t177750*t177914*(1.0/2.0);
            double t177923 = t177920+t177921+t177922+t177919;
            double t177924 = t177923*t177917*t177765*t177918;
            double t177925 = t177810-t177809;
            double t177926 = Aa*t177904*t177913*t177906*t177839*t177894*t177779*2.0;
            double t177927 = a1p*c*c0p*t177825*t177867*(2.0/3.0);
            double t177928 = t177925*t177776*t177779;
            double t177929 = gamma_bb[index]*gcaa*t177771*4.0;
            double t177930 = gamma_bb[index]*gcaa*t177772*t177766*t177767*4.0;
            double t177931 = t177773*t177766*t177767*6.0;
            double t177932 = t177770*t177768*t177769;
            double t177933 = t177930+t177931+t177932+t177929+1.0;
            double t177934 = 1.0/t177933;
            double t177935 = gamma_bb[index]*gcaa*t177771;
            double t177936 = t177935+1.0;
            double t177937 = 1.0/t177936;
            double t177938 = gamma_bb[index]*gcaa*t177771*3.0;
            double t177939 = gamma_bb[index]*gcaa*t177772*t177766*t177767;
            double t177940 = t177773*t177766*t177767*3.0;
            double t177941 = t177940+t177938+t177939+1.0;
            double t177942 = 1.0/t177941;
            double t177943 = gamma_bb[index]*gcaa*t177771*2.0;
            double t177944 = t177773*t177766*t177767;
            double t177945 = t177943+t177944+1.0;
            double t177946 = 1.0/t177945;
            double t177947 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t177948 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t177949 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t177950 = 1.0/t177805;
            double t177951 = 1.0/(t177802*t177802);
            double t177952 = b4f*t177752*t177915*(2.0/3.0);
            double t177953 = b2f*c*t177914*(1.0/3.0);
            double t177954 = b1f*c*t177914*t177916*(1.0/6.0);
            double t177955 = b3f*c*t177750*t177914*(1.0/2.0);
            double t177956 = t177952+t177953+t177954+t177955;
            double t177957 = a1f*c*c0f*t177806*t177914*(2.0/3.0);
            double t177958 = a1p*c*c0p*t177914*t177763*(2.0/3.0);
            double t177959 = ccaa4*t177770*t177934*t177768*t177769;
            double t177960 = ccaa1*gamma_bb[index]*gcaa*t177771*t177937;
            double t177961 = ccaa3*gamma_bb[index]*gcaa*t177942*t177772*t177766*t177767;
            double t177962 = ccaa2*t177773*t177766*t177946*t177767;
            double t177963 = ccaa0+t177960+t177961+t177962+t177959;
            double t177964 = gx*gx;
            double t177965 = t177964*t177964;
            double t177966 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t177967 = gamma_bb[index]*gx*t177771*4.0;
            double t177968 = gamma_bb[index]*gx*t177772*t177766*t177964*4.0;
            double t177969 = t177773*t177766*t177964*6.0;
            double t177970 = t177770*t177965*t177768;
            double t177971 = t177970+t177967+t177968+t177969+1.0;
            double t177972 = 1.0/t177971;
            double t177973 = cx4*t177770*t177972*t177965*t177768*(4.190715359480463E15/2.251799813685248E15);
            double t177974 = gamma_bb[index]*gx*t177771;
            double t177975 = t177974+1.0;
            double t177976 = 1.0/t177975;
            double t177977 = cx1*gamma_bb[index]*gx*t177771*t177976*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177978 = gamma_bb[index]*gx*t177771*3.0;
            double t177979 = gamma_bb[index]*gx*t177772*t177766*t177964;
            double t177980 = t177773*t177766*t177964*3.0;
            double t177981 = t177980+t177978+t177979+1.0;
            double t177982 = 1.0/t177981;
            double t177983 = cx3*gamma_bb[index]*gx*t177772*t177766*t177964*t177982*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t177984 = gamma_bb[index]*gx*t177771*2.0;
            double t177985 = t177773*t177766*t177964;
            double t177986 = t177984+t177985+1.0;
            double t177987 = 1.0/t177986;
            double t177988 = cx2*t177773*t177766*t177964*t177987*(4.190715359480463E15/2.251799813685248E15);
            double t177989 = t177973+t177983+t177966+t177977+t177988;
            double t177990 = 1.0/omega;
            double t177991 = 1.0/(omega*omega);
            double t177992 = pow(rho_b[index],2.0/3.0);
            double t177993 = 1.0/t177989;
            double t177995 = t177991*t177992*t177993*(1.4000771998813E29/4.951760157141521E27);
            double t177994 = exp(-t177995);
            double t177996 = cx4*t177972*t177965*t177768*t177949*(1.396905119826821E15/7.0368744177664E13);
            double t177997 = cx1*gamma_bb[index]*gx*t177843*t177976*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t177998 = cx3*gamma_bb[index]*gx*t177766*t177964*t177982*t177948*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t177999 = cx2*t177766*t177964*t177947*t177987*(1.396905119826821E15/1.40737488355328E14);
            double t178000 = 1.0/(t177975*t177975);
            double t178001 = gamma_bb[index]*gx*t177843*8.0;
            double t178002 = gamma_bb[index]*gx*t177766*t177964*t177948*8.0;
            double t178003 = t177766*t177964*t177947*1.6E1;
            double t178004 = t178001+t178002+t178003;
            double t178005 = 1.0/(t177981*t177981);
            double t178006 = gamma_bb[index]*gx*t177843*(3.2E1/3.0);
            double t178007 = gamma_bb[index]*gx*t177766*t177964*t177948*3.2E1;
            double t178008 = t177766*t177964*t177947*3.2E1;
            double t178009 = t177965*t177768*t177949*(3.2E1/3.0);
            double t178010 = t178006+t178007+t178008+t178009;
            double t178011 = 1.0/(t177971*t177971);
            double t178012 = gamma_bb[index]*gx*t177843*(1.6E1/3.0);
            double t178013 = t177766*t177964*t177947*(1.6E1/3.0);
            double t178014 = t178012+t178013;
            double t178015 = 1.0/(t177986*t177986);
            double t178019 = cx1*t178000*t177766*t177964*t177947*(1.396905119826821E15/2.81474976710656E14);
            double t178020 = cx3*gamma_bb[index]*gx*t178004*t178005*t177772*t177766*t177964*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t178021 = cx4*t178010*t178011*t177770*t177965*t177768*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178022 = cx2*t178014*t178015*t177773*t177766*t177964*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178016 = -t178020-t178021-t178022-t178019+t177996+t177997+t177998+t177999;
            double t178017 = omega*omega;
            double t178018 = t177994-1.0;
            double t178023 = t177748*t177991*t177993*(1.4000771998813E29/7.427640235712282E27);
            double t178024 = 1.0/(t177989*t177989);
            double t178025 = t178024*t178016*t177991*t177992*(1.4000771998813E29/4.951760157141521E27);
            double t178026 = t178023+t178025;
            double t178027 = sqrt(t177989);
            double t178028 = t178017*t178018*t177753*t177989*(2.475880078570761E27/1.4000771998813E29);
            double t178029 = t178028-t177994+3.0/2.0;
            double t178030 = 1.0/sqrt(t177989);
            double t178031 = pow(rho_b[index],1.0/3.0);
            double t178032 = t178030*t178031*t177990*(3.74176054803257E14/7.0368744177664E13);
            double t178033 = erf(t178032);
            double t178034 = t178033*(3.991211251234741E15/2.251799813685248E15);
            double t178036 = omega*t178027*t178029*t177748*(7.0368744177664E13/3.74176054803257E14);
            double t178035 = t178034-t178036;
            double t178037 = cx4*t177770*t177972*t177965*t177768;
            double t178038 = cx1*gamma_bb[index]*gx*t177771*t177976;
            double t178039 = cx3*gamma_bb[index]*gx*t177772*t177766*t177964*t177982;
            double t178040 = cx2*t177773*t177766*t177964*t177987;
            double t178041 = cx0+t178040+t178037+t178038+t178039;
            double t178042 = pow(rho_b[index],4.0/3.0);
            double t178043 = omega*t178035*t178027*t177748*(2.81474976710656E14/1.122528164409771E15);
            double t178044 = t178043-1.0;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t177841*t177865+ccab2*t177840*t177842*t177863+ccab4*t177847* \
               t177848*t177866+ccab3*gcab*t177840*t177841*t177842*t177864)*(-t177810+t177926+t177828+t177928+rho_b[index]* \
               (-t177924+t177958+t177776*t177779*(t177924+t177957-t177950*t177951*t177808*t177956-a1p*c*c0p*t177914* \
               t177763*(2.0/3.0)))-t177811*(t177927-t177827*t177893*t177887*t177888+t177911*t177833*t177834*t177884* \
               t177779+t177834*t177907*t177839*t177884*t177779*4.0-t177833*t177834*t177839*t177779*(t177927-t177827* \
               t177893*t177887*t177888+(1.0/(t177872*t177872)*t177878*(b2f*c*t177867*(1.0/3.0)+b4f*t177752*t177885* \
               (2.0/3.0)+b1f*c*t177867*t177886*(1.0/6.0)+b3f*c*t177814*t177867*(1.0/2.0)))/t177875-a1f*c*c0f*t177867* \
               t177876*(2.0/3.0))-t177830*t177833*t177829*t177839*t177779*t177879*4.0+Aa*t177904*t177906*t177839* \
               t177894*t177779*(t177834*t177907*4.0+t177830*t177833*t177829*4.0)*2.0+Aa*t177911*t177904*t177913*t177906* \
               t177894*t177779*2.0-(1.0/(t177900*t177900)*t177913*t177906*t177839*t177894*t177779*(b2a*c*t177867* \
               (1.0/3.0)+b4a*t177752*t177885*(2.0/3.0)+b1a*c*t177867*t177886*(1.0/6.0)+b3a*c*t177814*t177867*(1.0/ \
               2.0)))/t177903+Aa*a1a*c*t177904*t177913*t177839*t177867*t177894*t177779*(2.0/3.0))+t177833*t177834* \
               t177839*t177884*t177779)-t177963*(t177810+t177776*t177779*(t177809-c0p*t177763*t177765*2.0))-(rho_b[index]* \
               (t177810-t177925*t177776*t177779)+rho_a[index]*(t177797-t177776*t177779*(t177797-c0f*log((t177780* \
               (1.0/2.0))/(b1f*t177783+b3f*t177784+b2f*c*t177781+b4f*t177752*t177785)+1.0)*(a1f*c*t177781+1.0)*2.0) \
               )-t177811*(t177926+t177828-t177833*t177834*t177839*t177779*t177879))*(ccab1*gamma_bb[index]*gcab*t177843* \
               t177865*(4.0/3.0)-ccab2*t177840*t177842*1.0/(t177858*t177858)*(gamma_bb[index]*gcab*t177843*(8.0/3.0) \
               +gamma_bb[index]*t177840*t177841*t177843*(8.0/3.0))-ccab4*1.0/(t177853*t177853)*t177847*t177848*(gamma_bb[index]* \
               gcab*t177843*(1.6E1/3.0)+gamma_bb[index]*t177840*t177841*t177843*1.6E1+gamma_bb[index]*gcab*t177840* \
               t177842*t177843*1.6E1+gamma_bb[index]*t177841*t177842*t177843*t177847*(1.6E1/3.0))-ccab1*gamma_bb[index]* \
               t177840*t177841*t177843*1.0/(t177855*t177855)*(4.0/3.0)+ccab2*gamma_bb[index]*t177840*t177841*t177843* \
               t177863*(8.0/3.0)-ccab3*gcab*t177840*t177841*t177842*1.0/(t177862*t177862)*(gamma_bb[index]*gcab*t177843* \
               4.0+gamma_bb[index]*t177840*t177841*t177843*8.0+gamma_bb[index]*gcab*t177840*t177842*t177843*4.0)+ \
               ccab3*gamma_bb[index]*gcab*t177840*t177842*t177843*t177864*4.0+ccab4*gamma_bb[index]*t177841*t177842* \
               t177843*t177847*t177866*(1.6E1/3.0))+rho_b[index]*t177963*(-t177924+t177958+t177776*t177779*(t177924+ \
               t177957-t177958-t177950*t177951*t177808*t177956))+rho_b[index]*(t177810-t177928)*(ccaa1*gamma_bb[index]* \
               gcaa*t177843*t177937*(8.0/3.0)+ccaa2*t177766*t177946*t177767*t177947*(1.6E1/3.0)+ccaa4*t177934*t177768* \
               t177769*t177949*(3.2E1/3.0)-ccaa1*1.0/(t177936*t177936)*t177766*t177767*t177947*(8.0/3.0)-ccaa2*t177773* \
               1.0/(t177945*t177945)*t177766*t177767*(gamma_bb[index]*gcaa*t177843*(1.6E1/3.0)+t177766*t177767*t177947* \
               (1.6E1/3.0))-ccaa4*t177770*1.0/(t177933*t177933)*t177768*t177769*(gamma_bb[index]*gcaa*t177843*(3.2E1/ \
               3.0)+t177766*t177767*t177947*3.2E1+t177768*t177769*t177949*(3.2E1/3.0)+gamma_bb[index]*gcaa*t177766* \
               t177767*t177948*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t177942*t177766*t177767*t177948*8.0-ccaa3*gamma_bb[index]* \
               gcaa*1.0/(t177941*t177941)*t177772*t177766*t177767*(gamma_bb[index]*gcaa*t177843*8.0+t177766*t177767* \
               t177947*1.6E1+gamma_bb[index]*gcaa*t177766*t177767*t177948*8.0))+c0*t178041*t178042*(omega*t178035* \
               t178027*t177914*(2.81474976710656E14/3.367584493229313E15)-omega*t178027*t177748*(1.0/sqrt(3.141592653589793) \
               *t177994*(t178030*t177753*t177990*(3.74176054803257E14/2.11106232532992E14)+t178031*t178016*t177990* \
               1.0/pow(t177989,3.0/2.0)*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t178027*t178029*t177914*(7.0368744177664E13/1.122528164409771E15)+omega*t178027*t177748*(-t178026* \
               t177994+t178016*t178017*t178018*t177753*(2.475880078570761E27/1.4000771998813E29)+t178017*t178018* \
               t177915*t177989*(4.951760157141521E27/4.2002315996439E29)+t178017*t178026*t177753*t177994*t177989* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t178030* \
               t178016*t178029*t177748*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t178030*t178016*t178035*t177748*(1.40737488355328E14/1.122528164409771E15))-c0*t178031*t178041* \
               t178044*(4.0/3.0)+c0*t178042*t178044*(cx1*gamma_bb[index]*gx*t177843*t177976*(8.0/3.0)-cx1*t178000* \
               t177766*t177964*t177947*(8.0/3.0)+cx2*t177766*t177964*t177947*t177987*(1.6E1/3.0)+cx4*t177972*t177965* \
               t177768*t177949*(3.2E1/3.0)-cx2*t178014*t178015*t177773*t177766*t177964-cx4*t178010*t178011*t177770* \
               t177965*t177768+cx3*gamma_bb[index]*gx*t177766*t177964*t177982*t177948*8.0-cx3*gamma_bb[index]*gx* \
               t178004*t178005*t177772*t177766*t177964);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t181751 = 1.0/pow(rho_b[index],1.0/3.0);
            double t181752 = c*t181751;
            double t181753 = sqrt(t181752);
            double t181754 = pow(t181752,3.0/2.0);
            double t181755 = c*c;
            double t181756 = 1.0/pow(rho_b[index],2.0/3.0);
            double t181757 = 1.0/c0p;
            double t181758 = b1p*t181753;
            double t181759 = b3p*t181754;
            double t181760 = b4p*t181755*t181756;
            double t181761 = b2p*c*t181751;
            double t181762 = t181760+t181761+t181758+t181759;
            double t181763 = 1.0/t181762;
            double t181764 = t181763*t181757*(1.0/2.0);
            double t181765 = t181764+1.0;
            double t181766 = log(t181765);
            double t181767 = a1p*c*t181751;
            double t181768 = t181767+1.0;
            double t181769 = gamma_bb[index]*gamma_bb[index];
            double t181770 = gcaa*gcaa;
            double t181771 = t181769*t181769;
            double t181772 = t181770*t181770;
            double t181773 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t181774 = 1.0/pow(rho_b[index],8.0/3.0);
            double t181775 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t181776 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t181777 = pow(2.0,1.0/3.0);
            double t181778 = t181777*2.0;
            double t181779 = t181778-2.0;
            double t181780 = two_13*2.0;
            double t181781 = t181780-2.0;
            double t181782 = 1.0/t181781;
            double t181783 = 1.0/c0f;
            double t181784 = b1f*t181753;
            double t181785 = b3f*t181754;
            double t181786 = b4f*t181755*t181756;
            double t181787 = b2f*c*t181751;
            double t181788 = t181784+t181785+t181786+t181787;
            double t181789 = 1.0/t181788;
            double t181790 = t181783*t181789*(1.0/2.0);
            double t181791 = t181790+1.0;
            double t181792 = log(t181791);
            double t181793 = a1f*c*t181751;
            double t181794 = t181793+1.0;
            double t181795 = c0f*t181792*t181794*2.0;
            double t181796 = c0p*t181766*t181768*2.0;
            double t181797 = gamma_bb[index]*gcaa*t181774*4.0;
            double t181798 = gamma_bb[index]*gcaa*t181770*t181775*t181769*4.0;
            double t181799 = t181770*t181776*t181769*6.0;
            double t181800 = t181771*t181772*t181773;
            double t181801 = t181800+t181797+t181798+t181799+1.0;
            double t181802 = 1.0/t181801;
            double t181803 = gamma_bb[index]*gcaa*t181774;
            double t181804 = t181803+1.0;
            double t181805 = 1.0/t181804;
            double t181806 = gamma_bb[index]*gcaa*t181774*3.0;
            double t181807 = gamma_bb[index]*gcaa*t181770*t181775*t181769;
            double t181808 = t181770*t181776*t181769*3.0;
            double t181809 = t181806+t181807+t181808+1.0;
            double t181810 = 1.0/t181809;
            double t181811 = gamma_bb[index]*gcaa*t181774*2.0;
            double t181812 = t181770*t181776*t181769;
            double t181813 = t181811+t181812+1.0;
            double t181814 = 1.0/t181813;
            double t181815 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t181816 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t181817 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t181818 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t181819 = 1.0/pow(rho_b[index],4.0/3.0);
            double t181820 = 1.0/pow(rho_b[index],5.0/3.0);
            double t181821 = 1.0/sqrt(t181752);
            double t181822 = 1.0/t181765;
            double t181823 = 1.0/(t181762*t181762);
            double t181824 = b4p*t181820*t181755*(2.0/3.0);
            double t181825 = b2p*c*t181819*(1.0/3.0);
            double t181826 = b1p*c*t181821*t181819*(1.0/6.0);
            double t181827 = b3p*c*t181753*t181819*(1.0/2.0);
            double t181828 = t181824+t181825+t181826+t181827;
            double t181829 = t181822*t181823*t181828*t181768;
            double t181830 = ccaa4*t181802*t181771*t181772*t181773;
            double t181831 = ccaa1*gamma_bb[index]*gcaa*t181805*t181774;
            double t181832 = ccaa3*gamma_bb[index]*gcaa*t181810*t181770*t181775*t181769;
            double t181833 = ccaa2*t181814*t181770*t181776*t181769;
            double t181834 = ccaa0+t181830+t181831+t181832+t181833;
            double t181835 = gx*gx;
            double t181836 = t181835*t181835;
            double t181837 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t181838 = gamma_bb[index]*gx*t181774*4.0;
            double t181839 = gamma_bb[index]*gx*t181835*t181775*t181769*4.0;
            double t181840 = t181835*t181776*t181769*6.0;
            double t181841 = t181771*t181773*t181836;
            double t181842 = t181840+t181841+t181838+t181839+1.0;
            double t181843 = 1.0/t181842;
            double t181844 = cx4*t181771*t181843*t181773*t181836*(4.190715359480463E15/2.251799813685248E15);
            double t181845 = gamma_bb[index]*gx*t181774;
            double t181846 = t181845+1.0;
            double t181847 = 1.0/t181846;
            double t181848 = cx1*gamma_bb[index]*gx*t181774*t181847*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181849 = gamma_bb[index]*gx*t181774*3.0;
            double t181850 = gamma_bb[index]*gx*t181835*t181775*t181769;
            double t181851 = t181835*t181776*t181769*3.0;
            double t181852 = t181850+t181851+t181849+1.0;
            double t181853 = 1.0/t181852;
            double t181854 = cx3*gamma_bb[index]*gx*t181835*t181853*t181775*t181769*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181855 = gamma_bb[index]*gx*t181774*2.0;
            double t181856 = t181835*t181776*t181769;
            double t181857 = t181855+t181856+1.0;
            double t181858 = 1.0/t181857;
            double t181859 = cx2*t181835*t181776*t181858*t181769*(4.190715359480463E15/2.251799813685248E15);
            double t181860 = t181844+t181854+t181837+t181848+t181859;
            double t181861 = 1.0/omega;
            double t181862 = 1.0/(omega*omega);
            double t181863 = pow(rho_b[index],2.0/3.0);
            double t181864 = 1.0/t181860;
            double t181866 = t181862*t181863*t181864*(1.4000771998813E29/4.951760157141521E27);
            double t181865 = exp(-t181866);
            double t181867 = cx4*t181771*t181843*t181818*t181836*(1.396905119826821E15/7.0368744177664E13);
            double t181868 = cx1*gamma_bb[index]*gx*t181816*t181847*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t181869 = cx3*gamma_bb[index]*gx*t181817*t181835*t181853*t181769*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t181870 = cx2*t181815*t181835*t181858*t181769*(1.396905119826821E15/1.40737488355328E14);
            double t181871 = 1.0/(t181846*t181846);
            double t181872 = gamma_bb[index]*gx*t181816*8.0;
            double t181873 = gamma_bb[index]*gx*t181817*t181835*t181769*8.0;
            double t181874 = t181815*t181835*t181769*1.6E1;
            double t181875 = t181872+t181873+t181874;
            double t181876 = 1.0/(t181852*t181852);
            double t181877 = gamma_bb[index]*gx*t181816*(3.2E1/3.0);
            double t181878 = gamma_bb[index]*gx*t181817*t181835*t181769*3.2E1;
            double t181879 = t181815*t181835*t181769*3.2E1;
            double t181880 = t181771*t181818*t181836*(3.2E1/3.0);
            double t181881 = t181880+t181877+t181878+t181879;
            double t181882 = 1.0/(t181842*t181842);
            double t181883 = gamma_bb[index]*gx*t181816*(1.6E1/3.0);
            double t181884 = t181815*t181835*t181769*(1.6E1/3.0);
            double t181885 = t181883+t181884;
            double t181886 = 1.0/(t181857*t181857);
            double t181890 = cx1*t181815*t181835*t181871*t181769*(1.396905119826821E15/2.81474976710656E14);
            double t181891 = cx3*gamma_bb[index]*gx*t181835*t181775*t181875*t181876*t181769*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t181892 = cx4*t181771*t181773*t181836*t181881*t181882*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181893 = cx2*t181835*t181776*t181885*t181769*t181886*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t181887 = t181870-t181890-t181891-t181892-t181893+t181867+t181868+t181869;
            double t181888 = omega*omega;
            double t181889 = t181865-1.0;
            double t181894 = t181751*t181862*t181864*(1.4000771998813E29/7.427640235712282E27);
            double t181895 = 1.0/(t181860*t181860);
            double t181896 = t181862*t181863*t181895*t181887*(1.4000771998813E29/4.951760157141521E27);
            double t181897 = t181894+t181896;
            double t181898 = sqrt(t181860);
            double t181899 = t181860*t181756*t181888*t181889*(2.475880078570761E27/1.4000771998813E29);
            double t181900 = -t181865+t181899+3.0/2.0;
            double t181901 = 1.0/sqrt(t181860);
            double t181902 = pow(rho_b[index],1.0/3.0);
            double t181903 = t181901*t181902*t181861*(3.74176054803257E14/7.0368744177664E13);
            double t181904 = erf(t181903);
            double t181905 = t181904*(3.991211251234741E15/2.251799813685248E15);
            double t181907 = omega*t181900*t181751*t181898*(7.0368744177664E13/3.74176054803257E14);
            double t181906 = t181905-t181907;
            double t181908 = cx4*t181771*t181843*t181773*t181836;
            double t181909 = cx1*gamma_bb[index]*gx*t181774*t181847;
            double t181910 = cx3*gamma_bb[index]*gx*t181835*t181853*t181775*t181769;
            double t181911 = cx2*t181835*t181776*t181858*t181769;
            double t181912 = cx0+t181910+t181911+t181908+t181909;
            double t181913 = pow(rho_b[index],4.0/3.0);
            double t181914 = omega*t181751*t181906*t181898*(2.81474976710656E14/1.122528164409771E15);
            double t181915 = t181914-1.0;
            v_rho_b_[index] = -t181834*(t181796+t181782*t181779*(t181795-c0p*t181766*t181768*2.0))+rho_b[index]* \
               t181834*(-t181829+t181782*t181779*(t181829-(t181794*1.0/(t181788*t181788)*(b2f*c*t181819*(1.0/3.0) \
               +b4f*t181820*t181755*(2.0/3.0)+b1f*c*t181821*t181819*(1.0/6.0)+b3f*c*t181753*t181819*(1.0/2.0)))/t181791+ \
               a1f*c*c0f*t181792*t181819*(2.0/3.0)-a1p*c*c0p*t181819*t181766*(2.0/3.0))+a1p*c*c0p*t181819*t181766* \
               (2.0/3.0))+rho_b[index]*(t181796+t181782*t181779*(t181795-t181796))*(ccaa1*gamma_bb[index]*gcaa*t181805* \
               t181816*(8.0/3.0)+ccaa4*t181802*t181771*t181772*t181818*(3.2E1/3.0)+ccaa2*t181814*t181770*t181815* \
               t181769*(1.6E1/3.0)-ccaa1*1.0/(t181804*t181804)*t181770*t181815*t181769*(8.0/3.0)-ccaa2*1.0/(t181813* \
               t181813)*t181770*t181776*t181769*(gamma_bb[index]*gcaa*t181816*(1.6E1/3.0)+t181770*t181815*t181769* \
               (1.6E1/3.0))-ccaa4*1.0/(t181801*t181801)*t181771*t181772*t181773*(gamma_bb[index]*gcaa*t181816*(3.2E1/ \
               3.0)+t181771*t181772*t181818*(3.2E1/3.0)+t181770*t181815*t181769*3.2E1+gamma_bb[index]*gcaa*t181770* \
               t181817*t181769*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t181810*t181770*t181817*t181769*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t181770*1.0/(t181809*t181809)*t181775*t181769*(gamma_bb[index]*gcaa*t181816*8.0+t181770*t181815* \
               t181769*1.6E1+gamma_bb[index]*gcaa*t181770*t181817*t181769*8.0))+c0*t181912*t181913*(omega*t181906* \
               t181819*t181898*(2.81474976710656E14/3.367584493229313E15)-omega*t181751*t181898*(1.0/sqrt(3.141592653589793) \
               *t181865*(t181901*t181861*t181756*(3.74176054803257E14/2.11106232532992E14)+t181902*1.0/pow(t181860,3.0/ \
               2.0)*t181861*t181887*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t181900*t181819*t181898*(7.0368744177664E13/1.122528164409771E15)+omega*t181751*t181898*(-t181865* \
               t181897+t181820*t181860*t181888*t181889*(4.951760157141521E27/4.2002315996439E29)+t181756*t181887* \
               t181888*t181889*(2.475880078570761E27/1.4000771998813E29)+t181860*t181756*t181865*t181888*t181897* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t181900* \
               t181901*t181751*t181887*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t181901*t181751*t181906*t181887*(1.40737488355328E14/1.122528164409771E15))-c0*t181902*t181912* \
               t181915*(4.0/3.0)+c0*t181913*t181915*(cx1*gamma_bb[index]*gx*t181816*t181847*(8.0/3.0)-cx1*t181815* \
               t181835*t181871*t181769*(8.0/3.0)+cx2*t181815*t181835*t181858*t181769*(1.6E1/3.0)+cx4*t181771*t181843* \
               t181818*t181836*(3.2E1/3.0)-cx2*t181835*t181776*t181885*t181769*t181886-cx4*t181771*t181773*t181836* \
               t181881*t181882+cx3*gamma_bb[index]*gx*t181817*t181835*t181853*t181769*8.0-cx3*gamma_bb[index]*gx* \
               t181835*t181775*t181875*t181876*t181769);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t178046 = 1.0/pow(rho_a[index],1.0/3.0);
                double t178047 = c*t178046;
                double t178048 = sqrt(t178047);
                double t178049 = pow(t178047,3.0/2.0);
                double t178050 = c*c;
                double t178051 = 1.0/pow(rho_a[index],2.0/3.0);
                double t178052 = 1.0/c0p;
                double t178053 = b1p*t178048;
                double t178054 = b3p*t178049;
                double t178055 = b4p*t178050*t178051;
                double t178056 = b2p*c*t178046;
                double t178057 = t178053+t178054+t178055+t178056;
                double t178058 = 1.0/t178057;
                double t178059 = t178052*t178058*(1.0/2.0);
                double t178060 = t178059+1.0;
                double t178061 = log(t178060);
                double t178062 = a1p*c*t178046;
                double t178063 = t178062+1.0;
                double t178064 = pow(2.0,1.0/3.0);
                double t178065 = t178064*2.0;
                double t178066 = t178065-2.0;
                double t178067 = two_13*2.0;
                double t178068 = t178067-2.0;
                double t178069 = 1.0/t178068;
                double t178070 = 1.0/c0f;
                double t178071 = 1.0/pow(rho_b[index],1.0/3.0);
                double t178072 = c*t178071;
                double t178073 = sqrt(t178072);
                double t178074 = pow(t178072,3.0/2.0);
                double t178075 = 1.0/pow(rho_b[index],2.0/3.0);
                double t178076 = b1p*t178073;
                double t178077 = b3p*t178074;
                double t178078 = b4p*t178050*t178075;
                double t178079 = b2p*c*t178071;
                double t178080 = t178076+t178077+t178078+t178079;
                double t178081 = 1.0/t178080;
                double t178082 = t178052*t178081*(1.0/2.0);
                double t178083 = t178082+1.0;
                double t178084 = log(t178083);
                double t178085 = a1p*c*t178071;
                double t178086 = t178085+1.0;
                double t178087 = c0p*t178084*t178086*2.0;
                double t178088 = rho_a[index]+rho_b[index];
                double t178089 = 1.0/pow(t178088,1.0/3.0);
                double t178090 = c*t178089;
                double t178091 = sqrt(t178090);
                double t178092 = pow(t178090,3.0/2.0);
                double t178093 = 1.0/pow(t178088,2.0/3.0);
                double t178094 = b1p*t178091;
                double t178095 = b3p*t178092;
                double t178096 = b4p*t178050*t178093;
                double t178097 = b2p*c*t178089;
                double t178098 = t178094+t178095+t178096+t178097;
                double t178099 = 1.0/t178098;
                double t178100 = t178052*t178099*(1.0/2.0);
                double t178101 = t178100+1.0;
                double t178102 = log(t178101);
                double t178103 = a1p*c*t178089;
                double t178104 = t178103+1.0;
                double t178105 = c0p*t178102*t178104*2.0;
                double t178106 = rho_a[index]-rho_b[index];
                double t178107 = t178106*t178106;
                double t178108 = 1.0/t178088;
                double t178109 = t178106*t178108;
                double t178110 = 1.0/(t178088*t178088*t178088*t178088);
                double t178111 = t178107*t178107;
                double t178112 = t178109+1.0;
                double t178113 = pow(t178112,4.0/3.0);
                double t178114 = -t178109+1.0;
                double t178115 = pow(t178114,4.0/3.0);
                double t178116 = t178113+t178115-2.0;
                double t178117 = 1.0/pow(rho_a[index],8.0/3.0);
                double t178118 = gamma_aa[index]*t178117*(1.0/2.0);
                double t178119 = 1.0/pow(rho_b[index],8.0/3.0);
                double t178120 = gamma_bb[index]*t178119*(1.0/2.0);
                double t178121 = t178120+t178118;
                double t178122 = gcab*t178121;
                double t178123 = t178122+1.0;
                double t178124 = gcab*gcab;
                double t178125 = t178121*t178121;
                double t178126 = t178124*t178124;
                double t178127 = t178125*t178125;
                double t178128 = t178124*t178125;
                double t178129 = gcab*t178121*2.0;
                double t178130 = t178128+t178129+1.0;
                double t178131 = t178124*t178125*3.0;
                double t178132 = gcab*t178121*t178124*t178125;
                double t178133 = gcab*t178121*3.0;
                double t178134 = t178131+t178132+t178133+1.0;
                double t178135 = t178124*t178125*6.0;
                double t178136 = gcab*t178121*t178124*t178125*4.0;
                double t178137 = t178126*t178127;
                double t178138 = gcab*t178121*4.0;
                double t178139 = t178135+t178136+t178137+t178138+1.0;
                double t178140 = c0p*t178061*t178063*2.0;
                double t178141 = b1f*t178048;
                double t178142 = b3f*t178049;
                double t178143 = b4f*t178050*t178051;
                double t178144 = b2f*c*t178046;
                double t178145 = t178141+t178142+t178143+t178144;
                double t178146 = 1.0/t178145;
                double t178147 = t178070*t178146*(1.0/2.0);
                double t178148 = t178147+1.0;
                double t178149 = log(t178148);
                double t178150 = a1f*c*t178046;
                double t178151 = t178150+1.0;
                double t178152 = t178140-c0f*t178151*t178149*2.0;
                double t178153 = t178140-t178152*t178066*t178069;
                double t178154 = gamma_aa[index]*gamma_aa[index];
                double t178155 = gcaa*gcaa;
                double t178156 = t178155*t178155;
                double t178157 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t178158 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t178159 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t178160 = gamma_aa[index]*gcaa*t178117;
                double t178161 = t178160+1.0;
                double t178162 = gamma_aa[index]*gcaa*t178117*3.0;
                double t178163 = gamma_aa[index]*gcaa*t178154*t178155*t178159;
                double t178164 = t178154*t178155*t178158*3.0;
                double t178165 = t178162+t178163+t178164+1.0;
                double t178166 = t178154*t178154;
                double t178167 = gamma_aa[index]*gcaa*t178117*4.0;
                double t178168 = gamma_aa[index]*gcaa*t178154*t178155*t178159*4.0;
                double t178169 = t178154*t178155*t178158*6.0;
                double t178170 = t178156*t178157*t178166;
                double t178171 = t178170+t178167+t178168+t178169+1.0;
                double t178172 = gamma_aa[index]*gcaa*t178117*2.0;
                double t178173 = t178154*t178155*t178158;
                double t178174 = t178172+t178173+1.0;
                double t178175 = gx*gx;
                double t178176 = t178175*t178175;
                double t178177 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t178178 = gamma_aa[index]*gx*t178117*4.0;
                double t178179 = gamma_aa[index]*gx*t178154*t178175*t178159*4.0;
                double t178180 = t178154*t178175*t178158*6.0;
                double t178181 = t178157*t178166*t178176;
                double t178182 = t178180+t178181+t178178+t178179+1.0;
                double t178183 = 1.0/t178182;
                double t178184 = cx4*t178183*t178157*t178166*t178176*(4.190715359480463E15/2.251799813685248E15);
                double t178185 = gamma_aa[index]*gx*t178117;
                double t178186 = t178185+1.0;
                double t178187 = 1.0/t178186;
                double t178188 = cx1*gamma_aa[index]*gx*t178117*t178187*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178189 = gamma_aa[index]*gx*t178117*3.0;
                double t178190 = gamma_aa[index]*gx*t178154*t178175*t178159;
                double t178191 = t178154*t178175*t178158*3.0;
                double t178192 = t178190+t178191+t178189+1.0;
                double t178193 = 1.0/t178192;
                double t178194 = cx3*gamma_aa[index]*gx*t178154*t178175*t178193*t178159*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178195 = gamma_aa[index]*gx*t178117*2.0;
                double t178196 = t178154*t178175*t178158;
                double t178197 = t178195+t178196+1.0;
                double t178198 = 1.0/t178197;
                double t178199 = cx2*t178154*t178175*t178158*t178198*(4.190715359480463E15/2.251799813685248E15);
                double t178200 = t178184+t178194+t178177+t178188+t178199;
                double t178201 = 1.0/(omega*omega);
                double t178202 = pow(rho_a[index],2.0/3.0);
                double t178203 = 1.0/t178200;
                double t178207 = t178201*t178202*t178203*(1.4000771998813E29/4.951760157141521E27);
                double t178204 = exp(-t178207);
                double t178205 = sqrt(t178200);
                double t178206 = pow(rho_a[index],4.0/3.0);
                double t178208 = 1.0/(t178186*t178186);
                double t178209 = gx*t178117*3.0;
                double t178210 = gamma_aa[index]*t178175*t178158*6.0;
                double t178211 = gx*t178154*t178175*t178159*3.0;
                double t178212 = t178210+t178211+t178209;
                double t178213 = 1.0/(t178192*t178192);
                double t178214 = gx*t178117*4.0;
                double t178215 = gamma_aa[index]*t178175*t178158*1.2E1;
                double t178216 = gx*t178154*t178175*t178159*1.2E1;
                double t178217 = gamma_aa[index]*t178154*t178157*t178176*4.0;
                double t178218 = t178214+t178215+t178216+t178217;
                double t178219 = 1.0/(t178182*t178182);
                double t178220 = gx*t178117*2.0;
                double t178221 = gamma_aa[index]*t178175*t178158*2.0;
                double t178222 = t178220+t178221;
                double t178223 = 1.0/(t178197*t178197);
                double t178224 = omega*omega;
                double t178225 = t178204-1.0;
                double t178226 = cx1*gx*t178117*t178187*(4.190715359480463E15/2.251799813685248E15);
                double t178227 = cx4*gamma_aa[index]*t178154*t178183*t178157*t178176*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t178228 = cx2*gamma_aa[index]*t178175*t178158*t178198*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t178229 = cx3*gx*t178154*t178175*t178193*t178159*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t178231 = cx1*gamma_aa[index]*t178208*t178175*t178158*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178232 = cx3*gamma_aa[index]*gx*t178212*t178213*t178154*t178175*t178159*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t178233 = cx4*t178218*t178219*t178157*t178166*t178176*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178234 = cx2*t178222*t178223*t178154*t178175*t178158*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178230 = -t178231-t178232-t178233-t178234+t178226+t178227+t178228+t178229;
                double t178235 = t178200*t178051*t178224*t178225*(2.475880078570761E27/1.4000771998813E29);
                double t178236 = -t178204+t178235+3.0/2.0;
                double t178237 = 1.0/sqrt(t178200);
                double t178238 = 1.0/omega;
                double t178239 = pow(rho_a[index],1.0/3.0);
                double t178240 = t178237*t178238*t178239*(3.74176054803257E14/7.0368744177664E13);
                double t178241 = erf(t178240);
                double t178242 = t178241*(3.991211251234741E15/2.251799813685248E15);
                double t178243 = t178242-omega*t178205*t178046*t178236*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = (rho_a[index]*t178153+rho_b[index]*(t178087-t178066*t178069*(t178087-c0f*log((t178070* \
                   (1.0/2.0))/(b1f*t178073+b3f*t178074+b2f*c*t178071+b4f*t178050*t178075)+1.0)*(a1f*c*t178071+1.0)*2.0) \
                   )-t178088*(t178105-t178110*t178111*t178116*t178069*(t178105-c0f*log((t178070*(1.0/2.0))/(b1f*t178091+ \
                   b3f*t178092+b2f*c*t178089+b4f*t178050*t178093)+1.0)*(a1f*c*t178089+1.0)*2.0)+(Aa*t178116*t178069*log((1.0/ \
                   2.0)/(Aa*(b1a*t178091+b3a*t178092+b2a*c*t178089+b4a*t178050*t178093))+1.0)*(t178110*t178111-1.0)*(a1a* \
                   c*t178089+1.0)*2.0)/d2fz0))*((ccab1*gcab*t178117*(1.0/2.0))/t178123-ccab4*t178126*t178127*1.0/(t178139* \
                   t178139)*(gcab*t178117*2.0+t178121*t178124*t178117*6.0+gcab*t178124*t178125*t178117*6.0+t178121*t178125* \
                   t178117*t178126*2.0)-ccab2*1.0/(t178130*t178130)*t178124*t178125*(gcab*t178117+t178121*t178124*t178117) \
                   +(ccab2*t178121*t178124*t178117)/t178130-ccab1*t178121*1.0/(t178123*t178123)*t178124*t178117*(1.0/ \
                   2.0)+(ccab3*gcab*t178124*t178125*t178117*(3.0/2.0))/t178134+(ccab4*t178121*t178125*t178117*t178126* \
                   2.0)/t178139-ccab3*gcab*t178121*t178124*t178125*1.0/(t178134*t178134)*(gcab*t178117*(3.0/2.0)+t178121* \
                   t178124*t178117*3.0+gcab*t178124*t178125*t178117*(3.0/2.0)))-rho_a[index]*t178153*((ccaa1*gcaa*t178117) \
                   /t178161-ccaa1*gamma_aa[index]*1.0/(t178161*t178161)*t178155*t178158+(ccaa2*gamma_aa[index]*t178155* \
                   t178158*2.0)/t178174-ccaa2*t178154*t178155*1.0/(t178174*t178174)*t178158*(gcaa*t178117*2.0+gamma_aa[index]* \
                   t178155*t178158*2.0)+(ccaa4*gamma_aa[index]*t178154*t178156*t178157*4.0)/t178171+(ccaa3*gcaa*t178154* \
                   t178155*t178159*3.0)/t178165-ccaa4*1.0/(t178171*t178171)*t178156*t178157*t178166*(gcaa*t178117*4.0+ \
                   gamma_aa[index]*t178155*t178158*1.2E1+gamma_aa[index]*t178154*t178156*t178157*4.0+gcaa*t178154*t178155* \
                   t178159*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t178154*t178155*1.0/(t178165*t178165)*t178159*(gcaa*t178117* \
                   3.0+gamma_aa[index]*t178155*t178158*6.0+gcaa*t178154*t178155*t178159*3.0))-c0*t178206*(omega*t178205* \
                   t178243*t178046*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*gx*t178117*t178187-cx1*gamma_aa[index]* \
                   t178208*t178175*t178158+cx2*gamma_aa[index]*t178175*t178158*t178198*2.0-cx2*t178222*t178223*t178154* \
                   t178175*t178158-cx4*t178218*t178219*t178157*t178166*t178176+cx4*gamma_aa[index]*t178154*t178183*t178157* \
                   t178176*4.0+cx3*gx*t178154*t178175*t178193*t178159*3.0-cx3*gamma_aa[index]*gx*t178212*t178213*t178154* \
                   t178175*t178159)+c0*t178206*(omega*t178205*t178046*(omega*t178205*t178046*(t178203*t178230*t178204* \
                   (1.0/2.0)+t178230*t178051*t178224*t178225*(2.475880078570761E27/1.4000771998813E29)-1.0/(t178200*t178200) \
                   *t178201*t178202*t178230*t178204*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t178230*t178046*t178236*t178237*(3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793) \
                   *1.0/pow(t178200,3.0/2.0)*t178230*t178204*t178238*t178239*(1.493415679873386E30/1.584563250285287E29) \
                   )*(2.81474976710656E14/1.122528164409771E15)-omega*t178230*t178243*t178046*t178237*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx0+cx1*gamma_aa[index]*gx*t178117*t178187+cx2*t178154*t178175*t178158*t178198+ \
                   cx4*t178183*t178157*t178166*t178176+cx3*gamma_aa[index]*gx*t178154*t178175*t178193*t178159);
            } else if (rho_a[index] > cutoff_) {
                double t183012 = 1.0/pow(rho_a[index],1.0/3.0);
                double t183013 = c*t183012;
                double t183014 = sqrt(t183013);
                double t183015 = pow(t183013,3.0/2.0);
                double t183016 = c*c;
                double t183017 = 1.0/pow(rho_a[index],2.0/3.0);
                double t183018 = 1.0/c0p;
                double t183019 = b1p*t183014;
                double t183020 = b3p*t183015;
                double t183021 = b4p*t183016*t183017;
                double t183022 = b2p*c*t183012;
                double t183023 = t183020+t183021+t183022+t183019;
                double t183024 = 1.0/t183023;
                double t183025 = t183024*t183018*(1.0/2.0);
                double t183026 = t183025+1.0;
                double t183027 = log(t183026);
                double t183028 = a1p*c*t183012;
                double t183029 = t183028+1.0;
                double t183030 = 1.0/pow(rho_a[index],8.0/3.0);
                double t183031 = gamma_aa[index]*gamma_aa[index];
                double t183032 = gcaa*gcaa;
                double t183033 = t183032*t183032;
                double t183034 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t183035 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t183036 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t183037 = gamma_aa[index]*gcaa*t183030;
                double t183038 = t183037+1.0;
                double t183039 = gamma_aa[index]*gcaa*t183030*3.0;
                double t183040 = gamma_aa[index]*gcaa*t183031*t183032*t183036;
                double t183041 = t183031*t183032*t183035*3.0;
                double t183042 = t183040+t183041+t183039+1.0;
                double t183043 = t183031*t183031;
                double t183044 = gamma_aa[index]*gcaa*t183030*4.0;
                double t183045 = gamma_aa[index]*gcaa*t183031*t183032*t183036*4.0;
                double t183046 = t183031*t183032*t183035*6.0;
                double t183047 = t183033*t183034*t183043;
                double t183048 = t183044+t183045+t183046+t183047+1.0;
                double t183049 = gamma_aa[index]*gcaa*t183030*2.0;
                double t183050 = t183031*t183032*t183035;
                double t183051 = t183050+t183049+1.0;
                double t183052 = gx*gx;
                double t183053 = t183052*t183052;
                double t183054 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t183055 = gamma_aa[index]*gx*t183030*4.0;
                double t183056 = gamma_aa[index]*gx*t183031*t183052*t183036*4.0;
                double t183057 = t183031*t183052*t183035*6.0;
                double t183058 = t183034*t183043*t183053;
                double t183059 = t183055+t183056+t183057+t183058+1.0;
                double t183060 = 1.0/t183059;
                double t183061 = cx4*t183060*t183034*t183043*t183053*(4.190715359480463E15/2.251799813685248E15);
                double t183062 = gamma_aa[index]*gx*t183030;
                double t183063 = t183062+1.0;
                double t183064 = 1.0/t183063;
                double t183065 = cx1*gamma_aa[index]*gx*t183030*t183064*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183066 = gamma_aa[index]*gx*t183030*3.0;
                double t183067 = gamma_aa[index]*gx*t183031*t183052*t183036;
                double t183068 = t183031*t183052*t183035*3.0;
                double t183069 = t183066+t183067+t183068+1.0;
                double t183070 = 1.0/t183069;
                double t183071 = cx3*gamma_aa[index]*gx*t183031*t183052*t183070*t183036*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183072 = gamma_aa[index]*gx*t183030*2.0;
                double t183073 = t183031*t183052*t183035;
                double t183074 = t183072+t183073+1.0;
                double t183075 = 1.0/t183074;
                double t183076 = cx2*t183031*t183052*t183035*t183075*(4.190715359480463E15/2.251799813685248E15);
                double t183077 = t183061+t183071+t183054+t183065+t183076;
                double t183078 = 1.0/(omega*omega);
                double t183079 = pow(rho_a[index],2.0/3.0);
                double t183080 = 1.0/t183077;
                double t183084 = t183080*t183078*t183079*(1.4000771998813E29/4.951760157141521E27);
                double t183081 = exp(-t183084);
                double t183082 = sqrt(t183077);
                double t183083 = pow(rho_a[index],4.0/3.0);
                double t183085 = 1.0/(t183063*t183063);
                double t183086 = gx*t183030*3.0;
                double t183087 = gamma_aa[index]*t183052*t183035*6.0;
                double t183088 = gx*t183031*t183052*t183036*3.0;
                double t183089 = t183086+t183087+t183088;
                double t183090 = 1.0/(t183069*t183069);
                double t183091 = gx*t183030*4.0;
                double t183092 = gamma_aa[index]*t183052*t183035*1.2E1;
                double t183093 = gx*t183031*t183052*t183036*1.2E1;
                double t183094 = gamma_aa[index]*t183031*t183034*t183053*4.0;
                double t183095 = t183091+t183092+t183093+t183094;
                double t183096 = 1.0/(t183059*t183059);
                double t183097 = gx*t183030*2.0;
                double t183098 = gamma_aa[index]*t183052*t183035*2.0;
                double t183099 = t183097+t183098;
                double t183100 = 1.0/(t183074*t183074);
                double t183101 = omega*omega;
                double t183102 = t183081-1.0;
                double t183103 = cx1*gx*t183030*t183064*(4.190715359480463E15/2.251799813685248E15);
                double t183104 = cx4*gamma_aa[index]*t183031*t183060*t183034*t183053*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t183105 = cx2*gamma_aa[index]*t183052*t183035*t183075*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183106 = cx3*gx*t183031*t183052*t183070*t183036*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t183108 = cx1*gamma_aa[index]*t183052*t183035*t183085*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183109 = cx3*gamma_aa[index]*gx*t183031*t183052*t183036*t183090*t183089*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183110 = cx4*t183034*t183043*t183053*t183095*t183096*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183111 = cx2*t183100*t183031*t183052*t183035*t183099*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183107 = -t183110-t183111+t183103+t183104+t183105+t183106-t183108-t183109;
                double t183112 = t183101*t183102*t183017*t183077*(2.475880078570761E27/1.4000771998813E29);
                double t183113 = t183112-t183081+3.0/2.0;
                double t183114 = 1.0/sqrt(t183077);
                double t183115 = 1.0/omega;
                double t183116 = pow(rho_a[index],1.0/3.0);
                double t183117 = t183114*t183115*t183116*(3.74176054803257E14/7.0368744177664E13);
                double t183118 = erf(t183117);
                double t183119 = t183118*(3.991211251234741E15/2.251799813685248E15);
                double t183120 = t183119-omega*t183012*t183113*t183082*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t183014+ \
                   b3f*t183015+b2f*c*t183012+b4f*t183016*t183017))+1.0)*(a1f*c*t183012+1.0)*2.0-c0p*t183027*t183029*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t183027*t183029*2.0)*((ccaa1*gcaa*t183030)/t183038+(ccaa2*gamma_aa[index]*t183032* \
                   t183035*2.0)/t183051-ccaa1*gamma_aa[index]*t183032*t183035*1.0/(t183038*t183038)-ccaa2*t183031*t183032* \
                   1.0/(t183051*t183051)*t183035*(gcaa*t183030*2.0+gamma_aa[index]*t183032*t183035*2.0)+(ccaa4*gamma_aa[index]* \
                   t183031*t183033*t183034*4.0)/t183048+(ccaa3*gcaa*t183031*t183032*t183036*3.0)/t183042-ccaa4*t183033* \
                   t183034*t183043*1.0/(t183048*t183048)*(gcaa*t183030*4.0+gamma_aa[index]*t183032*t183035*1.2E1+gamma_aa[index]* \
                   t183031*t183033*t183034*4.0+gcaa*t183031*t183032*t183036*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t183031* \
                   t183032*1.0/(t183042*t183042)*t183036*(gcaa*t183030*3.0+gamma_aa[index]*t183032*t183035*6.0+gcaa*t183031* \
                   t183032*t183036*3.0))-c0*t183083*(omega*t183012*t183120*t183082*(2.81474976710656E14/1.122528164409771E15) \
                   -1.0)*(cx1*gx*t183030*t183064-cx1*gamma_aa[index]*t183052*t183035*t183085+cx2*gamma_aa[index]*t183052* \
                   t183035*t183075*2.0-cx2*t183100*t183031*t183052*t183035*t183099-cx4*t183034*t183043*t183053*t183095* \
                   t183096+cx4*gamma_aa[index]*t183031*t183060*t183034*t183053*4.0+cx3*gx*t183031*t183052*t183070*t183036* \
                   3.0-cx3*gamma_aa[index]*gx*t183031*t183052*t183036*t183090*t183089)+c0*t183083*(omega*t183012*t183082* \
                   (omega*t183012*t183082*(t183080*t183107*t183081*(1.0/2.0)+t183101*t183102*t183017*t183107*(2.475880078570761E27/ \
                   1.4000771998813E29)-t183107*t183081*1.0/(t183077*t183077)*t183078*t183079*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)+omega*t183012*t183113*t183114*t183107*(3.5184372088832E13/ \
                   3.74176054803257E14)+1.0/sqrt(3.141592653589793)*t183115*t183107*t183116*t183081*1.0/pow(t183077,3.0/ \
                   2.0)*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/1.122528164409771E15)-omega* \
                   t183012*t183120*t183114*t183107*(1.40737488355328E14/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]* \
                   gx*t183030*t183064+cx2*t183031*t183052*t183035*t183075+cx4*t183060*t183034*t183043*t183053+cx3*gamma_aa[index]* \
                   gx*t183031*t183052*t183070*t183036);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t178246 = 1.0/pow(rho_a[index],1.0/3.0);
                double t178247 = c*t178246;
                double t178248 = sqrt(t178247);
                double t178249 = pow(t178247,3.0/2.0);
                double t178250 = c*c;
                double t178251 = 1.0/pow(rho_a[index],2.0/3.0);
                double t178252 = 1.0/c0p;
                double t178253 = b1p*t178248;
                double t178254 = b3p*t178249;
                double t178255 = b4p*t178250*t178251;
                double t178256 = b2p*c*t178246;
                double t178257 = t178253+t178254+t178255+t178256;
                double t178258 = 1.0/t178257;
                double t178259 = t178252*t178258*(1.0/2.0);
                double t178260 = t178259+1.0;
                double t178261 = log(t178260);
                double t178262 = a1p*c*t178246;
                double t178263 = t178262+1.0;
                double t178264 = pow(2.0,1.0/3.0);
                double t178265 = t178264*2.0;
                double t178266 = t178265-2.0;
                double t178267 = two_13*2.0;
                double t178268 = t178267-2.0;
                double t178269 = 1.0/t178268;
                double t178270 = 1.0/c0f;
                double t178271 = 1.0/pow(rho_b[index],1.0/3.0);
                double t178272 = c*t178271;
                double t178273 = sqrt(t178272);
                double t178274 = pow(t178272,3.0/2.0);
                double t178275 = 1.0/pow(rho_b[index],2.0/3.0);
                double t178276 = b1p*t178273;
                double t178277 = b3p*t178274;
                double t178278 = b4p*t178250*t178275;
                double t178279 = b2p*c*t178271;
                double t178280 = t178276+t178277+t178278+t178279;
                double t178281 = 1.0/t178280;
                double t178282 = t178252*t178281*(1.0/2.0);
                double t178283 = t178282+1.0;
                double t178284 = log(t178283);
                double t178285 = a1p*c*t178271;
                double t178286 = t178285+1.0;
                double t178287 = c0p*t178284*t178286*2.0;
                double t178288 = rho_a[index]+rho_b[index];
                double t178289 = 1.0/pow(t178288,1.0/3.0);
                double t178290 = c*t178289;
                double t178291 = sqrt(t178290);
                double t178292 = pow(t178290,3.0/2.0);
                double t178293 = 1.0/pow(t178288,2.0/3.0);
                double t178294 = b1p*t178291;
                double t178295 = b3p*t178292;
                double t178296 = b4p*t178250*t178293;
                double t178297 = b2p*c*t178289;
                double t178298 = t178294+t178295+t178296+t178297;
                double t178299 = 1.0/t178298;
                double t178300 = t178252*t178299*(1.0/2.0);
                double t178301 = t178300+1.0;
                double t178302 = log(t178301);
                double t178303 = a1p*c*t178289;
                double t178304 = t178303+1.0;
                double t178305 = c0p*t178302*t178304*2.0;
                double t178306 = rho_a[index]-rho_b[index];
                double t178307 = t178306*t178306;
                double t178308 = 1.0/t178288;
                double t178309 = t178306*t178308;
                double t178310 = 1.0/(t178288*t178288*t178288*t178288);
                double t178311 = t178307*t178307;
                double t178312 = t178309+1.0;
                double t178313 = pow(t178312,4.0/3.0);
                double t178314 = -t178309+1.0;
                double t178315 = pow(t178314,4.0/3.0);
                double t178316 = t178313+t178315-2.0;
                double t178317 = 1.0/pow(rho_b[index],8.0/3.0);
                double t178318 = 1.0/pow(rho_a[index],8.0/3.0);
                double t178319 = gamma_aa[index]*t178318*(1.0/2.0);
                double t178320 = gamma_bb[index]*t178317*(1.0/2.0);
                double t178321 = t178320+t178319;
                double t178322 = gcab*t178321;
                double t178323 = t178322+1.0;
                double t178324 = gcab*gcab;
                double t178325 = t178321*t178321;
                double t178326 = t178324*t178324;
                double t178327 = t178325*t178325;
                double t178328 = t178324*t178325;
                double t178329 = gcab*t178321*2.0;
                double t178330 = t178328+t178329+1.0;
                double t178331 = t178324*t178325*3.0;
                double t178332 = gcab*t178321*t178324*t178325;
                double t178333 = gcab*t178321*3.0;
                double t178334 = t178331+t178332+t178333+1.0;
                double t178335 = t178324*t178325*6.0;
                double t178336 = gcab*t178321*t178324*t178325*4.0;
                double t178337 = t178326*t178327;
                double t178338 = gcab*t178321*4.0;
                double t178339 = t178335+t178336+t178337+t178338+1.0;
                double t178340 = c0p*t178261*t178263*2.0;
                double t178341 = b1f*t178273;
                double t178342 = b3f*t178274;
                double t178343 = b4f*t178250*t178275;
                double t178344 = b2f*c*t178271;
                double t178345 = t178341+t178342+t178343+t178344;
                double t178346 = 1.0/t178345;
                double t178347 = t178270*t178346*(1.0/2.0);
                double t178348 = t178347+1.0;
                double t178349 = log(t178348);
                double t178350 = a1f*c*t178271;
                double t178351 = t178350+1.0;
                double t178352 = t178287-c0f*t178351*t178349*2.0;
                double t178353 = t178287-t178352*t178266*t178269;
                double t178354 = gamma_bb[index]*gamma_bb[index];
                double t178355 = gcaa*gcaa;
                double t178356 = t178355*t178355;
                double t178357 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t178358 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t178359 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t178360 = gamma_bb[index]*gcaa*t178317;
                double t178361 = t178360+1.0;
                double t178362 = gamma_bb[index]*gcaa*t178317*3.0;
                double t178363 = gamma_bb[index]*gcaa*t178354*t178355*t178359;
                double t178364 = t178354*t178355*t178358*3.0;
                double t178365 = t178362+t178363+t178364+1.0;
                double t178366 = t178354*t178354;
                double t178367 = gamma_bb[index]*gcaa*t178317*4.0;
                double t178368 = gamma_bb[index]*gcaa*t178354*t178355*t178359*4.0;
                double t178369 = t178354*t178355*t178358*6.0;
                double t178370 = t178356*t178357*t178366;
                double t178371 = t178370+t178367+t178368+t178369+1.0;
                double t178372 = gamma_bb[index]*gcaa*t178317*2.0;
                double t178373 = t178354*t178355*t178358;
                double t178374 = t178372+t178373+1.0;
                double t178375 = gx*gx;
                double t178376 = t178375*t178375;
                double t178377 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t178378 = gamma_bb[index]*gx*t178317*4.0;
                double t178379 = gamma_bb[index]*gx*t178354*t178375*t178359*4.0;
                double t178380 = t178354*t178375*t178358*6.0;
                double t178381 = t178357*t178366*t178376;
                double t178382 = t178380+t178381+t178378+t178379+1.0;
                double t178383 = 1.0/t178382;
                double t178384 = cx4*t178383*t178357*t178366*t178376*(4.190715359480463E15/2.251799813685248E15);
                double t178385 = gamma_bb[index]*gx*t178317;
                double t178386 = t178385+1.0;
                double t178387 = 1.0/t178386;
                double t178388 = cx1*gamma_bb[index]*gx*t178317*t178387*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178389 = gamma_bb[index]*gx*t178317*3.0;
                double t178390 = gamma_bb[index]*gx*t178354*t178375*t178359;
                double t178391 = t178354*t178375*t178358*3.0;
                double t178392 = t178390+t178391+t178389+1.0;
                double t178393 = 1.0/t178392;
                double t178394 = cx3*gamma_bb[index]*gx*t178354*t178375*t178393*t178359*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178395 = gamma_bb[index]*gx*t178317*2.0;
                double t178396 = t178354*t178375*t178358;
                double t178397 = t178395+t178396+1.0;
                double t178398 = 1.0/t178397;
                double t178399 = cx2*t178354*t178375*t178358*t178398*(4.190715359480463E15/2.251799813685248E15);
                double t178400 = t178384+t178394+t178377+t178388+t178399;
                double t178401 = 1.0/(omega*omega);
                double t178402 = pow(rho_b[index],2.0/3.0);
                double t178403 = 1.0/t178400;
                double t178407 = t178401*t178402*t178403*(1.4000771998813E29/4.951760157141521E27);
                double t178404 = exp(-t178407);
                double t178405 = sqrt(t178400);
                double t178406 = pow(rho_b[index],4.0/3.0);
                double t178408 = 1.0/(t178386*t178386);
                double t178409 = gx*t178317*3.0;
                double t178410 = gamma_bb[index]*t178375*t178358*6.0;
                double t178411 = gx*t178354*t178375*t178359*3.0;
                double t178412 = t178410+t178411+t178409;
                double t178413 = 1.0/(t178392*t178392);
                double t178414 = gx*t178317*4.0;
                double t178415 = gamma_bb[index]*t178375*t178358*1.2E1;
                double t178416 = gx*t178354*t178375*t178359*1.2E1;
                double t178417 = gamma_bb[index]*t178354*t178357*t178376*4.0;
                double t178418 = t178414+t178415+t178416+t178417;
                double t178419 = 1.0/(t178382*t178382);
                double t178420 = gx*t178317*2.0;
                double t178421 = gamma_bb[index]*t178375*t178358*2.0;
                double t178422 = t178420+t178421;
                double t178423 = 1.0/(t178397*t178397);
                double t178424 = omega*omega;
                double t178425 = t178404-1.0;
                double t178426 = cx1*gx*t178317*t178387*(4.190715359480463E15/2.251799813685248E15);
                double t178427 = cx4*gamma_bb[index]*t178354*t178383*t178357*t178376*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t178428 = cx2*gamma_bb[index]*t178375*t178358*t178398*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t178429 = cx3*gx*t178354*t178375*t178393*t178359*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t178431 = cx1*gamma_bb[index]*t178408*t178375*t178358*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178432 = cx3*gamma_bb[index]*gx*t178412*t178413*t178354*t178375*t178359*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t178433 = cx4*t178418*t178419*t178357*t178366*t178376*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178434 = cx2*t178422*t178423*t178354*t178375*t178358*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t178430 = -t178431-t178432-t178433-t178434+t178426+t178427+t178428+t178429;
                double t178435 = t178400*t178424*t178425*t178275*(2.475880078570761E27/1.4000771998813E29);
                double t178436 = -t178404+t178435+3.0/2.0;
                double t178437 = 1.0/sqrt(t178400);
                double t178438 = 1.0/omega;
                double t178439 = pow(rho_b[index],1.0/3.0);
                double t178440 = t178437*t178438*t178439*(3.74176054803257E14/7.0368744177664E13);
                double t178441 = erf(t178440);
                double t178442 = t178441*(3.991211251234741E15/2.251799813685248E15);
                double t178443 = t178442-omega*t178405*t178271*t178436*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_bb_[index] = (rho_b[index]*t178353+rho_a[index]*(t178340-t178266*t178269*(t178340-c0f*log((t178270* \
                   (1.0/2.0))/(b1f*t178248+b3f*t178249+b2f*c*t178246+b4f*t178250*t178251)+1.0)*(a1f*c*t178246+1.0)*2.0) \
                   )-t178288*(t178305-t178310*t178311*t178316*t178269*(t178305-c0f*log((t178270*(1.0/2.0))/(b1f*t178291+ \
                   b3f*t178292+b2f*c*t178289+b4f*t178250*t178293)+1.0)*(a1f*c*t178289+1.0)*2.0)+(Aa*t178316*t178269*log((1.0/ \
                   2.0)/(Aa*(b1a*t178291+b3a*t178292+b2a*c*t178289+b4a*t178250*t178293))+1.0)*(t178310*t178311-1.0)*(a1a* \
                   c*t178289+1.0)*2.0)/d2fz0))*((ccab1*gcab*t178317*(1.0/2.0))/t178323-ccab4*t178326*t178327*1.0/(t178339* \
                   t178339)*(gcab*t178317*2.0+t178321*t178324*t178317*6.0+gcab*t178324*t178325*t178317*6.0+t178321*t178325* \
                   t178317*t178326*2.0)-ccab2*1.0/(t178330*t178330)*t178324*t178325*(gcab*t178317+t178321*t178324*t178317) \
                   +(ccab2*t178321*t178324*t178317)/t178330-ccab1*t178321*1.0/(t178323*t178323)*t178324*t178317*(1.0/ \
                   2.0)+(ccab3*gcab*t178324*t178325*t178317*(3.0/2.0))/t178334+(ccab4*t178321*t178325*t178317*t178326* \
                   2.0)/t178339-ccab3*gcab*t178321*t178324*t178325*1.0/(t178334*t178334)*(gcab*t178317*(3.0/2.0)+t178321* \
                   t178324*t178317*3.0+gcab*t178324*t178325*t178317*(3.0/2.0)))-rho_b[index]*t178353*((ccaa1*gcaa*t178317) \
                   /t178361-ccaa1*gamma_bb[index]*1.0/(t178361*t178361)*t178355*t178358+(ccaa2*gamma_bb[index]*t178355* \
                   t178358*2.0)/t178374-ccaa2*t178354*t178355*1.0/(t178374*t178374)*t178358*(gcaa*t178317*2.0+gamma_bb[index]* \
                   t178355*t178358*2.0)+(ccaa4*gamma_bb[index]*t178354*t178356*t178357*4.0)/t178371+(ccaa3*gcaa*t178354* \
                   t178355*t178359*3.0)/t178365-ccaa4*1.0/(t178371*t178371)*t178356*t178357*t178366*(gcaa*t178317*4.0+ \
                   gamma_bb[index]*t178355*t178358*1.2E1+gamma_bb[index]*t178354*t178356*t178357*4.0+gcaa*t178354*t178355* \
                   t178359*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t178354*t178355*1.0/(t178365*t178365)*t178359*(gcaa*t178317* \
                   3.0+gamma_bb[index]*t178355*t178358*6.0+gcaa*t178354*t178355*t178359*3.0))-c0*t178406*(omega*t178405* \
                   t178271*t178443*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*gx*t178317*t178387-cx1*gamma_bb[index]* \
                   t178408*t178375*t178358+cx2*gamma_bb[index]*t178375*t178358*t178398*2.0-cx2*t178422*t178423*t178354* \
                   t178375*t178358-cx4*t178418*t178419*t178357*t178366*t178376+cx4*gamma_bb[index]*t178354*t178383*t178357* \
                   t178376*4.0+cx3*gx*t178354*t178375*t178393*t178359*3.0-cx3*gamma_bb[index]*gx*t178412*t178413*t178354* \
                   t178375*t178359)+c0*t178406*(omega*t178405*t178271*(omega*t178405*t178271*(t178403*t178430*t178404* \
                   (1.0/2.0)+t178430*t178424*t178425*t178275*(2.475880078570761E27/1.4000771998813E29)-1.0/(t178400*t178400) \
                   *t178401*t178402*t178430*t178404*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t178430*t178271*t178436*t178437*(3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793) \
                   *1.0/pow(t178400,3.0/2.0)*t178430*t178404*t178438*t178439*(1.493415679873386E30/1.584563250285287E29) \
                   )*(2.81474976710656E14/1.122528164409771E15)-omega*t178430*t178271*t178443*t178437*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx0+cx1*gamma_bb[index]*gx*t178317*t178387+cx2*t178354*t178375*t178358*t178398+ \
                   cx4*t178383*t178357*t178366*t178376+cx3*gamma_bb[index]*gx*t178354*t178375*t178393*t178359);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t181919 = 1.0/pow(rho_b[index],1.0/3.0);
                double t181920 = c*t181919;
                double t181921 = sqrt(t181920);
                double t181922 = pow(t181920,3.0/2.0);
                double t181923 = c*c;
                double t181924 = 1.0/pow(rho_b[index],2.0/3.0);
                double t181925 = 1.0/c0p;
                double t181926 = b1p*t181921;
                double t181927 = b3p*t181922;
                double t181928 = b4p*t181923*t181924;
                double t181929 = b2p*c*t181919;
                double t181930 = t181926+t181927+t181928+t181929;
                double t181931 = 1.0/t181930;
                double t181932 = t181931*t181925*(1.0/2.0);
                double t181933 = t181932+1.0;
                double t181934 = log(t181933);
                double t181935 = a1p*c*t181919;
                double t181936 = t181935+1.0;
                double t181937 = 1.0/pow(rho_b[index],8.0/3.0);
                double t181938 = gamma_bb[index]*gamma_bb[index];
                double t181939 = gcaa*gcaa;
                double t181940 = t181939*t181939;
                double t181941 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t181942 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t181943 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t181944 = gamma_bb[index]*gcaa*t181937;
                double t181945 = t181944+1.0;
                double t181946 = gamma_bb[index]*gcaa*t181937*3.0;
                double t181947 = gamma_bb[index]*gcaa*t181943*t181938*t181939;
                double t181948 = t181942*t181938*t181939*3.0;
                double t181949 = t181946+t181947+t181948+1.0;
                double t181950 = t181938*t181938;
                double t181951 = gamma_bb[index]*gcaa*t181937*4.0;
                double t181952 = gamma_bb[index]*gcaa*t181943*t181938*t181939*4.0;
                double t181953 = t181942*t181938*t181939*6.0;
                double t181954 = t181940*t181941*t181950;
                double t181955 = t181951+t181952+t181953+t181954+1.0;
                double t181956 = gamma_bb[index]*gcaa*t181937*2.0;
                double t181957 = t181942*t181938*t181939;
                double t181958 = t181956+t181957+1.0;
                double t181959 = gx*gx;
                double t181960 = t181959*t181959;
                double t181961 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t181962 = gamma_bb[index]*gx*t181937*4.0;
                double t181963 = gamma_bb[index]*gx*t181943*t181938*t181959*4.0;
                double t181964 = t181942*t181938*t181959*6.0;
                double t181965 = t181941*t181950*t181960;
                double t181966 = t181962+t181963+t181964+t181965+1.0;
                double t181967 = 1.0/t181966;
                double t181968 = cx4*t181941*t181950*t181960*t181967*(4.190715359480463E15/2.251799813685248E15);
                double t181969 = gamma_bb[index]*gx*t181937;
                double t181970 = t181969+1.0;
                double t181971 = 1.0/t181970;
                double t181972 = cx1*gamma_bb[index]*gx*t181971*t181937*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181973 = gamma_bb[index]*gx*t181937*3.0;
                double t181974 = gamma_bb[index]*gx*t181943*t181938*t181959;
                double t181975 = t181942*t181938*t181959*3.0;
                double t181976 = t181973+t181974+t181975+1.0;
                double t181977 = 1.0/t181976;
                double t181978 = cx3*gamma_bb[index]*gx*t181943*t181938*t181959*t181977*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181979 = gamma_bb[index]*gx*t181937*2.0;
                double t181980 = t181942*t181938*t181959;
                double t181981 = t181980+t181979+1.0;
                double t181982 = 1.0/t181981;
                double t181983 = cx2*t181942*t181982*t181938*t181959*(4.190715359480463E15/2.251799813685248E15);
                double t181984 = t181961+t181972+t181983+t181968+t181978;
                double t181985 = 1.0/(omega*omega);
                double t181986 = pow(rho_b[index],2.0/3.0);
                double t181987 = 1.0/t181984;
                double t181991 = t181985*t181986*t181987*(1.4000771998813E29/4.951760157141521E27);
                double t181988 = exp(-t181991);
                double t181989 = sqrt(t181984);
                double t181990 = pow(rho_b[index],4.0/3.0);
                double t181992 = 1.0/(t181970*t181970);
                double t181993 = gx*t181937*3.0;
                double t181994 = gamma_bb[index]*t181942*t181959*6.0;
                double t181995 = gx*t181943*t181938*t181959*3.0;
                double t181996 = t181993+t181994+t181995;
                double t181997 = 1.0/(t181976*t181976);
                double t181998 = gx*t181937*4.0;
                double t181999 = gamma_bb[index]*t181942*t181959*1.2E1;
                double t182000 = gx*t181943*t181938*t181959*1.2E1;
                double t182001 = gamma_bb[index]*t181941*t181960*t181938*4.0;
                double t182002 = t182000+t182001+t181998+t181999;
                double t182003 = 1.0/(t181966*t181966);
                double t182004 = gx*t181937*2.0;
                double t182005 = gamma_bb[index]*t181942*t181959*2.0;
                double t182006 = t182004+t182005;
                double t182007 = 1.0/(t181981*t181981);
                double t182008 = omega*omega;
                double t182009 = t181988-1.0;
                double t182010 = cx1*gx*t181971*t181937*(4.190715359480463E15/2.251799813685248E15);
                double t182011 = cx4*gamma_bb[index]*t181941*t181960*t181938*t181967*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t182012 = cx2*gamma_bb[index]*t181942*t181982*t181959*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182013 = cx3*gx*t181943*t181938*t181959*t181977*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t182015 = cx1*gamma_bb[index]*t181942*t181992*t181959*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182016 = cx3*gamma_bb[index]*gx*t181943*t181938*t181959*t181996*t181997*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182017 = cx4*t182002*t182003*t181941*t181950*t181960*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182018 = cx2*t182006*t182007*t181942*t181938*t181959*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182014 = t182010+t182011+t182012+t182013-t182015-t182016-t182017-t182018;
                double t182019 = t182008*t182009*t181924*t181984*(2.475880078570761E27/1.4000771998813E29);
                double t182020 = t182019-t181988+3.0/2.0;
                double t182021 = 1.0/sqrt(t181984);
                double t182022 = 1.0/omega;
                double t182023 = pow(rho_b[index],1.0/3.0);
                double t182024 = t182021*t182022*t182023*(3.74176054803257E14/7.0368744177664E13);
                double t182025 = erf(t182024);
                double t182026 = t182025*(3.991211251234741E15/2.251799813685248E15);
                double t182027 = t182026-omega*t182020*t181919*t181989*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t181921+ \
                   b3f*t181922+b2f*c*t181919+b4f*t181923*t181924))+1.0)*(a1f*c*t181919+1.0)*2.0-c0p*t181934*t181936*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t181934*t181936*2.0)*((ccaa1*gcaa*t181937)/t181945-ccaa1*gamma_bb[index]*t181942* \
                   1.0/(t181945*t181945)*t181939+(ccaa2*gamma_bb[index]*t181942*t181939*2.0)/t181958-ccaa2*t181942*t181938* \
                   t181939*1.0/(t181958*t181958)*(gcaa*t181937*2.0+gamma_bb[index]*t181942*t181939*2.0)+(ccaa4*gamma_bb[index]* \
                   t181940*t181941*t181938*4.0)/t181955+(ccaa3*gcaa*t181943*t181938*t181939*3.0)/t181949-ccaa4*t181940* \
                   t181941*t181950*1.0/(t181955*t181955)*(gcaa*t181937*4.0+gamma_bb[index]*t181942*t181939*1.2E1+gamma_bb[index]* \
                   t181940*t181941*t181938*4.0+gcaa*t181943*t181938*t181939*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t181943* \
                   t181938*t181939*1.0/(t181949*t181949)*(gcaa*t181937*3.0+gamma_bb[index]*t181942*t181939*6.0+gcaa*t181943* \
                   t181938*t181939*3.0))-c0*t181990*(omega*t182027*t181919*t181989*(2.81474976710656E14/1.122528164409771E15) \
                   -1.0)*(cx1*gx*t181971*t181937-cx1*gamma_bb[index]*t181942*t181992*t181959+cx2*gamma_bb[index]*t181942* \
                   t181982*t181959*2.0-cx2*t182006*t182007*t181942*t181938*t181959-cx4*t182002*t182003*t181941*t181950* \
                   t181960+cx4*gamma_bb[index]*t181941*t181960*t181938*t181967*4.0+cx3*gx*t181943*t181938*t181959*t181977* \
                   3.0-cx3*gamma_bb[index]*gx*t181943*t181938*t181959*t181996*t181997)+c0*t181990*(omega*t181919*t181989* \
                   (omega*t181919*t181989*(t182014*t181987*t181988*(1.0/2.0)+t182014*t182008*t182009*t181924*(2.475880078570761E27/ \
                   1.4000771998813E29)-t182014*1.0/(t181984*t181984)*t181985*t181986*t181988*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)+omega*t182020*t182021*t182014*t181919*(3.5184372088832E13/ \
                   3.74176054803257E14)+1.0/sqrt(3.141592653589793)*t182022*t182014*t182023*1.0/pow(t181984,3.0/2.0)* \
                   t181988*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/1.122528164409771E15)-omega* \
                   t182021*t182014*t182027*t181919*(1.40737488355328E14/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]* \
                   gx*t181971*t181937+cx2*t181942*t181982*t181938*t181959+cx4*t181941*t181950*t181960*t181967+cx3*gamma_bb[index]* \
                   gx*t181943*t181938*t181959*t181977);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t178447 = rho_a[index]+rho_b[index];
            double t178448 = 1.0/pow(t178447,1.0/3.0);
            double t178449 = c*t178448;
            double t178450 = sqrt(t178449);
            double t178451 = b1p*t178450;
            double t178452 = pow(t178449,3.0/2.0);
            double t178453 = b3p*t178452;
            double t178454 = c*c;
            double t178455 = 1.0/pow(t178447,2.0/3.0);
            double t178456 = b4p*t178454*t178455;
            double t178457 = b2p*c*t178448;
            double t178458 = t178451+t178453+t178456+t178457;
            double t178459 = 1.0/pow(t178447,4.0/3.0);
            double t178460 = 1.0/c0p;
            double t178461 = 1.0/t178458;
            double t178462 = t178460*t178461*(1.0/2.0);
            double t178463 = t178462+1.0;
            double t178464 = a1p*c*t178448;
            double t178465 = t178464+1.0;
            double t178466 = rho_a[index]-rho_b[index];
            double t178467 = t178466*t178466;
            double t178468 = 1.0/t178447;
            double t178469 = t178466*t178468;
            double t178470 = two_13*2.0;
            double t178471 = t178470-2.0;
            double t178472 = 1.0/t178471;
            double t178473 = 1.0/c0f;
            double t178474 = b1f*t178450;
            double t178475 = b3f*t178452;
            double t178476 = b4f*t178454*t178455;
            double t178477 = b2f*c*t178448;
            double t178478 = t178474+t178475+t178476+t178477;
            double t178479 = 1.0/t178478;
            double t178480 = t178473*t178479*(1.0/2.0);
            double t178481 = t178480+1.0;
            double t178482 = log(t178481);
            double t178483 = a1f*c*t178448;
            double t178484 = t178483+1.0;
            double t178485 = log(t178463);
            double t178495 = c0f*t178482*t178484*2.0;
            double t178496 = c0p*t178465*t178485*2.0;
            double t178486 = t178495-t178496;
            double t178487 = t178469+1.0;
            double t178488 = pow(t178487,4.0/3.0);
            double t178489 = -t178469+1.0;
            double t178490 = pow(t178489,4.0/3.0);
            double t178491 = t178490+t178488-2.0;
            double t178492 = 1.0/(t178447*t178447);
            double t178523 = t178492*t178466;
            double t178493 = -t178523+t178468;
            double t178494 = 1.0/(t178447*t178447*t178447*t178447);
            double t178497 = t178467*t178467;
            double t178498 = 1.0/pow(t178447,5.0/3.0);
            double t178499 = 1.0/sqrt(t178449);
            double t178500 = 1.0/t178463;
            double t178501 = 1.0/(t178458*t178458);
            double t178502 = b4p*t178454*t178498*(2.0/3.0);
            double t178503 = b2p*c*t178459*(1.0/3.0);
            double t178504 = b1p*c*t178459*t178499*(1.0/6.0);
            double t178505 = b3p*c*t178450*t178459*(1.0/2.0);
            double t178506 = t178502+t178503+t178504+t178505;
            double t178507 = t178500*t178501*t178506*t178465;
            double t178508 = 1.0/(t178447*t178447*t178447*t178447*t178447);
            double t178509 = 1.0/d2fz0;
            double t178510 = 1.0/Aa;
            double t178511 = b1a*t178450;
            double t178512 = b3a*t178452;
            double t178513 = b4a*t178454*t178455;
            double t178514 = b2a*c*t178448;
            double t178515 = t178511+t178512+t178513+t178514;
            double t178516 = 1.0/t178515;
            double t178517 = t178510*t178516*(1.0/2.0);
            double t178518 = t178517+1.0;
            double t178519 = log(t178518);
            double t178520 = a1a*c*t178448;
            double t178521 = t178520+1.0;
            double t178522 = pow(t178487,1.0/3.0);
            double t178524 = t178522*t178493*(4.0/3.0);
            double t178525 = pow(t178489,1.0/3.0);
            double t178600 = t178525*t178493*(4.0/3.0);
            double t178526 = -t178600+t178524;
            double t178527 = t178494*t178497;
            double t178528 = t178527-1.0;
            double t178529 = 1.0/pow(rho_a[index],1.0/3.0);
            double t178530 = c*t178529;
            double t178531 = sqrt(t178530);
            double t178532 = b1f*t178531;
            double t178533 = pow(t178530,3.0/2.0);
            double t178534 = b3f*t178533;
            double t178535 = 1.0/pow(rho_a[index],2.0/3.0);
            double t178536 = b4f*t178454*t178535;
            double t178537 = b2f*c*t178529;
            double t178538 = t178532+t178534+t178536+t178537;
            double t178539 = 1.0/pow(rho_a[index],4.0/3.0);
            double t178540 = b1p*t178531;
            double t178541 = b3p*t178533;
            double t178542 = b4p*t178454*t178535;
            double t178543 = b2p*c*t178529;
            double t178544 = t178540+t178541+t178542+t178543;
            double t178545 = 1.0/pow(rho_a[index],5.0/3.0);
            double t178546 = 1.0/sqrt(t178530);
            double t178547 = 1.0/t178538;
            double t178548 = t178473*t178547*(1.0/2.0);
            double t178549 = t178548+1.0;
            double t178550 = 1.0/t178544;
            double t178551 = t178460*t178550*(1.0/2.0);
            double t178552 = t178551+1.0;
            double t178553 = a1p*c*t178529;
            double t178554 = t178553+1.0;
            double t178555 = 1.0/t178552;
            double t178556 = 1.0/(t178544*t178544);
            double t178557 = b4p*t178454*t178545*(2.0/3.0);
            double t178558 = b2p*c*t178539*(1.0/3.0);
            double t178559 = b1p*c*t178546*t178539*(1.0/6.0);
            double t178560 = b3p*c*t178531*t178539*(1.0/2.0);
            double t178561 = t178560+t178557+t178558+t178559;
            double t178562 = t178561*t178554*t178555*t178556;
            double t178563 = log(t178552);
            double t178564 = pow(2.0,1.0/3.0);
            double t178565 = t178564*2.0;
            double t178566 = t178565-2.0;
            double t178567 = log(t178549);
            double t178568 = a1f*c*t178529;
            double t178569 = t178568+1.0;
            double t178570 = gcab*gcab;
            double t178574 = 1.0/pow(rho_a[index],8.0/3.0);
            double t178575 = gamma_aa[index]*t178574*(1.0/2.0);
            double t178576 = 1.0/pow(rho_b[index],8.0/3.0);
            double t178577 = gamma_bb[index]*t178576*(1.0/2.0);
            double t178571 = t178575+t178577;
            double t178572 = t178571*t178571;
            double t178573 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t178578 = t178570*t178570;
            double t178579 = t178572*t178572;
            double t178580 = t178570*t178572*6.0;
            double t178581 = gcab*t178570*t178571*t178572*4.0;
            double t178582 = t178578*t178579;
            double t178583 = gcab*t178571*4.0;
            double t178584 = t178580+t178581+t178582+t178583+1.0;
            double t178585 = gcab*t178571;
            double t178586 = t178585+1.0;
            double t178587 = t178570*t178572;
            double t178588 = gcab*t178571*2.0;
            double t178589 = t178587+t178588+1.0;
            double t178590 = t178570*t178572*3.0;
            double t178591 = gcab*t178570*t178571*t178572;
            double t178592 = gcab*t178571*3.0;
            double t178593 = t178590+t178591+t178592+1.0;
            double t178594 = 1.0/t178589;
            double t178595 = 1.0/t178593;
            double t178596 = 1.0/t178586;
            double t178597 = 1.0/t178584;
            double t178598 = 1.0/pow(t178447,7.0/3.0);
            double t178599 = 1.0/pow(t178447,8.0/3.0);
            double t178601 = 1.0/t178481;
            double t178602 = 1.0/(t178478*t178478);
            double t178603 = b4f*t178454*t178498*(2.0/3.0);
            double t178604 = b2f*c*t178459*(1.0/3.0);
            double t178605 = b1f*c*t178459*t178499*(1.0/6.0);
            double t178606 = b3f*c*t178450*t178459*(1.0/2.0);
            double t178607 = t178603+t178604+t178605+t178606;
            double t178608 = a1f*c*c0f*t178482*t178459*(2.0/3.0);
            double t178610 = t178601*t178602*t178607*t178484;
            double t178611 = a1p*c*c0p*t178485*t178459*(2.0/3.0);
            double t178609 = -t178610-t178611+t178507+t178608;
            double t178612 = t178506*t178506;
            double t178613 = 1.0/pow(t178449,3.0/2.0);
            double t178614 = b4p*t178454*t178599*(1.0E1/9.0);
            double t178615 = b2p*c*t178598*(4.0/9.0);
            double t178616 = b1p*c*t178499*t178598*(2.0/9.0);
            double t178617 = b3p*c*t178450*t178598*(2.0/3.0);
            double t178618 = b3p*t178454*t178499*t178599*(1.0/1.2E1);
            double t178619 = t178614+t178615+t178616+t178617+t178618-b1p*t178613*t178454*t178599*(1.0/3.6E1);
            double t178620 = 1.0/(t178458*t178458*t178458);
            double t178621 = t178500*t178620*t178612*t178465*2.0;
            double t178622 = t178607*t178607;
            double t178623 = 1.0/(t178463*t178463);
            double t178624 = 1.0/(t178458*t178458*t178458*t178458);
            double t178625 = t178610+t178611-t178507-t178608;
            double t178626 = t178492*2.0;
            double t178627 = 1.0/(t178447*t178447*t178447);
            double t178634 = t178627*t178466*2.0;
            double t178628 = -t178634+t178626;
            double t178629 = t178493*t178493;
            double t178630 = a1p*c*c0p*t178485*t178598*(8.0/9.0);
            double t178631 = 1.0/(t178447*t178447*t178447*t178447*t178447*t178447);
            double t178632 = t178508*t178497*4.0;
            double t178642 = t178466*t178467*t178494*4.0;
            double t178633 = t178632-t178642;
            double t178635 = t178525*t178628*(4.0/3.0);
            double t178636 = 1.0/pow(t178487,2.0/3.0);
            double t178637 = t178636*t178629*(4.0/9.0);
            double t178638 = 1.0/pow(t178489,2.0/3.0);
            double t178639 = t178629*t178638*(4.0/9.0);
            double t178640 = t178635+t178637+t178639-t178522*t178628*(4.0/3.0);
            double t178641 = 1.0/t178518;
            double t178643 = 1.0/(t178515*t178515);
            double t178644 = b4a*t178454*t178498*(2.0/3.0);
            double t178645 = b2a*c*t178459*(1.0/3.0);
            double t178646 = b1a*c*t178459*t178499*(1.0/6.0);
            double t178647 = b3a*c*t178450*t178459*(1.0/2.0);
            double t178648 = t178644+t178645+t178646+t178647;
            double t178649 = t178648*t178648;
            double t178650 = t178500*t178501*t178465*t178619;
            double t178651 = 1.0/t178549;
            double t178652 = b4f*t178454*t178545*(2.0/3.0);
            double t178653 = b2f*c*t178539*(1.0/3.0);
            double t178654 = b1f*c*t178546*t178539*(1.0/6.0);
            double t178655 = b3f*c*t178531*t178539*(1.0/2.0);
            double t178656 = t178652+t178653+t178654+t178655;
            double t178657 = 1.0/(t178538*t178538);
            double t178658 = 1.0/pow(rho_a[index],7.0/3.0);
            double t178659 = 1.0/pow(t178530,3.0/2.0);
            double t178660 = t178656*t178656;
            double t178661 = t178561*t178561;
            double t178662 = 1.0/(t178544*t178544*t178544);
            double t178663 = t178661*t178554*t178662*t178555*2.0;
            double t178664 = b4p*t178454*t178574*(1.0E1/9.0);
            double t178665 = b2p*c*t178658*(4.0/9.0);
            double t178666 = b3p*t178454*t178546*t178574*(1.0/1.2E1);
            double t178667 = b1p*c*t178546*t178658*(2.0/9.0);
            double t178668 = b3p*c*t178531*t178658*(2.0/3.0);
            double t178786 = b1p*t178454*t178574*t178659*(1.0/3.6E1);
            double t178669 = t178664+t178665+t178666+t178667+t178668-t178786;
            double t178670 = 1.0/(t178552*t178552);
            double t178671 = 1.0/(t178544*t178544*t178544*t178544);
            double t178672 = a1p*c*c0p*t178563*t178658*(8.0/9.0);
            double t178673 = a1f*c*c0f*t178539*t178567*(2.0/3.0);
            double t178674 = a1p*c*c0p*t178563*t178539*(2.0/3.0);
            double t178675 = t178612*t178460*t178623*t178624*t178465*(1.0/2.0);
            double t178747 = t178651*t178656*t178657*t178569;
            double t178676 = t178562+t178673-t178674-t178747;
            double t178677 = gamma_aa[index]*gamma_aa[index];
            double t178678 = gcaa*gcaa;
            double t178679 = t178677*t178677;
            double t178680 = t178678*t178678;
            double t178681 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t178682 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t178683 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t178684 = c0f*t178567*t178569*2.0;
            double t178686 = c0p*t178554*t178563*2.0;
            double t178685 = t178684-t178686;
            double t178687 = 1.0/pow(rho_b[index],1.0/3.0);
            double t178688 = c*t178687;
            double t178689 = sqrt(t178688);
            double t178690 = pow(t178688,3.0/2.0);
            double t178691 = 1.0/pow(rho_b[index],2.0/3.0);
            double t178692 = b1p*t178689;
            double t178693 = b3p*t178690;
            double t178694 = b4p*t178454*t178691;
            double t178695 = b2p*c*t178687;
            double t178696 = t178692+t178693+t178694+t178695;
            double t178697 = 1.0/t178696;
            double t178698 = t178460*t178697*(1.0/2.0);
            double t178699 = t178698+1.0;
            double t178700 = log(t178699);
            double t178701 = a1p*c*t178687;
            double t178702 = t178701+1.0;
            double t178703 = c0p*t178700*t178702*2.0;
            double t178704 = t178472*t178491*t178494*t178486*t178497;
            double t178705 = Aa*t178521*t178472*t178491*t178509*t178519*t178528*2.0;
            double t178706 = gamma_aa[index]*gcab*t178573*(1.6E1/3.0);
            double t178707 = gamma_aa[index]*gcab*t178570*t178572*t178573*1.6E1;
            double t178708 = gamma_aa[index]*t178571*t178572*t178573*t178578*(1.6E1/3.0);
            double t178709 = gamma_aa[index]*t178570*t178571*t178573*1.6E1;
            double t178710 = t178706+t178707+t178708+t178709;
            double t178711 = 1.0/(t178586*t178586);
            double t178712 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t178713 = gamma_aa[index]*gcab*t178573*(8.0/3.0);
            double t178714 = gamma_aa[index]*t178570*t178571*t178573*(8.0/3.0);
            double t178715 = t178713+t178714;
            double t178716 = 1.0/(t178593*t178593);
            double t178717 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t178718 = 1.0/(t178584*t178584);
            double t178719 = 1.0/(t178589*t178589);
            double t178720 = gamma_aa[index]*gcab*t178573*4.0;
            double t178721 = gamma_aa[index]*gcab*t178570*t178572*t178573*4.0;
            double t178722 = gamma_aa[index]*t178570*t178571*t178573*8.0;
            double t178723 = t178720+t178721+t178722;
            double t178724 = t178472*t178566*t178685;
            double t178725 = t178724+t178686;
            double t178726 = gamma_aa[index]*gcaa*t178574*4.0;
            double t178727 = gamma_aa[index]*gcaa*t178682*t178677*t178678*4.0;
            double t178728 = t178683*t178677*t178678*6.0;
            double t178729 = t178680*t178681*t178679;
            double t178730 = t178726+t178727+t178728+t178729+1.0;
            double t178731 = 1.0/t178730;
            double t178732 = gamma_aa[index]*gcaa*t178574;
            double t178733 = t178732+1.0;
            double t178734 = 1.0/t178733;
            double t178735 = gamma_aa[index]*gcaa*t178574*3.0;
            double t178736 = gamma_aa[index]*gcaa*t178682*t178677*t178678;
            double t178737 = t178683*t178677*t178678*3.0;
            double t178738 = t178735+t178736+t178737+1.0;
            double t178739 = 1.0/t178738;
            double t178740 = gamma_aa[index]*gcaa*t178574*2.0;
            double t178741 = t178683*t178677*t178678;
            double t178742 = t178740+t178741+1.0;
            double t178743 = 1.0/t178742;
            double t178744 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t178745 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t178746 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t178748 = t178472*t178566*t178676;
            double t178749 = ccaa4*t178731*t178680*t178746*t178679*(3.2E1/3.0);
            double t178750 = ccaa1*gamma_aa[index]*gcaa*t178734*t178573*(8.0/3.0);
            double t178751 = ccaa3*gamma_aa[index]*gcaa*t178745*t178739*t178677*t178678*8.0;
            double t178752 = ccaa2*t178743*t178744*t178677*t178678*(1.6E1/3.0);
            double t178753 = 1.0/(t178733*t178733);
            double t178754 = gamma_aa[index]*gcaa*t178573*8.0;
            double t178755 = gamma_aa[index]*gcaa*t178745*t178677*t178678*8.0;
            double t178756 = t178744*t178677*t178678*1.6E1;
            double t178757 = t178754+t178755+t178756;
            double t178758 = 1.0/(t178738*t178738);
            double t178759 = gamma_aa[index]*gcaa*t178573*(3.2E1/3.0);
            double t178760 = gamma_aa[index]*gcaa*t178745*t178677*t178678*3.2E1;
            double t178761 = t178744*t178677*t178678*3.2E1;
            double t178762 = t178680*t178746*t178679*(3.2E1/3.0);
            double t178763 = t178760+t178761+t178762+t178759;
            double t178764 = 1.0/(t178730*t178730);
            double t178765 = gamma_aa[index]*gcaa*t178573*(1.6E1/3.0);
            double t178766 = t178744*t178677*t178678*(1.6E1/3.0);
            double t178767 = t178765+t178766;
            double t178768 = 1.0/(t178742*t178742);
            double t178769 = t178750+t178751+t178752+t178749-ccaa1*t178744*t178753*t178677*t178678*(8.0/3.0)- \
               ccaa4*t178680*t178681*t178763*t178764*t178679-ccaa2*t178683*t178677*t178767*t178678*t178768-ccaa3* \
               gamma_aa[index]*gcaa*t178682*t178757*t178677*t178758*t178678;
            double t178770 = -t178562+t178674+t178748;
            double t178771 = 1.0/pow(rho_a[index],1.0E1);
            double t178772 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t178773 = ccaa4*t178731*t178680*t178681*t178679;
            double t178774 = ccaa1*gamma_aa[index]*gcaa*t178734*t178574;
            double t178775 = ccaa3*gamma_aa[index]*gcaa*t178682*t178739*t178677*t178678;
            double t178776 = ccaa2*t178743*t178683*t178677*t178678;
            double t178777 = ccaa0+t178773+t178774+t178775+t178776;
            double t178778 = 1.0/(t178538*t178538*t178538);
            double t178779 = b4f*t178454*t178574*(1.0E1/9.0);
            double t178780 = b2f*c*t178658*(4.0/9.0);
            double t178781 = b3f*t178454*t178546*t178574*(1.0/1.2E1);
            double t178782 = b1f*c*t178546*t178658*(2.0/9.0);
            double t178783 = b3f*c*t178531*t178658*(2.0/3.0);
            double t178784 = t178780+t178781+t178782+t178783+t178779-b1f*t178454*t178574*t178659*(1.0/3.6E1);
            double t178785 = t178651*t178657*t178784*t178569;
            double t178787 = t178554*t178555*t178556*t178669;
            double t178788 = 1.0/(t178549*t178549);
            double t178789 = 1.0/(t178538*t178538*t178538*t178538);
            double t178790 = t178660*t178473*t178569*t178788*t178789*(1.0/2.0);
            double t178791 = t178460*t178661*t178670*t178554*t178671*(1.0/2.0);
            double t178792 = a1f*c*t178651*t178539*t178656*t178657*(2.0/3.0);
            double t178793 = a1p*c*t178561*t178555*t178556*t178539*(2.0/3.0);
            double t178794 = gx*gx;
            double t178795 = t178794*t178794;
            double t178796 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t178797 = gamma_aa[index]*gx*t178574*4.0;
            double t178798 = gamma_aa[index]*gx*t178682*t178677*t178794*4.0;
            double t178799 = t178683*t178677*t178794*6.0;
            double t178800 = t178681*t178795*t178679;
            double t178801 = t178800+t178797+t178798+t178799+1.0;
            double t178802 = 1.0/t178801;
            double t178803 = cx4*t178802*t178681*t178795*t178679*(4.190715359480463E15/2.251799813685248E15);
            double t178804 = gamma_aa[index]*gx*t178574;
            double t178805 = t178804+1.0;
            double t178806 = 1.0/t178805;
            double t178807 = cx1*gamma_aa[index]*gx*t178806*t178574*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178808 = gamma_aa[index]*gx*t178574*3.0;
            double t178809 = gamma_aa[index]*gx*t178682*t178677*t178794;
            double t178810 = t178683*t178677*t178794*3.0;
            double t178811 = t178810+t178808+t178809+1.0;
            double t178812 = 1.0/t178811;
            double t178813 = cx3*gamma_aa[index]*gx*t178812*t178682*t178677*t178794*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178814 = gamma_aa[index]*gx*t178574*2.0;
            double t178815 = t178683*t178677*t178794;
            double t178816 = t178814+t178815+1.0;
            double t178817 = 1.0/t178816;
            double t178818 = cx2*t178817*t178683*t178677*t178794*(4.190715359480463E15/2.251799813685248E15);
            double t178819 = t178803+t178813+t178807+t178818+t178796;
            double t178820 = 1.0/(omega*omega);
            double t178821 = pow(rho_a[index],2.0/3.0);
            double t178822 = 1.0/t178819;
            double t178841 = t178820*t178821*t178822*(1.4000771998813E29/4.951760157141521E27);
            double t178823 = exp(-t178841);
            double t178824 = sqrt(t178819);
            double t178832 = gamma_aa[index]*gx*t178573*(3.2E1/3.0);
            double t178833 = gamma_aa[index]*gx*t178745*t178677*t178794*3.2E1;
            double t178834 = t178744*t178677*t178794*3.2E1;
            double t178835 = t178746*t178795*t178679*(3.2E1/3.0);
            double t178825 = t178832+t178833+t178834+t178835;
            double t178837 = gamma_aa[index]*gx*t178573*(1.6E1/3.0);
            double t178838 = t178744*t178677*t178794*(1.6E1/3.0);
            double t178826 = t178837+t178838;
            double t178827 = 1.0/(t178811*t178811);
            double t178828 = gamma_aa[index]*gx*t178573*8.0;
            double t178829 = gamma_aa[index]*gx*t178745*t178677*t178794*8.0;
            double t178830 = t178744*t178677*t178794*1.6E1;
            double t178831 = t178830+t178828+t178829;
            double t178836 = 1.0/(t178801*t178801);
            double t178839 = 1.0/(t178816*t178816);
            double t178840 = pow(rho_a[index],1.0/3.0);
            double t178842 = 1.0/omega;
            double t178843 = 1.0/sqrt(t178819);
            double t178844 = 1.0/(t178805*t178805);
            double t178845 = omega*omega;
            double t178846 = t178823-1.0;
            double t178847 = t178535*t178845*t178819*t178846*(2.475880078570761E27/1.4000771998813E29);
            double t178848 = -t178823+t178847+3.0/2.0;
            double t178849 = cx4*t178802*t178746*t178795*t178679*(1.396905119826821E15/7.0368744177664E13);
            double t178850 = cx1*gamma_aa[index]*gx*t178806*t178573*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t178851 = cx3*gamma_aa[index]*gx*t178812*t178745*t178677*t178794*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t178852 = cx2*t178744*t178817*t178677*t178794*(1.396905119826821E15/1.40737488355328E14);
            double t178854 = cx1*t178744*t178844*t178677*t178794*(1.396905119826821E15/2.81474976710656E14);
            double t178855 = cx3*gamma_aa[index]*gx*t178831*t178682*t178827*t178677*t178794*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t178856 = cx4*t178681*t178825*t178836*t178795*t178679*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178857 = cx2*t178826*t178683*t178677*t178794*t178839*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178853 = t178850+t178851+t178852-t178854-t178855-t178856-t178857+t178849;
            double t178858 = t178820*t178822*t178529*(1.4000771998813E29/7.427640235712282E27);
            double t178859 = 1.0/(t178819*t178819);
            double t178860 = t178820*t178821*t178853*t178859*(1.4000771998813E29/4.951760157141521E27);
            double t178861 = t178860+t178858;
            double t178862 = t178840*t178842*t178843*(3.74176054803257E14/7.0368744177664E13);
            double t178863 = erf(t178862);
            double t178864 = t178863*(3.991211251234741E15/2.251799813685248E15);
            double t178866 = omega*t178824*t178529*t178848*(7.0368744177664E13/3.74176054803257E14);
            double t178865 = t178864-t178866;
            double t178867 = omega*t178824*t178529*t178865*(2.81474976710656E14/1.122528164409771E15);
            double t178868 = t178867-1.0;
            double t178869 = cx4*t178802*t178681*t178795*t178679;
            double t178870 = cx1*gamma_aa[index]*gx*t178806*t178574;
            double t178871 = cx3*gamma_aa[index]*gx*t178812*t178682*t178677*t178794;
            double t178872 = cx2*t178817*t178683*t178677*t178794;
            double t178873 = cx0+t178870+t178871+t178872+t178869;
            double t178874 = pow(rho_a[index],4.0/3.0);
            double t178875 = 1.0/sqrt(3.141592653589793);
            double t178876 = t178535*t178842*t178843*(3.74176054803257E14/2.11106232532992E14);
            double t178877 = 1.0/pow(t178819,3.0/2.0);
            double t178878 = t178840*t178842*t178853*t178877*(3.74176054803257E14/1.40737488355328E14);
            double t178879 = t178876+t178878;
            double t178880 = t178823*t178875*t178879*(3.991211251234741E15/1.125899906842624E15);
            double t178881 = omega*t178824*t178539*t178848*(7.0368744177664E13/1.122528164409771E15);
            double t178882 = t178545*t178845*t178819*t178846*(4.951760157141521E27/4.2002315996439E29);
            double t178883 = t178535*t178853*t178845*t178846*(2.475880078570761E27/1.4000771998813E29);
            double t178884 = t178535*t178823*t178861*t178845*t178819*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t178908 = t178823*t178861;
            double t178885 = -t178908+t178882+t178883+t178884;
            double t178886 = omega*t178824*t178529*t178885*(7.0368744177664E13/3.74176054803257E14);
            double t178887 = omega*t178843*t178529*t178853*t178848*(3.5184372088832E13/3.74176054803257E14);
            double t178888 = t178880+t178881+t178886+t178887;
            double t178889 = 1.0/(t178805*t178805*t178805);
            double t178890 = t178825*t178825;
            double t178891 = 1.0/(t178801*t178801*t178801);
            double t178892 = t178826*t178826;
            double t178893 = 1.0/(t178816*t178816*t178816);
            double t178894 = gamma_aa[index]*gx*t178717*(8.8E1/3.0);
            double t178895 = gamma_aa[index]*gx*t178771*t178677*t178794*7.2E1;
            double t178896 = t178712*t178677*t178794*(3.04E2/3.0);
            double t178897 = t178894+t178895+t178896;
            double t178898 = t178831*t178831;
            double t178899 = 1.0/(t178811*t178811*t178811);
            double t178900 = gamma_aa[index]*gx*t178717*(3.52E2/9.0);
            double t178901 = gamma_aa[index]*gx*t178771*t178677*t178794*2.88E2;
            double t178902 = t178712*t178677*t178794*(6.08E2/3.0);
            double t178903 = t178772*t178795*t178679*(1.12E3/9.0);
            double t178904 = t178900+t178901+t178902+t178903;
            double t178905 = gamma_aa[index]*gx*t178717*(1.76E2/9.0);
            double t178906 = t178712*t178677*t178794*(3.04E2/9.0);
            double t178907 = t178905+t178906;
            double t178909 = t178853*t178853;
            double t178910 = cx4*t178802*t178772*t178795*t178679*(4.889167919393874E16/2.11106232532992E14);
            double t178911 = cx1*gamma_aa[index]*gx*t178806*t178717*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t178912 = cx3*gamma_aa[index]*gx*t178812*t178771*t178677*t178794*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t178913 = cx2*t178712*t178817*t178677*t178794*(2.65411972767096E16/4.22212465065984E14);
            double t178914 = cx1*gamma_aa[index]*gx*t178771*t178677*t178794*t178889*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t178915 = cx4*t178681*t178890*t178891*t178795*t178679*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t178916 = cx2*t178683*t178892*t178677*t178794*t178893*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t178917 = cx3*gamma_aa[index]*gx*t178682*t178677*t178794*t178898*t178899*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t178919 = cx1*t178712*t178844*t178677*t178794*(1.257214607844139E16/2.81474976710656E14);
            double t178920 = cx3*gamma_aa[index]*gx*t178831*t178745*t178827*t178677*t178794*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t178921 = cx3*gamma_aa[index]*gx*t178682*t178827*t178677*t178794*t178897*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t178922 = cx4*t178825*t178746*t178836*t178795*t178679*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t178923 = cx4*t178904*t178681*t178836*t178795*t178679*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178924 = cx2*t178744*t178826*t178677*t178794*t178839*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t178925 = cx2*t178907*t178683*t178677*t178794*t178839*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t178918 = t178910+t178911-t178920+t178912-t178921+t178913-t178922+t178914-t178923+t178915- \
               t178924+t178916-t178925+t178917-t178919;
            double t178926 = t178820*t178822*t178539*(1.4000771998813E29/2.228292070713684E28);
            double t178927 = 1.0/(t178819*t178819*t178819);
            double t178928 = t178820*t178821*t178918*t178859*(1.4000771998813E29/4.951760157141521E27);
            double t178929 = t178926+t178928-t178820*t178821*t178909*t178927*(1.4000771998813E29/2.475880078570761E27) \
               -t178820*t178529*t178853*t178859*(1.4000771998813E29/3.713820117856141E27);
            double t178930 = t178861*t178861;
            double t178931 = omega*t178824*t178539*t178865*(2.81474976710656E14/3.367584493229313E15);
            double t178932 = omega*t178843*t178529*t178853*t178865*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t178933 = t178931+t178932-omega*t178824*t178529*t178888*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t178934 = cx4*t178802*t178746*t178795*t178679*(3.2E1/3.0);
            double t178935 = cx1*gamma_aa[index]*gx*t178806*t178573*(8.0/3.0);
            double t178936 = cx3*gamma_aa[index]*gx*t178812*t178745*t178677*t178794*8.0;
            double t178937 = cx2*t178744*t178817*t178677*t178794*(1.6E1/3.0);
            double t178938 = t178934+t178935+t178936+t178937-cx1*t178744*t178844*t178677*t178794*(8.0/3.0)-cx2* \
               t178826*t178683*t178677*t178794*t178839-cx4*t178681*t178825*t178836*t178795*t178679-cx3*gamma_aa[index]* \
               gx*t178831*t178682*t178827*t178677*t178794;
            v_rho_a_rho_a_[index] = (rho_a[index]*t178725+rho_b[index]*(t178703-t178472*t178566*(t178703-c0f* \
               log((t178473*(1.0/2.0))/(b1f*t178689+b3f*t178690+b2f*c*t178687+b4f*t178454*t178691)+1.0)*(a1f*c*t178687+ \
               1.0)*2.0))-t178447*(t178704+t178705+t178496))*(-ccab2*t178570*t178572*t178719*(gamma_aa[index]*gcab* \
               t178717*(8.8E1/9.0)+t178712*t178570*t178677*(3.2E1/9.0)+gamma_aa[index]*t178570*t178571*t178717*(8.8E1/ \
               9.0))+ccab2*t178570*(t178715*t178715)*t178572*1.0/(t178589*t178589*t178589)*2.0+ccab4*(t178710*t178710) \
               *1.0/(t178584*t178584*t178584)*t178578*t178579*2.0+ccab1*gamma_aa[index]*gcab*t178717*t178596*(4.4E1/ \
               9.0)-ccab1*t178711*t178712*t178570*t178677*(3.2E1/9.0)+ccab2*t178712*t178570*t178594*t178677*(3.2E1/ \
               9.0)-ccab4*t178718*t178578*t178579*(gamma_aa[index]*gcab*t178717*(1.76E2/9.0)+t178712*t178570*t178677* \
               (6.4E1/3.0)+gamma_aa[index]*t178570*t178571*t178717*(1.76E2/3.0)+t178712*t178572*t178578*t178677*(6.4E1/ \
               3.0)+gamma_aa[index]*gcab*t178570*t178572*t178717*(1.76E2/3.0)+gamma_aa[index]*t178571*t178572*t178717* \
               t178578*(1.76E2/9.0)+gcab*t178712*t178570*t178571*t178677*(1.28E2/3.0))+ccab4*t178712*t178572*t178578* \
               t178677*t178597*(6.4E1/3.0)-ccab1*gamma_aa[index]*t178711*t178570*t178571*t178717*(4.4E1/9.0)+ccab2* \
               gamma_aa[index]*t178570*t178571*t178717*t178594*(8.8E1/9.0)+ccab3*gcab*t178570*(t178723*t178723)*t178571* \
               t178572*1.0/(t178593*t178593*t178593)*2.0+ccab3*gamma_aa[index]*gcab*t178570*t178572*t178717*t178595* \
               (4.4E1/3.0)-ccab2*gamma_aa[index]*t178570*t178571*t178715*t178573*t178719*(1.6E1/3.0)+ccab4*gamma_aa[index]* \
               t178571*t178572*t178717*t178578*t178597*(1.76E2/9.0)+ccab3*gcab*t178712*t178570*t178571*t178595*t178677* \
               (3.2E1/3.0)+ccab1*gcab*t178712*t178570*t178571*1.0/(t178586*t178586*t178586)*t178677*(3.2E1/9.0)-ccab3* \
               gcab*t178570*t178571*t178572*t178716*(gamma_aa[index]*gcab*t178717*(4.4E1/3.0)+t178712*t178570*t178677* \
               (3.2E1/3.0)+gamma_aa[index]*t178570*t178571*t178717*(8.8E1/3.0)+gamma_aa[index]*gcab*t178570*t178572* \
               t178717*(4.4E1/3.0)+gcab*t178712*t178570*t178571*t178677*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t178570* \
               t178723*t178572*t178716*t178573*8.0-ccab4*gamma_aa[index]*t178710*t178571*t178572*t178573*t178718* \
               t178578*(3.2E1/3.0))+t178770*t178777*2.0+t178725*t178769*2.0+(t178704+t178705+t178496+rho_a[index]* \
               (-t178562+t178674+t178472*t178566*(t178562+t178673-t178651*t178656*t178657*t178569-a1p*c*c0p*t178563* \
               t178539*(2.0/3.0)))+t178447*(t178507-a1p*c*c0p*t178485*t178459*(2.0/3.0)-t178472*t178508*t178491*t178486* \
               t178497*4.0-t178472*t178491*t178609*t178494*t178497+t178472*t178526*t178494*t178486*t178497+t178472* \
               t178491*t178466*t178467*t178494*t178486*4.0-Aa*t178521*t178633*t178472*t178491*t178509*t178519*2.0+ \
               Aa*t178521*t178472*t178526*t178509*t178519*t178528*2.0+t178521*t178641*t178472*t178643*t178491*t178509* \
               t178528*t178648-Aa*a1a*c*t178472*t178491*t178509*t178519*t178528*t178459*(2.0/3.0))-c0p*t178554*t178563* \
               2.0-t178472*t178566*t178685)*(ccab1*gamma_aa[index]*gcab*t178573*t178596*(4.0/3.0)-ccab2*t178570*t178715* \
               t178572*t178719-ccab4*t178710*t178718*t178578*t178579-ccab1*gamma_aa[index]*t178711*t178570*t178571* \
               t178573*(4.0/3.0)+ccab2*gamma_aa[index]*t178570*t178571*t178573*t178594*(8.0/3.0)+ccab3*gamma_aa[index]* \
               gcab*t178570*t178572*t178573*t178595*4.0+ccab4*gamma_aa[index]*t178571*t178572*t178573*t178578*t178597* \
               (1.6E1/3.0)-ccab3*gcab*t178570*t178723*t178571*t178572*t178716)*2.0-(ccab0+ccab1*gcab*t178571*t178596+ \
               ccab2*t178570*t178572*t178594+ccab4*t178578*t178579*t178597+ccab3*gcab*t178570*t178571*t178572*t178595) \
               *(-t178447*(-t178621-t178630+t178650+t178675+t178472*t178491*t178494*t178497*(t178621+t178630-t178650- \
               t178675-t178601*t178622*t178484*1.0/(t178478*t178478*t178478)*2.0+t178601*t178602*t178484*(b2f*c*t178598* \
               (4.0/9.0)+b4f*t178454*t178599*(1.0E1/9.0)+b1f*c*t178499*t178598*(2.0/9.0)+b3f*c*t178450*t178598*(2.0/ \
               3.0)-b1f*t178613*t178454*t178599*(1.0/3.6E1)+b3f*t178454*t178499*t178599*(1.0/1.2E1))+t178622*1.0/ \
               (t178481*t178481)*t178473*t178484*1.0/(t178478*t178478*t178478*t178478)*(1.0/2.0)-a1f*c*c0f*t178482* \
               t178598*(8.0/9.0)+a1f*c*t178601*t178602*t178607*t178459*(2.0/3.0)-a1p*c*t178500*t178501*t178506*t178459* \
               (2.0/3.0))+t178472*t178508*t178625*t178491*t178497*8.0-t178631*t178472*t178491*t178486*t178497*2.0E1- \
               t178472*t178526*t178625*t178494*t178497*2.0+t178472*t178508*t178526*t178486*t178497*8.0-t178640*t178472* \
               t178494*t178486*t178497-t178472*t178491*t178467*t178494*t178486*1.2E1+t178472*t178508*t178491*t178466* \
               t178467*t178486*3.2E1+t178472*t178491*t178609*t178466*t178467*t178494*8.0-t178472*t178526*t178466* \
               t178467*t178494*t178486*8.0+a1p*c*t178500*t178501*t178506*t178459*(2.0/3.0)-Aa*t178521*t178640*t178472* \
               t178509*t178519*t178528*2.0+Aa*t178521*t178633*t178472*t178526*t178509*t178519*4.0-Aa*t178521*t178472* \
               t178491*t178509*t178519*(t178631*t178497*2.0E1+t178467*t178494*1.2E1-t178508*t178466*t178467*3.2E1) \
               *2.0+t178521*t178641*t178633*t178472*t178643*t178491*t178509*t178648*2.0-t178521*t178641*t178472*t178526* \
               t178643*t178509*t178528*t178648*2.0-t178521*1.0/(t178515*t178515*t178515)*t178641*t178472*t178491* \
               t178509*t178528*t178649*2.0+t178521*t178641*t178472*t178643*t178491*t178509*t178528*(b2a*c*t178598* \
               (4.0/9.0)+b4a*t178454*t178599*(1.0E1/9.0)+b1a*c*t178499*t178598*(2.0/9.0)+b3a*c*t178450*t178598*(2.0/ \
               3.0)-b1a*t178613*t178454*t178599*(1.0/3.6E1)+b3a*t178454*t178499*t178599*(1.0/1.2E1))-Aa*a1a*c*t178633* \
               t178472*t178491*t178509*t178519*t178459*(4.0/3.0)+Aa*a1a*c*t178472*t178526*t178509*t178519*t178528* \
               t178459*(4.0/3.0)-Aa*a1a*c*t178472*t178491*t178509*t178519*t178528*t178598*(8.0/9.0)+t178510*t178521* \
               1.0/(t178515*t178515*t178515*t178515)*t178472*t178491*t178509*1.0/(t178518*t178518)*t178528*t178649* \
               (1.0/2.0)+a1a*c*t178641*t178472*t178643*t178491*t178509*t178528*t178459*t178648*(2.0/3.0))+rho_a[index]* \
               (-t178663-t178672+t178791+t178793+t178787+t178472*t178566*(t178663+t178672+t178790+t178792+t178785- \
               t178651*t178660*t178569*t178778*2.0-t178554*t178555*t178556*t178669-a1f*c*c0f*t178567*t178658*(8.0/ \
               9.0)-t178460*t178661*t178670*t178554*t178671*(1.0/2.0)-a1p*c*t178561*t178555*t178556*t178539*(2.0/ \
               3.0)))+t178472*t178566*t178676*2.0+t178500*t178501*t178506*t178465*2.0-t178561*t178554*t178555*t178556* \
               2.0+a1p*c*c0p*t178563*t178539*(4.0/3.0)-a1p*c*c0p*t178485*t178459*(4.0/3.0)+t178472*t178625*t178491* \
               t178494*t178497*2.0-t178472*t178508*t178491*t178486*t178497*8.0+t178472*t178526*t178494*t178486*t178497* \
               2.0+t178472*t178491*t178466*t178467*t178494*t178486*8.0-Aa*t178521*t178633*t178472*t178491*t178509* \
               t178519*4.0+Aa*t178521*t178472*t178526*t178509*t178519*t178528*4.0+t178521*t178641*t178472*t178643* \
               t178491*t178509*t178528*t178648*2.0-Aa*a1a*c*t178472*t178491*t178509*t178519*t178528*t178459*(4.0/ \
               3.0))-rho_a[index]*t178725*(ccaa1*gamma_aa[index]*gcaa*t178734*t178717*(8.8E1/9.0)-ccaa1*t178712*t178753* \
               t178677*t178678*2.4E1+ccaa2*t178712*t178743*t178677*t178678*(3.04E2/9.0)+ccaa4*t178731*t178680*t178772* \
               t178679*(1.12E3/9.0)-ccaa4*t178680*t178763*t178746*t178764*t178679*(6.4E1/3.0)-ccaa2*t178744*t178677* \
               t178767*t178678*t178768*(3.2E1/3.0)-ccaa2*t178683*t178677*t178678*t178768*(gamma_aa[index]*gcaa*t178717* \
               (1.76E2/9.0)+t178712*t178677*t178678*(3.04E2/9.0))-ccaa4*t178680*t178681*t178764*t178679*(gamma_aa[index]* \
               gcaa*t178717*(3.52E2/9.0)+t178712*t178677*t178678*(6.08E2/3.0)+t178680*t178772*t178679*(1.12E3/9.0) \
               +gamma_aa[index]*gcaa*t178771*t178677*t178678*2.88E2)+ccaa4*1.0/(t178730*t178730*t178730)*t178680* \
               t178681*(t178763*t178763)*t178679*2.0+ccaa2*1.0/(t178742*t178742*t178742)*t178683*t178677*(t178767* \
               t178767)*t178678*2.0+ccaa3*gamma_aa[index]*gcaa*t178771*t178739*t178677*t178678*7.2E1+ccaa1*gamma_aa[index]* \
               gcaa*1.0/(t178733*t178733*t178733)*t178771*t178677*t178678*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa* \
               t178682*1.0/(t178738*t178738*t178738)*(t178757*t178757)*t178677*t178678*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t178682*t178677*t178758*t178678*(gamma_aa[index]*gcaa*t178717*(8.8E1/3.0)+t178712*t178677*t178678* \
               (3.04E2/3.0)+gamma_aa[index]*gcaa*t178771*t178677*t178678*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t178745* \
               t178757*t178677*t178758*t178678*1.6E1)+rho_a[index]*t178777*(-t178663-t178672+t178791+t178793+t178787+ \
               t178472*t178566*(t178663+t178672+t178790-t178791+t178792-t178793+t178785-t178787-t178651*t178660*t178569* \
               t178778*2.0-a1f*c*c0f*t178567*t178658*(8.0/9.0)))-rho_a[index]*t178770*t178769*2.0+c0*t178840*t178933* \
               t178873*(8.0/3.0)-c0*t178535*t178873*t178868*(4.0/9.0)+c0*t178840*t178938*t178868*(8.0/3.0)-c0*t178933* \
               t178874*t178938*2.0+c0*t178873*t178874*(omega*t178824*t178658*t178865*(-1.125899906842624E15/1.010275347968794E16) \
               +omega*t178824*t178539*t178888*(5.62949953421312E14/3.367584493229313E15)+omega*t178824*t178529*(t178823* \
               t178875*(t178545*t178842*t178843*(3.74176054803257E14/3.16659348799488E14)-t178535*t178842*t178853* \
               t178877*(3.74176054803257E14/2.11106232532992E14)+t178840*t178842*t178918*t178877*(3.74176054803257E14/ \
               1.40737488355328E14)-t178840*t178842*1.0/pow(t178819,5.0/2.0)*t178909*(1.122528164409771E15/2.81474976710656E14) \
               )*(3.991211251234741E15/1.125899906842624E15)+omega*t178824*t178539*t178885*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t178824*t178658*t178848*(2.81474976710656E14/3.367584493229313E15)+t178823*t178861*t178875* \
               t178879*(3.991211251234741E15/1.125899906842624E15)+omega*t178824*t178529*(-t178930*t178823-t178823* \
               t178929+t178545*t178853*t178845*t178846*(9.903520314283042E27/4.2002315996439E29)+t178535*t178845* \
               t178846*t178918*(2.475880078570761E27/1.4000771998813E29)+t178574*t178845*t178819*t178846*(2.475880078570761E28/ \
               1.26006947989317E30)+t178930*t178535*t178823*t178845*t178819*(2.475880078570761E27/1.4000771998813E29) \
               +t178535*t178823*t178861*t178853*t178845*(4.951760157141521E27/1.4000771998813E29)+t178823*t178545* \
               t178861*t178845*t178819*(9.903520314283042E27/4.2002315996439E29)+t178535*t178823*t178845*t178819* \
               t178929*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t178843*t178529*t178853*t178885*(7.0368744177664E13/3.74176054803257E14)+omega*t178843*t178853*t178539* \
               t178848*(7.0368744177664E13/1.122528164409771E15)+omega*t178843*t178529*t178918*t178848*(3.5184372088832E13/ \
               3.74176054803257E14)-omega*t178529*t178909*t178848*t178877*(1.7592186044416E13/3.74176054803257E14) \
               )*(2.81474976710656E14/1.122528164409771E15)-omega*t178843*t178853*t178539*t178865*(2.81474976710656E14/ \
               3.367584493229313E15)-omega*t178843*t178529*t178918*t178865*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t178843*t178529*t178853*t178888*(2.81474976710656E14/1.122528164409771E15)+omega*t178529*t178909* \
               t178865*t178877*(7.0368744177664E13/1.122528164409771E15))-c0*t178874*t178868*(cx1*gamma_aa[index]* \
               gx*t178806*t178717*(8.8E1/9.0)-cx1*t178712*t178844*t178677*t178794*2.4E1+cx2*t178712*t178817*t178677* \
               t178794*(3.04E2/9.0)+cx4*t178802*t178772*t178795*t178679*(1.12E3/9.0)-cx2*t178744*t178826*t178677* \
               t178794*t178839*(3.2E1/3.0)-cx2*t178907*t178683*t178677*t178794*t178839+cx2*t178683*t178892*t178677* \
               t178794*t178893*2.0-cx4*t178904*t178681*t178836*t178795*t178679-cx4*t178825*t178746*t178836*t178795* \
               t178679*(6.4E1/3.0)+cx4*t178681*t178890*t178891*t178795*t178679*2.0+cx1*gamma_aa[index]*gx*t178771* \
               t178677*t178794*t178889*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t178812*t178771*t178677*t178794*7.2E1- \
               cx3*gamma_aa[index]*gx*t178831*t178745*t178827*t178677*t178794*1.6E1-cx3*gamma_aa[index]*gx*t178682* \
               t178827*t178677*t178794*t178897+cx3*gamma_aa[index]*gx*t178682*t178677*t178794*t178898*t178899*2.0) \
               ;
        } else if (rho_a[index] > cutoff_) {
            double t183126 = 1.0/pow(rho_a[index],1.0/3.0);
            double t183127 = c*t183126;
            double t183128 = sqrt(t183127);
            double t183129 = b1f*t183128;
            double t183130 = pow(t183127,3.0/2.0);
            double t183131 = b3f*t183130;
            double t183132 = c*c;
            double t183133 = 1.0/pow(rho_a[index],2.0/3.0);
            double t183134 = b4f*t183132*t183133;
            double t183135 = b2f*c*t183126;
            double t183136 = t183131+t183134+t183135+t183129;
            double t183137 = 1.0/pow(rho_a[index],4.0/3.0);
            double t183138 = b1p*t183128;
            double t183139 = b3p*t183130;
            double t183140 = b4p*t183132*t183133;
            double t183141 = b2p*c*t183126;
            double t183142 = t183140+t183141+t183138+t183139;
            double t183143 = 1.0/pow(rho_a[index],5.0/3.0);
            double t183144 = 1.0/sqrt(t183127);
            double t183145 = 1.0/c0f;
            double t183146 = 1.0/t183136;
            double t183147 = t183145*t183146*(1.0/2.0);
            double t183148 = t183147+1.0;
            double t183149 = 1.0/c0p;
            double t183150 = 1.0/t183142;
            double t183151 = t183150*t183149*(1.0/2.0);
            double t183152 = t183151+1.0;
            double t183153 = a1p*c*t183126;
            double t183154 = t183153+1.0;
            double t183155 = 1.0/t183152;
            double t183156 = 1.0/(t183142*t183142);
            double t183157 = b4p*t183132*t183143*(2.0/3.0);
            double t183158 = b2p*c*t183137*(1.0/3.0);
            double t183159 = b1p*c*t183144*t183137*(1.0/6.0);
            double t183160 = b3p*c*t183128*t183137*(1.0/2.0);
            double t183161 = t183160+t183157+t183158+t183159;
            double t183162 = t183161*t183154*t183155*t183156;
            double t183163 = log(t183152);
            double t183164 = gamma_aa[index]*gamma_aa[index];
            double t183165 = gcaa*gcaa;
            double t183166 = t183164*t183164;
            double t183167 = t183165*t183165;
            double t183168 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t183169 = 1.0/pow(rho_a[index],8.0/3.0);
            double t183170 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t183171 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t183172 = pow(2.0,1.0/3.0);
            double t183173 = t183172*2.0;
            double t183174 = t183173-2.0;
            double t183175 = two_13*2.0;
            double t183176 = t183175-2.0;
            double t183177 = 1.0/t183176;
            double t183178 = log(t183148);
            double t183179 = a1f*c*t183126;
            double t183180 = t183179+1.0;
            double t183181 = gamma_aa[index]*gcaa*t183169*4.0;
            double t183182 = gamma_aa[index]*gcaa*t183170*t183164*t183165*4.0;
            double t183183 = t183171*t183164*t183165*6.0;
            double t183184 = t183166*t183167*t183168;
            double t183185 = t183181+t183182+t183183+t183184+1.0;
            double t183186 = 1.0/t183185;
            double t183187 = gamma_aa[index]*gcaa*t183169;
            double t183188 = t183187+1.0;
            double t183189 = 1.0/t183188;
            double t183190 = gamma_aa[index]*gcaa*t183169*3.0;
            double t183191 = gamma_aa[index]*gcaa*t183170*t183164*t183165;
            double t183192 = t183171*t183164*t183165*3.0;
            double t183193 = t183190+t183191+t183192+1.0;
            double t183194 = 1.0/t183193;
            double t183195 = gamma_aa[index]*gcaa*t183169*2.0;
            double t183196 = t183171*t183164*t183165;
            double t183197 = t183195+t183196+1.0;
            double t183198 = 1.0/t183197;
            double t183199 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t183200 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t183201 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t183202 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t183203 = 1.0/t183148;
            double t183204 = 1.0/(t183136*t183136);
            double t183205 = b4f*t183132*t183143*(2.0/3.0);
            double t183206 = b2f*c*t183137*(1.0/3.0);
            double t183207 = b1f*c*t183144*t183137*(1.0/6.0);
            double t183208 = b3f*c*t183128*t183137*(1.0/2.0);
            double t183209 = t183205+t183206+t183207+t183208;
            double t183210 = a1f*c*c0f*t183137*t183178*(2.0/3.0);
            double t183211 = a1p*c*c0p*t183163*t183137*(2.0/3.0);
            double t183212 = ccaa4*t183202*t183166*t183167*t183186*(3.2E1/3.0);
            double t183213 = ccaa1*gamma_aa[index]*gcaa*t183200*t183189*(8.0/3.0);
            double t183214 = ccaa3*gamma_aa[index]*gcaa*t183201*t183164*t183165*t183194*8.0;
            double t183215 = ccaa2*t183164*t183165*t183198*t183199*(1.6E1/3.0);
            double t183216 = 1.0/(t183188*t183188);
            double t183217 = gamma_aa[index]*gcaa*t183200*8.0;
            double t183218 = gamma_aa[index]*gcaa*t183201*t183164*t183165*8.0;
            double t183219 = t183164*t183165*t183199*1.6E1;
            double t183220 = t183217+t183218+t183219;
            double t183221 = 1.0/(t183193*t183193);
            double t183222 = gamma_aa[index]*gcaa*t183200*(3.2E1/3.0);
            double t183223 = gamma_aa[index]*gcaa*t183201*t183164*t183165*3.2E1;
            double t183224 = t183164*t183165*t183199*3.2E1;
            double t183225 = t183202*t183166*t183167*(3.2E1/3.0);
            double t183226 = t183222+t183223+t183224+t183225;
            double t183227 = 1.0/(t183185*t183185);
            double t183228 = gamma_aa[index]*gcaa*t183200*(1.6E1/3.0);
            double t183229 = t183164*t183165*t183199*(1.6E1/3.0);
            double t183230 = t183228+t183229;
            double t183231 = 1.0/(t183197*t183197);
            double t183232 = t183212+t183213+t183214+t183215-ccaa1*t183216*t183164*t183165*t183199*(8.0/3.0)- \
               ccaa2*t183230*t183231*t183171*t183164*t183165-ccaa4*t183226*t183227*t183166*t183167*t183168-ccaa3* \
               gamma_aa[index]*gcaa*t183220*t183221*t183170*t183164*t183165;
            double t183233 = c0f*t183180*t183178*2.0;
            double t183234 = c0p*t183154*t183163*2.0;
            double t183235 = 1.0/pow(rho_a[index],1.0E1);
            double t183236 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t183237 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t183238 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t183239 = ccaa4*t183166*t183167*t183168*t183186;
            double t183240 = ccaa1*gamma_aa[index]*gcaa*t183169*t183189;
            double t183241 = ccaa3*gamma_aa[index]*gcaa*t183170*t183164*t183165*t183194;
            double t183242 = ccaa2*t183171*t183164*t183165*t183198;
            double t183243 = ccaa0+t183240+t183241+t183242+t183239;
            double t183244 = 1.0/pow(rho_a[index],7.0/3.0);
            double t183245 = 1.0/pow(t183127,3.0/2.0);
            double t183246 = t183209*t183209;
            double t183247 = t183161*t183161;
            double t183248 = 1.0/(t183142*t183142*t183142);
            double t183249 = t183154*t183155*t183247*t183248*2.0;
            double t183250 = b4p*t183132*t183169*(1.0E1/9.0);
            double t183251 = b2p*c*t183244*(4.0/9.0);
            double t183252 = b3p*t183132*t183144*t183169*(1.0/1.2E1);
            double t183253 = b1p*c*t183144*t183244*(2.0/9.0);
            double t183254 = b3p*c*t183244*t183128*(2.0/3.0);
            double t183255 = t183250+t183251+t183252+t183253+t183254-b1p*t183132*t183245*t183169*(1.0/3.6E1);
            double t183256 = 1.0/(t183152*t183152);
            double t183257 = 1.0/(t183142*t183142*t183142*t183142);
            double t183258 = a1p*c*c0p*t183163*t183244*(8.0/9.0);
            double t183259 = gx*gx;
            double t183260 = t183259*t183259;
            double t183261 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t183262 = gamma_aa[index]*gx*t183169*4.0;
            double t183263 = gamma_aa[index]*gx*t183170*t183164*t183259*4.0;
            double t183264 = t183171*t183164*t183259*6.0;
            double t183265 = t183260*t183166*t183168;
            double t183266 = t183262+t183263+t183264+t183265+1.0;
            double t183267 = 1.0/t183266;
            double t183268 = cx4*t183260*t183166*t183168*t183267*(4.190715359480463E15/2.251799813685248E15);
            double t183269 = gamma_aa[index]*gx*t183169;
            double t183270 = t183269+1.0;
            double t183271 = 1.0/t183270;
            double t183272 = cx1*gamma_aa[index]*gx*t183271*t183169*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183273 = gamma_aa[index]*gx*t183169*3.0;
            double t183274 = gamma_aa[index]*gx*t183170*t183164*t183259;
            double t183275 = t183171*t183164*t183259*3.0;
            double t183276 = t183273+t183274+t183275+1.0;
            double t183277 = 1.0/t183276;
            double t183278 = cx3*gamma_aa[index]*gx*t183170*t183164*t183259*t183277*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183279 = gamma_aa[index]*gx*t183169*2.0;
            double t183280 = t183171*t183164*t183259;
            double t183281 = t183280+t183279+1.0;
            double t183282 = 1.0/t183281;
            double t183283 = cx2*t183171*t183164*t183282*t183259*(4.190715359480463E15/2.251799813685248E15);
            double t183284 = t183261+t183272+t183283+t183268+t183278;
            double t183285 = 1.0/(omega*omega);
            double t183286 = pow(rho_a[index],2.0/3.0);
            double t183287 = 1.0/t183284;
            double t183306 = t183285*t183286*t183287*(1.4000771998813E29/4.951760157141521E27);
            double t183288 = exp(-t183306);
            double t183289 = sqrt(t183284);
            double t183297 = gamma_aa[index]*gx*t183200*(3.2E1/3.0);
            double t183298 = gamma_aa[index]*gx*t183201*t183164*t183259*3.2E1;
            double t183299 = t183164*t183259*t183199*3.2E1;
            double t183300 = t183202*t183260*t183166*(3.2E1/3.0);
            double t183290 = t183300+t183297+t183298+t183299;
            double t183302 = gamma_aa[index]*gx*t183200*(1.6E1/3.0);
            double t183303 = t183164*t183259*t183199*(1.6E1/3.0);
            double t183291 = t183302+t183303;
            double t183292 = 1.0/(t183276*t183276);
            double t183293 = gamma_aa[index]*gx*t183200*8.0;
            double t183294 = gamma_aa[index]*gx*t183201*t183164*t183259*8.0;
            double t183295 = t183164*t183259*t183199*1.6E1;
            double t183296 = t183293+t183294+t183295;
            double t183301 = 1.0/(t183266*t183266);
            double t183304 = 1.0/(t183281*t183281);
            double t183305 = pow(rho_a[index],1.0/3.0);
            double t183307 = 1.0/omega;
            double t183308 = 1.0/sqrt(t183284);
            double t183309 = 1.0/(t183270*t183270);
            double t183310 = omega*omega;
            double t183311 = t183288-1.0;
            double t183312 = t183310*t183311*t183133*t183284*(2.475880078570761E27/1.4000771998813E29);
            double t183313 = t183312-t183288+3.0/2.0;
            double t183314 = cx4*t183202*t183260*t183166*t183267*(1.396905119826821E15/7.0368744177664E13);
            double t183315 = cx1*gamma_aa[index]*gx*t183200*t183271*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t183316 = cx3*gamma_aa[index]*gx*t183201*t183164*t183259*t183277*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t183317 = cx2*t183164*t183282*t183259*t183199*(1.396905119826821E15/1.40737488355328E14);
            double t183319 = cx1*t183164*t183309*t183259*t183199*(1.396905119826821E15/2.81474976710656E14);
            double t183320 = cx3*gamma_aa[index]*gx*t183170*t183164*t183292*t183259*t183296*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t183321 = cx4*t183301*t183260*t183290*t183166*t183168*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183322 = cx2*t183304*t183171*t183164*t183291*t183259*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183318 = -t183320-t183321-t183322+t183314+t183315+t183316+t183317-t183319;
            double t183323 = t183126*t183285*t183287*(1.4000771998813E29/7.427640235712282E27);
            double t183324 = 1.0/(t183284*t183284);
            double t183325 = t183324*t183318*t183285*t183286*(1.4000771998813E29/4.951760157141521E27);
            double t183326 = t183323+t183325;
            double t183327 = t183305*t183307*t183308*(3.74176054803257E14/7.0368744177664E13);
            double t183328 = erf(t183327);
            double t183329 = t183328*(3.991211251234741E15/2.251799813685248E15);
            double t183331 = omega*t183313*t183126*t183289*(7.0368744177664E13/3.74176054803257E14);
            double t183330 = -t183331+t183329;
            double t183332 = omega*t183330*t183126*t183289*(2.81474976710656E14/1.122528164409771E15);
            double t183333 = t183332-1.0;
            double t183334 = cx4*t183260*t183166*t183168*t183267;
            double t183335 = cx1*gamma_aa[index]*gx*t183271*t183169;
            double t183336 = cx3*gamma_aa[index]*gx*t183170*t183164*t183259*t183277;
            double t183337 = cx2*t183171*t183164*t183282*t183259;
            double t183338 = cx0+t183334+t183335+t183336+t183337;
            double t183339 = pow(rho_a[index],4.0/3.0);
            double t183340 = 1.0/sqrt(3.141592653589793);
            double t183341 = t183133*t183307*t183308*(3.74176054803257E14/2.11106232532992E14);
            double t183342 = 1.0/pow(t183284,3.0/2.0);
            double t183343 = t183305*t183342*t183307*t183318*(3.74176054803257E14/1.40737488355328E14);
            double t183344 = t183341+t183343;
            double t183345 = t183340*t183344*t183288*(3.991211251234741E15/1.125899906842624E15);
            double t183346 = omega*t183313*t183137*t183289*(7.0368744177664E13/1.122528164409771E15);
            double t183347 = t183310*t183311*t183143*t183284*(4.951760157141521E27/4.2002315996439E29);
            double t183348 = t183310*t183311*t183133*t183318*(2.475880078570761E27/1.4000771998813E29);
            double t183349 = t183310*t183133*t183326*t183284*t183288*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t183373 = t183326*t183288;
            double t183350 = -t183373+t183347+t183348+t183349;
            double t183351 = omega*t183350*t183126*t183289*(7.0368744177664E13/3.74176054803257E14);
            double t183352 = omega*t183313*t183126*t183308*t183318*(3.5184372088832E13/3.74176054803257E14);
            double t183353 = t183351+t183352+t183345+t183346;
            double t183354 = 1.0/(t183270*t183270*t183270);
            double t183355 = t183290*t183290;
            double t183356 = 1.0/(t183266*t183266*t183266);
            double t183357 = t183291*t183291;
            double t183358 = 1.0/(t183281*t183281*t183281);
            double t183359 = gamma_aa[index]*gx*t183237*(8.8E1/3.0);
            double t183360 = gamma_aa[index]*gx*t183235*t183164*t183259*7.2E1;
            double t183361 = t183164*t183236*t183259*(3.04E2/3.0);
            double t183362 = t183360+t183361+t183359;
            double t183363 = t183296*t183296;
            double t183364 = 1.0/(t183276*t183276*t183276);
            double t183365 = gamma_aa[index]*gx*t183237*(3.52E2/9.0);
            double t183366 = gamma_aa[index]*gx*t183235*t183164*t183259*2.88E2;
            double t183367 = t183164*t183236*t183259*(6.08E2/3.0);
            double t183368 = t183260*t183166*t183238*(1.12E3/9.0);
            double t183369 = t183365+t183366+t183367+t183368;
            double t183370 = gamma_aa[index]*gx*t183237*(1.76E2/9.0);
            double t183371 = t183164*t183236*t183259*(3.04E2/9.0);
            double t183372 = t183370+t183371;
            double t183374 = t183318*t183318;
            double t183375 = cx4*t183260*t183166*t183238*t183267*(4.889167919393874E16/2.11106232532992E14);
            double t183376 = cx1*gamma_aa[index]*gx*t183271*t183237*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t183377 = cx3*gamma_aa[index]*gx*t183235*t183164*t183259*t183277*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t183378 = cx2*t183164*t183236*t183282*t183259*(2.65411972767096E16/4.22212465065984E14);
            double t183379 = cx1*gamma_aa[index]*gx*t183235*t183164*t183354*t183259*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t183380 = cx4*t183260*t183166*t183355*t183356*t183168*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t183381 = cx2*t183171*t183164*t183357*t183259*t183358*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t183382 = cx3*gamma_aa[index]*gx*t183170*t183164*t183363*t183364*t183259*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t183384 = cx1*t183164*t183236*t183309*t183259*(1.257214607844139E16/2.81474976710656E14);
            double t183385 = cx3*gamma_aa[index]*gx*t183201*t183164*t183292*t183259*t183296*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t183386 = cx3*gamma_aa[index]*gx*t183170*t183164*t183362*t183292*t183259*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t183387 = cx4*t183202*t183301*t183260*t183290*t183166*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t183388 = cx4*t183301*t183260*t183166*t183168*t183369*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183389 = cx2*t183304*t183164*t183291*t183259*t183199*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t183390 = cx2*t183304*t183171*t183164*t183372*t183259*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t183383 = t183380+t183381-t183390+t183382+t183375-t183384+t183376-t183385+t183377-t183386+ \
               t183378-t183387+t183379-t183388-t183389;
            double t183391 = t183137*t183285*t183287*(1.4000771998813E29/2.228292070713684E28);
            double t183392 = 1.0/(t183284*t183284*t183284);
            double t183393 = t183324*t183383*t183285*t183286*(1.4000771998813E29/4.951760157141521E27);
            double t183394 = t183391+t183393-t183126*t183324*t183318*t183285*(1.4000771998813E29/3.713820117856141E27) \
               -t183374*t183392*t183285*t183286*(1.4000771998813E29/2.475880078570761E27);
            double t183395 = t183326*t183326;
            double t183396 = omega*t183330*t183137*t183289*(2.81474976710656E14/3.367584493229313E15);
            double t183397 = omega*t183330*t183126*t183308*t183318*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t183398 = t183396+t183397-omega*t183126*t183353*t183289*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t183399 = cx4*t183202*t183260*t183166*t183267*(3.2E1/3.0);
            double t183400 = cx1*gamma_aa[index]*gx*t183200*t183271*(8.0/3.0);
            double t183401 = cx3*gamma_aa[index]*gx*t183201*t183164*t183259*t183277*8.0;
            double t183402 = cx2*t183164*t183282*t183259*t183199*(1.6E1/3.0);
            double t183403 = t183400+t183401+t183402+t183399-cx1*t183164*t183309*t183259*t183199*(8.0/3.0)-cx2* \
               t183304*t183171*t183164*t183291*t183259-cx4*t183301*t183260*t183290*t183166*t183168-cx3*gamma_aa[index]* \
               gx*t183170*t183164*t183292*t183259*t183296;
            v_rho_a_rho_a_[index] = t183232*(t183234+t183174*t183177*(t183233-c0p*t183154*t183163*2.0))*2.0+t183243* \
               (t183211-t183162+t183174*t183177*(t183210+t183162-t183203*t183204*t183180*t183209-a1p*c*c0p*t183163* \
               t183137*(2.0/3.0)))*2.0+rho_a[index]*t183243*(-t183249-t183258+t183174*t183177*(t183249+t183258-t183154* \
               t183155*t183156*t183255-t183203*t183180*1.0/(t183136*t183136*t183136)*t183246*2.0+t183203*t183204* \
               t183180*(b2f*c*t183244*(4.0/9.0)+b4f*t183132*t183169*(1.0E1/9.0)+b1f*c*t183144*t183244*(2.0/9.0)+b3f* \
               c*t183244*t183128*(2.0/3.0)-b1f*t183132*t183245*t183169*(1.0/3.6E1)+b3f*t183132*t183144*t183169*(1.0/ \
               1.2E1))+t183180*1.0/(t183136*t183136*t183136*t183136)*t183145*t183246*1.0/(t183148*t183148)*(1.0/2.0) \
               -a1f*c*c0f*t183244*t183178*(8.0/9.0)-t183154*t183247*t183256*t183149*t183257*(1.0/2.0)+a1f*c*t183203* \
               t183204*t183137*t183209*(2.0/3.0)-a1p*c*t183161*t183137*t183155*t183156*(2.0/3.0))+t183154*t183155* \
               t183156*t183255+t183154*t183247*t183256*t183149*t183257*(1.0/2.0)+a1p*c*t183161*t183137*t183155*t183156* \
               (2.0/3.0))-rho_a[index]*t183232*(t183211-t183162+t183174*t183177*(t183210-t183211+t183162-t183203* \
               t183204*t183180*t183209))*2.0-rho_a[index]*(t183234+t183174*t183177*(t183233-t183234))*(ccaa1*gamma_aa[index]* \
               gcaa*t183237*t183189*(8.8E1/9.0)-ccaa1*t183216*t183164*t183236*t183165*2.4E1+ccaa2*t183164*t183236* \
               t183165*t183198*(3.04E2/9.0)+ccaa4*t183166*t183238*t183167*t183186*(1.12E3/9.0)-ccaa2*t183230*t183231* \
               t183164*t183165*t183199*(3.2E1/3.0)-ccaa4*t183202*t183226*t183227*t183166*t183167*(6.4E1/3.0)-ccaa2* \
               t183231*t183171*t183164*t183165*(gamma_aa[index]*gcaa*t183237*(1.76E2/9.0)+t183164*t183236*t183165* \
               (3.04E2/9.0))-ccaa4*t183227*t183166*t183167*t183168*(gamma_aa[index]*gcaa*t183237*(3.52E2/9.0)+t183164* \
               t183236*t183165*(6.08E2/3.0)+t183166*t183238*t183167*(1.12E3/9.0)+gamma_aa[index]*gcaa*t183235*t183164* \
               t183165*2.88E2)+ccaa2*(t183230*t183230)*t183171*t183164*t183165*1.0/(t183197*t183197*t183197)*2.0+ \
               ccaa4*(t183226*t183226)*t183166*t183167*1.0/(t183185*t183185*t183185)*t183168*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t183235*t183164*t183165*t183194*7.2E1+ccaa1*gamma_aa[index]*gcaa*t183235*t183164*t183165*1.0/ \
               (t183188*t183188*t183188)*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*(t183220*t183220)*t183170*t183164* \
               t183165*1.0/(t183193*t183193*t183193)*2.0-ccaa3*gamma_aa[index]*gcaa*t183221*t183170*t183164*t183165* \
               (gamma_aa[index]*gcaa*t183237*(8.8E1/3.0)+t183164*t183236*t183165*(3.04E2/3.0)+gamma_aa[index]*gcaa* \
               t183235*t183164*t183165*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t183201*t183220*t183221*t183164*t183165* \
               1.6E1)+c0*t183403*t183305*t183333*(8.0/3.0)-c0*t183133*t183333*t183338*(4.0/9.0)-c0*t183403*t183339* \
               t183398*2.0+c0*t183305*t183338*t183398*(8.0/3.0)+c0*t183338*t183339*(omega*t183330*t183244*t183289* \
               (-1.125899906842624E15/1.010275347968794E16)+omega*t183137*t183353*t183289*(5.62949953421312E14/3.367584493229313E15) \
               +omega*t183126*t183289*(t183340*t183288*(t183143*t183307*t183308*(3.74176054803257E14/3.16659348799488E14) \
               -t183133*t183342*t183307*t183318*(3.74176054803257E14/2.11106232532992E14)+t183305*t183342*t183307* \
               t183383*(3.74176054803257E14/1.40737488355328E14)-t183305*t183307*1.0/pow(t183284,5.0/2.0)*t183374* \
               (1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t183313* \
               t183244*t183289*(2.81474976710656E14/3.367584493229313E15)+omega*t183350*t183137*t183289*(1.40737488355328E14/ \
               1.122528164409771E15)+t183340*t183326*t183344*t183288*(3.991211251234741E15/1.125899906842624E15)+ \
               omega*t183126*t183289*(-t183394*t183288-t183395*t183288+t183310*t183311*t183143*t183318*(9.903520314283042E27/ \
               4.2002315996439E29)+t183310*t183311*t183133*t183383*(2.475880078570761E27/1.4000771998813E29)+t183310* \
               t183311*t183284*t183169*(2.475880078570761E28/1.26006947989317E30)+t183310*t183133*t183326*t183318* \
               t183288*(4.951760157141521E27/1.4000771998813E29)+t183310*t183143*t183326*t183284*t183288*(9.903520314283042E27/ \
               4.2002315996439E29)+t183310*t183133*t183284*t183394*t183288*(2.475880078570761E27/1.4000771998813E29) \
               +t183310*t183133*t183284*t183395*t183288*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/ \
               3.74176054803257E14)-omega*t183313*t183126*t183342*t183374*(1.7592186044416E13/3.74176054803257E14) \
               +omega*t183350*t183126*t183308*t183318*(7.0368744177664E13/3.74176054803257E14)+omega*t183313*t183126* \
               t183308*t183383*(3.5184372088832E13/3.74176054803257E14)+omega*t183313*t183137*t183308*t183318*(7.0368744177664E13/ \
               1.122528164409771E15))*(2.81474976710656E14/1.122528164409771E15)+omega*t183330*t183126*t183342*t183374* \
               (7.0368744177664E13/1.122528164409771E15)-omega*t183330*t183126*t183308*t183383*(1.40737488355328E14/ \
               1.122528164409771E15)-omega*t183330*t183137*t183308*t183318*(2.81474976710656E14/3.367584493229313E15) \
               +omega*t183126*t183308*t183353*t183318*(2.81474976710656E14/1.122528164409771E15))-c0*t183333*t183339* \
               (cx1*gamma_aa[index]*gx*t183271*t183237*(8.8E1/9.0)-cx1*t183164*t183236*t183309*t183259*2.4E1+cx2* \
               t183164*t183236*t183282*t183259*(3.04E2/9.0)+cx4*t183260*t183166*t183238*t183267*(1.12E3/9.0)-cx2* \
               t183304*t183171*t183164*t183372*t183259-cx2*t183304*t183164*t183291*t183259*t183199*(3.2E1/3.0)+cx2* \
               t183171*t183164*t183357*t183259*t183358*2.0-cx4*t183202*t183301*t183260*t183290*t183166*(6.4E1/3.0) \
               -cx4*t183301*t183260*t183166*t183168*t183369+cx4*t183260*t183166*t183355*t183356*t183168*2.0+cx1*gamma_aa[index]* \
               gx*t183235*t183164*t183354*t183259*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t183235*t183164*t183259*t183277* \
               7.2E1-cx3*gamma_aa[index]*gx*t183170*t183164*t183362*t183292*t183259-cx3*gamma_aa[index]*gx*t183201* \
               t183164*t183292*t183259*t183296*1.6E1+cx3*gamma_aa[index]*gx*t183170*t183164*t183363*t183364*t183259* \
               2.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t178940 = rho_a[index]+rho_b[index];
            double t178941 = 1.0/pow(t178940,1.0/3.0);
            double t178942 = c*t178941;
            double t178943 = sqrt(t178942);
            double t178944 = b1p*t178943;
            double t178945 = pow(t178942,3.0/2.0);
            double t178946 = b3p*t178945;
            double t178947 = c*c;
            double t178948 = 1.0/pow(t178940,2.0/3.0);
            double t178949 = b4p*t178947*t178948;
            double t178950 = b2p*c*t178941;
            double t178951 = t178950+t178944+t178946+t178949;
            double t178952 = 1.0/pow(t178940,4.0/3.0);
            double t178953 = 1.0/c0p;
            double t178954 = 1.0/t178951;
            double t178955 = t178953*t178954*(1.0/2.0);
            double t178956 = t178955+1.0;
            double t178957 = a1p*c*t178941;
            double t178958 = t178957+1.0;
            double t178959 = rho_a[index]-rho_b[index];
            double t178960 = t178959*t178959;
            double t178961 = 1.0/t178940;
            double t178962 = t178961*t178959;
            double t178963 = two_13*2.0;
            double t178964 = t178963-2.0;
            double t178965 = 1.0/t178964;
            double t178966 = 1.0/c0f;
            double t178967 = b1f*t178943;
            double t178968 = b3f*t178945;
            double t178969 = b4f*t178947*t178948;
            double t178970 = b2f*c*t178941;
            double t178971 = t178970+t178967+t178968+t178969;
            double t178972 = 1.0/t178971;
            double t178973 = t178972*t178966*(1.0/2.0);
            double t178974 = t178973+1.0;
            double t178975 = log(t178974);
            double t178976 = a1f*c*t178941;
            double t178977 = t178976+1.0;
            double t178978 = log(t178956);
            double t178988 = c0f*t178975*t178977*2.0;
            double t178989 = c0p*t178958*t178978*2.0;
            double t178979 = t178988-t178989;
            double t178980 = t178962+1.0;
            double t178981 = pow(t178980,4.0/3.0);
            double t178982 = -t178962+1.0;
            double t178983 = pow(t178982,4.0/3.0);
            double t178984 = t178981+t178983-2.0;
            double t178985 = 1.0/(t178940*t178940);
            double t179016 = t178985*t178959;
            double t178986 = -t179016+t178961;
            double t178987 = 1.0/(t178940*t178940*t178940*t178940);
            double t178990 = t178960*t178960;
            double t178991 = 1.0/pow(t178940,5.0/3.0);
            double t178992 = 1.0/sqrt(t178942);
            double t178993 = 1.0/t178956;
            double t178994 = 1.0/(t178951*t178951);
            double t178995 = b4p*t178991*t178947*(2.0/3.0);
            double t178996 = b2p*c*t178952*(1.0/3.0);
            double t178997 = b1p*c*t178952*t178992*(1.0/6.0);
            double t178998 = b3p*c*t178943*t178952*(1.0/2.0);
            double t178999 = t178995+t178996+t178997+t178998;
            double t179000 = t178993*t178958*t178994*t178999;
            double t179001 = 1.0/(t178940*t178940*t178940*t178940*t178940);
            double t179002 = 1.0/d2fz0;
            double t179003 = 1.0/Aa;
            double t179004 = b1a*t178943;
            double t179005 = b3a*t178945;
            double t179006 = b4a*t178947*t178948;
            double t179007 = b2a*c*t178941;
            double t179008 = t179004+t179005+t179006+t179007;
            double t179009 = 1.0/t179008;
            double t179010 = t179003*t179009*(1.0/2.0);
            double t179011 = t179010+1.0;
            double t179012 = log(t179011);
            double t179013 = a1a*c*t178941;
            double t179014 = t179013+1.0;
            double t179015 = pow(t178980,1.0/3.0);
            double t179017 = t179015*t178986*(4.0/3.0);
            double t179018 = pow(t178982,1.0/3.0);
            double t179162 = t179018*t178986*(4.0/3.0);
            double t179019 = t179017-t179162;
            double t179020 = t178990*t178987;
            double t179021 = t179020-1.0;
            double t179022 = 1.0/pow(rho_a[index],1.0/3.0);
            double t179023 = c*t179022;
            double t179024 = sqrt(t179023);
            double t179025 = b1f*t179024;
            double t179026 = pow(t179023,3.0/2.0);
            double t179027 = b3f*t179026;
            double t179028 = 1.0/pow(rho_a[index],2.0/3.0);
            double t179029 = b4f*t179028*t178947;
            double t179030 = b2f*c*t179022;
            double t179031 = t179030+t179025+t179027+t179029;
            double t179032 = 1.0/pow(rho_a[index],4.0/3.0);
            double t179033 = b1p*t179024;
            double t179034 = b3p*t179026;
            double t179035 = b4p*t179028*t178947;
            double t179036 = b2p*c*t179022;
            double t179037 = t179033+t179034+t179035+t179036;
            double t179038 = 1.0/pow(rho_a[index],5.0/3.0);
            double t179039 = 1.0/sqrt(t179023);
            double t179040 = 1.0/t179031;
            double t179041 = t179040*t178966*(1.0/2.0);
            double t179042 = t179041+1.0;
            double t179043 = 1.0/t179037;
            double t179044 = t179043*t178953*(1.0/2.0);
            double t179045 = t179044+1.0;
            double t179046 = a1p*c*t179022;
            double t179047 = t179046+1.0;
            double t179048 = 1.0/t179045;
            double t179049 = 1.0/(t179037*t179037);
            double t179050 = b4p*t179038*t178947*(2.0/3.0);
            double t179051 = b2p*c*t179032*(1.0/3.0);
            double t179052 = b1p*c*t179032*t179039*(1.0/6.0);
            double t179053 = b3p*c*t179032*t179024*(1.0/2.0);
            double t179054 = t179050+t179051+t179052+t179053;
            double t179055 = t179054*t179047*t179048*t179049;
            double t179056 = log(t179045);
            double t179057 = pow(2.0,1.0/3.0);
            double t179058 = t179057*2.0;
            double t179059 = t179058-2.0;
            double t179060 = log(t179042);
            double t179061 = a1f*c*t179022;
            double t179062 = t179061+1.0;
            double t179063 = gcab*gcab;
            double t179067 = 1.0/pow(rho_a[index],8.0/3.0);
            double t179068 = gamma_aa[index]*t179067*(1.0/2.0);
            double t179069 = 1.0/pow(rho_b[index],8.0/3.0);
            double t179070 = gamma_bb[index]*t179069*(1.0/2.0);
            double t179064 = t179070+t179068;
            double t179065 = t179064*t179064;
            double t179066 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t179071 = t179063*t179063;
            double t179072 = t179065*t179065;
            double t179073 = t179063*t179065*6.0;
            double t179074 = gcab*t179063*t179064*t179065*4.0;
            double t179075 = t179071*t179072;
            double t179076 = gcab*t179064*4.0;
            double t179077 = t179073+t179074+t179075+t179076+1.0;
            double t179078 = gcab*t179064;
            double t179079 = t179078+1.0;
            double t179080 = t179063*t179065;
            double t179081 = gcab*t179064*2.0;
            double t179082 = t179080+t179081+1.0;
            double t179083 = t179063*t179065*3.0;
            double t179084 = gcab*t179063*t179064*t179065;
            double t179085 = gcab*t179064*3.0;
            double t179086 = t179083+t179084+t179085+1.0;
            double t179087 = t178960*t178965*t178984*t178959*t178987*t178979*4.0;
            double t179088 = t179016+t178961;
            double t179089 = 1.0/t178974;
            double t179090 = 1.0/(t178971*t178971);
            double t179091 = b4f*t178991*t178947*(2.0/3.0);
            double t179092 = b2f*c*t178952*(1.0/3.0);
            double t179093 = b1f*c*t178952*t178992*(1.0/6.0);
            double t179094 = b3f*c*t178943*t178952*(1.0/2.0);
            double t179095 = t179091+t179092+t179093+t179094;
            double t179096 = a1f*c*c0f*t178952*t178975*(2.0/3.0);
            double t179097 = t179001*t178990*4.0;
            double t179098 = t179015*t179088*(4.0/3.0);
            double t179161 = t179018*t179088*(4.0/3.0);
            double t179099 = -t179161+t179098;
            double t179100 = 1.0/t179011;
            double t179101 = 1.0/(t179008*t179008);
            double t179102 = b4a*t178991*t178947*(2.0/3.0);
            double t179103 = b2a*c*t178952*(1.0/3.0);
            double t179104 = b1a*c*t178952*t178992*(1.0/6.0);
            double t179105 = b3a*c*t178943*t178952*(1.0/2.0);
            double t179106 = t179102+t179103+t179104+t179105;
            double t179107 = t179100*t179002*t179101*t179021*t179014*t179106*t178965*t178984;
            double t179108 = 1.0/pow(rho_b[index],1.0/3.0);
            double t179109 = c*t179108;
            double t179110 = sqrt(t179109);
            double t179111 = b1f*t179110;
            double t179112 = pow(t179109,3.0/2.0);
            double t179113 = b3f*t179112;
            double t179114 = 1.0/pow(rho_b[index],2.0/3.0);
            double t179115 = b4f*t179114*t178947;
            double t179116 = b2f*c*t179108;
            double t179117 = t179111+t179113+t179115+t179116;
            double t179118 = 1.0/pow(rho_b[index],4.0/3.0);
            double t179119 = b1p*t179110;
            double t179120 = b3p*t179112;
            double t179121 = b4p*t179114*t178947;
            double t179122 = b2p*c*t179108;
            double t179123 = t179120+t179121+t179122+t179119;
            double t179124 = 1.0/pow(rho_b[index],5.0/3.0);
            double t179125 = 1.0/sqrt(t179109);
            double t179126 = 1.0/t179117;
            double t179127 = t179126*t178966*(1.0/2.0);
            double t179128 = t179127+1.0;
            double t179129 = 1.0/t179123;
            double t179130 = t179129*t178953*(1.0/2.0);
            double t179131 = t179130+1.0;
            double t179132 = a1p*c*t179108;
            double t179133 = t179132+1.0;
            double t179134 = 1.0/t179131;
            double t179135 = 1.0/(t179123*t179123);
            double t179136 = b4p*t179124*t178947*(2.0/3.0);
            double t179137 = b2p*c*t179118*(1.0/3.0);
            double t179138 = b1p*c*t179125*t179118*(1.0/6.0);
            double t179139 = b3p*c*t179110*t179118*(1.0/2.0);
            double t179140 = t179136+t179137+t179138+t179139;
            double t179141 = t179140*t179133*t179134*t179135;
            double t179142 = log(t179131);
            double t179143 = log(t179128);
            double t179144 = a1f*c*t179108;
            double t179145 = t179144+1.0;
            double t179146 = t178990*t178965*t178984*t178987*t178979;
            double t179147 = Aa*t179002*t179012*t179021*t179014*t178965*t178984*2.0;
            double t179148 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t179149 = 1.0/(t179086*t179086);
            double t179150 = 1.0/t179079;
            double t179151 = 1.0/(t179077*t179077);
            double t179152 = 1.0/(t179082*t179082);
            double t179153 = 1.0/t179077;
            double t179154 = 1.0/(t179079*t179079);
            double t179155 = 1.0/t179082;
            double t179156 = 1.0/t179086;
            double t179158 = a1p*c*c0p*t178952*t178978*(2.0/3.0);
            double t179163 = t179090*t179095*t179089*t178977;
            double t179157 = t179000-t179163-t179158+t179096;
            double t179159 = 1.0/pow(t178940,7.0/3.0);
            double t179160 = 1.0/pow(t178940,8.0/3.0);
            double t179164 = t178999*t178999;
            double t179165 = 1.0/pow(t178942,3.0/2.0);
            double t179166 = b4p*t179160*t178947*(1.0E1/9.0);
            double t179167 = b2p*c*t179159*(4.0/9.0);
            double t179168 = b1p*c*t179159*t178992*(2.0/9.0);
            double t179169 = b3p*c*t178943*t179159*(2.0/3.0);
            double t179170 = b3p*t179160*t178947*t178992*(1.0/1.2E1);
            double t179171 = t179170+t179166+t179167+t179168+t179169-b1p*t179160*t179165*t178947*(1.0/3.6E1);
            double t179172 = t179171*t178993*t178958*t178994;
            double t179173 = 1.0/(t178951*t178951*t178951);
            double t179174 = t179095*t179095;
            double t179175 = 1.0/(t178956*t178956);
            double t179176 = 1.0/(t178951*t178951*t178951*t178951);
            double t179177 = t179164*t179175*t179176*t178953*t178958*(1.0/2.0);
            double t179178 = 1.0/(t178940*t178940*t178940);
            double t179179 = a1p*c*t178952*t178993*t178994*t178999*(2.0/3.0);
            double t179180 = 1.0/(t178940*t178940*t178940*t178940*t178940*t178940);
            double t179181 = t178960*t178959*t178987*4.0;
            double t179182 = t179181+t179097;
            double t179183 = t179018*t179178*t178959*(8.0/3.0);
            double t179184 = 1.0/pow(t178980,2.0/3.0);
            double t179185 = t179184*t179088*t178986*(4.0/9.0);
            double t179186 = 1.0/pow(t178982,2.0/3.0);
            double t179187 = t179186*t179088*t178986*(4.0/9.0);
            double t179188 = t179183+t179185+t179187-t179015*t179178*t178959*(8.0/3.0);
            double t179189 = t179181-t179097;
            double t179190 = t179106*t179106;
            double t179191 = t178990*t179099*t178965*t178987*t178979;
            double t179192 = t179019*t178990*t178965*t178987*t178979;
            double t179193 = Aa*t179002*t179012*t179014*t179182*t178965*t178984*2.0;
            double t179194 = Aa*t179002*t179012*t179021*t179014*t179099*t178965*2.0;
            double t179195 = Aa*t179002*t179012*t179021*t179014*t179019*t178965*2.0;
            double t179196 = c0f*t179060*t179062*2.0;
            double t179198 = c0p*t179047*t179056*2.0;
            double t179197 = t179196-t179198;
            double t179199 = c0f*t179143*t179145*2.0;
            double t179201 = c0p*t179133*t179142*2.0;
            double t179200 = -t179201+t179199;
            double t179202 = gamma_aa[index]*gcab*t179148*(8.0/3.0);
            double t179203 = gamma_aa[index]*t179063*t179064*t179148*(8.0/3.0);
            double t179204 = t179202+t179203;
            double t179205 = gamma_bb[index]*gcab*t179066*(8.0/3.0);
            double t179206 = gamma_bb[index]*t179063*t179064*t179066*(8.0/3.0);
            double t179207 = t179205+t179206;
            double t179208 = gamma_aa[index]*gcab*t179148*(1.6E1/3.0);
            double t179209 = gamma_aa[index]*gcab*t179063*t179065*t179148*1.6E1;
            double t179210 = gamma_aa[index]*t179071*t179064*t179065*t179148*(1.6E1/3.0);
            double t179211 = gamma_aa[index]*t179063*t179064*t179148*1.6E1;
            double t179212 = t179210+t179211+t179208+t179209;
            double t179213 = gamma_bb[index]*gcab*t179066*(1.6E1/3.0);
            double t179214 = gamma_bb[index]*gcab*t179063*t179065*t179066*1.6E1;
            double t179215 = gamma_bb[index]*t179071*t179064*t179065*t179066*(1.6E1/3.0);
            double t179216 = gamma_bb[index]*t179063*t179064*t179066*1.6E1;
            double t179217 = t179213+t179214+t179215+t179216;
            double t179218 = gamma_aa[index]*gcab*t179148*4.0;
            double t179219 = gamma_aa[index]*gcab*t179063*t179065*t179148*4.0;
            double t179220 = gamma_aa[index]*t179063*t179064*t179148*8.0;
            double t179221 = t179220+t179218+t179219;
            double t179222 = gamma_bb[index]*gcab*t179066*4.0;
            double t179223 = gamma_bb[index]*gcab*t179063*t179065*t179066*4.0;
            double t179224 = gamma_bb[index]*t179063*t179064*t179066*8.0;
            double t179225 = t179222+t179223+t179224;
            v_rho_a_rho_b_[index] = (t179146+t179147+t178989+rho_a[index]*(-t179055+t179059*t178965*(t179055- \
               (1.0/(t179031*t179031)*t179062*(b2f*c*t179032*(1.0/3.0)+b4f*t179038*t178947*(2.0/3.0)+b1f*c*t179032* \
               t179039*(1.0/6.0)+b3f*c*t179032*t179024*(1.0/2.0)))/t179042+a1f*c*c0f*t179032*t179060*(2.0/3.0)-a1p* \
               c*c0p*t179032*t179056*(2.0/3.0))+a1p*c*c0p*t179032*t179056*(2.0/3.0))+t178940*(t179000+t179107+t179192+ \
               t179087+t179195-a1p*c*c0p*t178952*t178978*(2.0/3.0)-t179001*t178990*t178965*t178984*t178979*4.0-t179157* \
               t178990*t178965*t178984*t178987-Aa*t179002*t179012*t179014*t178965*t178984*(t179097-t178960*t178959* \
               t178987*4.0)*2.0-Aa*a1a*c*t179002*t179012*t179021*t178952*t178965*t178984*(2.0/3.0))-c0p*t179047*t179056* \
               2.0-t179059*t179197*t178965)*(ccab1*gamma_bb[index]*gcab*t179150*t179066*(4.0/3.0)-ccab4*t179151*t179071* \
               t179072*t179217-ccab2*t179152*t179063*t179207*t179065-ccab1*gamma_bb[index]*t179063*t179064*t179154* \
               t179066*(4.0/3.0)+ccab2*gamma_bb[index]*t179063*t179064*t179155*t179066*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t179063*t179065*t179066*t179156*4.0+ccab4*gamma_bb[index]*t179071*t179153*t179064*t179065*t179066* \
               (1.6E1/3.0)-ccab3*gcab*t179063*t179225*t179064*t179065*t179149)+(ccab0+ccab1*gcab*t179150*t179064+ \
               ccab4*t179071*t179072*t179153+ccab2*t179063*t179065*t179155+ccab3*gcab*t179063*t179064*t179065*t179156) \
               *(t179191-t179192+t179193+t179194-t179195+t178940*(t179172+t179177+t179179-t179164*t179173*t178993* \
               t178958*2.0+t179019*t178990*t178965*t178987*(t179000-t179163-t179158+t179096)-a1p*c*c0p*t179159*t178978* \
               (8.0/9.0)-t178990*t178965*t178984*t178987*(t179172+t179177+t179179-t179164*t179173*t178993*t178958* \
               2.0+t179174*1.0/(t178971*t178971*t178971)*t179089*t178977*2.0-t179090*t179089*t178977*(b2f*c*t179159* \
               (4.0/9.0)+b4f*t179160*t178947*(1.0E1/9.0)+b1f*c*t179159*t178992*(2.0/9.0)+b3f*c*t178943*t179159*(2.0/ \
               3.0)-b1f*t179160*t179165*t178947*(1.0/3.6E1)+b3f*t179160*t178947*t178992*(1.0/1.2E1))-t179174*1.0/ \
               (t178971*t178971*t178971*t178971)*1.0/(t178974*t178974)*t178966*t178977*(1.0/2.0)+a1f*c*c0f*t179159* \
               t178975*(8.0/9.0)-a1p*c*c0p*t179159*t178978*(8.0/9.0)-a1f*c*t179090*t179095*t178952*t179089*(2.0/3.0) \
               )-t179001*t179157*t178990*t178965*t178984*8.0+t179001*t179019*t178990*t178965*t178979*4.0-t179001* \
               t178990*t179099*t178965*t178979*4.0-t179180*t178990*t178965*t178984*t178979*2.0E1-t179157*t178990* \
               t179099*t178965*t178987+t178960*t178965*t178984*t178987*t178979*1.2E1+t178990*t179188*t178965*t178987* \
               t178979+t179019*t178960*t178965*t178959*t178987*t178979*4.0+t178960*t179099*t178965*t178959*t178987* \
               t178979*4.0+Aa*t179002*t179012*t179021*t179014*t179188*t178965*2.0+Aa*t179002*t179012*t179014*t179019* \
               t179182*t178965*2.0+Aa*t179002*t179012*t179014*t179099*t179189*t178965*2.0-Aa*t179002*t179012*t179014* \
               t178965*t178984*(t179180*t178990*2.0E1-t178960*t178987*1.2E1)*2.0-t179100*t179002*t179101*t179021* \
               t179014*t179106*t179019*t178965+t179100*t179002*t179101*t179021*t179014*t179106*t179099*t178965+t179100* \
               t179002*t179101*t179014*t179106*t179182*t178965*t178984-t179100*t179002*t179101*t179014*t179106*t179189* \
               t178965*t178984-t179100*t179002*t179021*t179014*1.0/(t179008*t179008*t179008)*t179190*t178965*t178984* \
               2.0+t179100*t179002*t179101*t179021*t179014*t178965*t178984*(b2a*c*t179159*(4.0/9.0)+b4a*t179160*t178947* \
               (1.0E1/9.0)+b1a*c*t179159*t178992*(2.0/9.0)+b3a*c*t178943*t179159*(2.0/3.0)-b1a*t179160*t179165*t178947* \
               (1.0/3.6E1)+b3a*t179160*t178947*t178992*(1.0/1.2E1))+Aa*a1a*c*t179002*t179012*t179021*t179019*t178952* \
               t178965*(2.0/3.0)-Aa*a1a*c*t179002*t179012*t179021*t178952*t179099*t178965*(2.0/3.0)-Aa*a1a*c*t179002* \
               t179012*t179021*t179159*t178965*t178984*(8.0/9.0)-Aa*a1a*c*t179002*t179012*t179182*t178952*t178965* \
               t178984*(2.0/3.0)+Aa*a1a*c*t179002*t179012*t178952*t179189*t178965*t178984*(2.0/3.0)+t179002*1.0/(t179011* \
               t179011)*t179003*t179021*t179014*1.0/(t179008*t179008*t179008*t179008)*t179190*t178965*t178984*(1.0/ \
               2.0)+a1a*c*t179100*t179002*t179101*t179021*t179106*t178952*t178965*t178984*(2.0/3.0))-t178993*t178958* \
               t178994*t178999*2.0+t178990*t178965*t178984*t178987*(t179000-t179163-t179158+t179096)*2.0+a1p*c*c0p* \
               t178952*t178978*(4.0/3.0)+t179001*t178990*t178965*t178984*t178979*8.0-Aa*t179002*t179012*t179014*t179189* \
               t178965*t178984*2.0-t179100*t179002*t179101*t179021*t179014*t179106*t178965*t178984*2.0+Aa*a1a*c*t179002* \
               t179012*t179021*t178952*t178965*t178984*(4.0/3.0))-(rho_b[index]*(t179201+t179200*t179059*t178965) \
               +rho_a[index]*(t179198+t179059*t179197*t178965)-t178940*(t179146+t179147+t178989))*(ccab4*t179151* \
               t179071*t179072*(gamma_aa[index]*gamma_bb[index]*t179063*t179066*t179148*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*t179071*t179065*t179066*t179148*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t179063* \
               t179064*t179066*t179148*(1.28E2/3.0))-ccab2*t179204*t179063*t179207*1.0/(t179082*t179082*t179082)* \
               t179065*2.0-ccab4*t179212*t179071*t179072*t179217*1.0/(t179077*t179077*t179077)*2.0+ccab3*gcab*t179063* \
               t179064*t179065*t179149*(gamma_aa[index]*gamma_bb[index]*t179063*t179066*t179148*(3.2E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t179063*t179064*t179066*t179148*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]* \
               t179063*t179154*t179066*t179148*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t179063*t179155* \
               t179066*t179148*(3.2E1/9.0)+ccab2*gamma_bb[index]*t179204*t179152*t179063*t179064*t179066*(8.0/3.0) \
               +ccab2*gamma_aa[index]*t179152*t179063*t179207*t179064*t179148*(8.0/3.0)-ccab3*gcab*t179221*t179063* \
               t179225*t179064*t179065*1.0/(t179086*t179086*t179086)*2.0+ccab2*gamma_aa[index]*gamma_bb[index]*t179071* \
               t179152*t179065*t179066*t179148*(3.2E1/9.0)-ccab4*gamma_aa[index]*gamma_bb[index]*t179071*t179153* \
               t179065*t179066*t179148*(6.4E1/3.0)+ccab3*gamma_bb[index]*gcab*t179221*t179063*t179065*t179066*t179149* \
               4.0+ccab3*gamma_aa[index]*gcab*t179063*t179225*t179065*t179148*t179149*4.0+ccab4*gamma_bb[index]*t179212* \
               t179151*t179071*t179064*t179065*t179066*(1.6E1/3.0)+ccab4*gamma_aa[index]*t179151*t179071*t179064* \
               t179217*t179065*t179148*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t179063*t179064*t179066* \
               t179156*t179148*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t179063*t179064*t179066*t179148* \
               1.0/(t179079*t179079*t179079)*(3.2E1/9.0))+(t179146+t179147+t178989-t178940*(-t179000-t179107+t179191+ \
               t179193+t179158+t179194+t179087+t179001*t178990*t178965*t178984*t178979*4.0+t179157*t178990*t178965* \
               t178984*t178987+Aa*a1a*c*t179002*t179012*t179021*t178952*t178965*t178984*(2.0/3.0))+rho_b[index]*(- \
               t179141+t179059*t178965*(t179141-(1.0/(t179117*t179117)*t179145*(b2f*c*t179118*(1.0/3.0)+b4f*t179124* \
               t178947*(2.0/3.0)+b1f*c*t179125*t179118*(1.0/6.0)+b3f*c*t179110*t179118*(1.0/2.0)))/t179128+a1f*c* \
               c0f*t179143*t179118*(2.0/3.0)-a1p*c*c0p*t179142*t179118*(2.0/3.0))+a1p*c*c0p*t179142*t179118*(2.0/ \
               3.0))-c0p*t179133*t179142*2.0-t179200*t179059*t178965)*(ccab1*gamma_aa[index]*gcab*t179150*t179148* \
               (4.0/3.0)-ccab4*t179212*t179151*t179071*t179072-ccab2*t179204*t179152*t179063*t179065-ccab1*gamma_aa[index]* \
               t179063*t179064*t179154*t179148*(4.0/3.0)+ccab2*gamma_aa[index]*t179063*t179064*t179155*t179148*(8.0/ \
               3.0)+ccab3*gamma_aa[index]*gcab*t179063*t179065*t179156*t179148*4.0+ccab4*gamma_aa[index]*t179071* \
               t179153*t179064*t179065*t179148*(1.6E1/3.0)-ccab3*gcab*t179221*t179063*t179064*t179065*t179149);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t179227 = rho_a[index]+rho_b[index];
            double t179228 = 1.0/pow(t179227,1.0/3.0);
            double t179229 = c*t179228;
            double t179230 = sqrt(t179229);
            double t179231 = b1p*t179230;
            double t179232 = pow(t179229,3.0/2.0);
            double t179233 = b3p*t179232;
            double t179234 = c*c;
            double t179235 = 1.0/pow(t179227,2.0/3.0);
            double t179236 = b4p*t179234*t179235;
            double t179237 = b2p*c*t179228;
            double t179238 = t179231+t179233+t179236+t179237;
            double t179239 = 1.0/pow(t179227,4.0/3.0);
            double t179240 = 1.0/c0p;
            double t179241 = 1.0/t179238;
            double t179242 = t179240*t179241*(1.0/2.0);
            double t179243 = t179242+1.0;
            double t179244 = a1p*c*t179228;
            double t179245 = t179244+1.0;
            double t179246 = rho_a[index]-rho_b[index];
            double t179247 = t179246*t179246;
            double t179248 = 1.0/t179227;
            double t179249 = t179246*t179248;
            double t179250 = two_13*2.0;
            double t179251 = t179250-2.0;
            double t179252 = 1.0/t179251;
            double t179253 = 1.0/c0f;
            double t179254 = b1f*t179230;
            double t179255 = b3f*t179232;
            double t179256 = b4f*t179234*t179235;
            double t179257 = b2f*c*t179228;
            double t179258 = t179254+t179255+t179256+t179257;
            double t179259 = 1.0/t179258;
            double t179260 = t179253*t179259*(1.0/2.0);
            double t179261 = t179260+1.0;
            double t179262 = log(t179261);
            double t179263 = a1f*c*t179228;
            double t179264 = t179263+1.0;
            double t179265 = log(t179243);
            double t179276 = c0f*t179262*t179264*2.0;
            double t179277 = c0p*t179245*t179265*2.0;
            double t179266 = t179276-t179277;
            double t179267 = t179249+1.0;
            double t179268 = pow(t179267,4.0/3.0);
            double t179269 = -t179249+1.0;
            double t179270 = pow(t179269,4.0/3.0);
            double t179271 = t179270+t179268-2.0;
            double t179272 = 1.0/(t179227*t179227);
            double t179273 = t179272*t179246;
            double t179274 = t179273+t179248;
            double t179275 = 1.0/(t179227*t179227*t179227*t179227);
            double t179278 = t179247*t179247;
            double t179279 = 1.0/pow(t179227,5.0/3.0);
            double t179280 = 1.0/sqrt(t179229);
            double t179281 = 1.0/t179243;
            double t179282 = 1.0/(t179238*t179238);
            double t179283 = b4p*t179234*t179279*(2.0/3.0);
            double t179284 = b2p*c*t179239*(1.0/3.0);
            double t179285 = b1p*c*t179280*t179239*(1.0/6.0);
            double t179286 = b3p*c*t179230*t179239*(1.0/2.0);
            double t179287 = t179283+t179284+t179285+t179286;
            double t179288 = 1.0/(t179227*t179227*t179227*t179227*t179227);
            double t179289 = 1.0/d2fz0;
            double t179290 = 1.0/Aa;
            double t179291 = b1a*t179230;
            double t179292 = b3a*t179232;
            double t179293 = b4a*t179234*t179235;
            double t179294 = b2a*c*t179228;
            double t179295 = t179291+t179292+t179293+t179294;
            double t179296 = 1.0/t179295;
            double t179297 = t179290*t179296*(1.0/2.0);
            double t179298 = t179297+1.0;
            double t179299 = log(t179298);
            double t179300 = a1a*c*t179228;
            double t179301 = t179300+1.0;
            double t179302 = pow(t179267,1.0/3.0);
            double t179303 = t179302*t179274*(4.0/3.0);
            double t179304 = pow(t179269,1.0/3.0);
            double t179380 = t179304*t179274*(4.0/3.0);
            double t179305 = t179303-t179380;
            double t179306 = t179275*t179278;
            double t179307 = t179306-1.0;
            double t179308 = 1.0/pow(rho_b[index],1.0/3.0);
            double t179309 = c*t179308;
            double t179310 = sqrt(t179309);
            double t179311 = b1f*t179310;
            double t179312 = pow(t179309,3.0/2.0);
            double t179313 = b3f*t179312;
            double t179314 = 1.0/pow(rho_b[index],2.0/3.0);
            double t179315 = b4f*t179314*t179234;
            double t179316 = b2f*c*t179308;
            double t179317 = t179311+t179313+t179315+t179316;
            double t179318 = 1.0/pow(rho_b[index],4.0/3.0);
            double t179319 = b1p*t179310;
            double t179320 = b3p*t179312;
            double t179321 = b4p*t179314*t179234;
            double t179322 = b2p*c*t179308;
            double t179323 = t179320+t179321+t179322+t179319;
            double t179324 = 1.0/pow(rho_b[index],5.0/3.0);
            double t179325 = 1.0/sqrt(t179309);
            double t179326 = 1.0/t179317;
            double t179327 = t179253*t179326*(1.0/2.0);
            double t179328 = t179327+1.0;
            double t179329 = 1.0/t179323;
            double t179330 = t179240*t179329*(1.0/2.0);
            double t179331 = t179330+1.0;
            double t179332 = a1p*c*t179308;
            double t179333 = t179332+1.0;
            double t179334 = 1.0/t179331;
            double t179335 = 1.0/(t179323*t179323);
            double t179336 = b4p*t179234*t179324*(2.0/3.0);
            double t179337 = b2p*c*t179318*(1.0/3.0);
            double t179338 = b1p*c*t179325*t179318*(1.0/6.0);
            double t179339 = b3p*c*t179310*t179318*(1.0/2.0);
            double t179340 = t179336+t179337+t179338+t179339;
            double t179341 = t179340*t179333*t179334*t179335;
            double t179342 = log(t179331);
            double t179343 = pow(2.0,1.0/3.0);
            double t179344 = t179343*2.0;
            double t179345 = t179344-2.0;
            double t179346 = log(t179328);
            double t179347 = a1f*c*t179308;
            double t179348 = t179347+1.0;
            double t179349 = gcab*gcab;
            double t179353 = 1.0/pow(rho_a[index],8.0/3.0);
            double t179354 = gamma_aa[index]*t179353*(1.0/2.0);
            double t179355 = 1.0/pow(rho_b[index],8.0/3.0);
            double t179356 = gamma_bb[index]*t179355*(1.0/2.0);
            double t179350 = t179354+t179356;
            double t179351 = t179350*t179350;
            double t179352 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t179357 = t179349*t179349;
            double t179358 = t179351*t179351;
            double t179359 = t179351*t179349*6.0;
            double t179360 = gcab*t179350*t179351*t179349*4.0;
            double t179361 = t179357*t179358;
            double t179362 = gcab*t179350*4.0;
            double t179363 = t179360+t179361+t179362+t179359+1.0;
            double t179364 = gcab*t179350;
            double t179365 = t179364+1.0;
            double t179366 = t179351*t179349;
            double t179367 = gcab*t179350*2.0;
            double t179368 = t179366+t179367+1.0;
            double t179369 = t179351*t179349*3.0;
            double t179370 = gcab*t179350*t179351*t179349;
            double t179371 = gcab*t179350*3.0;
            double t179372 = t179370+t179371+t179369+1.0;
            double t179373 = a1p*c*c0p*t179265*t179239*(2.0/3.0);
            double t179374 = 1.0/t179368;
            double t179375 = 1.0/t179372;
            double t179376 = 1.0/t179365;
            double t179377 = 1.0/t179363;
            double t179378 = 1.0/pow(t179227,7.0/3.0);
            double t179379 = 1.0/pow(t179227,8.0/3.0);
            double t179381 = 1.0/t179261;
            double t179382 = 1.0/(t179258*t179258);
            double t179383 = b4f*t179234*t179279*(2.0/3.0);
            double t179384 = b2f*c*t179239*(1.0/3.0);
            double t179385 = b1f*c*t179280*t179239*(1.0/6.0);
            double t179386 = b3f*c*t179230*t179239*(1.0/2.0);
            double t179387 = t179383+t179384+t179385+t179386;
            double t179388 = t179264*t179381*t179382*t179387;
            double t179390 = t179245*t179281*t179282*t179287;
            double t179391 = a1f*c*c0f*t179262*t179239*(2.0/3.0);
            double t179389 = -t179390+t179373-t179391+t179388;
            double t179392 = t179287*t179287;
            double t179393 = 1.0/pow(t179229,3.0/2.0);
            double t179394 = b4p*t179234*t179379*(1.0E1/9.0);
            double t179395 = b2p*c*t179378*(4.0/9.0);
            double t179396 = b1p*c*t179280*t179378*(2.0/9.0);
            double t179397 = b3p*c*t179230*t179378*(2.0/3.0);
            double t179398 = b3p*t179234*t179280*t179379*(1.0/1.2E1);
            double t179399 = t179394+t179395+t179396+t179397+t179398-b1p*t179234*t179393*t179379*(1.0/3.6E1);
            double t179400 = 1.0/(t179238*t179238*t179238);
            double t179401 = t179400*t179245*t179281*t179392*2.0;
            double t179402 = t179387*t179387;
            double t179403 = 1.0/(t179243*t179243);
            double t179404 = 1.0/(t179238*t179238*t179238*t179238);
            double t179405 = t179272*2.0;
            double t179406 = 1.0/(t179227*t179227*t179227);
            double t179407 = t179406*t179246*2.0;
            double t179408 = t179405+t179407;
            double t179409 = t179274*t179274;
            double t179410 = a1p*c*c0p*t179265*t179378*(8.0/9.0);
            double t179411 = 1.0/(t179227*t179227*t179227*t179227*t179227*t179227);
            double t179412 = t179246*t179247*t179275*4.0;
            double t179413 = t179278*t179288*4.0;
            double t179414 = t179412+t179413;
            double t179415 = t179302*t179408*(4.0/3.0);
            double t179416 = 1.0/pow(t179267,2.0/3.0);
            double t179417 = t179416*t179409*(4.0/9.0);
            double t179418 = 1.0/pow(t179269,2.0/3.0);
            double t179419 = t179409*t179418*(4.0/9.0);
            double t179420 = t179415+t179417+t179419-t179304*t179408*(4.0/3.0);
            double t179421 = 1.0/t179298;
            double t179422 = 1.0/(t179295*t179295);
            double t179423 = b4a*t179234*t179279*(2.0/3.0);
            double t179424 = b2a*c*t179239*(1.0/3.0);
            double t179425 = b1a*c*t179280*t179239*(1.0/6.0);
            double t179426 = b3a*c*t179230*t179239*(1.0/2.0);
            double t179427 = t179423+t179424+t179425+t179426;
            double t179428 = t179427*t179427;
            double t179429 = 1.0/t179328;
            double t179430 = b4f*t179234*t179324*(2.0/3.0);
            double t179431 = b2f*c*t179318*(1.0/3.0);
            double t179432 = b1f*c*t179325*t179318*(1.0/6.0);
            double t179433 = b3f*c*t179310*t179318*(1.0/2.0);
            double t179434 = t179430+t179431+t179432+t179433;
            double t179435 = 1.0/(t179317*t179317);
            double t179436 = 1.0/pow(rho_b[index],7.0/3.0);
            double t179437 = 1.0/pow(t179309,3.0/2.0);
            double t179438 = t179434*t179434;
            double t179439 = t179340*t179340;
            double t179440 = 1.0/(t179323*t179323*t179323);
            double t179441 = t179440*t179333*t179334*t179439*2.0;
            double t179442 = b4p*t179234*t179355*(1.0E1/9.0);
            double t179443 = b2p*c*t179436*(4.0/9.0);
            double t179444 = b3p*t179234*t179325*t179355*(1.0/1.2E1);
            double t179445 = b1p*c*t179325*t179436*(2.0/9.0);
            double t179446 = b3p*c*t179310*t179436*(2.0/3.0);
            double t179563 = b1p*t179234*t179355*t179437*(1.0/3.6E1);
            double t179447 = t179442+t179443+t179444+t179445+t179446-t179563;
            double t179448 = 1.0/(t179331*t179331);
            double t179449 = 1.0/(t179323*t179323*t179323*t179323);
            double t179450 = a1p*c*c0p*t179342*t179436*(8.0/9.0);
            double t179451 = a1f*c*c0f*t179318*t179346*(2.0/3.0);
            double t179452 = a1p*c*c0p*t179342*t179318*(2.0/3.0);
            double t179524 = t179434*t179435*t179348*t179429;
            double t179453 = t179341+t179451-t179452-t179524;
            double t179454 = gamma_bb[index]*gamma_bb[index];
            double t179455 = gcaa*gcaa;
            double t179456 = t179454*t179454;
            double t179457 = t179455*t179455;
            double t179458 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t179459 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t179460 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t179461 = 1.0/pow(rho_a[index],1.0/3.0);
            double t179462 = c*t179461;
            double t179463 = sqrt(t179462);
            double t179464 = pow(t179462,3.0/2.0);
            double t179465 = 1.0/pow(rho_a[index],2.0/3.0);
            double t179466 = b1p*t179463;
            double t179467 = b3p*t179464;
            double t179468 = b4p*t179234*t179465;
            double t179469 = b2p*c*t179461;
            double t179470 = t179466+t179467+t179468+t179469;
            double t179471 = 1.0/t179470;
            double t179472 = t179240*t179471*(1.0/2.0);
            double t179473 = t179472+1.0;
            double t179474 = log(t179473);
            double t179475 = a1p*c*t179461;
            double t179476 = t179475+1.0;
            double t179477 = c0p*t179474*t179476*2.0;
            double t179478 = c0f*t179346*t179348*2.0;
            double t179480 = c0p*t179333*t179342*2.0;
            double t179479 = -t179480+t179478;
            double t179481 = t179252*t179271*t179266*t179275*t179278;
            double t179482 = Aa*t179301*t179252*t179271*t179307*t179289*t179299*2.0;
            double t179483 = gamma_bb[index]*gcab*t179352*(1.6E1/3.0);
            double t179484 = gamma_bb[index]*gcab*t179351*t179352*t179349*1.6E1;
            double t179485 = gamma_bb[index]*t179350*t179351*t179352*t179357*(1.6E1/3.0);
            double t179486 = gamma_bb[index]*t179350*t179352*t179349*1.6E1;
            double t179487 = t179483+t179484+t179485+t179486;
            double t179488 = 1.0/(t179365*t179365);
            double t179489 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t179490 = gamma_bb[index]*gcab*t179352*(8.0/3.0);
            double t179491 = gamma_bb[index]*t179350*t179352*t179349*(8.0/3.0);
            double t179492 = t179490+t179491;
            double t179493 = 1.0/(t179372*t179372);
            double t179494 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t179495 = 1.0/(t179363*t179363);
            double t179496 = 1.0/(t179368*t179368);
            double t179497 = gamma_bb[index]*gcab*t179352*4.0;
            double t179498 = gamma_bb[index]*gcab*t179351*t179352*t179349*4.0;
            double t179499 = gamma_bb[index]*t179350*t179352*t179349*8.0;
            double t179500 = t179497+t179498+t179499;
            double t179501 = t179252*t179345*t179479;
            double t179502 = t179501+t179480;
            double t179503 = gamma_bb[index]*gcaa*t179355*4.0;
            double t179504 = gamma_bb[index]*gcaa*t179454*t179455*t179459*4.0;
            double t179505 = t179460*t179454*t179455*6.0;
            double t179506 = t179456*t179457*t179458;
            double t179507 = t179503+t179504+t179505+t179506+1.0;
            double t179508 = 1.0/t179507;
            double t179509 = gamma_bb[index]*gcaa*t179355;
            double t179510 = t179509+1.0;
            double t179511 = 1.0/t179510;
            double t179512 = gamma_bb[index]*gcaa*t179355*3.0;
            double t179513 = gamma_bb[index]*gcaa*t179454*t179455*t179459;
            double t179514 = t179460*t179454*t179455*3.0;
            double t179515 = t179512+t179513+t179514+1.0;
            double t179516 = 1.0/t179515;
            double t179517 = gamma_bb[index]*gcaa*t179355*2.0;
            double t179518 = t179460*t179454*t179455;
            double t179519 = t179517+t179518+1.0;
            double t179520 = 1.0/t179519;
            double t179521 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t179522 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t179523 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t179525 = t179252*t179345*t179453;
            double t179526 = ccaa4*t179523*t179508*t179456*t179457*(3.2E1/3.0);
            double t179527 = ccaa1*gamma_bb[index]*gcaa*t179511*t179352*(8.0/3.0);
            double t179528 = ccaa3*gamma_bb[index]*gcaa*t179522*t179516*t179454*t179455*8.0;
            double t179529 = ccaa2*t179520*t179521*t179454*t179455*(1.6E1/3.0);
            double t179530 = 1.0/(t179510*t179510);
            double t179531 = gamma_bb[index]*gcaa*t179352*8.0;
            double t179532 = gamma_bb[index]*gcaa*t179522*t179454*t179455*8.0;
            double t179533 = t179521*t179454*t179455*1.6E1;
            double t179534 = t179531+t179532+t179533;
            double t179535 = 1.0/(t179515*t179515);
            double t179536 = gamma_bb[index]*gcaa*t179352*(3.2E1/3.0);
            double t179537 = gamma_bb[index]*gcaa*t179522*t179454*t179455*3.2E1;
            double t179538 = t179521*t179454*t179455*3.2E1;
            double t179539 = t179523*t179456*t179457*(3.2E1/3.0);
            double t179540 = t179536+t179537+t179538+t179539;
            double t179541 = 1.0/(t179507*t179507);
            double t179542 = gamma_bb[index]*gcaa*t179352*(1.6E1/3.0);
            double t179543 = t179521*t179454*t179455*(1.6E1/3.0);
            double t179544 = t179542+t179543;
            double t179545 = 1.0/(t179519*t179519);
            double t179546 = t179526+t179527+t179528+t179529-ccaa1*t179521*t179530*t179454*t179455*(8.0/3.0)- \
               ccaa2*t179460*t179454*t179544*t179455*t179545-ccaa4*t179540*t179541*t179456*t179457*t179458-ccaa3* \
               gamma_bb[index]*gcaa*t179534*t179454*t179535*t179455*t179459;
            double t179547 = -t179341+t179452+t179525;
            double t179548 = 1.0/pow(rho_b[index],1.0E1);
            double t179549 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t179550 = ccaa4*t179508*t179456*t179457*t179458;
            double t179551 = ccaa1*gamma_bb[index]*gcaa*t179511*t179355;
            double t179552 = ccaa3*gamma_bb[index]*gcaa*t179516*t179454*t179455*t179459;
            double t179553 = ccaa2*t179520*t179460*t179454*t179455;
            double t179554 = ccaa0+t179550+t179551+t179552+t179553;
            double t179555 = 1.0/(t179317*t179317*t179317);
            double t179556 = b4f*t179234*t179355*(1.0E1/9.0);
            double t179557 = b2f*c*t179436*(4.0/9.0);
            double t179558 = b3f*t179234*t179325*t179355*(1.0/1.2E1);
            double t179559 = b1f*c*t179325*t179436*(2.0/9.0);
            double t179560 = b3f*c*t179310*t179436*(2.0/3.0);
            double t179561 = t179560+t179556+t179557+t179558+t179559-b1f*t179234*t179355*t179437*(1.0/3.6E1);
            double t179562 = t179435*t179561*t179348*t179429;
            double t179564 = t179333*t179334*t179335*t179447;
            double t179565 = 1.0/(t179328*t179328);
            double t179566 = 1.0/(t179317*t179317*t179317*t179317);
            double t179567 = t179253*t179348*t179438*t179565*t179566*(1.0/2.0);
            double t179568 = t179240*t179333*t179439*t179448*t179449*(1.0/2.0);
            double t179569 = a1f*c*t179434*t179318*t179435*t179429*(2.0/3.0);
            double t179570 = a1p*c*t179340*t179334*t179335*t179318*(2.0/3.0);
            double t179571 = gx*gx;
            double t179572 = t179571*t179571;
            double t179573 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t179574 = gamma_bb[index]*gx*t179355*4.0;
            double t179575 = gamma_bb[index]*gx*t179454*t179571*t179459*4.0;
            double t179576 = t179460*t179454*t179571*6.0;
            double t179577 = t179572*t179456*t179458;
            double t179578 = t179574+t179575+t179576+t179577+1.0;
            double t179579 = 1.0/t179578;
            double t179580 = cx4*t179572*t179456*t179458*t179579*(4.190715359480463E15/2.251799813685248E15);
            double t179581 = gamma_bb[index]*gx*t179355;
            double t179582 = t179581+1.0;
            double t179583 = 1.0/t179582;
            double t179584 = cx1*gamma_bb[index]*gx*t179355*t179583*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179585 = gamma_bb[index]*gx*t179355*3.0;
            double t179586 = gamma_bb[index]*gx*t179454*t179571*t179459;
            double t179587 = t179460*t179454*t179571*3.0;
            double t179588 = t179585+t179586+t179587+1.0;
            double t179589 = 1.0/t179588;
            double t179590 = cx3*gamma_bb[index]*gx*t179454*t179571*t179459*t179589*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179591 = gamma_bb[index]*gx*t179355*2.0;
            double t179592 = t179460*t179454*t179571;
            double t179593 = t179591+t179592+1.0;
            double t179594 = 1.0/t179593;
            double t179595 = cx2*t179460*t179454*t179571*t179594*(4.190715359480463E15/2.251799813685248E15);
            double t179596 = t179580+t179590+t179573+t179584+t179595;
            double t179597 = 1.0/(omega*omega);
            double t179598 = pow(rho_b[index],2.0/3.0);
            double t179599 = 1.0/t179596;
            double t179618 = t179597*t179598*t179599*(1.4000771998813E29/4.951760157141521E27);
            double t179600 = exp(-t179618);
            double t179601 = sqrt(t179596);
            double t179609 = gamma_bb[index]*gx*t179352*(3.2E1/3.0);
            double t179610 = gamma_bb[index]*gx*t179522*t179454*t179571*3.2E1;
            double t179611 = t179521*t179454*t179571*3.2E1;
            double t179612 = t179523*t179572*t179456*(3.2E1/3.0);
            double t179602 = t179610+t179611+t179612+t179609;
            double t179614 = gamma_bb[index]*gx*t179352*(1.6E1/3.0);
            double t179615 = t179521*t179454*t179571*(1.6E1/3.0);
            double t179603 = t179614+t179615;
            double t179604 = 1.0/(t179588*t179588);
            double t179605 = gamma_bb[index]*gx*t179352*8.0;
            double t179606 = gamma_bb[index]*gx*t179522*t179454*t179571*8.0;
            double t179607 = t179521*t179454*t179571*1.6E1;
            double t179608 = t179605+t179606+t179607;
            double t179613 = 1.0/(t179578*t179578);
            double t179616 = 1.0/(t179593*t179593);
            double t179617 = pow(rho_b[index],1.0/3.0);
            double t179619 = 1.0/omega;
            double t179620 = 1.0/sqrt(t179596);
            double t179621 = 1.0/(t179582*t179582);
            double t179622 = omega*omega;
            double t179623 = t179600-1.0;
            double t179624 = t179314*t179622*t179623*t179596*(2.475880078570761E27/1.4000771998813E29);
            double t179625 = -t179600+t179624+3.0/2.0;
            double t179626 = cx4*t179523*t179572*t179456*t179579*(1.396905119826821E15/7.0368744177664E13);
            double t179627 = cx1*gamma_bb[index]*gx*t179352*t179583*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t179628 = cx3*gamma_bb[index]*gx*t179522*t179454*t179571*t179589*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t179629 = cx2*t179521*t179454*t179571*t179594*(1.396905119826821E15/1.40737488355328E14);
            double t179631 = cx1*t179521*t179621*t179454*t179571*(1.396905119826821E15/2.81474976710656E14);
            double t179632 = cx3*gamma_bb[index]*gx*t179604*t179454*t179571*t179608*t179459*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t179633 = cx4*t179602*t179613*t179572*t179456*t179458*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179634 = cx2*t179603*t179460*t179454*t179571*t179616*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179630 = -t179631-t179632-t179633-t179634+t179626+t179627+t179628+t179629;
            double t179635 = t179308*t179597*t179599*(1.4000771998813E29/7.427640235712282E27);
            double t179636 = 1.0/(t179596*t179596);
            double t179637 = t179630*t179636*t179597*t179598*(1.4000771998813E29/4.951760157141521E27);
            double t179638 = t179635+t179637;
            double t179639 = t179620*t179617*t179619*(3.74176054803257E14/7.0368744177664E13);
            double t179640 = erf(t179639);
            double t179641 = t179640*(3.991211251234741E15/2.251799813685248E15);
            double t179643 = omega*t179601*t179308*t179625*(7.0368744177664E13/3.74176054803257E14);
            double t179642 = t179641-t179643;
            double t179644 = omega*t179601*t179308*t179642*(2.81474976710656E14/1.122528164409771E15);
            double t179645 = t179644-1.0;
            double t179646 = cx4*t179572*t179456*t179458*t179579;
            double t179647 = cx1*gamma_bb[index]*gx*t179355*t179583;
            double t179648 = cx3*gamma_bb[index]*gx*t179454*t179571*t179459*t179589;
            double t179649 = cx2*t179460*t179454*t179571*t179594;
            double t179650 = cx0+t179646+t179647+t179648+t179649;
            double t179651 = pow(rho_b[index],4.0/3.0);
            double t179652 = 1.0/sqrt(3.141592653589793);
            double t179653 = t179314*t179620*t179619*(3.74176054803257E14/2.11106232532992E14);
            double t179654 = 1.0/pow(t179596,3.0/2.0);
            double t179655 = t179630*t179617*t179654*t179619*(3.74176054803257E14/1.40737488355328E14);
            double t179656 = t179653+t179655;
            double t179657 = t179600*t179652*t179656*(3.991211251234741E15/1.125899906842624E15);
            double t179658 = omega*t179601*t179318*t179625*(7.0368744177664E13/1.122528164409771E15);
            double t179659 = t179324*t179622*t179623*t179596*(4.951760157141521E27/4.2002315996439E29);
            double t179660 = t179314*t179630*t179622*t179623*(2.475880078570761E27/1.4000771998813E29);
            double t179661 = t179600*t179314*t179622*t179638*t179596*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t179685 = t179600*t179638;
            double t179662 = t179660+t179661-t179685+t179659;
            double t179663 = omega*t179601*t179308*t179662*(7.0368744177664E13/3.74176054803257E14);
            double t179664 = omega*t179620*t179630*t179308*t179625*(3.5184372088832E13/3.74176054803257E14);
            double t179665 = t179663+t179664+t179657+t179658;
            double t179666 = 1.0/(t179582*t179582*t179582);
            double t179667 = t179602*t179602;
            double t179668 = 1.0/(t179578*t179578*t179578);
            double t179669 = t179603*t179603;
            double t179670 = 1.0/(t179593*t179593*t179593);
            double t179671 = gamma_bb[index]*gx*t179494*(8.8E1/3.0);
            double t179672 = gamma_bb[index]*gx*t179454*t179571*t179548*7.2E1;
            double t179673 = t179454*t179571*t179489*(3.04E2/3.0);
            double t179674 = t179671+t179672+t179673;
            double t179675 = t179608*t179608;
            double t179676 = 1.0/(t179588*t179588*t179588);
            double t179677 = gamma_bb[index]*gx*t179494*(3.52E2/9.0);
            double t179678 = gamma_bb[index]*gx*t179454*t179571*t179548*2.88E2;
            double t179679 = t179454*t179571*t179489*(6.08E2/3.0);
            double t179680 = t179572*t179456*t179549*(1.12E3/9.0);
            double t179681 = t179680+t179677+t179678+t179679;
            double t179682 = gamma_bb[index]*gx*t179494*(1.76E2/9.0);
            double t179683 = t179454*t179571*t179489*(3.04E2/9.0);
            double t179684 = t179682+t179683;
            double t179686 = t179630*t179630;
            double t179687 = cx4*t179572*t179456*t179549*t179579*(4.889167919393874E16/2.11106232532992E14);
            double t179688 = cx1*gamma_bb[index]*gx*t179583*t179494*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t179689 = cx3*gamma_bb[index]*gx*t179454*t179571*t179548*t179589*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t179690 = cx2*t179454*t179571*t179594*t179489*(2.65411972767096E16/4.22212465065984E14);
            double t179691 = cx1*gamma_bb[index]*gx*t179454*t179571*t179548*t179666*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t179692 = cx4*t179572*t179456*t179458*t179667*t179668*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t179693 = cx2*t179460*t179454*t179571*t179670*t179669*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t179694 = cx3*gamma_bb[index]*gx*t179454*t179571*t179459*t179675*t179676*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t179696 = cx1*t179621*t179454*t179571*t179489*(1.257214607844139E16/2.81474976710656E14);
            double t179697 = cx3*gamma_bb[index]*gx*t179522*t179604*t179454*t179571*t179608*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t179698 = cx3*gamma_bb[index]*gx*t179604*t179454*t179571*t179674*t179459*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t179699 = cx4*t179602*t179523*t179613*t179572*t179456*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t179700 = cx4*t179613*t179572*t179456*t179681*t179458*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179701 = cx2*t179521*t179603*t179454*t179571*t179616*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t179702 = cx2*t179460*t179454*t179571*t179616*t179684*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t179695 = -t179700-t179701-t179702+t179690+t179691+t179692+t179693+t179694+t179687-t179696+ \
               t179688-t179697+t179689-t179698-t179699;
            double t179703 = t179318*t179597*t179599*(1.4000771998813E29/2.228292070713684E28);
            double t179704 = 1.0/(t179596*t179596*t179596);
            double t179705 = t179636*t179695*t179597*t179598*(1.4000771998813E29/4.951760157141521E27);
            double t179706 = t179703+t179705-t179630*t179308*t179636*t179597*(1.4000771998813E29/3.713820117856141E27) \
               -t179704*t179686*t179597*t179598*(1.4000771998813E29/2.475880078570761E27);
            double t179707 = t179638*t179638;
            double t179708 = omega*t179601*t179318*t179642*(2.81474976710656E14/3.367584493229313E15);
            double t179709 = omega*t179620*t179630*t179308*t179642*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t179710 = t179708+t179709-omega*t179601*t179308*t179665*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t179711 = cx4*t179523*t179572*t179456*t179579*(3.2E1/3.0);
            double t179712 = cx1*gamma_bb[index]*gx*t179352*t179583*(8.0/3.0);
            double t179713 = cx3*gamma_bb[index]*gx*t179522*t179454*t179571*t179589*8.0;
            double t179714 = cx2*t179521*t179454*t179571*t179594*(1.6E1/3.0);
            double t179715 = t179711+t179712+t179713+t179714-cx1*t179521*t179621*t179454*t179571*(8.0/3.0)-cx2* \
               t179603*t179460*t179454*t179571*t179616-cx4*t179602*t179613*t179572*t179456*t179458-cx3*gamma_bb[index]* \
               gx*t179604*t179454*t179571*t179608*t179459;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t179350*t179376+ccab2*t179351*t179374*t179349+ccab4*t179357* \
               t179358*t179377+ccab3*gcab*t179350*t179351*t179375*t179349)*(-rho_b[index]*(-t179441-t179450+t179570+ \
               t179564+t179568+t179252*t179345*(t179441+t179450+t179562+t179567+t179569-t179333*t179334*t179335*t179447- \
               t179348*t179429*t179438*t179555*2.0-a1f*c*c0f*t179346*t179436*(8.0/9.0)-t179240*t179333*t179439*t179448* \
               t179449*(1.0/2.0)-a1p*c*t179340*t179334*t179335*t179318*(2.0/3.0)))-t179227*(t179401+t179410-t179245* \
               t179281*t179282*t179399-t179252*t179271*t179275*t179278*(t179401+t179410-t179245*t179281*t179282*t179399- \
               t179402*t179264*t179381*1.0/(t179258*t179258*t179258)*2.0+t179264*t179381*t179382*(b2f*c*t179378*(4.0/ \
               9.0)+b4f*t179234*t179379*(1.0E1/9.0)+b1f*c*t179280*t179378*(2.0/9.0)+b3f*c*t179230*t179378*(2.0/3.0) \
               -b1f*t179234*t179393*t179379*(1.0/3.6E1)+b3f*t179234*t179280*t179379*(1.0/1.2E1))+t179402*1.0/(t179261* \
               t179261)*t179253*t179264*1.0/(t179258*t179258*t179258*t179258)*(1.0/2.0)-a1f*c*c0f*t179262*t179378* \
               (8.0/9.0)-t179240*t179403*t179404*t179245*t179392*(1.0/2.0)+a1f*c*t179381*t179382*t179239*t179387* \
               (2.0/3.0)-a1p*c*t179281*t179282*t179239*t179287*(2.0/3.0))-t179240*t179403*t179404*t179245*t179392* \
               (1.0/2.0)+t179411*t179252*t179271*t179266*t179278*2.0E1+t179420*t179252*t179266*t179275*t179278+t179252* \
               t179271*t179247*t179266*t179275*1.2E1+t179305*t179252*t179266*t179278*t179288*8.0-t179305*t179252* \
               t179275*t179278*t179389*2.0-t179252*t179271*t179278*t179288*t179389*8.0+t179305*t179252*t179246*t179247* \
               t179266*t179275*8.0+t179252*t179271*t179246*t179247*t179266*t179288*3.2E1-t179252*t179271*t179246* \
               t179247*t179275*t179389*8.0-a1p*c*t179281*t179282*t179239*t179287*(2.0/3.0)+Aa*t179301*t179420*t179252* \
               t179307*t179289*t179299*2.0+Aa*t179301*t179305*t179252*t179414*t179289*t179299*4.0+Aa*t179301*t179252* \
               t179271*t179289*t179299*(t179411*t179278*2.0E1+t179247*t179275*1.2E1+t179246*t179247*t179288*3.2E1) \
               *2.0-t179301*t179421*t179305*t179422*t179252*t179307*t179427*t179289*2.0-t179301*t179421*t179422*t179252* \
               t179414*t179271*t179427*t179289*2.0+t179301*t179421*t179252*t179271*t179307*t179428*1.0/(t179295*t179295* \
               t179295)*t179289*2.0-t179301*t179421*t179422*t179252*t179271*t179307*t179289*(b2a*c*t179378*(4.0/9.0) \
               +b4a*t179234*t179379*(1.0E1/9.0)+b1a*c*t179280*t179378*(2.0/9.0)+b3a*c*t179230*t179378*(2.0/3.0)-b1a* \
               t179234*t179393*t179379*(1.0/3.6E1)+b3a*t179234*t179280*t179379*(1.0/1.2E1))+Aa*a1a*c*t179305*t179252* \
               t179307*t179239*t179289*t179299*(4.0/3.0)+Aa*a1a*c*t179252*t179414*t179271*t179239*t179289*t179299* \
               (4.0/3.0)+Aa*a1a*c*t179252*t179271*t179307*t179378*t179289*t179299*(8.0/9.0)-t179301*t179252*t179271* \
               t179307*t179290*t179428*1.0/(t179295*t179295*t179295*t179295)*t179289*1.0/(t179298*t179298)*(1.0/2.0) \
               -a1a*c*t179421*t179422*t179252*t179271*t179307*t179427*t179239*t179289*(2.0/3.0))-t179252*t179345* \
               t179453*2.0+t179340*t179333*t179334*t179335*2.0-t179245*t179281*t179282*t179287*2.0-a1p*c*c0p*t179342* \
               t179318*(4.0/3.0)+a1p*c*c0p*t179265*t179239*(4.0/3.0)+t179305*t179252*t179266*t179275*t179278*2.0+ \
               t179252*t179271*t179266*t179278*t179288*8.0-t179252*t179271*t179275*t179278*t179389*2.0+t179252*t179271* \
               t179246*t179247*t179266*t179275*8.0+Aa*t179301*t179305*t179252*t179307*t179289*t179299*4.0+Aa*t179301* \
               t179252*t179414*t179271*t179289*t179299*4.0-t179301*t179421*t179422*t179252*t179271*t179307*t179427* \
               t179289*2.0+Aa*a1a*c*t179252*t179271*t179307*t179239*t179289*t179299*(4.0/3.0))+(rho_b[index]*t179502+ \
               rho_a[index]*(t179477-t179252*t179345*(t179477-c0f*log((t179253*(1.0/2.0))/(b1f*t179463+b3f*t179464+ \
               b2f*c*t179461+b4f*t179234*t179465)+1.0)*(a1f*c*t179461+1.0)*2.0))-t179227*(t179481+t179482+t179277) \
               )*(-ccab2*t179351*t179349*t179496*(gamma_bb[index]*gcab*t179494*(8.8E1/9.0)+t179454*t179349*t179489* \
               (3.2E1/9.0)+gamma_bb[index]*t179350*t179349*t179494*(8.8E1/9.0))+ccab2*t179351*(t179492*t179492)*t179349* \
               1.0/(t179368*t179368*t179368)*2.0+ccab4*1.0/(t179363*t179363*t179363)*t179357*t179358*(t179487*t179487) \
               *2.0+ccab1*gamma_bb[index]*gcab*t179376*t179494*(4.4E1/9.0)+ccab2*t179454*t179374*t179349*t179489* \
               (3.2E1/9.0)-ccab1*t179454*t179349*t179488*t179489*(3.2E1/9.0)-ccab4*t179357*t179358*t179495*(gamma_bb[index]* \
               gcab*t179494*(1.76E2/9.0)+t179454*t179349*t179489*(6.4E1/3.0)+gamma_bb[index]*t179350*t179349*t179494* \
               (1.76E2/3.0)+t179351*t179454*t179357*t179489*(6.4E1/3.0)+gamma_bb[index]*gcab*t179351*t179349*t179494* \
               (1.76E2/3.0)+gamma_bb[index]*t179350*t179351*t179357*t179494*(1.76E2/9.0)+gcab*t179350*t179454*t179349* \
               t179489*(1.28E2/3.0))+ccab4*t179351*t179454*t179357*t179377*t179489*(6.4E1/3.0)+ccab2*gamma_bb[index]* \
               t179350*t179374*t179349*t179494*(8.8E1/9.0)-ccab1*gamma_bb[index]*t179350*t179349*t179494*t179488* \
               (4.4E1/9.0)+ccab3*gcab*(t179500*t179500)*t179350*t179351*1.0/(t179372*t179372*t179372)*t179349*2.0+ \
               ccab3*gamma_bb[index]*gcab*t179351*t179375*t179349*t179494*(4.4E1/3.0)-ccab2*gamma_bb[index]*t179350* \
               t179352*t179492*t179349*t179496*(1.6E1/3.0)+ccab4*gamma_bb[index]*t179350*t179351*t179357*t179377* \
               t179494*(1.76E2/9.0)+ccab3*gcab*t179350*t179454*t179375*t179349*t179489*(3.2E1/3.0)+ccab1*gcab*t179350* \
               t179454*1.0/(t179365*t179365*t179365)*t179349*t179489*(3.2E1/9.0)-ccab3*gcab*t179350*t179351*t179349* \
               t179493*(gamma_bb[index]*gcab*t179494*(4.4E1/3.0)+t179454*t179349*t179489*(3.2E1/3.0)+gamma_bb[index]* \
               t179350*t179349*t179494*(8.8E1/3.0)+gamma_bb[index]*gcab*t179351*t179349*t179494*(4.4E1/3.0)+gcab* \
               t179350*t179454*t179349*t179489*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t179500*t179351*t179352*t179349* \
               t179493*8.0-ccab4*gamma_bb[index]*t179350*t179351*t179352*t179357*t179495*t179487*(3.2E1/3.0))+(t179481+ \
               t179482+t179277+rho_b[index]*(-t179341+t179452+t179252*t179345*(t179341+t179451-t179434*t179435*t179348* \
               t179429-a1p*c*c0p*t179342*t179318*(2.0/3.0)))-t179227*(t179373-t179245*t179281*t179282*t179287+t179305* \
               t179252*t179266*t179275*t179278+t179252*t179271*t179266*t179278*t179288*4.0-t179252*t179271*t179275* \
               t179278*t179389+t179252*t179271*t179246*t179247*t179266*t179275*4.0+Aa*t179301*t179305*t179252*t179307* \
               t179289*t179299*2.0+Aa*t179301*t179252*t179414*t179271*t179289*t179299*2.0-t179301*t179421*t179422* \
               t179252*t179271*t179307*t179427*t179289+Aa*a1a*c*t179252*t179271*t179307*t179239*t179289*t179299*(2.0/ \
               3.0))-c0p*t179333*t179342*2.0-t179252*t179345*t179479)*(ccab1*gamma_bb[index]*gcab*t179352*t179376* \
               (4.0/3.0)-ccab2*t179351*t179492*t179349*t179496-ccab4*t179357*t179358*t179495*t179487+ccab2*gamma_bb[index]* \
               t179350*t179352*t179374*t179349*(8.0/3.0)-ccab1*gamma_bb[index]*t179350*t179352*t179349*t179488*(4.0/ \
               3.0)+ccab3*gamma_bb[index]*gcab*t179351*t179352*t179375*t179349*4.0+ccab4*gamma_bb[index]*t179350* \
               t179351*t179352*t179357*t179377*(1.6E1/3.0)-ccab3*gcab*t179500*t179350*t179351*t179349*t179493)*2.0+ \
               t179502*t179546*2.0+t179554*t179547*2.0-rho_b[index]*t179502*(ccaa1*gamma_bb[index]*gcaa*t179511*t179494* \
               (8.8E1/9.0)-ccaa1*t179530*t179454*t179455*t179489*2.4E1+ccaa2*t179520*t179454*t179455*t179489*(3.04E2/ \
               9.0)+ccaa4*t179508*t179456*t179457*t179549*(1.12E3/9.0)-ccaa2*t179521*t179454*t179544*t179455*t179545* \
               (3.2E1/3.0)-ccaa4*t179540*t179523*t179541*t179456*t179457*(6.4E1/3.0)-ccaa2*t179460*t179454*t179455* \
               t179545*(gamma_bb[index]*gcaa*t179494*(1.76E2/9.0)+t179454*t179455*t179489*(3.04E2/9.0))-ccaa4*t179541* \
               t179456*t179457*t179458*(gamma_bb[index]*gcaa*t179494*(3.52E2/9.0)+t179454*t179455*t179489*(6.08E2/ \
               3.0)+t179456*t179457*t179549*(1.12E3/9.0)+gamma_bb[index]*gcaa*t179454*t179455*t179548*2.88E2)+ccaa2* \
               t179460*t179454*(t179544*t179544)*t179455*1.0/(t179519*t179519*t179519)*2.0+ccaa4*(t179540*t179540) \
               *1.0/(t179507*t179507*t179507)*t179456*t179457*t179458*2.0+ccaa3*gamma_bb[index]*gcaa*t179516*t179454* \
               t179455*t179548*7.2E1+ccaa1*gamma_bb[index]*gcaa*1.0/(t179510*t179510*t179510)*t179454*t179455*t179548* \
               (1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1.0/(t179515*t179515*t179515)*(t179534*t179534)*t179454*t179455* \
               t179459*2.0-ccaa3*gamma_bb[index]*gcaa*t179454*t179535*t179455*t179459*(gamma_bb[index]*gcaa*t179494* \
               (8.8E1/3.0)+t179454*t179455*t179489*(3.04E2/3.0)+gamma_bb[index]*gcaa*t179454*t179455*t179548*7.2E1) \
               -ccaa3*gamma_bb[index]*gcaa*t179522*t179534*t179454*t179535*t179455*1.6E1)+rho_b[index]*t179554*(- \
               t179441-t179450+t179570+t179564+t179568+t179252*t179345*(t179441+t179450-t179570+t179562-t179564+t179567- \
               t179568+t179569-t179348*t179429*t179438*t179555*2.0-a1f*c*c0f*t179346*t179436*(8.0/9.0)))-rho_b[index]* \
               t179546*t179547*2.0+c0*t179710*t179650*t179617*(8.0/3.0)-c0*t179710*t179651*t179715*2.0-c0*t179314* \
               t179650*t179645*(4.0/9.0)+c0*t179715*t179617*t179645*(8.0/3.0)+c0*t179650*t179651*(omega*t179601*t179642* \
               t179436*(-1.125899906842624E15/1.010275347968794E16)+omega*t179601*t179318*t179665*(5.62949953421312E14/ \
               3.367584493229313E15)+omega*t179601*t179308*(t179600*t179652*(t179620*t179324*t179619*(3.74176054803257E14/ \
               3.16659348799488E14)-t179314*t179630*t179654*t179619*(3.74176054803257E14/2.11106232532992E14)+t179617* \
               t179654*t179619*t179695*(3.74176054803257E14/1.40737488355328E14)-t179617*t179619*1.0/pow(t179596,5.0/ \
               2.0)*t179686*(1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t179601*t179318*t179662*(1.40737488355328E14/1.122528164409771E15)+omega*t179601*t179436*t179625* \
               (2.81474976710656E14/3.367584493229313E15)+t179600*t179652*t179638*t179656*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t179601*t179308*(-t179600*t179706-t179600*t179707+t179324*t179630*t179622*t179623*(9.903520314283042E27/ \
               4.2002315996439E29)+t179314*t179622*t179623*t179695*(2.475880078570761E27/1.4000771998813E29)+t179622* \
               t179623*t179355*t179596*(2.475880078570761E28/1.26006947989317E30)+t179600*t179314*t179630*t179622* \
               t179638*(4.951760157141521E27/1.4000771998813E29)+t179600*t179314*t179622*t179706*t179596*(2.475880078570761E27/ \
               1.4000771998813E29)+t179600*t179314*t179622*t179707*t179596*(2.475880078570761E27/1.4000771998813E29) \
               +t179600*t179324*t179622*t179638*t179596*(9.903520314283042E27/4.2002315996439E29))*(7.0368744177664E13/ \
               3.74176054803257E14)+omega*t179620*t179630*t179308*t179662*(7.0368744177664E13/3.74176054803257E14) \
               +omega*t179620*t179630*t179318*t179625*(7.0368744177664E13/1.122528164409771E15)+omega*t179620*t179308* \
               t179625*t179695*(3.5184372088832E13/3.74176054803257E14)-omega*t179308*t179625*t179654*t179686*(1.7592186044416E13/ \
               3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-omega*t179620*t179630*t179318*t179642* \
               (2.81474976710656E14/3.367584493229313E15)+omega*t179620*t179630*t179308*t179665*(2.81474976710656E14/ \
               1.122528164409771E15)-omega*t179620*t179308*t179642*t179695*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t179308*t179642*t179654*t179686*(7.0368744177664E13/1.122528164409771E15))-c0*t179651*t179645* \
               (cx1*gamma_bb[index]*gx*t179583*t179494*(8.8E1/9.0)-cx1*t179621*t179454*t179571*t179489*2.4E1+cx2* \
               t179454*t179571*t179594*t179489*(3.04E2/9.0)+cx4*t179572*t179456*t179549*t179579*(1.12E3/9.0)-cx2* \
               t179521*t179603*t179454*t179571*t179616*(3.2E1/3.0)-cx2*t179460*t179454*t179571*t179616*t179684+cx2* \
               t179460*t179454*t179571*t179670*t179669*2.0-cx4*t179602*t179523*t179613*t179572*t179456*(6.4E1/3.0) \
               -cx4*t179613*t179572*t179456*t179681*t179458+cx4*t179572*t179456*t179458*t179667*t179668*2.0+cx1*gamma_bb[index]* \
               gx*t179454*t179571*t179548*t179666*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t179454*t179571*t179548*t179589* \
               7.2E1-cx3*gamma_bb[index]*gx*t179522*t179604*t179454*t179571*t179608*1.6E1-cx3*gamma_bb[index]*gx* \
               t179604*t179454*t179571*t179674*t179459+cx3*gamma_bb[index]*gx*t179454*t179571*t179459*t179675*t179676* \
               2.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t182033 = 1.0/pow(rho_b[index],1.0/3.0);
            double t182034 = c*t182033;
            double t182035 = sqrt(t182034);
            double t182036 = b1f*t182035;
            double t182037 = pow(t182034,3.0/2.0);
            double t182038 = b3f*t182037;
            double t182039 = c*c;
            double t182040 = 1.0/pow(rho_b[index],2.0/3.0);
            double t182041 = b4f*t182040*t182039;
            double t182042 = b2f*c*t182033;
            double t182043 = t182041+t182042+t182036+t182038;
            double t182044 = 1.0/pow(rho_b[index],4.0/3.0);
            double t182045 = b1p*t182035;
            double t182046 = b3p*t182037;
            double t182047 = b4p*t182040*t182039;
            double t182048 = b2p*c*t182033;
            double t182049 = t182045+t182046+t182047+t182048;
            double t182050 = 1.0/pow(rho_b[index],5.0/3.0);
            double t182051 = 1.0/sqrt(t182034);
            double t182052 = 1.0/c0f;
            double t182053 = 1.0/t182043;
            double t182054 = t182052*t182053*(1.0/2.0);
            double t182055 = t182054+1.0;
            double t182056 = 1.0/c0p;
            double t182057 = 1.0/t182049;
            double t182058 = t182056*t182057*(1.0/2.0);
            double t182059 = t182058+1.0;
            double t182060 = a1p*c*t182033;
            double t182061 = t182060+1.0;
            double t182062 = 1.0/t182059;
            double t182063 = 1.0/(t182049*t182049);
            double t182064 = b4p*t182050*t182039*(2.0/3.0);
            double t182065 = b2p*c*t182044*(1.0/3.0);
            double t182066 = b1p*c*t182051*t182044*(1.0/6.0);
            double t182067 = b3p*c*t182035*t182044*(1.0/2.0);
            double t182068 = t182064+t182065+t182066+t182067;
            double t182069 = t182061*t182062*t182063*t182068;
            double t182070 = log(t182059);
            double t182071 = gamma_bb[index]*gamma_bb[index];
            double t182072 = gcaa*gcaa;
            double t182073 = t182071*t182071;
            double t182074 = t182072*t182072;
            double t182075 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t182076 = 1.0/pow(rho_b[index],8.0/3.0);
            double t182077 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t182078 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t182079 = pow(2.0,1.0/3.0);
            double t182080 = t182079*2.0;
            double t182081 = t182080-2.0;
            double t182082 = two_13*2.0;
            double t182083 = t182082-2.0;
            double t182084 = 1.0/t182083;
            double t182085 = log(t182055);
            double t182086 = a1f*c*t182033;
            double t182087 = t182086+1.0;
            double t182088 = gamma_bb[index]*gcaa*t182076*4.0;
            double t182089 = gamma_bb[index]*gcaa*t182071*t182072*t182077*4.0;
            double t182090 = t182071*t182072*t182078*6.0;
            double t182091 = t182073*t182074*t182075;
            double t182092 = t182090+t182091+t182088+t182089+1.0;
            double t182093 = 1.0/t182092;
            double t182094 = gamma_bb[index]*gcaa*t182076;
            double t182095 = t182094+1.0;
            double t182096 = 1.0/t182095;
            double t182097 = gamma_bb[index]*gcaa*t182076*3.0;
            double t182098 = gamma_bb[index]*gcaa*t182071*t182072*t182077;
            double t182099 = t182071*t182072*t182078*3.0;
            double t182100 = t182097+t182098+t182099+1.0;
            double t182101 = 1.0/t182100;
            double t182102 = gamma_bb[index]*gcaa*t182076*2.0;
            double t182103 = t182071*t182072*t182078;
            double t182104 = t182102+t182103+1.0;
            double t182105 = 1.0/t182104;
            double t182106 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t182107 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t182108 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t182109 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t182110 = 1.0/t182055;
            double t182111 = 1.0/(t182043*t182043);
            double t182112 = b4f*t182050*t182039*(2.0/3.0);
            double t182113 = b2f*c*t182044*(1.0/3.0);
            double t182114 = b1f*c*t182051*t182044*(1.0/6.0);
            double t182115 = b3f*c*t182035*t182044*(1.0/2.0);
            double t182116 = t182112+t182113+t182114+t182115;
            double t182117 = a1f*c*c0f*t182044*t182085*(2.0/3.0);
            double t182118 = a1p*c*c0p*t182070*t182044*(2.0/3.0);
            double t182119 = ccaa4*t182073*t182109*t182074*t182093*(3.2E1/3.0);
            double t182120 = ccaa1*gamma_bb[index]*gcaa*t182107*t182096*(8.0/3.0);
            double t182121 = ccaa3*gamma_bb[index]*gcaa*t182101*t182071*t182072*t182108*8.0;
            double t182122 = ccaa2*t182105*t182106*t182071*t182072*(1.6E1/3.0);
            double t182123 = 1.0/(t182095*t182095);
            double t182124 = gamma_bb[index]*gcaa*t182107*8.0;
            double t182125 = gamma_bb[index]*gcaa*t182071*t182072*t182108*8.0;
            double t182126 = t182106*t182071*t182072*1.6E1;
            double t182127 = t182124+t182125+t182126;
            double t182128 = 1.0/(t182100*t182100);
            double t182129 = gamma_bb[index]*gcaa*t182107*(3.2E1/3.0);
            double t182130 = gamma_bb[index]*gcaa*t182071*t182072*t182108*3.2E1;
            double t182131 = t182106*t182071*t182072*3.2E1;
            double t182132 = t182073*t182109*t182074*(3.2E1/3.0);
            double t182133 = t182130+t182131+t182132+t182129;
            double t182134 = 1.0/(t182092*t182092);
            double t182135 = gamma_bb[index]*gcaa*t182107*(1.6E1/3.0);
            double t182136 = t182106*t182071*t182072*(1.6E1/3.0);
            double t182137 = t182135+t182136;
            double t182138 = 1.0/(t182104*t182104);
            double t182139 = t182120+t182121+t182122+t182119-ccaa1*t182123*t182106*t182071*t182072*(8.0/3.0)- \
               ccaa4*t182133*t182134*t182073*t182074*t182075-ccaa2*t182071*t182072*t182137*t182138*t182078-ccaa3* \
               gamma_bb[index]*gcaa*t182071*t182072*t182127*t182128*t182077;
            double t182140 = c0f*t182085*t182087*2.0;
            double t182141 = c0p*t182061*t182070*2.0;
            double t182142 = 1.0/pow(rho_b[index],1.0E1);
            double t182143 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t182144 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t182145 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t182146 = ccaa4*t182073*t182074*t182075*t182093;
            double t182147 = ccaa1*gamma_bb[index]*gcaa*t182076*t182096;
            double t182148 = ccaa3*gamma_bb[index]*gcaa*t182101*t182071*t182072*t182077;
            double t182149 = ccaa2*t182105*t182071*t182072*t182078;
            double t182150 = ccaa0+t182146+t182147+t182148+t182149;
            double t182151 = 1.0/pow(rho_b[index],7.0/3.0);
            double t182152 = 1.0/pow(t182034,3.0/2.0);
            double t182153 = t182116*t182116;
            double t182154 = t182068*t182068;
            double t182155 = 1.0/(t182049*t182049*t182049);
            double t182156 = t182061*t182062*t182154*t182155*2.0;
            double t182157 = b4p*t182039*t182076*(1.0E1/9.0);
            double t182158 = b2p*c*t182151*(4.0/9.0);
            double t182159 = b3p*t182051*t182039*t182076*(1.0/1.2E1);
            double t182160 = b1p*c*t182051*t182151*(2.0/9.0);
            double t182161 = b3p*c*t182151*t182035*(2.0/3.0);
            double t182162 = t182160+t182161+t182157+t182158+t182159-b1p*t182152*t182039*t182076*(1.0/3.6E1);
            double t182163 = 1.0/(t182059*t182059);
            double t182164 = 1.0/(t182049*t182049*t182049*t182049);
            double t182165 = a1p*c*c0p*t182070*t182151*(8.0/9.0);
            double t182166 = gx*gx;
            double t182167 = t182166*t182166;
            double t182168 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t182169 = gamma_bb[index]*gx*t182076*4.0;
            double t182170 = gamma_bb[index]*gx*t182071*t182166*t182077*4.0;
            double t182171 = t182071*t182166*t182078*6.0;
            double t182172 = t182073*t182075*t182167;
            double t182173 = t182170+t182171+t182172+t182169+1.0;
            double t182174 = 1.0/t182173;
            double t182175 = cx4*t182073*t182075*t182174*t182167*(4.190715359480463E15/2.251799813685248E15);
            double t182176 = gamma_bb[index]*gx*t182076;
            double t182177 = t182176+1.0;
            double t182178 = 1.0/t182177;
            double t182179 = cx1*gamma_bb[index]*gx*t182076*t182178*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182180 = gamma_bb[index]*gx*t182076*3.0;
            double t182181 = gamma_bb[index]*gx*t182071*t182166*t182077;
            double t182182 = t182071*t182166*t182078*3.0;
            double t182183 = t182180+t182181+t182182+1.0;
            double t182184 = 1.0/t182183;
            double t182185 = cx3*gamma_bb[index]*gx*t182071*t182166*t182184*t182077*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182186 = gamma_bb[index]*gx*t182076*2.0;
            double t182187 = t182071*t182166*t182078;
            double t182188 = t182186+t182187+1.0;
            double t182189 = 1.0/t182188;
            double t182190 = cx2*t182071*t182166*t182078*t182189*(4.190715359480463E15/2.251799813685248E15);
            double t182191 = t182190+t182175+t182185+t182168+t182179;
            double t182192 = 1.0/(omega*omega);
            double t182193 = pow(rho_b[index],2.0/3.0);
            double t182194 = 1.0/t182191;
            double t182213 = t182192*t182193*t182194*(1.4000771998813E29/4.951760157141521E27);
            double t182195 = exp(-t182213);
            double t182196 = sqrt(t182191);
            double t182204 = gamma_bb[index]*gx*t182107*(3.2E1/3.0);
            double t182205 = gamma_bb[index]*gx*t182071*t182108*t182166*3.2E1;
            double t182206 = t182106*t182071*t182166*3.2E1;
            double t182207 = t182073*t182109*t182167*(3.2E1/3.0);
            double t182197 = t182204+t182205+t182206+t182207;
            double t182209 = gamma_bb[index]*gx*t182107*(1.6E1/3.0);
            double t182210 = t182106*t182071*t182166*(1.6E1/3.0);
            double t182198 = t182210+t182209;
            double t182199 = 1.0/(t182183*t182183);
            double t182200 = gamma_bb[index]*gx*t182107*8.0;
            double t182201 = gamma_bb[index]*gx*t182071*t182108*t182166*8.0;
            double t182202 = t182106*t182071*t182166*1.6E1;
            double t182203 = t182200+t182201+t182202;
            double t182208 = 1.0/(t182173*t182173);
            double t182211 = 1.0/(t182188*t182188);
            double t182212 = pow(rho_b[index],1.0/3.0);
            double t182214 = 1.0/omega;
            double t182215 = 1.0/sqrt(t182191);
            double t182216 = 1.0/(t182177*t182177);
            double t182217 = omega*omega;
            double t182218 = t182195-1.0;
            double t182219 = t182040*t182217*t182191*t182218*(2.475880078570761E27/1.4000771998813E29);
            double t182220 = t182219-t182195+3.0/2.0;
            double t182221 = cx4*t182073*t182109*t182174*t182167*(1.396905119826821E15/7.0368744177664E13);
            double t182222 = cx1*gamma_bb[index]*gx*t182107*t182178*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t182223 = cx3*gamma_bb[index]*gx*t182071*t182108*t182166*t182184*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t182224 = cx2*t182106*t182071*t182166*t182189*(1.396905119826821E15/1.40737488355328E14);
            double t182226 = cx1*t182106*t182071*t182216*t182166*(1.396905119826821E15/2.81474976710656E14);
            double t182227 = cx3*gamma_bb[index]*gx*t182203*t182071*t182166*t182077*t182199*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t182228 = cx4*t182073*t182208*t182075*t182167*t182197*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182229 = cx2*t182211*t182071*t182166*t182078*t182198*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182225 = t182221+t182222+t182223+t182224-t182226-t182227-t182228-t182229;
            double t182230 = t182033*t182192*t182194*(1.4000771998813E29/7.427640235712282E27);
            double t182231 = 1.0/(t182191*t182191);
            double t182232 = t182231*t182225*t182192*t182193*(1.4000771998813E29/4.951760157141521E27);
            double t182233 = t182230+t182232;
            double t182234 = t182212*t182214*t182215*(3.74176054803257E14/7.0368744177664E13);
            double t182235 = erf(t182234);
            double t182236 = t182235*(3.991211251234741E15/2.251799813685248E15);
            double t182238 = omega*t182220*t182033*t182196*(7.0368744177664E13/3.74176054803257E14);
            double t182237 = t182236-t182238;
            double t182239 = omega*t182033*t182237*t182196*(2.81474976710656E14/1.122528164409771E15);
            double t182240 = t182239-1.0;
            double t182241 = cx4*t182073*t182075*t182174*t182167;
            double t182242 = cx1*gamma_bb[index]*gx*t182076*t182178;
            double t182243 = cx3*gamma_bb[index]*gx*t182071*t182166*t182184*t182077;
            double t182244 = cx2*t182071*t182166*t182078*t182189;
            double t182245 = cx0+t182241+t182242+t182243+t182244;
            double t182246 = pow(rho_b[index],4.0/3.0);
            double t182247 = 1.0/sqrt(3.141592653589793);
            double t182248 = t182040*t182214*t182215*(3.74176054803257E14/2.11106232532992E14);
            double t182249 = 1.0/pow(t182191,3.0/2.0);
            double t182250 = t182212*t182214*t182225*t182249*(3.74176054803257E14/1.40737488355328E14);
            double t182251 = t182250+t182248;
            double t182252 = t182251*t182247*t182195*(3.991211251234741E15/1.125899906842624E15);
            double t182253 = omega*t182220*t182044*t182196*(7.0368744177664E13/1.122528164409771E15);
            double t182254 = t182050*t182217*t182191*t182218*(4.951760157141521E27/4.2002315996439E29);
            double t182255 = t182040*t182225*t182217*t182218*(2.475880078570761E27/1.4000771998813E29);
            double t182256 = t182040*t182233*t182217*t182191*t182195*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t182280 = t182233*t182195;
            double t182257 = -t182280+t182254+t182255+t182256;
            double t182258 = omega*t182033*t182257*t182196*(7.0368744177664E13/3.74176054803257E14);
            double t182259 = omega*t182220*t182033*t182215*t182225*(3.5184372088832E13/3.74176054803257E14);
            double t182260 = t182252+t182253+t182258+t182259;
            double t182261 = 1.0/(t182177*t182177*t182177);
            double t182262 = t182197*t182197;
            double t182263 = 1.0/(t182173*t182173*t182173);
            double t182264 = t182198*t182198;
            double t182265 = 1.0/(t182188*t182188*t182188);
            double t182266 = gamma_bb[index]*gx*t182144*(8.8E1/3.0);
            double t182267 = gamma_bb[index]*gx*t182142*t182071*t182166*7.2E1;
            double t182268 = t182071*t182143*t182166*(3.04E2/3.0);
            double t182269 = t182266+t182267+t182268;
            double t182270 = t182203*t182203;
            double t182271 = 1.0/(t182183*t182183*t182183);
            double t182272 = gamma_bb[index]*gx*t182144*(3.52E2/9.0);
            double t182273 = gamma_bb[index]*gx*t182142*t182071*t182166*2.88E2;
            double t182274 = t182071*t182143*t182166*(6.08E2/3.0);
            double t182275 = t182073*t182145*t182167*(1.12E3/9.0);
            double t182276 = t182272+t182273+t182274+t182275;
            double t182277 = gamma_bb[index]*gx*t182144*(1.76E2/9.0);
            double t182278 = t182071*t182143*t182166*(3.04E2/9.0);
            double t182279 = t182277+t182278;
            double t182281 = t182225*t182225;
            double t182282 = cx4*t182073*t182145*t182174*t182167*(4.889167919393874E16/2.11106232532992E14);
            double t182283 = cx1*gamma_bb[index]*gx*t182144*t182178*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t182284 = cx3*gamma_bb[index]*gx*t182142*t182071*t182166*t182184*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t182285 = cx2*t182071*t182143*t182166*t182189*(2.65411972767096E16/4.22212465065984E14);
            double t182286 = cx1*gamma_bb[index]*gx*t182142*t182071*t182261*t182166*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t182287 = cx4*t182073*t182262*t182263*t182075*t182167*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t182288 = cx2*t182071*t182264*t182166*t182265*t182078*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t182289 = cx3*gamma_bb[index]*gx*t182071*t182270*t182271*t182166*t182077*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t182291 = cx1*t182071*t182143*t182216*t182166*(1.257214607844139E16/2.81474976710656E14);
            double t182292 = cx3*gamma_bb[index]*gx*t182203*t182071*t182108*t182166*t182199*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t182293 = cx3*gamma_bb[index]*gx*t182071*t182166*t182077*t182269*t182199*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t182294 = cx4*t182073*t182109*t182208*t182167*t182197*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t182295 = cx4*t182073*t182208*t182075*t182167*t182276*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182296 = cx2*t182211*t182106*t182071*t182166*t182198*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t182297 = cx2*t182211*t182071*t182166*t182078*t182279*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t182290 = t182282-t182291+t182283-t182292+t182284-t182293+t182285-t182294+t182286-t182295+ \
               t182287-t182296+t182288-t182297+t182289;
            double t182298 = t182044*t182192*t182194*(1.4000771998813E29/2.228292070713684E28);
            double t182299 = 1.0/(t182191*t182191*t182191);
            double t182300 = t182231*t182290*t182192*t182193*(1.4000771998813E29/4.951760157141521E27);
            double t182301 = t182300+t182298-t182033*t182231*t182225*t182192*(1.4000771998813E29/3.713820117856141E27) \
               -t182281*t182192*t182193*t182299*(1.4000771998813E29/2.475880078570761E27);
            double t182302 = t182233*t182233;
            double t182303 = omega*t182044*t182237*t182196*(2.81474976710656E14/3.367584493229313E15);
            double t182304 = omega*t182033*t182215*t182225*t182237*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t182305 = t182303+t182304-omega*t182033*t182260*t182196*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t182306 = cx4*t182073*t182109*t182174*t182167*(3.2E1/3.0);
            double t182307 = cx1*gamma_bb[index]*gx*t182107*t182178*(8.0/3.0);
            double t182308 = cx3*gamma_bb[index]*gx*t182071*t182108*t182166*t182184*8.0;
            double t182309 = cx2*t182106*t182071*t182166*t182189*(1.6E1/3.0);
            double t182310 = t182306+t182307+t182308+t182309-cx1*t182106*t182071*t182216*t182166*(8.0/3.0)-cx2* \
               t182211*t182071*t182166*t182078*t182198-cx4*t182073*t182208*t182075*t182167*t182197-cx3*gamma_bb[index]* \
               gx*t182203*t182071*t182166*t182077*t182199;
            v_rho_b_rho_b_[index] = t182139*(t182141+t182081*t182084*(t182140-c0p*t182061*t182070*2.0))*2.0+t182150* \
               (t182118-t182069+t182081*t182084*(t182117+t182069-t182110*t182111*t182116*t182087-a1p*c*c0p*t182070* \
               t182044*(2.0/3.0)))*2.0+rho_b[index]*t182150*(-t182156-t182165+t182081*t182084*(t182156+t182165-t182061* \
               t182062*t182063*t182162-t182110*1.0/(t182043*t182043*t182043)*t182153*t182087*2.0+t182110*t182111* \
               t182087*(b2f*c*t182151*(4.0/9.0)+b4f*t182039*t182076*(1.0E1/9.0)+b1f*c*t182051*t182151*(2.0/9.0)+b3f* \
               c*t182151*t182035*(2.0/3.0)-b1f*t182152*t182039*t182076*(1.0/3.6E1)+b3f*t182051*t182039*t182076*(1.0/ \
               1.2E1))+1.0/(t182043*t182043*t182043*t182043)*t182052*t182153*1.0/(t182055*t182055)*t182087*(1.0/2.0) \
               -a1f*c*c0f*t182151*t182085*(8.0/9.0)-t182061*t182154*t182163*t182056*t182164*(1.0/2.0)+a1f*c*t182110* \
               t182111*t182044*t182116*(2.0/3.0)-a1p*c*t182044*t182062*t182063*t182068*(2.0/3.0))+t182061*t182062* \
               t182063*t182162+t182061*t182154*t182163*t182056*t182164*(1.0/2.0)+a1p*c*t182044*t182062*t182063*t182068* \
               (2.0/3.0))-rho_b[index]*t182139*(t182118-t182069+t182081*t182084*(t182117-t182118+t182069-t182110* \
               t182111*t182116*t182087))*2.0-rho_b[index]*(t182141+t182081*t182084*(t182140-t182141))*(ccaa1*gamma_bb[index]* \
               gcaa*t182144*t182096*(8.8E1/9.0)-ccaa1*t182123*t182071*t182143*t182072*2.4E1+ccaa2*t182105*t182071* \
               t182143*t182072*(3.04E2/9.0)+ccaa4*t182073*t182145*t182074*t182093*(1.12E3/9.0)-ccaa2*t182106*t182071* \
               t182072*t182137*t182138*(3.2E1/3.0)-ccaa4*t182133*t182134*t182073*t182109*t182074*(6.4E1/3.0)-ccaa2* \
               t182071*t182072*t182138*t182078*(gamma_bb[index]*gcaa*t182144*(1.76E2/9.0)+t182071*t182143*t182072* \
               (3.04E2/9.0))-ccaa4*t182134*t182073*t182074*t182075*(gamma_bb[index]*gcaa*t182144*(3.52E2/9.0)+t182071* \
               t182143*t182072*(6.08E2/3.0)+t182073*t182145*t182074*(1.12E3/9.0)+gamma_bb[index]*gcaa*t182142*t182071* \
               t182072*2.88E2)+ccaa2*1.0/(t182104*t182104*t182104)*t182071*t182072*(t182137*t182137)*t182078*2.0+ \
               ccaa4*(t182133*t182133)*t182073*t182074*1.0/(t182092*t182092*t182092)*t182075*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t182101*t182142*t182071*t182072*7.2E1+ccaa1*gamma_bb[index]*gcaa*t182142*t182071*t182072*1.0/ \
               (t182095*t182095*t182095)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1.0/(t182100*t182100*t182100)*t182071* \
               t182072*(t182127*t182127)*t182077*2.0-ccaa3*gamma_bb[index]*gcaa*t182071*t182072*t182128*t182077*(gamma_bb[index]* \
               gcaa*t182144*(8.8E1/3.0)+t182071*t182143*t182072*(3.04E2/3.0)+gamma_bb[index]*gcaa*t182142*t182071* \
               t182072*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t182071*t182072*t182108*t182127*t182128*1.6E1)+c0*t182310* \
               t182212*t182240*(8.0/3.0)-c0*t182040*t182240*t182245*(4.0/9.0)-c0*t182310*t182305*t182246*2.0+c0*t182212* \
               t182305*t182245*(8.0/3.0)+c0*t182245*t182246*(omega*t182044*t182260*t182196*(5.62949953421312E14/3.367584493229313E15) \
               -omega*t182151*t182237*t182196*(1.125899906842624E15/1.010275347968794E16)+omega*t182033*t182196*(t182247* \
               t182195*(t182050*t182214*t182215*(3.74176054803257E14/3.16659348799488E14)-t182040*t182214*t182225* \
               t182249*(3.74176054803257E14/2.11106232532992E14)+t182212*t182214*t182290*t182249*(3.74176054803257E14/ \
               1.40737488355328E14)-t182212*t182214*1.0/pow(t182191,5.0/2.0)*t182281*(1.122528164409771E15/2.81474976710656E14) \
               )*(3.991211251234741E15/1.125899906842624E15)+omega*t182220*t182151*t182196*(2.81474976710656E14/3.367584493229313E15) \
               +omega*t182044*t182257*t182196*(1.40737488355328E14/1.122528164409771E15)+t182233*t182251*t182247* \
               t182195*(3.991211251234741E15/1.125899906842624E15)+omega*t182033*t182196*(-t182301*t182195-t182302* \
               t182195+t182050*t182225*t182217*t182218*(9.903520314283042E27/4.2002315996439E29)+t182040*t182217* \
               t182218*t182290*(2.475880078570761E27/1.4000771998813E29)+t182217*t182191*t182218*t182076*(2.475880078570761E28/ \
               1.26006947989317E30)+t182040*t182301*t182217*t182191*t182195*(2.475880078570761E27/1.4000771998813E29) \
               +t182040*t182302*t182217*t182191*t182195*(2.475880078570761E27/1.4000771998813E29)+t182040*t182233* \
               t182225*t182217*t182195*(4.951760157141521E27/1.4000771998813E29)+t182050*t182233*t182217*t182191* \
               t182195*(9.903520314283042E27/4.2002315996439E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t182220*t182033*t182215*t182290*(3.5184372088832E13/3.74176054803257E14)+omega*t182220*t182044*t182215* \
               t182225*(7.0368744177664E13/1.122528164409771E15)-omega*t182220*t182033*t182281*t182249*(1.7592186044416E13/ \
               3.74176054803257E14)+omega*t182033*t182215*t182225*t182257*(7.0368744177664E13/3.74176054803257E14) \
               )*(2.81474976710656E14/1.122528164409771E15)+omega*t182033*t182215*t182260*t182225*(2.81474976710656E14/ \
               1.122528164409771E15)-omega*t182033*t182215*t182290*t182237*(1.40737488355328E14/1.122528164409771E15) \
               -omega*t182044*t182215*t182225*t182237*(2.81474976710656E14/3.367584493229313E15)+omega*t182033*t182281* \
               t182237*t182249*(7.0368744177664E13/1.122528164409771E15))-c0*t182240*t182246*(cx1*gamma_bb[index]* \
               gx*t182144*t182178*(8.8E1/9.0)-cx1*t182071*t182143*t182216*t182166*2.4E1+cx2*t182071*t182143*t182166* \
               t182189*(3.04E2/9.0)+cx4*t182073*t182145*t182174*t182167*(1.12E3/9.0)-cx2*t182211*t182106*t182071* \
               t182166*t182198*(3.2E1/3.0)-cx2*t182211*t182071*t182166*t182078*t182279+cx2*t182071*t182264*t182166* \
               t182265*t182078*2.0+cx4*t182073*t182262*t182263*t182075*t182167*2.0-cx4*t182073*t182109*t182208*t182167* \
               t182197*(6.4E1/3.0)-cx4*t182073*t182208*t182075*t182167*t182276+cx1*gamma_bb[index]*gx*t182142*t182071* \
               t182261*t182166*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t182142*t182071*t182166*t182184*7.2E1-cx3*gamma_bb[index]* \
               gx*t182203*t182071*t182108*t182166*t182199*1.6E1+cx3*gamma_bb[index]*gx*t182071*t182270*t182271*t182166* \
               t182077*2.0-cx3*gamma_bb[index]*gx*t182071*t182166*t182077*t182269*t182199);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t179717 = 1.0/pow(rho_a[index],1.0/3.0);
                double t179718 = c*t179717;
                double t179719 = sqrt(t179718);
                double t179720 = pow(t179718,3.0/2.0);
                double t179721 = c*c;
                double t179722 = 1.0/pow(rho_a[index],2.0/3.0);
                double t179723 = 1.0/c0p;
                double t179724 = b1p*t179719;
                double t179725 = b3p*t179720;
                double t179726 = b4p*t179721*t179722;
                double t179727 = b2p*c*t179717;
                double t179728 = t179724+t179725+t179726+t179727;
                double t179729 = 1.0/t179728;
                double t179730 = t179723*t179729*(1.0/2.0);
                double t179731 = t179730+1.0;
                double t179732 = log(t179731);
                double t179733 = a1p*c*t179717;
                double t179734 = t179733+1.0;
                double t179735 = 1.0/pow(rho_a[index],8.0/3.0);
                double t179736 = gamma_aa[index]*gamma_aa[index];
                double t179737 = gcaa*gcaa;
                double t179738 = t179737*t179737;
                double t179739 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t179740 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t179741 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t179742 = gamma_aa[index]*gcaa*t179735;
                double t179743 = t179742+1.0;
                double t179744 = gamma_aa[index]*gcaa*t179735*3.0;
                double t179745 = gamma_aa[index]*gcaa*t179741*t179736*t179737;
                double t179746 = t179740*t179736*t179737*3.0;
                double t179747 = t179744+t179745+t179746+1.0;
                double t179748 = t179736*t179736;
                double t179749 = gamma_aa[index]*gcaa*t179735*4.0;
                double t179750 = gamma_aa[index]*gcaa*t179741*t179736*t179737*4.0;
                double t179751 = t179740*t179736*t179737*6.0;
                double t179752 = t179738*t179739*t179748;
                double t179753 = t179750+t179751+t179752+t179749+1.0;
                double t179754 = gamma_aa[index]*gcaa*t179735*2.0;
                double t179755 = t179740*t179736*t179737;
                double t179756 = t179754+t179755+1.0;
                double t179757 = rho_a[index]+rho_b[index];
                double t179758 = 1.0/pow(t179757,1.0/3.0);
                double t179759 = c*t179758;
                double t179760 = sqrt(t179759);
                double t179761 = b1p*t179760;
                double t179762 = pow(t179759,3.0/2.0);
                double t179763 = b3p*t179762;
                double t179764 = 1.0/pow(t179757,2.0/3.0);
                double t179765 = b4p*t179721*t179764;
                double t179766 = b2p*c*t179758;
                double t179767 = t179761+t179763+t179765+t179766;
                double t179768 = 1.0/pow(t179757,4.0/3.0);
                double t179769 = two_13*2.0;
                double t179770 = t179769-2.0;
                double t179771 = 1.0/t179770;
                double t179772 = 1.0/c0f;
                double t179773 = 1.0/t179767;
                double t179774 = t179723*t179773*(1.0/2.0);
                double t179775 = t179774+1.0;
                double t179776 = a1p*c*t179758;
                double t179777 = t179776+1.0;
                double t179778 = rho_a[index]-rho_b[index];
                double t179779 = t179778*t179778;
                double t179780 = 1.0/t179757;
                double t179781 = t179780*t179778;
                double t179782 = b1f*t179760;
                double t179783 = b3f*t179762;
                double t179784 = b4f*t179721*t179764;
                double t179785 = b2f*c*t179758;
                double t179786 = t179782+t179783+t179784+t179785;
                double t179787 = 1.0/t179786;
                double t179788 = t179772*t179787*(1.0/2.0);
                double t179789 = t179788+1.0;
                double t179790 = log(t179789);
                double t179791 = a1f*c*t179758;
                double t179792 = t179791+1.0;
                double t179793 = log(t179775);
                double t179803 = c0f*t179790*t179792*2.0;
                double t179804 = c0p*t179793*t179777*2.0;
                double t179794 = t179803-t179804;
                double t179795 = t179781+1.0;
                double t179796 = pow(t179795,4.0/3.0);
                double t179797 = -t179781+1.0;
                double t179798 = pow(t179797,4.0/3.0);
                double t179799 = t179796+t179798-2.0;
                double t179800 = 1.0/(t179757*t179757);
                double t179831 = t179800*t179778;
                double t179801 = -t179831+t179780;
                double t179802 = 1.0/(t179757*t179757*t179757*t179757);
                double t179805 = t179779*t179779;
                double t179806 = 1.0/pow(t179757,5.0/3.0);
                double t179807 = 1.0/sqrt(t179759);
                double t179808 = 1.0/t179775;
                double t179809 = 1.0/(t179767*t179767);
                double t179810 = b4p*t179721*t179806*(2.0/3.0);
                double t179811 = b2p*c*t179768*(1.0/3.0);
                double t179812 = b1p*c*t179807*t179768*(1.0/6.0);
                double t179813 = b3p*c*t179760*t179768*(1.0/2.0);
                double t179814 = t179810+t179811+t179812+t179813;
                double t179815 = t179814*t179808*t179809*t179777;
                double t179816 = 1.0/(t179757*t179757*t179757*t179757*t179757);
                double t179817 = 1.0/d2fz0;
                double t179818 = 1.0/Aa;
                double t179819 = b1a*t179760;
                double t179820 = b3a*t179762;
                double t179821 = b4a*t179721*t179764;
                double t179822 = b2a*c*t179758;
                double t179823 = t179820+t179821+t179822+t179819;
                double t179824 = 1.0/t179823;
                double t179825 = t179824*t179818*(1.0/2.0);
                double t179826 = t179825+1.0;
                double t179827 = log(t179826);
                double t179828 = a1a*c*t179758;
                double t179829 = t179828+1.0;
                double t179830 = pow(t179795,1.0/3.0);
                double t179832 = t179801*t179830*(4.0/3.0);
                double t179833 = pow(t179797,1.0/3.0);
                double t179834 = t179832-t179801*t179833*(4.0/3.0);
                double t179835 = t179802*t179805;
                double t179836 = t179835-1.0;
                double t179837 = pow(2.0,1.0/3.0);
                double t179838 = t179837*2.0;
                double t179839 = t179838-2.0;
                double t179840 = a1f*c*t179717;
                double t179841 = t179840+1.0;
                double t179842 = b1f*t179719;
                double t179843 = b3f*t179720;
                double t179844 = b4f*t179721*t179722;
                double t179845 = b2f*c*t179717;
                double t179846 = t179842+t179843+t179844+t179845;
                double t179847 = 1.0/t179846;
                double t179848 = t179772*t179847*(1.0/2.0);
                double t179849 = t179848+1.0;
                double t179850 = 1.0/pow(rho_a[index],4.0/3.0);
                double t179851 = 1.0/pow(rho_a[index],5.0/3.0);
                double t179852 = 1.0/sqrt(t179718);
                double t179853 = log(t179849);
                double t179854 = 1.0/t179731;
                double t179855 = 1.0/(t179728*t179728);
                double t179856 = b4p*t179721*t179851*(2.0/3.0);
                double t179857 = b2p*c*t179850*(1.0/3.0);
                double t179858 = b1p*c*t179850*t179852*(1.0/6.0);
                double t179859 = b3p*c*t179850*t179719*(1.0/2.0);
                double t179860 = t179856+t179857+t179858+t179859;
                double t179861 = t179734*t179860*t179854*t179855;
                double t179862 = c0f*t179841*t179853*2.0;
                double t179863 = c0p*t179732*t179734*2.0;
                double t179864 = gamma_aa[index]*t179735*(1.0/2.0);
                double t179865 = 1.0/pow(rho_b[index],8.0/3.0);
                double t179866 = gamma_bb[index]*t179865*(1.0/2.0);
                double t179867 = t179864+t179866;
                double t179868 = gcab*t179867;
                double t179869 = t179868+1.0;
                double t179870 = gcab*gcab;
                double t179871 = t179867*t179867;
                double t179872 = t179870*t179870;
                double t179873 = t179871*t179871;
                double t179874 = t179870*t179871;
                double t179875 = gcab*t179867*2.0;
                double t179876 = t179874+t179875+1.0;
                double t179877 = t179870*t179871*3.0;
                double t179878 = gcab*t179870*t179871*t179867;
                double t179879 = gcab*t179867*3.0;
                double t179880 = t179877+t179878+t179879+1.0;
                double t179881 = t179870*t179871*6.0;
                double t179882 = gcab*t179870*t179871*t179867*4.0;
                double t179883 = t179872*t179873;
                double t179884 = gcab*t179867*4.0;
                double t179885 = t179881+t179882+t179883+t179884+1.0;
                double t179886 = t179862-t179863;
                double t179887 = 1.0/pow(rho_b[index],1.0/3.0);
                double t179888 = c*t179887;
                double t179889 = sqrt(t179888);
                double t179890 = pow(t179888,3.0/2.0);
                double t179891 = 1.0/pow(rho_b[index],2.0/3.0);
                double t179892 = b1p*t179889;
                double t179893 = b3p*t179890;
                double t179894 = b4p*t179721*t179891;
                double t179895 = b2p*c*t179887;
                double t179896 = t179892+t179893+t179894+t179895;
                double t179897 = 1.0/t179896;
                double t179898 = t179723*t179897*(1.0/2.0);
                double t179899 = t179898+1.0;
                double t179900 = log(t179899);
                double t179901 = a1p*c*t179887;
                double t179902 = t179901+1.0;
                double t179903 = c0p*t179900*t179902*2.0;
                double t179904 = t179802*t179805*t179771*t179794*t179799;
                double t179905 = Aa*t179771*t179817*t179827*t179836*t179829*t179799*2.0;
                double t179906 = 1.0/t179869;
                double t179907 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t179908 = 1.0/(t179869*t179869);
                double t179909 = 1.0/t179876;
                double t179910 = 1.0/(t179880*t179880);
                double t179911 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t179912 = 1.0/(t179876*t179876);
                double t179913 = 1.0/t179880;
                double t179914 = 1.0/t179885;
                double t179915 = 1.0/(t179885*t179885);
                double t179916 = gcab*t179735*2.0;
                double t179917 = t179735*t179870*t179867*6.0;
                double t179918 = gcab*t179735*t179870*t179871*6.0;
                double t179919 = t179735*t179871*t179872*t179867*2.0;
                double t179920 = t179916+t179917+t179918+t179919;
                double t179921 = gamma_aa[index]*gcab*t179907*(8.0/3.0);
                double t179922 = gamma_aa[index]*t179870*t179907*t179867*(8.0/3.0);
                double t179923 = t179921+t179922;
                double t179924 = gcab*t179735;
                double t179925 = t179735*t179870*t179867;
                double t179926 = t179924+t179925;
                double t179927 = gamma_aa[index]*gcab*t179907*(1.6E1/3.0);
                double t179928 = gamma_aa[index]*gcab*t179870*t179871*t179907*1.6E1;
                double t179929 = gamma_aa[index]*t179871*t179907*t179872*t179867*(1.6E1/3.0);
                double t179930 = gamma_aa[index]*t179870*t179907*t179867*1.6E1;
                double t179931 = t179930+t179927+t179928+t179929;
                double t179932 = gcab*t179735*(3.0/2.0);
                double t179933 = t179735*t179870*t179867*3.0;
                double t179934 = gcab*t179735*t179870*t179871*(3.0/2.0);
                double t179935 = t179932+t179933+t179934;
                double t179936 = gamma_aa[index]*gcab*t179907*4.0;
                double t179937 = gamma_aa[index]*gcab*t179870*t179871*t179907*4.0;
                double t179938 = gamma_aa[index]*t179870*t179907*t179867*8.0;
                double t179939 = t179936+t179937+t179938;
                double t179940 = t179771*t179839*t179886;
                double t179941 = t179940+t179863;
                double t179942 = 1.0/t179743;
                double t179943 = 1.0/t179753;
                double t179944 = 1.0/t179756;
                double t179945 = 1.0/t179747;
                double t179946 = 1.0/(t179743*t179743);
                double t179947 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t179948 = 1.0/(t179747*t179747);
                double t179949 = 1.0/(t179756*t179756);
                double t179950 = gcaa*t179735*3.0;
                double t179951 = gamma_aa[index]*t179740*t179737*6.0;
                double t179952 = gcaa*t179741*t179736*t179737*3.0;
                double t179953 = t179950+t179951+t179952;
                double t179954 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t179955 = 1.0/(t179753*t179753);
                double t179956 = gcaa*t179735*4.0;
                double t179957 = gamma_aa[index]*t179740*t179737*1.2E1;
                double t179958 = gcaa*t179741*t179736*t179737*1.2E1;
                double t179959 = gamma_aa[index]*t179736*t179738*t179739*4.0;
                double t179960 = t179956+t179957+t179958+t179959;
                double t179961 = gcaa*t179735*2.0;
                double t179962 = gamma_aa[index]*t179740*t179737*2.0;
                double t179963 = t179961+t179962;
                double t179964 = gamma_aa[index]*gcaa*t179907*(1.6E1/3.0);
                double t179965 = t179911*t179736*t179737*(1.6E1/3.0);
                double t179966 = t179964+t179965;
                double t179967 = gamma_aa[index]*gcaa*t179907*8.0;
                double t179968 = gamma_aa[index]*gcaa*t179736*t179737*t179947*8.0;
                double t179969 = t179911*t179736*t179737*1.6E1;
                double t179970 = t179967+t179968+t179969;
                double t179971 = gamma_aa[index]*gcaa*t179907*(3.2E1/3.0);
                double t179972 = gamma_aa[index]*gcaa*t179736*t179737*t179947*3.2E1;
                double t179973 = t179911*t179736*t179737*3.2E1;
                double t179974 = t179738*t179954*t179748*(3.2E1/3.0);
                double t179975 = t179971+t179972+t179973+t179974;
                double t179976 = 1.0/t179849;
                double t179977 = 1.0/(t179846*t179846);
                double t179978 = b4f*t179721*t179851*(2.0/3.0);
                double t179979 = b2f*c*t179850*(1.0/3.0);
                double t179980 = b1f*c*t179850*t179852*(1.0/6.0);
                double t179981 = b3f*c*t179850*t179719*(1.0/2.0);
                double t179982 = t179980+t179981+t179978+t179979;
                double t179983 = a1f*c*c0f*t179850*t179853*(2.0/3.0);
                double t179984 = a1p*c*c0p*t179732*t179850*(2.0/3.0);
                double t179985 = ccaa1*gcaa*t179735*t179942;
                double t179986 = ccaa4*gamma_aa[index]*t179736*t179943*t179738*t179739*4.0;
                double t179987 = ccaa2*gamma_aa[index]*t179740*t179737*t179944*2.0;
                double t179988 = ccaa3*gcaa*t179741*t179736*t179737*t179945*3.0;
                double t179989 = t179985+t179986+t179987+t179988-ccaa1*gamma_aa[index]*t179740*t179737*t179946-ccaa2* \
                   t179740*t179736*t179737*t179963*t179949-ccaa4*t179960*t179738*t179739*t179748*t179955-ccaa3*gamma_aa[index]* \
                   gcaa*t179741*t179736*t179737*t179953*t179948;
                double t179990 = gx*gx;
                double t179991 = t179990*t179990;
                double t179992 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t179993 = gamma_aa[index]*gx*t179735*4.0;
                double t179994 = gamma_aa[index]*gx*t179741*t179736*t179990*4.0;
                double t179995 = t179740*t179736*t179990*6.0;
                double t179996 = t179739*t179748*t179991;
                double t179997 = t179993+t179994+t179995+t179996+1.0;
                double t179998 = 1.0/t179997;
                double t179999 = cx4*t179739*t179748*t179991*t179998*(4.190715359480463E15/2.251799813685248E15);
                double t180000 = gamma_aa[index]*gx*t179735;
                double t180001 = t180000+1.0;
                double t180002 = 1.0/t180001;
                double t180003 = cx1*gamma_aa[index]*gx*t179735*t180002*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180004 = gamma_aa[index]*gx*t179735*3.0;
                double t180005 = gamma_aa[index]*gx*t179741*t179736*t179990;
                double t180006 = t179740*t179736*t179990*3.0;
                double t180007 = t180004+t180005+t180006+1.0;
                double t180008 = 1.0/t180007;
                double t180009 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180008*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180010 = gamma_aa[index]*gx*t179735*2.0;
                double t180011 = t179740*t179736*t179990;
                double t180012 = t180010+t180011+1.0;
                double t180013 = 1.0/t180012;
                double t180014 = cx2*t179740*t179736*t179990*t180013*(4.190715359480463E15/2.251799813685248E15);
                double t180015 = t179992+t179999+t180003+t180014+t180009;
                double t180016 = 1.0/omega;
                double t180017 = 1.0/(omega*omega);
                double t180018 = pow(rho_a[index],2.0/3.0);
                double t180019 = 1.0/t180015;
                double t180021 = t180017*t180018*t180019*(1.4000771998813E29/4.951760157141521E27);
                double t180020 = exp(-t180021);
                double t180022 = cx4*t179954*t179748*t179991*t179998*(1.396905119826821E15/7.0368744177664E13);
                double t180023 = cx1*gamma_aa[index]*gx*t179907*t180002*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t180024 = cx3*gamma_aa[index]*gx*t179736*t179990*t179947*t180008*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t180025 = cx2*t179911*t179736*t179990*t180013*(1.396905119826821E15/1.40737488355328E14);
                double t180026 = 1.0/(t180001*t180001);
                double t180027 = gamma_aa[index]*gx*t179907*8.0;
                double t180028 = gamma_aa[index]*gx*t179736*t179990*t179947*8.0;
                double t180029 = t179911*t179736*t179990*1.6E1;
                double t180030 = t180027+t180028+t180029;
                double t180031 = 1.0/(t180007*t180007);
                double t180032 = gamma_aa[index]*gx*t179907*(3.2E1/3.0);
                double t180033 = gamma_aa[index]*gx*t179736*t179990*t179947*3.2E1;
                double t180034 = t179911*t179736*t179990*3.2E1;
                double t180035 = t179954*t179748*t179991*(3.2E1/3.0);
                double t180036 = t180032+t180033+t180034+t180035;
                double t180037 = 1.0/(t179997*t179997);
                double t180038 = gamma_aa[index]*gx*t179907*(1.6E1/3.0);
                double t180039 = t179911*t179736*t179990*(1.6E1/3.0);
                double t180040 = t180038+t180039;
                double t180041 = 1.0/(t180012*t180012);
                double t180045 = cx1*t179911*t179736*t179990*t180026*(1.396905119826821E15/2.81474976710656E14);
                double t180046 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180030*t180031*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180047 = cx4*t179739*t179748*t179991*t180036*t180037*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180048 = cx2*t179740*t179736*t179990*t180040*t180041*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180042 = t180022+t180023+t180024+t180025-t180045-t180046-t180047-t180048;
                double t180043 = omega*omega;
                double t180044 = t180020-1.0;
                double t180049 = t179717*t180017*t180019*(1.4000771998813E29/7.427640235712282E27);
                double t180050 = 1.0/(t180015*t180015);
                double t180051 = t180050*t180042*t180017*t180018*(1.4000771998813E29/4.951760157141521E27);
                double t180052 = t180051+t180049;
                double t180053 = sqrt(t180015);
                double t180054 = t179722*t180015*t180043*t180044*(2.475880078570761E27/1.4000771998813E29);
                double t180055 = -t180020+t180054+3.0/2.0;
                double t180056 = 1.0/sqrt(t180015);
                double t180057 = pow(rho_a[index],1.0/3.0);
                double t180058 = t180016*t180056*t180057*(3.74176054803257E14/7.0368744177664E13);
                double t180059 = erf(t180058);
                double t180060 = t180059*(3.991211251234741E15/2.251799813685248E15);
                double t180062 = omega*t179717*t180053*t180055*(7.0368744177664E13/3.74176054803257E14);
                double t180061 = t180060-t180062;
                double t180063 = cx1*gx*t179735*t180002;
                double t180064 = cx4*gamma_aa[index]*t179736*t179739*t179991*t179998*4.0;
                double t180065 = cx2*gamma_aa[index]*t179740*t179990*t180013*2.0;
                double t180066 = cx3*gx*t179741*t179736*t179990*t180008*3.0;
                double t180067 = gx*t179735*3.0;
                double t180068 = gamma_aa[index]*t179740*t179990*6.0;
                double t180069 = gx*t179741*t179736*t179990*3.0;
                double t180070 = t180067+t180068+t180069;
                double t180071 = gx*t179735*4.0;
                double t180072 = gamma_aa[index]*t179740*t179990*1.2E1;
                double t180073 = gx*t179741*t179736*t179990*1.2E1;
                double t180074 = gamma_aa[index]*t179736*t179739*t179991*4.0;
                double t180075 = t180071+t180072+t180073+t180074;
                double t180076 = gx*t179735*2.0;
                double t180077 = gamma_aa[index]*t179740*t179990*2.0;
                double t180078 = t180076+t180077;
                double t180079 = t180063+t180064+t180065+t180066-cx1*gamma_aa[index]*t179740*t179990*t180026-cx2* \
                   t179740*t179736*t179990*t180041*t180078-cx4*t179739*t179748*t179991*t180037*t180075-cx3*gamma_aa[index]* \
                   gx*t179741*t179736*t179990*t180031*t180070;
                double t180080 = pow(rho_a[index],4.0/3.0);
                double t180081 = 1.0/sqrt(3.141592653589793);
                double t180082 = 1.0/pow(t180015,3.0/2.0);
                double t180083 = cx1*gx*t179735*t180002*(4.190715359480463E15/2.251799813685248E15);
                double t180084 = cx4*gamma_aa[index]*t179736*t179739*t179991*t179998*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t180085 = cx2*gamma_aa[index]*t179740*t179990*t180013*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180086 = cx3*gx*t179741*t179736*t179990*t180008*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t180088 = cx1*gamma_aa[index]*t179740*t179990*t180026*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180089 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180031*t180070*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180090 = cx4*t179739*t179748*t179991*t180037*t180075*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180091 = cx2*t179740*t179736*t179990*t180041*t180078*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180087 = -t180090-t180091+t180083+t180084+t180085+t180086-t180088-t180089;
                double t180092 = cx1*gamma_aa[index]*t179911*t179990*t180026*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t180093 = 1.0/(t180001*t180001*t180001);
                double t180094 = cx3*gx*t179741*t179736*t179990*t180030*t180031*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t180095 = cx2*gamma_aa[index]*t179740*t179990*t180040*t180041*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180096 = cx3*gamma_aa[index]*gx*t179736*t179990*t179947*t180031*t180070*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t180097 = gx*t179907*8.0;
                double t180098 = gamma_aa[index]*t179911*t179990*3.2E1;
                double t180099 = gx*t179736*t179990*t179947*2.4E1;
                double t180100 = t180097+t180098+t180099;
                double t180101 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180100*t180031*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180102 = cx4*gamma_aa[index]*t179736*t179739*t179991*t180036*t180037*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t180103 = cx4*t179954*t179748*t179991*t180037*t180075*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t180104 = gx*t179907*(3.2E1/3.0);
                double t180105 = gamma_aa[index]*t179911*t179990*6.4E1;
                double t180106 = gx*t179736*t179990*t179947*9.6E1;
                double t180107 = gamma_aa[index]*t179736*t179954*t179991*(1.28E2/3.0);
                double t180108 = t180104+t180105+t180106+t180107;
                double t180109 = cx4*t179739*t179748*t179991*t180108*t180037*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180110 = cx2*t179911*t179736*t179990*t180041*t180078*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t180111 = gx*t179907*(1.6E1/3.0);
                double t180112 = gamma_aa[index]*t179911*t179990*(3.2E1/3.0);
                double t180113 = t180111+t180112;
                double t180114 = cx2*t179740*t179736*t179990*t180041*t180113*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180115 = 1.0/(t180012*t180012*t180012);
                double t180116 = 1.0/(t180007*t180007*t180007);
                double t180117 = 1.0/(t179997*t179997*t179997);
                double t180119 = cx1*gx*t179907*t180002*(1.396905119826821E15/2.81474976710656E14);
                double t180120 = cx4*gamma_aa[index]*t179736*t179954*t179991*t179998*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t180121 = cx2*gamma_aa[index]*t179911*t179990*t180013*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t180122 = cx3*gx*t179736*t179990*t179947*t180008*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t180123 = cx1*gx*t179736*t179990*t179947*t180093*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t180124 = cx2*t179740*t179736*t179990*t180040*t180115*t180078*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180125 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180030*t180070*t180116*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t180126 = cx4*t179739*t179748*t179991*t180036*t180117*t180075*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180118 = t180101+t180110+t180102-t180120+t180103-t180121-t180122+t180114-t180123-t180124- \
                   t180125-t180126+t180109+t180092-t180119+t180094+t180095+t180096;
                double t180127 = t180050*t180017*t180018*t180118*(1.4000771998813E29/4.951760157141521E27);
                double t180128 = t179717*t180050*t180017*t180087*(1.4000771998813E29/7.427640235712282E27);
                double t180129 = 1.0/(t180015*t180015*t180015);
                double t180130 = t180042*t180017*t180018*t180129*t180087*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t180131 = t180130+t180127+t180128;
                double t180132 = t180020*t180019*t180087*(1.0/2.0);
                double t180133 = t179722*t180043*t180044*t180087*(2.475880078570761E27/1.4000771998813E29);
                double t180142 = t180020*t180050*t180017*t180018*t180087*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t180134 = t180132+t180133-t180142;
                double t180135 = t179851*t180015*t180043*t180044*(4.951760157141521E27/4.2002315996439E29);
                double t180136 = t179722*t180042*t180043*t180044*(2.475880078570761E27/1.4000771998813E29);
                double t180137 = t179722*t180020*t180015*t180043*t180052*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t180149 = t180020*t180052;
                double t180138 = t180135+t180136+t180137-t180149;
                double t180139 = t179722*t180016*t180056*(3.74176054803257E14/2.11106232532992E14);
                double t180140 = t180042*t180016*t180082*t180057*(3.74176054803257E14/1.40737488355328E14);
                double t180141 = t180140+t180139;
                double t180143 = omega*t179717*t180053*t180134*(7.0368744177664E13/3.74176054803257E14);
                double t180144 = omega*t179717*t180055*t180056*t180087*(3.5184372088832E13/3.74176054803257E14);
                double t180145 = t180020*t180016*t180081*t180082*t180057*t180087*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t180146 = t180143+t180144+t180145;
                double t180147 = t180020*t180141*t180081*(3.991211251234741E15/1.125899906842624E15);
                double t180148 = omega*t179850*t180053*t180055*(7.0368744177664E13/1.122528164409771E15);
                double t180150 = omega*t179717*t180053*t180138*(7.0368744177664E13/3.74176054803257E14);
                double t180151 = omega*t179717*t180042*t180055*t180056*(3.5184372088832E13/3.74176054803257E14);
                double t180152 = t180150+t180151+t180147+t180148;
                double t180153 = cx4*t179739*t179748*t179991*t179998;
                double t180154 = cx1*gamma_aa[index]*gx*t179735*t180002;
                double t180155 = cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180008;
                double t180156 = cx2*t179740*t179736*t179990*t180013;
                double t180157 = cx0+t180153+t180154+t180155+t180156;
                double t180158 = omega*t179717*t180053*t180146*(2.81474976710656E14/1.122528164409771E15);
                double t180159 = t180158-omega*t179717*t180061*t180056*t180087*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t180160 = omega*t179717*t180061*t180053*(2.81474976710656E14/1.122528164409771E15);
                double t180161 = t180160-1.0;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t179941+rho_b[index]*(t179903-t179771*t179839*(t179903- \
                   c0f*log((t179772*(1.0/2.0))/(b1f*t179889+b3f*t179890+b2f*c*t179887+b4f*t179721*t179891)+1.0)*(a1f* \
                   c*t179887+1.0)*2.0))-t179757*(t179804+t179904+t179905))*(ccab1*gcab*t179906*t179907*(4.0/3.0)-ccab2* \
                   t179912*t179870*t179871*(gcab*t179907*(8.0/3.0)+gamma_aa[index]*t179911*t179870*(4.0/3.0)+t179870* \
                   t179907*t179867*(8.0/3.0))-ccab4*t179915*t179872*t179873*(gcab*t179907*(1.6E1/3.0)+gamma_aa[index]* \
                   t179911*t179870*8.0+t179870*t179907*t179867*1.6E1+gamma_aa[index]*t179911*t179871*t179872*8.0+gcab* \
                   t179870*t179871*t179907*1.6E1+t179871*t179907*t179872*t179867*(1.6E1/3.0)+gamma_aa[index]*gcab*t179911* \
                   t179870*t179867*1.6E1)-ccab1*gamma_aa[index]*t179911*t179870*t179908*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t179911*t179870*t179909*(4.0/3.0)-ccab1*t179870*t179907*t179908*t179867*(4.0/3.0)+ccab2*t179870*t179907* \
                   t179909*t179867*(8.0/3.0)-ccab2*t179912*t179923*t179735*t179870*t179867+ccab4*t179914*t179871*t179907* \
                   t179872*t179867*(1.6E1/3.0)+ccab4*t179920*t179931*t179872*t179873*1.0/(t179885*t179885*t179885)*2.0+ \
                   ccab2*t179923*t179870*t179871*t179926*1.0/(t179876*t179876*t179876)*2.0+ccab4*gamma_aa[index]*t179911* \
                   t179914*t179871*t179872*8.0+ccab3*gcab*t179913*t179870*t179871*t179907*4.0+ccab3*gamma_aa[index]*gcab* \
                   t179911*t179913*t179870*t179867*4.0-ccab2*gamma_aa[index]*t179912*t179870*t179907*t179926*t179867* \
                   (8.0/3.0)-ccab3*gcab*t179910*t179735*t179870*t179871*t179939*(3.0/2.0)-ccab4*t179931*t179735*t179915* \
                   t179871*t179872*t179867*2.0-ccab3*gcab*t179910*t179870*t179871*t179867*(gcab*t179907*4.0+gamma_aa[index]* \
                   t179911*t179870*4.0+t179870*t179907*t179867*8.0+gcab*t179870*t179871*t179907*4.0+gamma_aa[index]*gcab* \
                   t179911*t179870*t179867*4.0)+ccab1*gamma_aa[index]*gcab*t179911*t179870*t179867*1.0/(t179869*t179869* \
                   t179869)*(4.0/3.0)+ccab3*gcab*t179870*t179871*1.0/(t179880*t179880*t179880)*t179935*t179867*t179939* \
                   2.0-ccab3*gamma_aa[index]*gcab*t179910*t179870*t179871*t179907*t179935*4.0-ccab4*gamma_aa[index]*t179920* \
                   t179915*t179871*t179907*t179872*t179867*(1.6E1/3.0))-t179989*(t179863+t179771*t179839*(t179862-c0p* \
                   t179732*t179734*2.0))-(t179804+t179904+t179905-t179863+t179757*(t179815-t179802*t179805*t179771*t179799* \
                   (t179815-(t179792*1.0/(t179786*t179786)*(b2f*c*t179768*(1.0/3.0)+b4f*t179721*t179806*(2.0/3.0)+b1f* \
                   c*t179807*t179768*(1.0/6.0)+b3f*c*t179760*t179768*(1.0/2.0)))/t179789+a1f*c*c0f*t179790*t179768*(2.0/ \
                   3.0)-a1p*c*c0p*t179793*t179768*(2.0/3.0))-a1p*c*c0p*t179793*t179768*(2.0/3.0)+t179802*t179805*t179771* \
                   t179834*t179794-t179805*t179771*t179816*t179794*t179799*4.0+t179802*t179771*t179794*t179778*t179779* \
                   t179799*4.0-Aa*t179771*t179817*t179827*t179829*t179799*(t179805*t179816*4.0-t179802*t179778*t179779* \
                   4.0)*2.0+Aa*t179771*t179834*t179817*t179827*t179836*t179829*2.0+(1.0/(t179823*t179823)*t179771*t179817* \
                   t179836*t179829*t179799*(b2a*c*t179768*(1.0/3.0)+b4a*t179721*t179806*(2.0/3.0)+b1a*c*t179807*t179768* \
                   (1.0/6.0)+b3a*c*t179760*t179768*(1.0/2.0)))/t179826-Aa*a1a*c*t179771*t179817*t179827*t179836*t179768* \
                   t179799*(2.0/3.0))+rho_a[index]*(-t179861+t179984+t179771*t179839*(t179861+t179983-t179841*t179982* \
                   t179976*t179977-a1p*c*c0p*t179732*t179850*(2.0/3.0)))-t179771*t179839*t179886)*(ccab1*gcab*t179735* \
                   t179906*(1.0/2.0)-ccab2*t179912*t179870*t179871*t179926-ccab4*t179920*t179915*t179872*t179873-ccab1* \
                   t179735*t179870*t179908*t179867*(1.0/2.0)+ccab2*t179735*t179870*t179909*t179867+ccab4*t179914*t179735* \
                   t179871*t179872*t179867*2.0+ccab3*gcab*t179913*t179735*t179870*t179871*(3.0/2.0)-ccab3*gcab*t179910* \
                   t179870*t179871*t179935*t179867)-rho_a[index]*t179941*(ccaa1*gcaa*t179942*t179907*(-8.0/3.0)-ccaa2* \
                   gamma_aa[index]*t179911*t179737*t179944*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t179911*t179737*t179946* \
                   8.0+ccaa2*t179911*t179736*t179737*t179963*t179949*(1.6E1/3.0)+ccaa4*t179960*t179738*t179954*t179748* \
                   t179955*(3.2E1/3.0)+ccaa4*t179738*t179739*t179748*t179955*(gcaa*t179907*(3.2E1/3.0)+gamma_aa[index]* \
                   t179911*t179737*6.4E1+gamma_aa[index]*t179736*t179738*t179954*(1.28E2/3.0)+gcaa*t179736*t179737*t179947* \
                   9.6E1)-ccaa1*gcaa*1.0/(t179743*t179743*t179743)*t179736*t179737*t179947*(1.6E1/3.0)+ccaa2*t179740* \
                   t179736*t179737*t179949*(gcaa*t179907*(1.6E1/3.0)+gamma_aa[index]*t179911*t179737*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t179736*t179943*t179738*t179954*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t179740*t179737* \
                   t179966*t179949*2.0-ccaa3*gcaa*t179736*t179737*t179945*t179947*2.4E1+ccaa4*gamma_aa[index]*t179736* \
                   t179738*t179739*t179955*t179975*4.0+ccaa3*gcaa*t179741*t179736*t179970*t179737*t179948*3.0-ccaa2*t179740* \
                   t179736*t179737*1.0/(t179756*t179756*t179756)*t179963*t179966*2.0-ccaa4*1.0/(t179753*t179753*t179753) \
                   *t179960*t179738*t179739*t179748*t179975*2.0+ccaa3*gamma_aa[index]*gcaa*t179741*t179736*t179737*t179948* \
                   (gcaa*t179907*8.0+gamma_aa[index]*t179911*t179737*3.2E1+gcaa*t179736*t179737*t179947*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t179736*t179737*t179953*t179947*t179948*8.0-ccaa3*gamma_aa[index]*gcaa*t179741* \
                   t179736*t179970*t179737*t179953*1.0/(t179747*t179747*t179747)*2.0)+rho_a[index]*t179989*(-t179861+ \
                   t179984+t179771*t179839*(t179861+t179983-t179984-t179841*t179982*t179976*t179977))-c0*t180080*t180161* \
                   (cx1*gx*t179907*t180002*(-8.0/3.0)+cx1*gamma_aa[index]*t179911*t179990*t180026*8.0-cx2*gamma_aa[index]* \
                   t179911*t179990*t180013*(3.2E1/3.0)+cx2*t179740*t179736*t179990*t180041*t180113+cx2*t179911*t179736* \
                   t179990*t180041*t180078*(1.6E1/3.0)+cx4*t179739*t179748*t179991*t180108*t180037+cx4*t179954*t179748* \
                   t179991*t180037*t180075*(3.2E1/3.0)+cx2*gamma_aa[index]*t179740*t179990*t180040*t180041*2.0-cx4*gamma_aa[index]* \
                   t179736*t179954*t179991*t179998*(1.28E2/3.0)-cx1*gx*t179736*t179990*t179947*t180093*(1.6E1/3.0)-cx3* \
                   gx*t179736*t179990*t179947*t180008*2.4E1+cx4*gamma_aa[index]*t179736*t179739*t179991*t180036*t180037* \
                   4.0+cx3*gx*t179741*t179736*t179990*t180030*t180031*3.0-cx2*t179740*t179736*t179990*t180040*t180115* \
                   t180078*2.0-cx4*t179739*t179748*t179991*t180036*t180117*t180075*2.0+cx3*gamma_aa[index]*gx*t179741* \
                   t179736*t179990*t180100*t180031+cx3*gamma_aa[index]*gx*t179736*t179990*t179947*t180031*t180070*8.0- \
                   cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180030*t180070*t180116*2.0)-c0*t180161*t180057*t180079* \
                   (4.0/3.0)+c0*t180057*t180157*t180159*(4.0/3.0)-c0*t180080*t180157*(omega*t179717*t180053*(t180020* \
                   t180081*(t179722*t180016*t180082*t180087*(3.74176054803257E14/4.22212465065984E14)+t180016*t180082* \
                   t180118*t180057*(3.74176054803257E14/1.40737488355328E14)+1.0/pow(t180015,5.0/2.0)*t180042*t180016* \
                   t180057*t180087*(1.122528164409771E15/2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15) \
                   +omega*t179850*t180053*t180134*(7.0368744177664E13/1.122528164409771E15)+omega*t179717*t180053*(t180020* \
                   t180131-t179722*t180043*t180044*t180118*(2.475880078570761E27/1.4000771998813E29)+t179851*t180043* \
                   t180044*t180087*(4.951760157141521E27/4.2002315996439E29)+t180020*t180050*t180042*t180087*(1.0/2.0) \
                   +t180020*t180052*t180019*t180087*(1.0/2.0)+(t180020*t180019*t180087*(1.0/3.0))/rho_a[index]-t179722* \
                   t180020*t180131*t180015*t180043*(2.475880078570761E27/1.4000771998813E29)+t179722*t180020*t180043* \
                   t180052*t180087*(2.475880078570761E27/1.4000771998813E29)-t180020*t180050*t180052*t180017*t180018* \
                   t180087*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14)+omega* \
                   t179717*t180042*t180134*t180056*(3.5184372088832E13/3.74176054803257E14)-omega*t179717*t180055*t180118* \
                   t180056*(3.5184372088832E13/3.74176054803257E14)+omega*t179850*t180055*t180056*t180087*(3.5184372088832E13/ \
                   1.122528164409771E15)+omega*t179717*t180056*t180138*t180087*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t179717*t180042*t180055*t180082*t180087*(1.7592186044416E13/3.74176054803257E14)+t180020*t180050* \
                   t180141*t180017*t180018*t180081*t180087*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t179850*t180053*t180146*(2.81474976710656E14/3.367584493229313E15)+omega* \
                   t179717*t180042*t180056*t180146*(1.40737488355328E14/1.122528164409771E15)+omega*t179717*t180061*t180118* \
                   t180056*(1.40737488355328E14/1.122528164409771E15)-omega*t179850*t180061*t180056*t180087*(1.40737488355328E14/ \
                   3.367584493229313E15)+omega*t179717*t180152*t180056*t180087*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t179717*t180042*t180061*t180082*t180087*(7.0368744177664E13/1.122528164409771E15))-c0*t180080* \
                   t180159*(cx1*gamma_aa[index]*gx*t179907*t180002*(8.0/3.0)-cx1*t179911*t179736*t179990*t180026*(8.0/ \
                   3.0)+cx2*t179911*t179736*t179990*t180013*(1.6E1/3.0)+cx4*t179954*t179748*t179991*t179998*(3.2E1/3.0) \
                   -cx2*t179740*t179736*t179990*t180040*t180041-cx4*t179739*t179748*t179991*t180036*t180037+cx3*gamma_aa[index]* \
                   gx*t179736*t179990*t179947*t180008*8.0-cx3*gamma_aa[index]*gx*t179741*t179736*t179990*t180030*t180031) \
                   +c0*t180080*t180079*(omega*t179850*t180061*t180053*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t179717*t180053*t180152*(2.81474976710656E14/1.122528164409771E15)+omega*t179717*t180042*t180061*t180056* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_a[index] > cutoff_) {
                double t183407 = 1.0/pow(rho_a[index],1.0/3.0);
                double t183408 = c*t183407;
                double t183409 = sqrt(t183408);
                double t183410 = pow(t183408,3.0/2.0);
                double t183411 = c*c;
                double t183412 = 1.0/pow(rho_a[index],2.0/3.0);
                double t183413 = 1.0/c0p;
                double t183414 = b1p*t183409;
                double t183415 = b3p*t183410;
                double t183416 = b4p*t183411*t183412;
                double t183417 = b2p*c*t183407;
                double t183418 = t183414+t183415+t183416+t183417;
                double t183419 = 1.0/t183418;
                double t183420 = t183413*t183419*(1.0/2.0);
                double t183421 = t183420+1.0;
                double t183422 = log(t183421);
                double t183423 = a1p*c*t183407;
                double t183424 = t183423+1.0;
                double t183425 = 1.0/pow(rho_a[index],8.0/3.0);
                double t183426 = gamma_aa[index]*gamma_aa[index];
                double t183427 = gcaa*gcaa;
                double t183428 = t183427*t183427;
                double t183429 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t183430 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t183431 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t183432 = gamma_aa[index]*gcaa*t183425;
                double t183433 = t183432+1.0;
                double t183434 = gamma_aa[index]*gcaa*t183425*3.0;
                double t183435 = gamma_aa[index]*gcaa*t183431*t183426*t183427;
                double t183436 = t183430*t183426*t183427*3.0;
                double t183437 = t183434+t183435+t183436+1.0;
                double t183438 = t183426*t183426;
                double t183439 = gamma_aa[index]*gcaa*t183425*4.0;
                double t183440 = gamma_aa[index]*gcaa*t183431*t183426*t183427*4.0;
                double t183441 = t183430*t183426*t183427*6.0;
                double t183442 = t183428*t183429*t183438;
                double t183443 = t183440+t183441+t183442+t183439+1.0;
                double t183444 = gamma_aa[index]*gcaa*t183425*2.0;
                double t183445 = t183430*t183426*t183427;
                double t183446 = t183444+t183445+1.0;
                double t183447 = pow(2.0,1.0/3.0);
                double t183448 = t183447*2.0;
                double t183449 = t183448-2.0;
                double t183450 = two_13*2.0;
                double t183451 = t183450-2.0;
                double t183452 = 1.0/t183451;
                double t183453 = 1.0/c0f;
                double t183454 = b1f*t183409;
                double t183455 = b3f*t183410;
                double t183456 = b4f*t183411*t183412;
                double t183457 = b2f*c*t183407;
                double t183458 = t183454+t183455+t183456+t183457;
                double t183459 = 1.0/t183458;
                double t183460 = t183453*t183459*(1.0/2.0);
                double t183461 = t183460+1.0;
                double t183462 = log(t183461);
                double t183463 = a1f*c*t183407;
                double t183464 = t183463+1.0;
                double t183465 = c0f*t183462*t183464*2.0;
                double t183466 = c0p*t183422*t183424*2.0;
                double t183467 = 1.0/t183433;
                double t183468 = 1.0/t183443;
                double t183469 = 1.0/t183446;
                double t183470 = 1.0/t183437;
                double t183471 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t183472 = 1.0/(t183433*t183433);
                double t183473 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t183474 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t183475 = 1.0/(t183437*t183437);
                double t183476 = 1.0/(t183446*t183446);
                double t183477 = gcaa*t183425*3.0;
                double t183478 = gamma_aa[index]*t183430*t183427*6.0;
                double t183479 = gcaa*t183431*t183426*t183427*3.0;
                double t183480 = t183477+t183478+t183479;
                double t183481 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t183482 = 1.0/(t183443*t183443);
                double t183483 = gcaa*t183425*4.0;
                double t183484 = gamma_aa[index]*t183430*t183427*1.2E1;
                double t183485 = gcaa*t183431*t183426*t183427*1.2E1;
                double t183486 = gamma_aa[index]*t183426*t183428*t183429*4.0;
                double t183487 = t183483+t183484+t183485+t183486;
                double t183488 = gcaa*t183425*2.0;
                double t183489 = gamma_aa[index]*t183430*t183427*2.0;
                double t183490 = t183488+t183489;
                double t183491 = gamma_aa[index]*gcaa*t183474*(1.6E1/3.0);
                double t183492 = t183426*t183471*t183427*(1.6E1/3.0);
                double t183493 = t183491+t183492;
                double t183494 = gamma_aa[index]*gcaa*t183474*8.0;
                double t183495 = gamma_aa[index]*gcaa*t183426*t183427*t183473*8.0;
                double t183496 = t183426*t183471*t183427*1.6E1;
                double t183497 = t183494+t183495+t183496;
                double t183498 = gamma_aa[index]*gcaa*t183474*(3.2E1/3.0);
                double t183499 = gamma_aa[index]*gcaa*t183426*t183427*t183473*3.2E1;
                double t183500 = t183426*t183471*t183427*3.2E1;
                double t183501 = t183481*t183428*t183438*(3.2E1/3.0);
                double t183502 = t183500+t183501+t183498+t183499;
                double t183503 = 1.0/pow(rho_a[index],4.0/3.0);
                double t183504 = 1.0/pow(rho_a[index],5.0/3.0);
                double t183505 = 1.0/sqrt(t183408);
                double t183506 = 1.0/t183421;
                double t183507 = 1.0/(t183418*t183418);
                double t183508 = b4p*t183411*t183504*(2.0/3.0);
                double t183509 = b2p*c*t183503*(1.0/3.0);
                double t183510 = b1p*c*t183503*t183505*(1.0/6.0);
                double t183511 = b3p*c*t183503*t183409*(1.0/2.0);
                double t183512 = t183510+t183511+t183508+t183509;
                double t183513 = t183512*t183424*t183506*t183507;
                double t183514 = ccaa1*gcaa*t183425*t183467;
                double t183515 = ccaa4*gamma_aa[index]*t183426*t183428*t183429*t183468*4.0;
                double t183516 = ccaa2*gamma_aa[index]*t183430*t183427*t183469*2.0;
                double t183517 = ccaa3*gcaa*t183431*t183470*t183426*t183427*3.0;
                double t183518 = t183514+t183515+t183516+t183517-ccaa1*gamma_aa[index]*t183430*t183427*t183472-ccaa2* \
                   t183430*t183426*t183427*t183490*t183476-ccaa4*t183428*t183482*t183429*t183438*t183487-ccaa3*gamma_aa[index]* \
                   gcaa*t183431*t183426*t183480*t183427*t183475;
                double t183519 = gx*gx;
                double t183520 = t183519*t183519;
                double t183521 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t183522 = gamma_aa[index]*gx*t183425*4.0;
                double t183523 = gamma_aa[index]*gx*t183431*t183426*t183519*4.0;
                double t183524 = t183430*t183426*t183519*6.0;
                double t183525 = t183520*t183429*t183438;
                double t183526 = t183522+t183523+t183524+t183525+1.0;
                double t183527 = 1.0/t183526;
                double t183528 = cx4*t183520*t183527*t183429*t183438*(4.190715359480463E15/2.251799813685248E15);
                double t183529 = gamma_aa[index]*gx*t183425;
                double t183530 = t183529+1.0;
                double t183531 = 1.0/t183530;
                double t183532 = cx1*gamma_aa[index]*gx*t183531*t183425*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183533 = gamma_aa[index]*gx*t183425*3.0;
                double t183534 = gamma_aa[index]*gx*t183431*t183426*t183519;
                double t183535 = t183430*t183426*t183519*3.0;
                double t183536 = t183533+t183534+t183535+1.0;
                double t183537 = 1.0/t183536;
                double t183538 = cx3*gamma_aa[index]*gx*t183431*t183426*t183519*t183537*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183539 = gamma_aa[index]*gx*t183425*2.0;
                double t183540 = t183430*t183426*t183519;
                double t183541 = t183540+t183539+1.0;
                double t183542 = 1.0/t183541;
                double t183543 = cx2*t183430*t183542*t183426*t183519*(4.190715359480463E15/2.251799813685248E15);
                double t183544 = t183521+t183532+t183543+t183528+t183538;
                double t183545 = 1.0/omega;
                double t183546 = 1.0/(omega*omega);
                double t183547 = pow(rho_a[index],2.0/3.0);
                double t183548 = 1.0/t183544;
                double t183550 = t183546*t183547*t183548*(1.4000771998813E29/4.951760157141521E27);
                double t183549 = exp(-t183550);
                double t183551 = cx4*t183520*t183481*t183527*t183438*(1.396905119826821E15/7.0368744177664E13);
                double t183552 = cx1*gamma_aa[index]*gx*t183531*t183474*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t183553 = cx3*gamma_aa[index]*gx*t183426*t183473*t183519*t183537*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t183554 = cx2*t183542*t183426*t183471*t183519*(1.396905119826821E15/1.40737488355328E14);
                double t183555 = 1.0/(t183530*t183530);
                double t183556 = gamma_aa[index]*gx*t183474*8.0;
                double t183557 = gamma_aa[index]*gx*t183426*t183473*t183519*8.0;
                double t183558 = t183426*t183471*t183519*1.6E1;
                double t183559 = t183556+t183557+t183558;
                double t183560 = 1.0/(t183536*t183536);
                double t183561 = gamma_aa[index]*gx*t183474*(3.2E1/3.0);
                double t183562 = gamma_aa[index]*gx*t183426*t183473*t183519*3.2E1;
                double t183563 = t183426*t183471*t183519*3.2E1;
                double t183564 = t183520*t183481*t183438*(3.2E1/3.0);
                double t183565 = t183561+t183562+t183563+t183564;
                double t183566 = 1.0/(t183526*t183526);
                double t183567 = gamma_aa[index]*gx*t183474*(1.6E1/3.0);
                double t183568 = t183426*t183471*t183519*(1.6E1/3.0);
                double t183569 = t183567+t183568;
                double t183570 = 1.0/(t183541*t183541);
                double t183574 = cx1*t183426*t183471*t183519*t183555*(1.396905119826821E15/2.81474976710656E14);
                double t183575 = cx3*gamma_aa[index]*gx*t183431*t183560*t183426*t183519*t183559*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183576 = cx4*t183520*t183429*t183438*t183565*t183566*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183577 = cx2*t183430*t183426*t183570*t183519*t183569*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183571 = t183551+t183552+t183553+t183554-t183574-t183575-t183576-t183577;
                double t183572 = omega*omega;
                double t183573 = t183549-1.0;
                double t183578 = t183407*t183546*t183548*(1.4000771998813E29/7.427640235712282E27);
                double t183579 = 1.0/(t183544*t183544);
                double t183580 = t183571*t183546*t183547*t183579*(1.4000771998813E29/4.951760157141521E27);
                double t183581 = t183580+t183578;
                double t183582 = sqrt(t183544);
                double t183583 = t183412*t183544*t183572*t183573*(2.475880078570761E27/1.4000771998813E29);
                double t183584 = t183583-t183549+3.0/2.0;
                double t183585 = 1.0/sqrt(t183544);
                double t183586 = pow(rho_a[index],1.0/3.0);
                double t183587 = t183545*t183585*t183586*(3.74176054803257E14/7.0368744177664E13);
                double t183588 = erf(t183587);
                double t183589 = t183588*(3.991211251234741E15/2.251799813685248E15);
                double t183591 = omega*t183407*t183582*t183584*(7.0368744177664E13/3.74176054803257E14);
                double t183590 = -t183591+t183589;
                double t183592 = cx1*gx*t183531*t183425;
                double t183593 = cx4*gamma_aa[index]*t183520*t183426*t183527*t183429*4.0;
                double t183594 = cx2*gamma_aa[index]*t183430*t183542*t183519*2.0;
                double t183595 = cx3*gx*t183431*t183426*t183519*t183537*3.0;
                double t183596 = gx*t183425*3.0;
                double t183597 = gamma_aa[index]*t183430*t183519*6.0;
                double t183598 = gx*t183431*t183426*t183519*3.0;
                double t183599 = t183596+t183597+t183598;
                double t183600 = gx*t183425*4.0;
                double t183601 = gamma_aa[index]*t183430*t183519*1.2E1;
                double t183602 = gx*t183431*t183426*t183519*1.2E1;
                double t183603 = gamma_aa[index]*t183520*t183426*t183429*4.0;
                double t183604 = t183600+t183601+t183602+t183603;
                double t183605 = gx*t183425*2.0;
                double t183606 = gamma_aa[index]*t183430*t183519*2.0;
                double t183607 = t183605+t183606;
                double t183608 = t183592+t183593+t183594+t183595-cx1*gamma_aa[index]*t183430*t183519*t183555-cx2* \
                   t183430*t183426*t183570*t183607*t183519-cx4*t183520*t183604*t183429*t183438*t183566-cx3*gamma_aa[index]* \
                   gx*t183431*t183560*t183426*t183519*t183599;
                double t183609 = pow(rho_a[index],4.0/3.0);
                double t183610 = 1.0/sqrt(3.141592653589793);
                double t183611 = 1.0/pow(t183544,3.0/2.0);
                double t183612 = cx1*gx*t183531*t183425*(4.190715359480463E15/2.251799813685248E15);
                double t183613 = cx4*gamma_aa[index]*t183520*t183426*t183527*t183429*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t183614 = cx2*gamma_aa[index]*t183430*t183542*t183519*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183615 = cx3*gx*t183431*t183426*t183519*t183537*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t183617 = cx1*gamma_aa[index]*t183430*t183519*t183555*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183618 = cx3*gamma_aa[index]*gx*t183431*t183560*t183426*t183519*t183599*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183619 = cx4*t183520*t183604*t183429*t183438*t183566*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183620 = cx2*t183430*t183426*t183570*t183607*t183519*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183616 = -t183620+t183612+t183613+t183614+t183615-t183617-t183618-t183619;
                double t183621 = cx1*gamma_aa[index]*t183471*t183519*t183555*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t183622 = 1.0/(t183530*t183530*t183530);
                double t183623 = cx3*gx*t183431*t183560*t183426*t183519*t183559*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t183624 = cx2*gamma_aa[index]*t183430*t183570*t183519*t183569*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183625 = cx3*gamma_aa[index]*gx*t183560*t183426*t183473*t183519*t183599*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t183626 = gx*t183474*8.0;
                double t183627 = gamma_aa[index]*t183471*t183519*3.2E1;
                double t183628 = gx*t183426*t183473*t183519*2.4E1;
                double t183629 = t183626+t183627+t183628;
                double t183630 = cx3*gamma_aa[index]*gx*t183431*t183560*t183426*t183519*t183629*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183631 = cx4*gamma_aa[index]*t183520*t183426*t183429*t183565*t183566*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t183632 = cx4*t183520*t183604*t183481*t183438*t183566*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t183633 = gx*t183474*(3.2E1/3.0);
                double t183634 = gamma_aa[index]*t183471*t183519*6.4E1;
                double t183635 = gx*t183426*t183473*t183519*9.6E1;
                double t183636 = gamma_aa[index]*t183520*t183426*t183481*(1.28E2/3.0);
                double t183637 = t183633+t183634+t183635+t183636;
                double t183638 = cx4*t183520*t183429*t183438*t183637*t183566*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183639 = cx2*t183426*t183471*t183570*t183607*t183519*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t183640 = gx*t183474*(1.6E1/3.0);
                double t183641 = gamma_aa[index]*t183471*t183519*(3.2E1/3.0);
                double t183642 = t183640+t183641;
                double t183643 = cx2*t183430*t183426*t183570*t183642*t183519*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183644 = 1.0/(t183541*t183541*t183541);
                double t183645 = 1.0/(t183536*t183536*t183536);
                double t183646 = 1.0/(t183526*t183526*t183526);
                double t183648 = cx1*gx*t183531*t183474*(1.396905119826821E15/2.81474976710656E14);
                double t183649 = cx4*gamma_aa[index]*t183520*t183426*t183481*t183527*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t183650 = cx2*gamma_aa[index]*t183542*t183471*t183519*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t183651 = cx3*gx*t183426*t183473*t183519*t183537*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t183652 = cx1*gx*t183622*t183426*t183473*t183519*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t183653 = cx2*t183430*t183426*t183607*t183644*t183519*t183569*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183654 = cx3*gamma_aa[index]*gx*t183431*t183426*t183519*t183645*t183559*t183599*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t183655 = cx4*t183520*t183604*t183429*t183438*t183565*t183646*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183647 = t183621+t183630+t183631+t183623+t183632-t183650+t183624-t183651+t183625+t183643- \
                   t183652-t183653-t183654-t183655+t183638+t183639-t183648-t183649;
                double t183656 = t183546*t183547*t183647*t183579*(1.4000771998813E29/4.951760157141521E27);
                double t183657 = t183407*t183616*t183546*t183579*(1.4000771998813E29/7.427640235712282E27);
                double t183658 = 1.0/(t183544*t183544*t183544);
                double t183659 = t183571*t183616*t183546*t183547*t183658*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t183660 = t183656+t183657+t183659;
                double t183661 = t183616*t183548*t183549*(1.0/2.0);
                double t183662 = t183412*t183616*t183572*t183573*(2.475880078570761E27/1.4000771998813E29);
                double t183671 = t183616*t183546*t183547*t183549*t183579*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t183663 = t183661+t183662-t183671;
                double t183664 = t183504*t183544*t183572*t183573*(4.951760157141521E27/4.2002315996439E29);
                double t183665 = t183412*t183571*t183572*t183573*(2.475880078570761E27/1.4000771998813E29);
                double t183666 = t183412*t183544*t183572*t183581*t183549*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t183678 = t183581*t183549;
                double t183667 = t183664+t183665+t183666-t183678;
                double t183668 = t183412*t183545*t183585*(3.74176054803257E14/2.11106232532992E14);
                double t183669 = t183611*t183571*t183545*t183586*(3.74176054803257E14/1.40737488355328E14);
                double t183670 = t183668+t183669;
                double t183672 = omega*t183407*t183582*t183663*(7.0368744177664E13/3.74176054803257E14);
                double t183673 = omega*t183407*t183616*t183584*t183585*(3.5184372088832E13/3.74176054803257E14);
                double t183674 = t183610*t183611*t183616*t183545*t183549*t183586*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t183675 = t183672+t183673+t183674;
                double t183676 = t183610*t183670*t183549*(3.991211251234741E15/1.125899906842624E15);
                double t183677 = omega*t183503*t183582*t183584*(7.0368744177664E13/1.122528164409771E15);
                double t183679 = omega*t183407*t183582*t183667*(7.0368744177664E13/3.74176054803257E14);
                double t183680 = omega*t183407*t183571*t183584*t183585*(3.5184372088832E13/3.74176054803257E14);
                double t183681 = t183680+t183676+t183677+t183679;
                double t183682 = cx4*t183520*t183527*t183429*t183438;
                double t183683 = cx1*gamma_aa[index]*gx*t183531*t183425;
                double t183684 = cx3*gamma_aa[index]*gx*t183431*t183426*t183519*t183537;
                double t183685 = cx2*t183430*t183542*t183426*t183519;
                double t183686 = cx0+t183682+t183683+t183684+t183685;
                double t183687 = omega*t183407*t183582*t183675*(2.81474976710656E14/1.122528164409771E15);
                double t183688 = t183687-omega*t183407*t183616*t183590*t183585*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t183689 = omega*t183407*t183590*t183582*(2.81474976710656E14/1.122528164409771E15);
                double t183690 = t183689-1.0;
                v_rho_a_gamma_aa_[index] = -t183518*(t183466+t183452*t183449*(t183465-c0p*t183422*t183424*2.0))+rho_a[index]* \
                   t183518*(-t183513+t183452*t183449*(t183513-(t183464*1.0/(t183458*t183458)*(b2f*c*t183503*(1.0/3.0) \
                   +b4f*t183411*t183504*(2.0/3.0)+b1f*c*t183503*t183505*(1.0/6.0)+b3f*c*t183503*t183409*(1.0/2.0)))/t183461+ \
                   a1f*c*c0f*t183503*t183462*(2.0/3.0)-a1p*c*c0p*t183422*t183503*(2.0/3.0))+a1p*c*c0p*t183422*t183503* \
                   (2.0/3.0))-rho_a[index]*(t183466+t183452*t183449*(t183465-t183466))*(ccaa1*gcaa*t183474*t183467*(- \
                   8.0/3.0)+ccaa1*gamma_aa[index]*t183471*t183427*t183472*8.0-ccaa2*gamma_aa[index]*t183471*t183427*t183469* \
                   (3.2E1/3.0)+ccaa2*t183426*t183471*t183427*t183490*t183476*(1.6E1/3.0)+ccaa4*t183481*t183428*t183482* \
                   t183438*t183487*(3.2E1/3.0)+ccaa4*t183428*t183482*t183429*t183438*(gcaa*t183474*(3.2E1/3.0)+gamma_aa[index]* \
                   t183471*t183427*6.4E1+gamma_aa[index]*t183426*t183481*t183428*(1.28E2/3.0)+gcaa*t183426*t183427*t183473* \
                   9.6E1)-ccaa1*gcaa*1.0/(t183433*t183433*t183433)*t183426*t183427*t183473*(1.6E1/3.0)+ccaa2*t183430* \
                   t183426*t183427*t183476*(gcaa*t183474*(1.6E1/3.0)+gamma_aa[index]*t183471*t183427*(3.2E1/3.0))+ccaa2* \
                   gamma_aa[index]*t183430*t183427*t183493*t183476*2.0-ccaa4*gamma_aa[index]*t183426*t183481*t183428* \
                   t183468*(1.28E2/3.0)-ccaa3*gcaa*t183470*t183426*t183427*t183473*2.4E1+ccaa4*gamma_aa[index]*t183502* \
                   t183426*t183428*t183482*t183429*4.0+ccaa3*gcaa*t183431*t183426*t183427*t183475*t183497*3.0-ccaa2*t183430* \
                   t183426*t183427*t183490*1.0/(t183446*t183446*t183446)*t183493*2.0-ccaa4*t183502*1.0/(t183443*t183443* \
                   t183443)*t183428*t183429*t183438*t183487*2.0+ccaa3*gamma_aa[index]*gcaa*t183431*t183426*t183427*t183475* \
                   (gcaa*t183474*8.0+gamma_aa[index]*t183471*t183427*3.2E1+gcaa*t183426*t183427*t183473*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t183426*t183480*t183427*t183473*t183475*8.0-ccaa3*gamma_aa[index]*gcaa*t183431* \
                   t183426*t183480*t183427*1.0/(t183437*t183437*t183437)*t183497*2.0)-c0*t183609*t183690*(cx1*gx*t183531* \
                   t183474*(-8.0/3.0)+cx1*gamma_aa[index]*t183471*t183519*t183555*8.0-cx2*gamma_aa[index]*t183542*t183471* \
                   t183519*(3.2E1/3.0)+cx2*t183430*t183426*t183570*t183642*t183519+cx2*t183426*t183471*t183570*t183607* \
                   t183519*(1.6E1/3.0)+cx4*t183520*t183604*t183481*t183438*t183566*(3.2E1/3.0)+cx4*t183520*t183429*t183438* \
                   t183637*t183566+cx2*gamma_aa[index]*t183430*t183570*t183519*t183569*2.0-cx4*gamma_aa[index]*t183520* \
                   t183426*t183481*t183527*(1.28E2/3.0)-cx1*gx*t183622*t183426*t183473*t183519*(1.6E1/3.0)-cx3*gx*t183426* \
                   t183473*t183519*t183537*2.4E1+cx4*gamma_aa[index]*t183520*t183426*t183429*t183565*t183566*4.0+cx3* \
                   gx*t183431*t183560*t183426*t183519*t183559*3.0-cx2*t183430*t183426*t183607*t183644*t183519*t183569* \
                   2.0-cx4*t183520*t183604*t183429*t183438*t183565*t183646*2.0+cx3*gamma_aa[index]*gx*t183431*t183560* \
                   t183426*t183519*t183629+cx3*gamma_aa[index]*gx*t183560*t183426*t183473*t183519*t183599*8.0-cx3*gamma_aa[index]* \
                   gx*t183431*t183426*t183519*t183645*t183559*t183599*2.0)-c0*t183608*t183690*t183586*(4.0/3.0)+c0*t183586* \
                   t183686*t183688*(4.0/3.0)-c0*t183609*t183686*(omega*t183407*t183582*(t183610*t183549*(t183412*t183611* \
                   t183616*t183545*(3.74176054803257E14/4.22212465065984E14)+t183611*t183545*t183647*t183586*(3.74176054803257E14/ \
                   1.40737488355328E14)+1.0/pow(t183544,5.0/2.0)*t183571*t183616*t183545*t183586*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t183503*t183582*t183663*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t183407*t183582*(t183660*t183549+t183504*t183616*t183572*t183573*(4.951760157141521E27/ \
                   4.2002315996439E29)-t183412*t183572*t183573*t183647*(2.475880078570761E27/1.4000771998813E29)+t183616* \
                   t183581*t183548*t183549*(1.0/2.0)+t183571*t183616*t183549*t183579*(1.0/2.0)+(t183616*t183548*t183549* \
                   (1.0/3.0))/rho_a[index]-t183412*t183660*t183544*t183572*t183549*(2.475880078570761E27/1.4000771998813E29) \
                   +t183412*t183616*t183572*t183581*t183549*(2.475880078570761E27/1.4000771998813E29)-t183616*t183581* \
                   t183546*t183547*t183549*t183579*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t183503*t183616*t183584*t183585*(3.5184372088832E13/1.122528164409771E15)+omega*t183407*t183571* \
                   t183663*t183585*(3.5184372088832E13/3.74176054803257E14)+omega*t183407*t183616*t183585*t183667*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t183407*t183584*t183647*t183585*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t183611*t183407*t183571*t183616*t183584*(1.7592186044416E13/3.74176054803257E14)+t183610*t183616* \
                   t183670*t183546*t183547*t183549*t183579*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t183503*t183582*t183675*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t183503*t183616*t183590*t183585*(1.40737488355328E14/3.367584493229313E15)+omega*t183407*t183616*t183681* \
                   t183585*(1.40737488355328E14/1.122528164409771E15)+omega*t183407*t183571*t183585*t183675*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t183407*t183590*t183647*t183585*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t183611*t183407*t183571*t183616*t183590*(7.0368744177664E13/1.122528164409771E15))-c0*t183609* \
                   t183688*(cx1*gamma_aa[index]*gx*t183531*t183474*(8.0/3.0)-cx1*t183426*t183471*t183519*t183555*(8.0/ \
                   3.0)+cx2*t183542*t183426*t183471*t183519*(1.6E1/3.0)+cx4*t183520*t183481*t183527*t183438*(3.2E1/3.0) \
                   -cx2*t183430*t183426*t183570*t183519*t183569-cx4*t183520*t183429*t183438*t183565*t183566+cx3*gamma_aa[index]* \
                   gx*t183426*t183473*t183519*t183537*8.0-cx3*gamma_aa[index]*gx*t183431*t183560*t183426*t183519*t183559) \
                   +c0*t183608*t183609*(omega*t183503*t183590*t183582*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t183407*t183582*t183681*(2.81474976710656E14/1.122528164409771E15)+omega*t183407*t183571*t183590*t183585* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t180164 = rho_a[index]+rho_b[index];
                double t180165 = 1.0/pow(t180164,1.0/3.0);
                double t180166 = c*t180165;
                double t180167 = sqrt(t180166);
                double t180168 = b1p*t180167;
                double t180169 = pow(t180166,3.0/2.0);
                double t180170 = b3p*t180169;
                double t180171 = c*c;
                double t180172 = 1.0/pow(t180164,2.0/3.0);
                double t180173 = b4p*t180171*t180172;
                double t180174 = b2p*c*t180165;
                double t180175 = t180170+t180173+t180174+t180168;
                double t180176 = 1.0/pow(t180164,4.0/3.0);
                double t180177 = 1.0/c0p;
                double t180178 = 1.0/t180175;
                double t180179 = t180177*t180178*(1.0/2.0);
                double t180180 = t180179+1.0;
                double t180181 = a1p*c*t180165;
                double t180182 = t180181+1.0;
                double t180183 = rho_a[index]-rho_b[index];
                double t180184 = t180183*t180183;
                double t180185 = 1.0/t180164;
                double t180186 = t180183*t180185;
                double t180187 = two_13*2.0;
                double t180188 = t180187-2.0;
                double t180189 = 1.0/t180188;
                double t180190 = 1.0/c0f;
                double t180191 = b1f*t180167;
                double t180192 = b3f*t180169;
                double t180193 = b4f*t180171*t180172;
                double t180194 = b2f*c*t180165;
                double t180195 = t180191+t180192+t180193+t180194;
                double t180196 = 1.0/t180195;
                double t180197 = t180190*t180196*(1.0/2.0);
                double t180198 = t180197+1.0;
                double t180199 = log(t180198);
                double t180200 = a1f*c*t180165;
                double t180201 = t180200+1.0;
                double t180202 = log(t180180);
                double t180212 = c0f*t180201*t180199*2.0;
                double t180213 = c0p*t180202*t180182*2.0;
                double t180203 = t180212-t180213;
                double t180204 = t180186+1.0;
                double t180205 = pow(t180204,4.0/3.0);
                double t180206 = -t180186+1.0;
                double t180207 = pow(t180206,4.0/3.0);
                double t180208 = t180205+t180207-2.0;
                double t180209 = 1.0/(t180164*t180164);
                double t180240 = t180209*t180183;
                double t180210 = -t180240+t180185;
                double t180211 = 1.0/(t180164*t180164*t180164*t180164);
                double t180214 = t180184*t180184;
                double t180215 = 1.0/pow(t180164,5.0/3.0);
                double t180216 = 1.0/sqrt(t180166);
                double t180217 = 1.0/t180180;
                double t180218 = 1.0/(t180175*t180175);
                double t180219 = b4p*t180215*t180171*(2.0/3.0);
                double t180220 = b2p*c*t180176*(1.0/3.0);
                double t180221 = b1p*c*t180216*t180176*(1.0/6.0);
                double t180222 = b3p*c*t180167*t180176*(1.0/2.0);
                double t180223 = t180220+t180221+t180222+t180219;
                double t180224 = t180223*t180217*t180182*t180218;
                double t180225 = 1.0/(t180164*t180164*t180164*t180164*t180164);
                double t180226 = 1.0/d2fz0;
                double t180227 = 1.0/Aa;
                double t180228 = b1a*t180167;
                double t180229 = b3a*t180169;
                double t180230 = b4a*t180171*t180172;
                double t180231 = b2a*c*t180165;
                double t180232 = t180230+t180231+t180228+t180229;
                double t180233 = 1.0/t180232;
                double t180234 = t180233*t180227*(1.0/2.0);
                double t180235 = t180234+1.0;
                double t180236 = log(t180235);
                double t180237 = a1a*c*t180165;
                double t180238 = t180237+1.0;
                double t180239 = pow(t180204,1.0/3.0);
                double t180241 = t180210*t180239*(4.0/3.0);
                double t180242 = pow(t180206,1.0/3.0);
                double t180243 = t180241-t180210*t180242*(4.0/3.0);
                double t180244 = t180211*t180214;
                double t180245 = t180244-1.0;
                double t180246 = 1.0/pow(rho_a[index],1.0/3.0);
                double t180247 = c*t180246;
                double t180248 = sqrt(t180247);
                double t180249 = b1f*t180248;
                double t180250 = pow(t180247,3.0/2.0);
                double t180251 = b3f*t180250;
                double t180252 = 1.0/pow(rho_a[index],2.0/3.0);
                double t180253 = b4f*t180171*t180252;
                double t180254 = b2f*c*t180246;
                double t180255 = t180251+t180253+t180254+t180249;
                double t180256 = 1.0/pow(rho_a[index],4.0/3.0);
                double t180257 = b1p*t180248;
                double t180258 = b3p*t180250;
                double t180259 = b4p*t180171*t180252;
                double t180260 = b2p*c*t180246;
                double t180261 = t180260+t180257+t180258+t180259;
                double t180262 = 1.0/pow(rho_a[index],5.0/3.0);
                double t180263 = 1.0/sqrt(t180247);
                double t180264 = 1.0/t180255;
                double t180265 = t180190*t180264*(1.0/2.0);
                double t180266 = t180265+1.0;
                double t180267 = 1.0/t180261;
                double t180268 = t180177*t180267*(1.0/2.0);
                double t180269 = t180268+1.0;
                double t180270 = a1p*c*t180246;
                double t180271 = t180270+1.0;
                double t180272 = 1.0/t180269;
                double t180273 = 1.0/(t180261*t180261);
                double t180274 = b4p*t180171*t180262*(2.0/3.0);
                double t180275 = b2p*c*t180256*(1.0/3.0);
                double t180276 = b1p*c*t180263*t180256*(1.0/6.0);
                double t180277 = b3p*c*t180256*t180248*(1.0/2.0);
                double t180278 = t180274+t180275+t180276+t180277;
                double t180279 = t180271*t180272*t180273*t180278;
                double t180280 = log(t180269);
                double t180281 = pow(2.0,1.0/3.0);
                double t180282 = t180281*2.0;
                double t180283 = t180282-2.0;
                double t180284 = log(t180266);
                double t180285 = a1f*c*t180246;
                double t180286 = t180285+1.0;
                double t180287 = 1.0/pow(rho_b[index],8.0/3.0);
                double t180288 = 1.0/pow(rho_a[index],8.0/3.0);
                double t180289 = gamma_aa[index]*t180288*(1.0/2.0);
                double t180290 = gamma_bb[index]*t180287*(1.0/2.0);
                double t180291 = t180290+t180289;
                double t180292 = gcab*t180291;
                double t180293 = t180292+1.0;
                double t180294 = gcab*gcab;
                double t180295 = t180291*t180291;
                double t180296 = t180294*t180294;
                double t180297 = t180295*t180295;
                double t180298 = t180294*t180295;
                double t180299 = gcab*t180291*2.0;
                double t180300 = t180298+t180299+1.0;
                double t180301 = t180294*t180295*3.0;
                double t180302 = gcab*t180291*t180294*t180295;
                double t180303 = gcab*t180291*3.0;
                double t180304 = t180301+t180302+t180303+1.0;
                double t180305 = t180294*t180295*6.0;
                double t180306 = gcab*t180291*t180294*t180295*4.0;
                double t180307 = t180296*t180297;
                double t180308 = gcab*t180291*4.0;
                double t180309 = t180305+t180306+t180307+t180308+1.0;
                double t180310 = c0f*t180284*t180286*2.0;
                double t180312 = c0p*t180271*t180280*2.0;
                double t180311 = t180310-t180312;
                double t180313 = 1.0/pow(rho_b[index],1.0/3.0);
                double t180314 = c*t180313;
                double t180315 = sqrt(t180314);
                double t180316 = pow(t180314,3.0/2.0);
                double t180317 = 1.0/pow(rho_b[index],2.0/3.0);
                double t180318 = b1p*t180315;
                double t180319 = b3p*t180316;
                double t180320 = b4p*t180171*t180317;
                double t180321 = b2p*c*t180313;
                double t180322 = t180320+t180321+t180318+t180319;
                double t180323 = 1.0/t180322;
                double t180324 = t180323*t180177*(1.0/2.0);
                double t180325 = t180324+1.0;
                double t180326 = log(t180325);
                double t180327 = a1p*c*t180313;
                double t180328 = t180327+1.0;
                double t180329 = c0p*t180326*t180328*2.0;
                double t180330 = t180211*t180203*t180214*t180208*t180189;
                double t180331 = Aa*t180208*t180226*t180236*t180245*t180238*t180189*2.0;
                double t180332 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t180333 = 1.0/(t180304*t180304);
                double t180334 = 1.0/(t180309*t180309);
                double t180335 = gcab*t180287*2.0;
                double t180336 = t180291*t180294*t180287*6.0;
                double t180337 = gcab*t180294*t180295*t180287*6.0;
                double t180338 = t180291*t180295*t180287*t180296*2.0;
                double t180339 = t180335+t180336+t180337+t180338;
                double t180340 = 1.0/(t180300*t180300);
                double t180341 = gamma_aa[index]*gcab*t180332*(8.0/3.0);
                double t180342 = gamma_aa[index]*t180332*t180291*t180294*(8.0/3.0);
                double t180343 = t180341+t180342;
                double t180344 = gcab*t180287;
                double t180345 = t180291*t180294*t180287;
                double t180346 = t180344+t180345;
                double t180347 = gamma_aa[index]*gcab*t180332*(1.6E1/3.0);
                double t180348 = gamma_aa[index]*gcab*t180332*t180294*t180295*1.6E1;
                double t180349 = gamma_aa[index]*t180332*t180291*t180295*t180296*(1.6E1/3.0);
                double t180350 = gamma_aa[index]*t180332*t180291*t180294*1.6E1;
                double t180351 = t180350+t180347+t180348+t180349;
                double t180352 = 1.0/(t180293*t180293);
                double t180353 = 1.0/t180300;
                double t180354 = gcab*t180287*(3.0/2.0);
                double t180355 = t180291*t180294*t180287*3.0;
                double t180356 = gcab*t180294*t180295*t180287*(3.0/2.0);
                double t180357 = t180354+t180355+t180356;
                double t180358 = gamma_aa[index]*gcab*t180332*4.0;
                double t180359 = gamma_aa[index]*gcab*t180332*t180294*t180295*4.0;
                double t180360 = gamma_aa[index]*t180332*t180291*t180294*8.0;
                double t180361 = t180360+t180358+t180359;
                double t180362 = 1.0/t180304;
                double t180363 = 1.0/t180309;
                v_rho_a_gamma_bb_[index] = -(t180213+t180330+t180331+t180164*(t180224-t180211*t180214*t180208*t180189* \
                   (t180224-(t180201*1.0/(t180195*t180195)*(b2f*c*t180176*(1.0/3.0)+b4f*t180215*t180171*(2.0/3.0)+b1f* \
                   c*t180216*t180176*(1.0/6.0)+b3f*c*t180167*t180176*(1.0/2.0)))/t180198+a1f*c*c0f*t180176*t180199*(2.0/ \
                   3.0)-a1p*c*c0p*t180202*t180176*(2.0/3.0))-a1p*c*c0p*t180202*t180176*(2.0/3.0)+t180211*t180203*t180214* \
                   t180243*t180189-t180203*t180214*t180225*t180208*t180189*4.0+t180211*t180203*t180208*t180183*t180184* \
                   t180189*4.0-Aa*t180208*t180226*t180236*t180238*t180189*(t180214*t180225*4.0-t180211*t180183*t180184* \
                   4.0)*2.0+Aa*t180243*t180226*t180236*t180245*t180238*t180189*2.0+(1.0/(t180232*t180232)*t180208*t180226* \
                   t180245*t180238*t180189*(b2a*c*t180176*(1.0/3.0)+b4a*t180215*t180171*(2.0/3.0)+b1a*c*t180216*t180176* \
                   (1.0/6.0)+b3a*c*t180167*t180176*(1.0/2.0)))/t180235-Aa*a1a*c*t180208*t180226*t180236*t180245*t180176* \
                   t180189*(2.0/3.0))+rho_a[index]*(-t180279+t180283*t180189*(t180279-(1.0/(t180255*t180255)*t180286* \
                   (b2f*c*t180256*(1.0/3.0)+b4f*t180171*t180262*(2.0/3.0)+b1f*c*t180263*t180256*(1.0/6.0)+b3f*c*t180256* \
                   t180248*(1.0/2.0)))/t180266+a1f*c*c0f*t180256*t180284*(2.0/3.0)-a1p*c*c0p*t180280*t180256*(2.0/3.0) \
                   )+a1p*c*c0p*t180280*t180256*(2.0/3.0))-c0p*t180271*t180280*2.0-t180311*t180283*t180189)*((ccab1*gcab* \
                   t180287*(1.0/2.0))/t180293-ccab2*t180340*t180346*t180294*t180295-ccab1*t180352*t180291*t180294*t180287* \
                   (1.0/2.0)+ccab2*t180353*t180291*t180294*t180287-ccab4*t180334*t180339*t180296*t180297+ccab4*t180291* \
                   t180363*t180295*t180287*t180296*2.0+ccab3*gcab*t180362*t180294*t180295*t180287*(3.0/2.0)-ccab3*gcab* \
                   t180333*t180291*t180294*t180357*t180295)+(rho_a[index]*(t180312+t180311*t180283*t180189)+rho_b[index]* \
                   (t180329-t180283*t180189*(t180329-c0f*log((t180190*(1.0/2.0))/(b1f*t180315+b3f*t180316+b2f*c*t180313+ \
                   b4f*t180171*t180317)+1.0)*(a1f*c*t180313+1.0)*2.0))-t180164*(t180213+t180330+t180331))*(ccab4*t180334* \
                   t180296*t180297*(gamma_aa[index]*t180332*t180294*t180287*8.0+gamma_aa[index]*t180332*t180295*t180287* \
                   t180296*8.0+gamma_aa[index]*gcab*t180332*t180291*t180294*t180287*1.6E1)+ccab2*t180340*t180343*t180291* \
                   t180294*t180287-ccab2*1.0/(t180300*t180300*t180300)*t180343*t180346*t180294*t180295*2.0-ccab4*t180351* \
                   1.0/(t180309*t180309*t180309)*t180339*t180296*t180297*2.0+ccab1*gamma_aa[index]*t180332*t180352*t180294* \
                   t180287*(4.0/3.0)-ccab2*gamma_aa[index]*t180332*t180353*t180294*t180287*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t180340*t180332*t180291*t180346*t180294*(8.0/3.0)+ccab2*gamma_aa[index]*t180340*t180332*t180295*t180287* \
                   t180296*(4.0/3.0)-ccab4*gamma_aa[index]*t180332*t180363*t180295*t180287*t180296*8.0+ccab3*gcab*t180333* \
                   t180361*t180294*t180295*t180287*(3.0/2.0)+ccab4*t180351*t180334*t180291*t180295*t180287*t180296*2.0+ \
                   ccab3*gcab*t180333*t180291*t180294*t180295*(gamma_aa[index]*t180332*t180294*t180287*4.0+gamma_aa[index]* \
                   gcab*t180332*t180291*t180294*t180287*4.0)-ccab1*gamma_aa[index]*gcab*t180332*t180291*1.0/(t180293* \
                   t180293*t180293)*t180294*t180287*(4.0/3.0)-ccab3*gcab*1.0/(t180304*t180304*t180304)*t180361*t180291* \
                   t180294*t180357*t180295*2.0+ccab3*gamma_aa[index]*gcab*t180332*t180333*t180294*t180357*t180295*4.0- \
                   ccab3*gamma_aa[index]*gcab*t180332*t180362*t180291*t180294*t180287*4.0+ccab4*gamma_aa[index]*t180332* \
                   t180334*t180291*t180339*t180295*t180296*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t180365 = rho_a[index]+rho_b[index];
                double t180366 = 1.0/pow(t180365,1.0/3.0);
                double t180367 = c*t180366;
                double t180368 = sqrt(t180367);
                double t180369 = b1p*t180368;
                double t180370 = pow(t180367,3.0/2.0);
                double t180371 = b3p*t180370;
                double t180372 = c*c;
                double t180373 = 1.0/pow(t180365,2.0/3.0);
                double t180374 = b4p*t180372*t180373;
                double t180375 = b2p*c*t180366;
                double t180376 = t180371+t180374+t180375+t180369;
                double t180377 = 1.0/pow(t180365,4.0/3.0);
                double t180378 = 1.0/c0p;
                double t180379 = 1.0/t180376;
                double t180380 = t180378*t180379*(1.0/2.0);
                double t180381 = t180380+1.0;
                double t180382 = a1p*c*t180366;
                double t180383 = t180382+1.0;
                double t180384 = rho_a[index]-rho_b[index];
                double t180385 = t180384*t180384;
                double t180386 = 1.0/t180365;
                double t180387 = t180384*t180386;
                double t180388 = two_13*2.0;
                double t180389 = t180388-2.0;
                double t180390 = 1.0/t180389;
                double t180391 = 1.0/c0f;
                double t180392 = b1f*t180368;
                double t180393 = b3f*t180370;
                double t180394 = b4f*t180372*t180373;
                double t180395 = b2f*c*t180366;
                double t180396 = t180392+t180393+t180394+t180395;
                double t180397 = 1.0/t180396;
                double t180398 = t180391*t180397*(1.0/2.0);
                double t180399 = t180398+1.0;
                double t180400 = log(t180399);
                double t180401 = a1f*c*t180366;
                double t180402 = t180401+1.0;
                double t180403 = log(t180381);
                double t180414 = c0f*t180400*t180402*2.0;
                double t180415 = c0p*t180403*t180383*2.0;
                double t180404 = t180414-t180415;
                double t180405 = t180387+1.0;
                double t180406 = pow(t180405,4.0/3.0);
                double t180407 = -t180387+1.0;
                double t180408 = pow(t180407,4.0/3.0);
                double t180409 = t180406+t180408-2.0;
                double t180410 = 1.0/(t180365*t180365);
                double t180411 = t180410*t180384;
                double t180412 = t180411+t180386;
                double t180413 = 1.0/(t180365*t180365*t180365*t180365);
                double t180416 = t180385*t180385;
                double t180417 = 1.0/pow(t180365,5.0/3.0);
                double t180418 = 1.0/sqrt(t180367);
                double t180419 = 1.0/t180381;
                double t180420 = 1.0/(t180376*t180376);
                double t180421 = b4p*t180372*t180417*(2.0/3.0);
                double t180422 = b2p*c*t180377*(1.0/3.0);
                double t180423 = b1p*c*t180418*t180377*(1.0/6.0);
                double t180424 = b3p*c*t180368*t180377*(1.0/2.0);
                double t180425 = t180421+t180422+t180423+t180424;
                double t180426 = 1.0/(t180365*t180365*t180365*t180365*t180365);
                double t180427 = 1.0/d2fz0;
                double t180428 = 1.0/Aa;
                double t180429 = b1a*t180368;
                double t180430 = b3a*t180370;
                double t180431 = b4a*t180372*t180373;
                double t180432 = b2a*c*t180366;
                double t180433 = t180430+t180431+t180432+t180429;
                double t180434 = 1.0/t180433;
                double t180435 = t180434*t180428*(1.0/2.0);
                double t180436 = t180435+1.0;
                double t180437 = log(t180436);
                double t180438 = a1a*c*t180366;
                double t180439 = t180438+1.0;
                double t180440 = pow(t180405,1.0/3.0);
                double t180441 = t180412*t180440*(4.0/3.0);
                double t180442 = pow(t180407,1.0/3.0);
                double t180443 = t180441-t180412*t180442*(4.0/3.0);
                double t180444 = t180413*t180416;
                double t180445 = t180444-1.0;
                double t180446 = 1.0/pow(rho_b[index],1.0/3.0);
                double t180447 = c*t180446;
                double t180448 = sqrt(t180447);
                double t180449 = b1f*t180448;
                double t180450 = pow(t180447,3.0/2.0);
                double t180451 = b3f*t180450;
                double t180452 = 1.0/pow(rho_b[index],2.0/3.0);
                double t180453 = b4f*t180452*t180372;
                double t180454 = b2f*c*t180446;
                double t180455 = t180451+t180453+t180454+t180449;
                double t180456 = 1.0/pow(rho_b[index],4.0/3.0);
                double t180457 = b1p*t180448;
                double t180458 = b3p*t180450;
                double t180459 = b4p*t180452*t180372;
                double t180460 = b2p*c*t180446;
                double t180461 = t180460+t180457+t180458+t180459;
                double t180462 = 1.0/pow(rho_b[index],5.0/3.0);
                double t180463 = 1.0/sqrt(t180447);
                double t180464 = 1.0/t180455;
                double t180465 = t180391*t180464*(1.0/2.0);
                double t180466 = t180465+1.0;
                double t180467 = 1.0/t180461;
                double t180468 = t180467*t180378*(1.0/2.0);
                double t180469 = t180468+1.0;
                double t180470 = a1p*c*t180446;
                double t180471 = t180470+1.0;
                double t180472 = 1.0/t180469;
                double t180473 = 1.0/(t180461*t180461);
                double t180474 = b4p*t180372*t180462*(2.0/3.0);
                double t180475 = b2p*c*t180456*(1.0/3.0);
                double t180476 = b1p*c*t180463*t180456*(1.0/6.0);
                double t180477 = b3p*c*t180456*t180448*(1.0/2.0);
                double t180478 = t180474+t180475+t180476+t180477;
                double t180479 = t180471*t180472*t180473*t180478;
                double t180480 = log(t180469);
                double t180481 = pow(2.0,1.0/3.0);
                double t180482 = t180481*2.0;
                double t180483 = t180482-2.0;
                double t180484 = log(t180466);
                double t180485 = a1f*c*t180446;
                double t180486 = t180485+1.0;
                double t180487 = 1.0/pow(rho_a[index],8.0/3.0);
                double t180488 = gamma_aa[index]*t180487*(1.0/2.0);
                double t180489 = 1.0/pow(rho_b[index],8.0/3.0);
                double t180490 = gamma_bb[index]*t180489*(1.0/2.0);
                double t180491 = t180490+t180488;
                double t180492 = gcab*t180491;
                double t180493 = t180492+1.0;
                double t180494 = gcab*gcab;
                double t180495 = t180491*t180491;
                double t180496 = t180494*t180494;
                double t180497 = t180495*t180495;
                double t180498 = t180494*t180495;
                double t180499 = gcab*t180491*2.0;
                double t180500 = t180498+t180499+1.0;
                double t180501 = t180494*t180495*3.0;
                double t180502 = gcab*t180491*t180494*t180495;
                double t180503 = gcab*t180491*3.0;
                double t180504 = t180501+t180502+t180503+1.0;
                double t180505 = t180494*t180495*6.0;
                double t180506 = gcab*t180491*t180494*t180495*4.0;
                double t180507 = t180496*t180497;
                double t180508 = gcab*t180491*4.0;
                double t180509 = t180505+t180506+t180507+t180508+1.0;
                double t180510 = a1p*c*c0p*t180403*t180377*(2.0/3.0);
                double t180511 = 1.0/pow(rho_a[index],1.0/3.0);
                double t180512 = c*t180511;
                double t180513 = sqrt(t180512);
                double t180514 = pow(t180512,3.0/2.0);
                double t180515 = 1.0/pow(rho_a[index],2.0/3.0);
                double t180516 = b1p*t180513;
                double t180517 = b3p*t180514;
                double t180518 = b4p*t180515*t180372;
                double t180519 = b2p*c*t180511;
                double t180520 = t180516+t180517+t180518+t180519;
                double t180521 = 1.0/t180520;
                double t180522 = t180521*t180378*(1.0/2.0);
                double t180523 = t180522+1.0;
                double t180524 = log(t180523);
                double t180525 = a1p*c*t180511;
                double t180526 = t180525+1.0;
                double t180527 = c0p*t180524*t180526*2.0;
                double t180528 = c0f*t180484*t180486*2.0;
                double t180530 = c0p*t180471*t180480*2.0;
                double t180529 = -t180530+t180528;
                double t180531 = t180404*t180413*t180416*t180390*t180409;
                double t180532 = Aa*t180390*t180409*t180427*t180445*t180437*t180439*2.0;
                double t180533 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t180534 = 1.0/(t180504*t180504);
                double t180535 = 1.0/(t180509*t180509);
                double t180536 = gcab*t180487*2.0;
                double t180537 = t180491*t180494*t180487*6.0;
                double t180538 = gcab*t180494*t180495*t180487*6.0;
                double t180539 = t180491*t180495*t180487*t180496*2.0;
                double t180540 = t180536+t180537+t180538+t180539;
                double t180541 = 1.0/(t180500*t180500);
                double t180542 = gamma_bb[index]*gcab*t180533*(8.0/3.0);
                double t180543 = gamma_bb[index]*t180533*t180491*t180494*(8.0/3.0);
                double t180544 = t180542+t180543;
                double t180545 = gcab*t180487;
                double t180546 = t180491*t180494*t180487;
                double t180547 = t180545+t180546;
                double t180548 = gamma_bb[index]*gcab*t180533*(1.6E1/3.0);
                double t180549 = gamma_bb[index]*gcab*t180533*t180494*t180495*1.6E1;
                double t180550 = gamma_bb[index]*t180533*t180491*t180495*t180496*(1.6E1/3.0);
                double t180551 = gamma_bb[index]*t180533*t180491*t180494*1.6E1;
                double t180552 = t180550+t180551+t180548+t180549;
                double t180553 = 1.0/(t180493*t180493);
                double t180554 = 1.0/t180500;
                double t180555 = gcab*t180487*(3.0/2.0);
                double t180556 = t180491*t180494*t180487*3.0;
                double t180557 = gcab*t180494*t180495*t180487*(3.0/2.0);
                double t180558 = t180555+t180556+t180557;
                double t180559 = gamma_bb[index]*gcab*t180533*4.0;
                double t180560 = gamma_bb[index]*gcab*t180533*t180494*t180495*4.0;
                double t180561 = gamma_bb[index]*t180533*t180491*t180494*8.0;
                double t180562 = t180560+t180561+t180559;
                double t180563 = 1.0/t180504;
                double t180564 = 1.0/t180509;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t180530+t180390*t180483*t180529)+rho_a[index]*(t180527- \
                   t180390*t180483*(t180527-c0f*log((t180391*(1.0/2.0))/(b1f*t180513+b3f*t180514+b2f*c*t180511+b4f*t180515* \
                   t180372)+1.0)*(a1f*c*t180511+1.0)*2.0))-t180365*(t180531+t180415+t180532))*(ccab4*t180535*t180496* \
                   t180497*(gamma_bb[index]*t180533*t180494*t180487*8.0+gamma_bb[index]*t180533*t180495*t180487*t180496* \
                   8.0+gamma_bb[index]*gcab*t180533*t180491*t180494*t180487*1.6E1)+ccab2*t180541*t180544*t180491*t180494* \
                   t180487-ccab2*1.0/(t180500*t180500*t180500)*t180544*t180547*t180494*t180495*2.0-ccab4*t180540*t180552* \
                   1.0/(t180509*t180509*t180509)*t180496*t180497*2.0+ccab1*gamma_bb[index]*t180533*t180553*t180494*t180487* \
                   (4.0/3.0)-ccab2*gamma_bb[index]*t180533*t180554*t180494*t180487*(4.0/3.0)+ccab2*gamma_bb[index]*t180541* \
                   t180533*t180491*t180547*t180494*(8.0/3.0)+ccab2*gamma_bb[index]*t180541*t180533*t180495*t180487*t180496* \
                   (4.0/3.0)-ccab4*gamma_bb[index]*t180533*t180564*t180495*t180487*t180496*8.0+ccab3*gcab*t180534*t180562* \
                   t180494*t180495*t180487*(3.0/2.0)+ccab4*t180552*t180535*t180491*t180495*t180487*t180496*2.0+ccab3* \
                   gcab*t180534*t180491*t180494*t180495*(gamma_bb[index]*t180533*t180494*t180487*4.0+gamma_bb[index]* \
                   gcab*t180533*t180491*t180494*t180487*4.0)-ccab1*gamma_bb[index]*gcab*t180533*t180491*1.0/(t180493* \
                   t180493*t180493)*t180494*t180487*(4.0/3.0)-ccab3*gcab*1.0/(t180504*t180504*t180504)*t180562*t180491* \
                   t180494*t180495*t180558*2.0-ccab3*gamma_bb[index]*gcab*t180533*t180491*t180563*t180494*t180487*4.0+ \
                   ccab3*gamma_bb[index]*gcab*t180533*t180534*t180494*t180495*t180558*4.0+ccab4*gamma_bb[index]*t180540* \
                   t180533*t180535*t180491*t180495*t180496*(1.6E1/3.0))-(t180531+t180415+t180532+rho_b[index]*(-t180479+ \
                   t180390*t180483*(t180479-(1.0/(t180455*t180455)*t180486*(b2f*c*t180456*(1.0/3.0)+b4f*t180372*t180462* \
                   (2.0/3.0)+b1f*c*t180463*t180456*(1.0/6.0)+b3f*c*t180456*t180448*(1.0/2.0)))/t180466+a1f*c*c0f*t180456* \
                   t180484*(2.0/3.0)-a1p*c*c0p*t180480*t180456*(2.0/3.0))+a1p*c*c0p*t180480*t180456*(2.0/3.0))-t180365* \
                   (t180510-t180420*t180425*t180383*t180419+t180404*t180413*t180416*t180443*t180390+t180404*t180416*t180390* \
                   t180426*t180409*4.0-t180413*t180416*t180390*t180409*(t180510-t180420*t180425*t180383*t180419+(t180402* \
                   1.0/(t180396*t180396)*(b2f*c*t180377*(1.0/3.0)+b4f*t180372*t180417*(2.0/3.0)+b1f*c*t180418*t180377* \
                   (1.0/6.0)+b3f*c*t180368*t180377*(1.0/2.0)))/t180399-a1f*c*c0f*t180400*t180377*(2.0/3.0))+t180404*t180413* \
                   t180390*t180409*t180384*t180385*4.0+Aa*t180390*t180409*t180427*t180437*t180439*(t180416*t180426*4.0+ \
                   t180413*t180384*t180385*4.0)*2.0+Aa*t180443*t180390*t180427*t180445*t180437*t180439*2.0-(1.0/(t180433* \
                   t180433)*t180390*t180409*t180427*t180445*t180439*(b2a*c*t180377*(1.0/3.0)+b4a*t180372*t180417*(2.0/ \
                   3.0)+b1a*c*t180418*t180377*(1.0/6.0)+b3a*c*t180368*t180377*(1.0/2.0)))/t180436+Aa*a1a*c*t180390*t180409* \
                   t180427*t180445*t180437*t180377*(2.0/3.0))-c0p*t180471*t180480*2.0-t180390*t180483*t180529)*((ccab1* \
                   gcab*t180487*(1.0/2.0))/t180493-ccab2*t180541*t180547*t180494*t180495-ccab1*t180553*t180491*t180494* \
                   t180487*(1.0/2.0)-ccab4*t180540*t180535*t180496*t180497+ccab2*t180491*t180554*t180494*t180487+ccab4* \
                   t180491*t180564*t180495*t180487*t180496*2.0+ccab3*gcab*t180563*t180494*t180495*t180487*(3.0/2.0)-ccab3* \
                   gcab*t180534*t180491*t180494*t180495*t180558);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t180567 = 1.0/pow(rho_b[index],1.0/3.0);
                double t180568 = c*t180567;
                double t180569 = sqrt(t180568);
                double t180570 = pow(t180568,3.0/2.0);
                double t180571 = c*c;
                double t180572 = 1.0/pow(rho_b[index],2.0/3.0);
                double t180573 = 1.0/c0p;
                double t180574 = b1p*t180569;
                double t180575 = b3p*t180570;
                double t180576 = b4p*t180571*t180572;
                double t180577 = b2p*c*t180567;
                double t180578 = t180574+t180575+t180576+t180577;
                double t180579 = 1.0/t180578;
                double t180580 = t180573*t180579*(1.0/2.0);
                double t180581 = t180580+1.0;
                double t180582 = log(t180581);
                double t180583 = a1p*c*t180567;
                double t180584 = t180583+1.0;
                double t180585 = 1.0/pow(rho_b[index],8.0/3.0);
                double t180586 = gamma_bb[index]*gamma_bb[index];
                double t180587 = gcaa*gcaa;
                double t180588 = t180587*t180587;
                double t180589 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t180590 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t180591 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t180592 = gamma_bb[index]*gcaa*t180585;
                double t180593 = t180592+1.0;
                double t180594 = gamma_bb[index]*gcaa*t180585*3.0;
                double t180595 = gamma_bb[index]*gcaa*t180591*t180586*t180587;
                double t180596 = t180590*t180586*t180587*3.0;
                double t180597 = t180594+t180595+t180596+1.0;
                double t180598 = t180586*t180586;
                double t180599 = gamma_bb[index]*gcaa*t180585*4.0;
                double t180600 = gamma_bb[index]*gcaa*t180591*t180586*t180587*4.0;
                double t180601 = t180590*t180586*t180587*6.0;
                double t180602 = t180588*t180589*t180598;
                double t180603 = t180600+t180601+t180602+t180599+1.0;
                double t180604 = gamma_bb[index]*gcaa*t180585*2.0;
                double t180605 = t180590*t180586*t180587;
                double t180606 = t180604+t180605+1.0;
                double t180607 = rho_a[index]+rho_b[index];
                double t180608 = 1.0/pow(t180607,1.0/3.0);
                double t180609 = c*t180608;
                double t180610 = sqrt(t180609);
                double t180611 = b1p*t180610;
                double t180612 = pow(t180609,3.0/2.0);
                double t180613 = b3p*t180612;
                double t180614 = 1.0/pow(t180607,2.0/3.0);
                double t180615 = b4p*t180614*t180571;
                double t180616 = b2p*c*t180608;
                double t180617 = t180611+t180613+t180615+t180616;
                double t180618 = 1.0/pow(t180607,4.0/3.0);
                double t180619 = two_13*2.0;
                double t180620 = t180619-2.0;
                double t180621 = 1.0/t180620;
                double t180622 = 1.0/c0f;
                double t180623 = 1.0/t180617;
                double t180624 = t180623*t180573*(1.0/2.0);
                double t180625 = t180624+1.0;
                double t180626 = a1p*c*t180608;
                double t180627 = t180626+1.0;
                double t180628 = rho_a[index]-rho_b[index];
                double t180629 = t180628*t180628;
                double t180630 = 1.0/t180607;
                double t180631 = t180630*t180628;
                double t180632 = b1f*t180610;
                double t180633 = b3f*t180612;
                double t180634 = b4f*t180614*t180571;
                double t180635 = b2f*c*t180608;
                double t180636 = t180632+t180633+t180634+t180635;
                double t180637 = 1.0/t180636;
                double t180638 = t180622*t180637*(1.0/2.0);
                double t180639 = t180638+1.0;
                double t180640 = log(t180639);
                double t180641 = a1f*c*t180608;
                double t180642 = t180641+1.0;
                double t180643 = log(t180625);
                double t180654 = c0f*t180640*t180642*2.0;
                double t180655 = c0p*t180643*t180627*2.0;
                double t180644 = t180654-t180655;
                double t180645 = t180631+1.0;
                double t180646 = pow(t180645,4.0/3.0);
                double t180647 = -t180631+1.0;
                double t180648 = pow(t180647,4.0/3.0);
                double t180649 = t180646+t180648-2.0;
                double t180650 = 1.0/(t180607*t180607);
                double t180651 = t180650*t180628;
                double t180652 = t180630+t180651;
                double t180653 = 1.0/(t180607*t180607*t180607*t180607);
                double t180656 = t180629*t180629;
                double t180657 = 1.0/pow(t180607,5.0/3.0);
                double t180658 = 1.0/sqrt(t180609);
                double t180659 = 1.0/t180625;
                double t180660 = 1.0/(t180617*t180617);
                double t180661 = b4p*t180571*t180657*(2.0/3.0);
                double t180662 = b2p*c*t180618*(1.0/3.0);
                double t180663 = b1p*c*t180618*t180658*(1.0/6.0);
                double t180664 = b3p*c*t180610*t180618*(1.0/2.0);
                double t180665 = t180661+t180662+t180663+t180664;
                double t180666 = 1.0/(t180607*t180607*t180607*t180607*t180607);
                double t180667 = 1.0/d2fz0;
                double t180668 = 1.0/Aa;
                double t180669 = b1a*t180610;
                double t180670 = b3a*t180612;
                double t180671 = b4a*t180614*t180571;
                double t180672 = b2a*c*t180608;
                double t180673 = t180670+t180671+t180672+t180669;
                double t180674 = 1.0/t180673;
                double t180675 = t180674*t180668*(1.0/2.0);
                double t180676 = t180675+1.0;
                double t180677 = log(t180676);
                double t180678 = a1a*c*t180608;
                double t180679 = t180678+1.0;
                double t180680 = pow(t180645,1.0/3.0);
                double t180681 = t180652*t180680*(4.0/3.0);
                double t180682 = pow(t180647,1.0/3.0);
                double t180683 = t180681-t180652*t180682*(4.0/3.0);
                double t180684 = t180653*t180656;
                double t180685 = t180684-1.0;
                double t180686 = pow(2.0,1.0/3.0);
                double t180687 = t180686*2.0;
                double t180688 = t180687-2.0;
                double t180689 = a1f*c*t180567;
                double t180690 = t180689+1.0;
                double t180691 = b1f*t180569;
                double t180692 = b3f*t180570;
                double t180693 = b4f*t180571*t180572;
                double t180694 = b2f*c*t180567;
                double t180695 = t180691+t180692+t180693+t180694;
                double t180696 = 1.0/t180695;
                double t180697 = t180622*t180696*(1.0/2.0);
                double t180698 = t180697+1.0;
                double t180699 = 1.0/pow(rho_b[index],4.0/3.0);
                double t180700 = 1.0/pow(rho_b[index],5.0/3.0);
                double t180701 = 1.0/sqrt(t180568);
                double t180702 = log(t180698);
                double t180703 = 1.0/t180581;
                double t180704 = 1.0/(t180578*t180578);
                double t180705 = b4p*t180700*t180571*(2.0/3.0);
                double t180706 = b2p*c*t180699*(1.0/3.0);
                double t180707 = b1p*c*t180701*t180699*(1.0/6.0);
                double t180708 = b3p*c*t180569*t180699*(1.0/2.0);
                double t180709 = t180705+t180706+t180707+t180708;
                double t180710 = t180703*t180704*t180709*t180584;
                double t180711 = c0f*t180702*t180690*2.0;
                double t180712 = c0p*t180582*t180584*2.0;
                double t180713 = 1.0/pow(rho_a[index],8.0/3.0);
                double t180714 = gamma_aa[index]*t180713*(1.0/2.0);
                double t180715 = gamma_bb[index]*t180585*(1.0/2.0);
                double t180716 = t180714+t180715;
                double t180717 = gcab*t180716;
                double t180718 = t180717+1.0;
                double t180719 = gcab*gcab;
                double t180720 = t180716*t180716;
                double t180721 = t180719*t180719;
                double t180722 = t180720*t180720;
                double t180723 = t180720*t180719;
                double t180724 = gcab*t180716*2.0;
                double t180725 = t180723+t180724+1.0;
                double t180726 = t180720*t180719*3.0;
                double t180727 = gcab*t180720*t180716*t180719;
                double t180728 = gcab*t180716*3.0;
                double t180729 = t180726+t180727+t180728+1.0;
                double t180730 = t180720*t180719*6.0;
                double t180731 = gcab*t180720*t180716*t180719*4.0;
                double t180732 = t180721*t180722;
                double t180733 = gcab*t180716*4.0;
                double t180734 = t180730+t180731+t180732+t180733+1.0;
                double t180735 = a1p*c*c0p*t180643*t180618*(2.0/3.0);
                double t180736 = 1.0/pow(rho_a[index],1.0/3.0);
                double t180737 = c*t180736;
                double t180738 = sqrt(t180737);
                double t180739 = pow(t180737,3.0/2.0);
                double t180740 = 1.0/pow(rho_a[index],2.0/3.0);
                double t180741 = b1p*t180738;
                double t180742 = b3p*t180739;
                double t180743 = b4p*t180740*t180571;
                double t180744 = b2p*c*t180736;
                double t180745 = t180741+t180742+t180743+t180744;
                double t180746 = 1.0/t180745;
                double t180747 = t180573*t180746*(1.0/2.0);
                double t180748 = t180747+1.0;
                double t180749 = log(t180748);
                double t180750 = a1p*c*t180736;
                double t180751 = t180750+1.0;
                double t180752 = c0p*t180751*t180749*2.0;
                double t180753 = t180711-t180712;
                double t180754 = t180621*t180644*t180653*t180656*t180649;
                double t180755 = Aa*t180621*t180649*t180667*t180685*t180677*t180679*2.0;
                double t180756 = 1.0/t180718;
                double t180757 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t180758 = 1.0/(t180718*t180718);
                double t180759 = 1.0/t180725;
                double t180760 = 1.0/(t180729*t180729);
                double t180761 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t180762 = 1.0/(t180725*t180725);
                double t180763 = 1.0/t180729;
                double t180764 = 1.0/t180734;
                double t180765 = 1.0/(t180734*t180734);
                double t180766 = gcab*t180585*2.0;
                double t180767 = t180716*t180719*t180585*6.0;
                double t180768 = gcab*t180720*t180719*t180585*6.0;
                double t180769 = t180720*t180721*t180716*t180585*2.0;
                double t180770 = t180766+t180767+t180768+t180769;
                double t180771 = gamma_bb[index]*gcab*t180757*(8.0/3.0);
                double t180772 = gamma_bb[index]*t180716*t180719*t180757*(8.0/3.0);
                double t180773 = t180771+t180772;
                double t180774 = gcab*t180585;
                double t180775 = t180716*t180719*t180585;
                double t180776 = t180774+t180775;
                double t180777 = gamma_bb[index]*gcab*t180757*(1.6E1/3.0);
                double t180778 = gamma_bb[index]*gcab*t180720*t180719*t180757*1.6E1;
                double t180779 = gamma_bb[index]*t180720*t180721*t180716*t180757*(1.6E1/3.0);
                double t180780 = gamma_bb[index]*t180716*t180719*t180757*1.6E1;
                double t180781 = t180780+t180777+t180778+t180779;
                double t180782 = gcab*t180585*(3.0/2.0);
                double t180783 = t180716*t180719*t180585*3.0;
                double t180784 = gcab*t180720*t180719*t180585*(3.0/2.0);
                double t180785 = t180782+t180783+t180784;
                double t180786 = gamma_bb[index]*gcab*t180757*4.0;
                double t180787 = gamma_bb[index]*gcab*t180720*t180719*t180757*4.0;
                double t180788 = gamma_bb[index]*t180716*t180719*t180757*8.0;
                double t180789 = t180786+t180787+t180788;
                double t180790 = t180621*t180753*t180688;
                double t180791 = t180712+t180790;
                double t180792 = 1.0/t180593;
                double t180793 = 1.0/t180603;
                double t180794 = 1.0/t180606;
                double t180795 = 1.0/t180597;
                double t180796 = 1.0/(t180593*t180593);
                double t180797 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t180798 = 1.0/(t180597*t180597);
                double t180799 = 1.0/(t180606*t180606);
                double t180800 = gcaa*t180585*3.0;
                double t180801 = gamma_bb[index]*t180590*t180587*6.0;
                double t180802 = gcaa*t180591*t180586*t180587*3.0;
                double t180803 = t180800+t180801+t180802;
                double t180804 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t180805 = 1.0/(t180603*t180603);
                double t180806 = gcaa*t180585*4.0;
                double t180807 = gamma_bb[index]*t180590*t180587*1.2E1;
                double t180808 = gcaa*t180591*t180586*t180587*1.2E1;
                double t180809 = gamma_bb[index]*t180586*t180588*t180589*4.0;
                double t180810 = t180806+t180807+t180808+t180809;
                double t180811 = gcaa*t180585*2.0;
                double t180812 = gamma_bb[index]*t180590*t180587*2.0;
                double t180813 = t180811+t180812;
                double t180814 = gamma_bb[index]*gcaa*t180757*(1.6E1/3.0);
                double t180815 = t180761*t180586*t180587*(1.6E1/3.0);
                double t180816 = t180814+t180815;
                double t180817 = gamma_bb[index]*gcaa*t180757*8.0;
                double t180818 = gamma_bb[index]*gcaa*t180586*t180587*t180797*8.0;
                double t180819 = t180761*t180586*t180587*1.6E1;
                double t180820 = t180817+t180818+t180819;
                double t180821 = gamma_bb[index]*gcaa*t180757*(3.2E1/3.0);
                double t180822 = gamma_bb[index]*gcaa*t180586*t180587*t180797*3.2E1;
                double t180823 = t180761*t180586*t180587*3.2E1;
                double t180824 = t180804*t180588*t180598*(3.2E1/3.0);
                double t180825 = t180821+t180822+t180823+t180824;
                double t180826 = 1.0/t180698;
                double t180827 = 1.0/(t180695*t180695);
                double t180828 = b4f*t180700*t180571*(2.0/3.0);
                double t180829 = b2f*c*t180699*(1.0/3.0);
                double t180830 = b1f*c*t180701*t180699*(1.0/6.0);
                double t180831 = b3f*c*t180569*t180699*(1.0/2.0);
                double t180832 = t180830+t180831+t180828+t180829;
                double t180833 = a1f*c*c0f*t180702*t180699*(2.0/3.0);
                double t180834 = a1p*c*c0p*t180582*t180699*(2.0/3.0);
                double t180835 = ccaa1*gcaa*t180585*t180792;
                double t180836 = ccaa4*gamma_bb[index]*t180586*t180793*t180588*t180589*4.0;
                double t180837 = ccaa2*gamma_bb[index]*t180590*t180587*t180794*2.0;
                double t180838 = ccaa3*gcaa*t180591*t180586*t180587*t180795*3.0;
                double t180839 = t180835+t180836+t180837+t180838-ccaa1*gamma_bb[index]*t180590*t180587*t180796-ccaa4* \
                   t180810*t180805*t180588*t180589*t180598-ccaa2*t180813*t180590*t180586*t180587*t180799-ccaa3*gamma_bb[index]* \
                   gcaa*t180803*t180591*t180586*t180587*t180798;
                double t180840 = gx*gx;
                double t180841 = t180840*t180840;
                double t180842 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t180843 = gamma_bb[index]*gx*t180585*4.0;
                double t180844 = gamma_bb[index]*gx*t180840*t180591*t180586*4.0;
                double t180845 = t180840*t180590*t180586*6.0;
                double t180846 = t180841*t180589*t180598;
                double t180847 = t180843+t180844+t180845+t180846+1.0;
                double t180848 = 1.0/t180847;
                double t180849 = cx4*t180841*t180848*t180589*t180598*(4.190715359480463E15/2.251799813685248E15);
                double t180850 = gamma_bb[index]*gx*t180585;
                double t180851 = t180850+1.0;
                double t180852 = 1.0/t180851;
                double t180853 = cx1*gamma_bb[index]*gx*t180852*t180585*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180854 = gamma_bb[index]*gx*t180585*3.0;
                double t180855 = gamma_bb[index]*gx*t180840*t180591*t180586;
                double t180856 = t180840*t180590*t180586*3.0;
                double t180857 = t180854+t180855+t180856+1.0;
                double t180858 = 1.0/t180857;
                double t180859 = cx3*gamma_bb[index]*gx*t180840*t180591*t180586*t180858*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180860 = gamma_bb[index]*gx*t180585*2.0;
                double t180861 = t180840*t180590*t180586;
                double t180862 = t180860+t180861+1.0;
                double t180863 = 1.0/t180862;
                double t180864 = cx2*t180840*t180590*t180863*t180586*(4.190715359480463E15/2.251799813685248E15);
                double t180865 = t180842+t180853+t180864+t180849+t180859;
                double t180866 = 1.0/omega;
                double t180867 = 1.0/(omega*omega);
                double t180868 = pow(rho_b[index],2.0/3.0);
                double t180869 = 1.0/t180865;
                double t180871 = t180867*t180868*t180869*(1.4000771998813E29/4.951760157141521E27);
                double t180870 = exp(-t180871);
                double t180872 = cx4*t180804*t180841*t180848*t180598*(1.396905119826821E15/7.0368744177664E13);
                double t180873 = cx1*gamma_bb[index]*gx*t180852*t180757*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t180874 = cx3*gamma_bb[index]*gx*t180840*t180586*t180858*t180797*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t180875 = cx2*t180840*t180761*t180863*t180586*(1.396905119826821E15/1.40737488355328E14);
                double t180876 = 1.0/(t180851*t180851);
                double t180877 = gamma_bb[index]*gx*t180757*8.0;
                double t180878 = gamma_bb[index]*gx*t180840*t180586*t180797*8.0;
                double t180879 = t180840*t180761*t180586*1.6E1;
                double t180880 = t180877+t180878+t180879;
                double t180881 = 1.0/(t180857*t180857);
                double t180882 = gamma_bb[index]*gx*t180757*(3.2E1/3.0);
                double t180883 = gamma_bb[index]*gx*t180840*t180586*t180797*3.2E1;
                double t180884 = t180840*t180761*t180586*3.2E1;
                double t180885 = t180804*t180841*t180598*(3.2E1/3.0);
                double t180886 = t180882+t180883+t180884+t180885;
                double t180887 = 1.0/(t180847*t180847);
                double t180888 = gamma_bb[index]*gx*t180757*(1.6E1/3.0);
                double t180889 = t180840*t180761*t180586*(1.6E1/3.0);
                double t180890 = t180888+t180889;
                double t180891 = 1.0/(t180862*t180862);
                double t180895 = cx1*t180840*t180761*t180586*t180876*(1.396905119826821E15/2.81474976710656E14);
                double t180896 = cx3*gamma_bb[index]*gx*t180840*t180591*t180880*t180881*t180586*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180897 = cx4*t180841*t180589*t180598*t180886*t180887*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180898 = cx2*t180840*t180590*t180890*t180891*t180586*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180892 = t180872+t180873+t180874+t180875-t180895-t180896-t180897-t180898;
                double t180893 = omega*omega;
                double t180894 = t180870-1.0;
                double t180899 = t180567*t180867*t180869*(1.4000771998813E29/7.427640235712282E27);
                double t180900 = 1.0/(t180865*t180865);
                double t180901 = t180900*t180892*t180867*t180868*(1.4000771998813E29/4.951760157141521E27);
                double t180902 = t180901+t180899;
                double t180903 = sqrt(t180865);
                double t180904 = t180572*t180865*t180893*t180894*(2.475880078570761E27/1.4000771998813E29);
                double t180905 = t180904-t180870+3.0/2.0;
                double t180906 = 1.0/sqrt(t180865);
                double t180907 = pow(rho_b[index],1.0/3.0);
                double t180908 = t180906*t180907*t180866*(3.74176054803257E14/7.0368744177664E13);
                double t180909 = erf(t180908);
                double t180910 = t180909*(3.991211251234741E15/2.251799813685248E15);
                double t180912 = omega*t180903*t180905*t180567*(7.0368744177664E13/3.74176054803257E14);
                double t180911 = t180910-t180912;
                double t180913 = cx1*gx*t180852*t180585;
                double t180914 = cx4*gamma_bb[index]*t180841*t180586*t180848*t180589*4.0;
                double t180915 = cx2*gamma_bb[index]*t180840*t180590*t180863*2.0;
                double t180916 = cx3*gx*t180840*t180591*t180586*t180858*3.0;
                double t180917 = gx*t180585*3.0;
                double t180918 = gamma_bb[index]*t180840*t180590*6.0;
                double t180919 = gx*t180840*t180591*t180586*3.0;
                double t180920 = t180917+t180918+t180919;
                double t180921 = gx*t180585*4.0;
                double t180922 = gamma_bb[index]*t180840*t180590*1.2E1;
                double t180923 = gx*t180840*t180591*t180586*1.2E1;
                double t180924 = gamma_bb[index]*t180841*t180586*t180589*4.0;
                double t180925 = t180921+t180922+t180923+t180924;
                double t180926 = gx*t180585*2.0;
                double t180927 = gamma_bb[index]*t180840*t180590*2.0;
                double t180928 = t180926+t180927;
                double t180929 = t180913+t180914+t180915+t180916-cx1*gamma_bb[index]*t180840*t180590*t180876-cx2* \
                   t180840*t180590*t180891*t180586*t180928-cx4*t180841*t180925*t180589*t180598*t180887-cx3*gamma_bb[index]* \
                   gx*t180920*t180840*t180591*t180881*t180586;
                double t180930 = pow(rho_b[index],4.0/3.0);
                double t180931 = 1.0/sqrt(3.141592653589793);
                double t180932 = 1.0/pow(t180865,3.0/2.0);
                double t180933 = cx1*gx*t180852*t180585*(4.190715359480463E15/2.251799813685248E15);
                double t180934 = cx4*gamma_bb[index]*t180841*t180586*t180848*t180589*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t180935 = cx2*gamma_bb[index]*t180840*t180590*t180863*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180936 = cx3*gx*t180840*t180591*t180586*t180858*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t180938 = cx1*gamma_bb[index]*t180840*t180590*t180876*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180939 = cx3*gamma_bb[index]*gx*t180920*t180840*t180591*t180881*t180586*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180940 = cx4*t180841*t180925*t180589*t180598*t180887*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180941 = cx2*t180840*t180590*t180891*t180586*t180928*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180937 = -t180940-t180941+t180933+t180934+t180935+t180936-t180938-t180939;
                double t180942 = cx1*gamma_bb[index]*t180840*t180761*t180876*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t180943 = 1.0/(t180851*t180851*t180851);
                double t180944 = cx3*gx*t180840*t180591*t180880*t180881*t180586*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t180945 = cx2*gamma_bb[index]*t180840*t180590*t180890*t180891*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180946 = cx3*gamma_bb[index]*gx*t180920*t180840*t180881*t180586*t180797*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t180947 = gx*t180757*8.0;
                double t180948 = gamma_bb[index]*t180840*t180761*3.2E1;
                double t180949 = gx*t180840*t180586*t180797*2.4E1;
                double t180950 = t180947+t180948+t180949;
                double t180951 = cx3*gamma_bb[index]*gx*t180840*t180950*t180591*t180881*t180586*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t180952 = cx4*gamma_bb[index]*t180841*t180586*t180589*t180886*t180887*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t180953 = cx4*t180804*t180841*t180925*t180598*t180887*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t180954 = gx*t180757*(3.2E1/3.0);
                double t180955 = gamma_bb[index]*t180840*t180761*6.4E1;
                double t180956 = gx*t180840*t180586*t180797*9.6E1;
                double t180957 = gamma_bb[index]*t180804*t180841*t180586*(1.28E2/3.0);
                double t180958 = t180954+t180955+t180956+t180957;
                double t180959 = cx4*t180841*t180589*t180598*t180958*t180887*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180960 = cx2*t180840*t180761*t180891*t180586*t180928*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t180961 = gx*t180757*(1.6E1/3.0);
                double t180962 = gamma_bb[index]*t180840*t180761*(3.2E1/3.0);
                double t180963 = t180961+t180962;
                double t180964 = cx2*t180840*t180590*t180891*t180963*t180586*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t180965 = 1.0/(t180862*t180862*t180862);
                double t180966 = 1.0/(t180857*t180857*t180857);
                double t180967 = 1.0/(t180847*t180847*t180847);
                double t180969 = cx1*gx*t180852*t180757*(1.396905119826821E15/2.81474976710656E14);
                double t180970 = cx4*gamma_bb[index]*t180804*t180841*t180586*t180848*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t180971 = cx2*gamma_bb[index]*t180840*t180761*t180863*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t180972 = cx3*gx*t180840*t180586*t180858*t180797*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t180973 = cx1*gx*t180840*t180943*t180586*t180797*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t180974 = cx2*t180840*t180590*t180890*t180586*t180928*t180965*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180975 = cx3*gamma_bb[index]*gx*t180920*t180840*t180591*t180880*t180586*t180966*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t180976 = cx4*t180841*t180925*t180589*t180598*t180886*t180967*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t180968 = t180942+t180951+t180960+t180952-t180970+t180944+t180953-t180971+t180945-t180972+ \
                   t180946+t180964-t180973-t180974-t180975-t180976+t180959-t180969;
                double t180977 = t180900*t180867*t180868*t180968*(1.4000771998813E29/4.951760157141521E27);
                double t180978 = t180900*t180567*t180937*t180867*(1.4000771998813E29/7.427640235712282E27);
                double t180979 = 1.0/(t180865*t180865*t180865);
                double t180980 = t180892*t180937*t180867*t180868*t180979*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t180981 = t180980+t180977+t180978;
                double t180982 = t180870*t180937*t180869*(1.0/2.0);
                double t180983 = t180572*t180937*t180893*t180894*(2.475880078570761E27/1.4000771998813E29);
                double t180992 = t180900*t180870*t180937*t180867*t180868*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t180984 = t180982+t180983-t180992;
                double t180985 = t180700*t180865*t180893*t180894*(4.951760157141521E27/4.2002315996439E29);
                double t180986 = t180572*t180892*t180893*t180894*(2.475880078570761E27/1.4000771998813E29);
                double t180987 = t180902*t180572*t180870*t180865*t180893*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t180999 = t180902*t180870;
                double t180988 = t180985+t180986+t180987-t180999;
                double t180989 = t180572*t180906*t180866*(3.74176054803257E14/2.11106232532992E14);
                double t180990 = t180932*t180907*t180892*t180866*(3.74176054803257E14/1.40737488355328E14);
                double t180991 = t180990+t180989;
                double t180993 = omega*t180903*t180567*t180984*(7.0368744177664E13/3.74176054803257E14);
                double t180994 = omega*t180905*t180906*t180567*t180937*(3.5184372088832E13/3.74176054803257E14);
                double t180995 = t180931*t180932*t180870*t180907*t180937*t180866*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t180996 = t180993+t180994+t180995;
                double t180997 = t180931*t180870*t180991*(3.991211251234741E15/1.125899906842624E15);
                double t180998 = omega*t180903*t180905*t180699*(7.0368744177664E13/1.122528164409771E15);
                double t181000 = omega*t180903*t180567*t180988*(7.0368744177664E13/3.74176054803257E14);
                double t181001 = omega*t180905*t180906*t180567*t180892*(3.5184372088832E13/3.74176054803257E14);
                double t181002 = t181000+t181001+t180997+t180998;
                double t181003 = cx4*t180841*t180848*t180589*t180598;
                double t181004 = cx1*gamma_bb[index]*gx*t180852*t180585;
                double t181005 = cx3*gamma_bb[index]*gx*t180840*t180591*t180586*t180858;
                double t181006 = cx2*t180840*t180590*t180863*t180586;
                double t181007 = cx0+t181003+t181004+t181005+t181006;
                double t181008 = omega*t180903*t180567*t180996*(2.81474976710656E14/1.122528164409771E15);
                double t181009 = t181008-omega*t180911*t180906*t180567*t180937*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t181010 = omega*t180911*t180903*t180567*(2.81474976710656E14/1.122528164409771E15);
                double t181011 = t181010-1.0;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t180791+rho_a[index]*(t180752-t180621*t180688*(t180752- \
                   c0f*log((t180622*(1.0/2.0))/(b1f*t180738+b3f*t180739+b2f*c*t180736+b4f*t180740*t180571)+1.0)*(a1f* \
                   c*t180736+1.0)*2.0))-t180607*(t180655+t180754+t180755))*(ccab1*gcab*t180756*t180757*(4.0/3.0)-ccab2* \
                   t180720*t180762*t180719*(gcab*t180757*(8.0/3.0)+gamma_bb[index]*t180761*t180719*(4.0/3.0)+t180716* \
                   t180719*t180757*(8.0/3.0))-ccab4*t180721*t180722*t180765*(gcab*t180757*(1.6E1/3.0)+gamma_bb[index]* \
                   t180761*t180719*8.0+t180716*t180719*t180757*1.6E1+gamma_bb[index]*t180720*t180721*t180761*8.0+gcab* \
                   t180720*t180719*t180757*1.6E1+t180720*t180721*t180716*t180757*(1.6E1/3.0)+gamma_bb[index]*gcab*t180716* \
                   t180761*t180719*1.6E1)-ccab1*gamma_bb[index]*t180761*t180719*t180758*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t180761*t180719*t180759*(4.0/3.0)-ccab1*t180716*t180719*t180757*t180758*(4.0/3.0)+ccab2*t180716*t180719* \
                   t180757*t180759*(8.0/3.0)+ccab4*t180720*t180721*t180716*t180764*t180757*(1.6E1/3.0)-ccab2*t180716* \
                   t180762*t180719*t180773*t180585+ccab4*t180721*t180722*1.0/(t180734*t180734*t180734)*t180770*t180781* \
                   2.0+ccab2*t180720*1.0/(t180725*t180725*t180725)*t180719*t180773*t180776*2.0+ccab4*gamma_bb[index]* \
                   t180720*t180721*t180761*t180764*8.0+ccab3*gcab*t180720*t180763*t180719*t180757*4.0+ccab3*gamma_bb[index]* \
                   gcab*t180716*t180761*t180763*t180719*4.0-ccab2*gamma_bb[index]*t180716*t180762*t180719*t180757*t180776* \
                   (8.0/3.0)-ccab3*gcab*t180720*t180760*t180719*t180585*t180789*(3.0/2.0)-ccab4*t180720*t180721*t180716* \
                   t180781*t180585*t180765*2.0-ccab3*gcab*t180720*t180760*t180716*t180719*(gcab*t180757*4.0+gamma_bb[index]* \
                   t180761*t180719*4.0+t180716*t180719*t180757*8.0+gcab*t180720*t180719*t180757*4.0+gamma_bb[index]*gcab* \
                   t180716*t180761*t180719*4.0)+ccab1*gamma_bb[index]*gcab*t180716*t180761*1.0/(t180718*t180718*t180718) \
                   *t180719*(4.0/3.0)+ccab3*gcab*t180720*t180716*t180719*1.0/(t180729*t180729*t180729)*t180785*t180789* \
                   2.0-ccab3*gamma_bb[index]*gcab*t180720*t180760*t180719*t180757*t180785*4.0-ccab4*gamma_bb[index]*t180720* \
                   t180721*t180716*t180770*t180765*t180757*(1.6E1/3.0))-(-t180712+t180655+t180754+t180755+rho_b[index]* \
                   (-t180710+t180834+t180621*t180688*(t180710+t180833-t180832*t180690*t180826*t180827-a1p*c*c0p*t180582* \
                   t180699*(2.0/3.0)))-t180607*(t180735-t180660*t180627*t180665*t180659+t180621*t180644*t180653*t180656* \
                   t180683+t180621*t180644*t180656*t180666*t180649*4.0-t180621*t180653*t180656*t180649*(t180735-t180660* \
                   t180627*t180665*t180659+(t180642*1.0/(t180636*t180636)*(b2f*c*t180618*(1.0/3.0)+b4f*t180571*t180657* \
                   (2.0/3.0)+b1f*c*t180618*t180658*(1.0/6.0)+b3f*c*t180610*t180618*(1.0/2.0)))/t180639-a1f*c*c0f*t180640* \
                   t180618*(2.0/3.0))+t180621*t180644*t180653*t180628*t180629*t180649*4.0+Aa*t180621*t180649*t180667* \
                   t180677*t180679*(t180656*t180666*4.0+t180653*t180628*t180629*4.0)*2.0+Aa*t180621*t180683*t180667*t180685* \
                   t180677*t180679*2.0-(t180621*1.0/(t180673*t180673)*t180649*t180667*t180685*t180679*(b2a*c*t180618* \
                   (1.0/3.0)+b4a*t180571*t180657*(2.0/3.0)+b1a*c*t180618*t180658*(1.0/6.0)+b3a*c*t180610*t180618*(1.0/ \
                   2.0)))/t180676+Aa*a1a*c*t180621*t180618*t180649*t180667*t180685*t180677*(2.0/3.0))-t180621*t180753* \
                   t180688)*(ccab1*gcab*t180585*t180756*(1.0/2.0)-ccab4*t180721*t180722*t180770*t180765-ccab2*t180720* \
                   t180762*t180719*t180776-ccab1*t180716*t180719*t180585*t180758*(1.0/2.0)+ccab2*t180716*t180719*t180585* \
                   t180759+ccab4*t180720*t180721*t180716*t180764*t180585*2.0+ccab3*gcab*t180720*t180763*t180719*t180585* \
                   (3.0/2.0)-ccab3*gcab*t180720*t180760*t180716*t180719*t180785)-t180839*(t180712+t180621*t180688*(t180711- \
                   c0p*t180582*t180584*2.0))-rho_b[index]*t180791*(ccaa1*gcaa*t180792*t180757*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t180761*t180587*t180794*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t180761*t180587*t180796*8.0+ccaa4*t180810* \
                   t180804*t180805*t180588*t180598*(3.2E1/3.0)+ccaa2*t180813*t180761*t180586*t180587*t180799*(1.6E1/3.0) \
                   +ccaa4*t180805*t180588*t180589*t180598*(gcaa*t180757*(3.2E1/3.0)+gamma_bb[index]*t180761*t180587*6.4E1+ \
                   gamma_bb[index]*t180804*t180586*t180588*(1.28E2/3.0)+gcaa*t180586*t180587*t180797*9.6E1)-ccaa1*gcaa* \
                   1.0/(t180593*t180593*t180593)*t180586*t180587*t180797*(1.6E1/3.0)+ccaa2*t180590*t180586*t180587*t180799* \
                   (gcaa*t180757*(1.6E1/3.0)+gamma_bb[index]*t180761*t180587*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t180804* \
                   t180586*t180793*t180588*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t180590*t180816*t180587*t180799*2.0-ccaa3* \
                   gcaa*t180586*t180587*t180795*t180797*2.4E1+ccaa4*gamma_bb[index]*t180805*t180825*t180586*t180588*t180589* \
                   4.0+ccaa3*gcaa*t180820*t180591*t180586*t180587*t180798*3.0-ccaa2*1.0/(t180606*t180606*t180606)*t180813* \
                   t180590*t180816*t180586*t180587*2.0-ccaa4*1.0/(t180603*t180603*t180603)*t180810*t180825*t180588*t180589* \
                   t180598*2.0+ccaa3*gamma_bb[index]*gcaa*t180591*t180586*t180587*t180798*(gcaa*t180757*8.0+gamma_bb[index]* \
                   t180761*t180587*3.2E1+gcaa*t180586*t180587*t180797*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t180803*t180586* \
                   t180587*t180797*t180798*8.0-ccaa3*gamma_bb[index]*gcaa*t180820*t180803*t180591*t180586*t180587*1.0/ \
                   (t180597*t180597*t180597)*2.0)+rho_b[index]*t180839*(-t180710+t180834+t180621*t180688*(t180710+t180833- \
                   t180834-t180832*t180690*t180826*t180827))-c0*t181011*t180930*(cx1*gx*t180852*t180757*(-8.0/3.0)+cx1* \
                   gamma_bb[index]*t180840*t180761*t180876*8.0-cx2*gamma_bb[index]*t180840*t180761*t180863*(3.2E1/3.0) \
                   +cx2*t180840*t180590*t180891*t180963*t180586+cx2*t180840*t180761*t180891*t180586*t180928*(1.6E1/3.0) \
                   +cx4*t180804*t180841*t180925*t180598*t180887*(3.2E1/3.0)+cx4*t180841*t180589*t180598*t180958*t180887+ \
                   cx2*gamma_bb[index]*t180840*t180590*t180890*t180891*2.0-cx4*gamma_bb[index]*t180804*t180841*t180586* \
                   t180848*(1.28E2/3.0)-cx1*gx*t180840*t180943*t180586*t180797*(1.6E1/3.0)-cx3*gx*t180840*t180586*t180858* \
                   t180797*2.4E1+cx4*gamma_bb[index]*t180841*t180586*t180589*t180886*t180887*4.0+cx3*gx*t180840*t180591* \
                   t180880*t180881*t180586*3.0-cx2*t180840*t180590*t180890*t180586*t180928*t180965*2.0-cx4*t180841*t180925* \
                   t180589*t180598*t180886*t180967*2.0+cx3*gamma_bb[index]*gx*t180840*t180950*t180591*t180881*t180586+ \
                   cx3*gamma_bb[index]*gx*t180920*t180840*t180881*t180586*t180797*8.0-cx3*gamma_bb[index]*gx*t180920* \
                   t180840*t180591*t180880*t180586*t180966*2.0)+c0*t181007*t181009*t180907*(4.0/3.0)-c0*t181011*t180907* \
                   t180929*(4.0/3.0)-c0*t181007*t180930*(omega*t180903*t180567*(t180931*t180870*(t180572*t180932*t180937* \
                   t180866*(3.74176054803257E14/4.22212465065984E14)+t180932*t180907*t180866*t180968*(3.74176054803257E14/ \
                   1.40737488355328E14)+t180907*1.0/pow(t180865,5.0/2.0)*t180892*t180937*t180866*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t180903*t180984*t180699*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t180903*t180567*(t180870*t180981+t180900*t180870*t180892*t180937*(1.0/ \
                   2.0)+t180700*t180937*t180893*t180894*(4.951760157141521E27/4.2002315996439E29)+t180902*t180870*t180937* \
                   t180869*(1.0/2.0)-t180572*t180893*t180894*t180968*(2.475880078570761E27/1.4000771998813E29)+(t180870* \
                   t180937*t180869*(1.0/3.0))/rho_b[index]+t180902*t180572*t180870*t180937*t180893*(2.475880078570761E27/ \
                   1.4000771998813E29)-t180572*t180870*t180981*t180865*t180893*(2.475880078570761E27/1.4000771998813E29) \
                   -t180900*t180902*t180870*t180937*t180867*t180868*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)-omega*t180905*t180906*t180567*t180968*(3.5184372088832E13/3.74176054803257E14) \
                   +omega*t180905*t180906*t180937*t180699*(3.5184372088832E13/1.122528164409771E15)+omega*t180906*t180567* \
                   t180892*t180984*(3.5184372088832E13/3.74176054803257E14)+omega*t180906*t180567*t180937*t180988*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t180905*t180932*t180567*t180892*t180937*(1.7592186044416E13/3.74176054803257E14) \
                   +t180900*t180931*t180870*t180937*t180991*t180867*t180868*(5.588003872763475E44/5.575186299632656E42) \
                   )*(2.81474976710656E14/1.122528164409771E15)+omega*t180903*t180699*t180996*(2.81474976710656E14/3.367584493229313E15) \
                   +omega*t181002*t180906*t180567*t180937*(1.40737488355328E14/1.122528164409771E15)+omega*t180911*t180906* \
                   t180567*t180968*(1.40737488355328E14/1.122528164409771E15)-omega*t180911*t180906*t180937*t180699*(1.40737488355328E14/ \
                   3.367584493229313E15)+omega*t180906*t180567*t180892*t180996*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t180911*t180932*t180567*t180892*t180937*(7.0368744177664E13/1.122528164409771E15))-c0*t181009* \
                   t180930*(cx1*gamma_bb[index]*gx*t180852*t180757*(8.0/3.0)-cx1*t180840*t180761*t180586*t180876*(8.0/ \
                   3.0)+cx2*t180840*t180761*t180863*t180586*(1.6E1/3.0)+cx4*t180804*t180841*t180848*t180598*(3.2E1/3.0) \
                   -cx2*t180840*t180590*t180890*t180891*t180586-cx4*t180841*t180589*t180598*t180886*t180887+cx3*gamma_bb[index]* \
                   gx*t180840*t180586*t180858*t180797*8.0-cx3*gamma_bb[index]*gx*t180840*t180591*t180880*t180881*t180586) \
                   +c0*t180930*t180929*(omega*t181002*t180903*t180567*(-2.81474976710656E14/1.122528164409771E15)+omega* \
                   t180911*t180903*t180699*(2.81474976710656E14/3.367584493229313E15)+omega*t180911*t180906*t180567*t180892* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t182317 = 1.0/pow(rho_b[index],1.0/3.0);
                double t182318 = c*t182317;
                double t182319 = sqrt(t182318);
                double t182320 = pow(t182318,3.0/2.0);
                double t182321 = c*c;
                double t182322 = 1.0/pow(rho_b[index],2.0/3.0);
                double t182323 = 1.0/c0p;
                double t182324 = b1p*t182319;
                double t182325 = b3p*t182320;
                double t182326 = b4p*t182321*t182322;
                double t182327 = b2p*c*t182317;
                double t182328 = t182324+t182325+t182326+t182327;
                double t182329 = 1.0/t182328;
                double t182330 = t182323*t182329*(1.0/2.0);
                double t182331 = t182330+1.0;
                double t182332 = log(t182331);
                double t182333 = a1p*c*t182317;
                double t182334 = t182333+1.0;
                double t182335 = 1.0/pow(rho_b[index],8.0/3.0);
                double t182336 = gamma_bb[index]*gamma_bb[index];
                double t182337 = gcaa*gcaa;
                double t182338 = t182337*t182337;
                double t182339 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t182340 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t182341 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t182342 = gamma_bb[index]*gcaa*t182335;
                double t182343 = t182342+1.0;
                double t182344 = gamma_bb[index]*gcaa*t182335*3.0;
                double t182345 = gamma_bb[index]*gcaa*t182341*t182336*t182337;
                double t182346 = t182340*t182336*t182337*3.0;
                double t182347 = t182344+t182345+t182346+1.0;
                double t182348 = t182336*t182336;
                double t182349 = gamma_bb[index]*gcaa*t182335*4.0;
                double t182350 = gamma_bb[index]*gcaa*t182341*t182336*t182337*4.0;
                double t182351 = t182340*t182336*t182337*6.0;
                double t182352 = t182338*t182339*t182348;
                double t182353 = t182350+t182351+t182352+t182349+1.0;
                double t182354 = gamma_bb[index]*gcaa*t182335*2.0;
                double t182355 = t182340*t182336*t182337;
                double t182356 = t182354+t182355+1.0;
                double t182357 = pow(2.0,1.0/3.0);
                double t182358 = t182357*2.0;
                double t182359 = t182358-2.0;
                double t182360 = two_13*2.0;
                double t182361 = t182360-2.0;
                double t182362 = 1.0/t182361;
                double t182363 = 1.0/c0f;
                double t182364 = b1f*t182319;
                double t182365 = b3f*t182320;
                double t182366 = b4f*t182321*t182322;
                double t182367 = b2f*c*t182317;
                double t182368 = t182364+t182365+t182366+t182367;
                double t182369 = 1.0/t182368;
                double t182370 = t182363*t182369*(1.0/2.0);
                double t182371 = t182370+1.0;
                double t182372 = log(t182371);
                double t182373 = a1f*c*t182317;
                double t182374 = t182373+1.0;
                double t182375 = c0f*t182372*t182374*2.0;
                double t182376 = c0p*t182332*t182334*2.0;
                double t182377 = 1.0/t182343;
                double t182378 = 1.0/t182353;
                double t182379 = 1.0/t182356;
                double t182380 = 1.0/t182347;
                double t182381 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t182382 = 1.0/(t182343*t182343);
                double t182383 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t182384 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t182385 = 1.0/(t182347*t182347);
                double t182386 = 1.0/(t182356*t182356);
                double t182387 = gcaa*t182335*3.0;
                double t182388 = gamma_bb[index]*t182340*t182337*6.0;
                double t182389 = gcaa*t182341*t182336*t182337*3.0;
                double t182390 = t182387+t182388+t182389;
                double t182391 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t182392 = 1.0/(t182353*t182353);
                double t182393 = gcaa*t182335*4.0;
                double t182394 = gamma_bb[index]*t182340*t182337*1.2E1;
                double t182395 = gcaa*t182341*t182336*t182337*1.2E1;
                double t182396 = gamma_bb[index]*t182336*t182338*t182339*4.0;
                double t182397 = t182393+t182394+t182395+t182396;
                double t182398 = gcaa*t182335*2.0;
                double t182399 = gamma_bb[index]*t182340*t182337*2.0;
                double t182400 = t182398+t182399;
                double t182401 = gamma_bb[index]*gcaa*t182384*(1.6E1/3.0);
                double t182402 = t182336*t182381*t182337*(1.6E1/3.0);
                double t182403 = t182401+t182402;
                double t182404 = gamma_bb[index]*gcaa*t182384*8.0;
                double t182405 = gamma_bb[index]*gcaa*t182336*t182337*t182383*8.0;
                double t182406 = t182336*t182381*t182337*1.6E1;
                double t182407 = t182404+t182405+t182406;
                double t182408 = gamma_bb[index]*gcaa*t182384*(3.2E1/3.0);
                double t182409 = gamma_bb[index]*gcaa*t182336*t182337*t182383*3.2E1;
                double t182410 = t182336*t182381*t182337*3.2E1;
                double t182411 = t182391*t182338*t182348*(3.2E1/3.0);
                double t182412 = t182410+t182411+t182408+t182409;
                double t182413 = 1.0/pow(rho_b[index],4.0/3.0);
                double t182414 = 1.0/pow(rho_b[index],5.0/3.0);
                double t182415 = 1.0/sqrt(t182318);
                double t182416 = 1.0/t182331;
                double t182417 = 1.0/(t182328*t182328);
                double t182418 = b4p*t182321*t182414*(2.0/3.0);
                double t182419 = b2p*c*t182413*(1.0/3.0);
                double t182420 = b1p*c*t182413*t182415*(1.0/6.0);
                double t182421 = b3p*c*t182413*t182319*(1.0/2.0);
                double t182422 = t182420+t182421+t182418+t182419;
                double t182423 = t182422*t182334*t182416*t182417;
                double t182424 = ccaa1*gcaa*t182335*t182377;
                double t182425 = ccaa4*gamma_bb[index]*t182336*t182338*t182339*t182378*4.0;
                double t182426 = ccaa2*gamma_bb[index]*t182340*t182337*t182379*2.0;
                double t182427 = ccaa3*gcaa*t182341*t182380*t182336*t182337*3.0;
                double t182428 = t182424+t182425+t182426+t182427-ccaa1*gamma_bb[index]*t182340*t182337*t182382-ccaa2* \
                   t182400*t182340*t182336*t182337*t182386-ccaa4*t182338*t182392*t182339*t182348*t182397-ccaa3*gamma_bb[index]* \
                   gcaa*t182341*t182336*t182390*t182337*t182385;
                double t182429 = gx*gx;
                double t182430 = t182429*t182429;
                double t182431 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t182432 = gamma_bb[index]*gx*t182335*4.0;
                double t182433 = gamma_bb[index]*gx*t182341*t182336*t182429*4.0;
                double t182434 = t182340*t182336*t182429*6.0;
                double t182435 = t182430*t182339*t182348;
                double t182436 = t182432+t182433+t182434+t182435+1.0;
                double t182437 = 1.0/t182436;
                double t182438 = cx4*t182430*t182437*t182339*t182348*(4.190715359480463E15/2.251799813685248E15);
                double t182439 = gamma_bb[index]*gx*t182335;
                double t182440 = t182439+1.0;
                double t182441 = 1.0/t182440;
                double t182442 = cx1*gamma_bb[index]*gx*t182441*t182335*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182443 = gamma_bb[index]*gx*t182335*3.0;
                double t182444 = gamma_bb[index]*gx*t182341*t182336*t182429;
                double t182445 = t182340*t182336*t182429*3.0;
                double t182446 = t182443+t182444+t182445+1.0;
                double t182447 = 1.0/t182446;
                double t182448 = cx3*gamma_bb[index]*gx*t182341*t182336*t182429*t182447*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182449 = gamma_bb[index]*gx*t182335*2.0;
                double t182450 = t182340*t182336*t182429;
                double t182451 = t182450+t182449+1.0;
                double t182452 = 1.0/t182451;
                double t182453 = cx2*t182340*t182452*t182336*t182429*(4.190715359480463E15/2.251799813685248E15);
                double t182454 = t182431+t182442+t182453+t182438+t182448;
                double t182455 = 1.0/omega;
                double t182456 = 1.0/(omega*omega);
                double t182457 = pow(rho_b[index],2.0/3.0);
                double t182458 = 1.0/t182454;
                double t182460 = t182456*t182457*t182458*(1.4000771998813E29/4.951760157141521E27);
                double t182459 = exp(-t182460);
                double t182461 = cx4*t182430*t182391*t182437*t182348*(1.396905119826821E15/7.0368744177664E13);
                double t182462 = cx1*gamma_bb[index]*gx*t182441*t182384*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t182463 = cx3*gamma_bb[index]*gx*t182336*t182383*t182429*t182447*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t182464 = cx2*t182452*t182336*t182381*t182429*(1.396905119826821E15/1.40737488355328E14);
                double t182465 = 1.0/(t182440*t182440);
                double t182466 = gamma_bb[index]*gx*t182384*8.0;
                double t182467 = gamma_bb[index]*gx*t182336*t182383*t182429*8.0;
                double t182468 = t182336*t182381*t182429*1.6E1;
                double t182469 = t182466+t182467+t182468;
                double t182470 = 1.0/(t182446*t182446);
                double t182471 = gamma_bb[index]*gx*t182384*(3.2E1/3.0);
                double t182472 = gamma_bb[index]*gx*t182336*t182383*t182429*3.2E1;
                double t182473 = t182336*t182381*t182429*3.2E1;
                double t182474 = t182430*t182391*t182348*(3.2E1/3.0);
                double t182475 = t182471+t182472+t182473+t182474;
                double t182476 = 1.0/(t182436*t182436);
                double t182477 = gamma_bb[index]*gx*t182384*(1.6E1/3.0);
                double t182478 = t182336*t182381*t182429*(1.6E1/3.0);
                double t182479 = t182477+t182478;
                double t182480 = 1.0/(t182451*t182451);
                double t182484 = cx1*t182336*t182381*t182429*t182465*(1.396905119826821E15/2.81474976710656E14);
                double t182485 = cx3*gamma_bb[index]*gx*t182341*t182470*t182336*t182429*t182469*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182486 = cx4*t182430*t182339*t182348*t182475*t182476*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182487 = cx2*t182340*t182336*t182480*t182429*t182479*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182481 = t182461+t182462+t182463+t182464-t182484-t182485-t182486-t182487;
                double t182482 = omega*omega;
                double t182483 = t182459-1.0;
                double t182488 = t182317*t182456*t182458*(1.4000771998813E29/7.427640235712282E27);
                double t182489 = 1.0/(t182454*t182454);
                double t182490 = t182481*t182456*t182457*t182489*(1.4000771998813E29/4.951760157141521E27);
                double t182491 = t182490+t182488;
                double t182492 = sqrt(t182454);
                double t182493 = t182322*t182454*t182482*t182483*(2.475880078570761E27/1.4000771998813E29);
                double t182494 = t182493-t182459+3.0/2.0;
                double t182495 = 1.0/sqrt(t182454);
                double t182496 = pow(rho_b[index],1.0/3.0);
                double t182497 = t182455*t182495*t182496*(3.74176054803257E14/7.0368744177664E13);
                double t182498 = erf(t182497);
                double t182499 = t182498*(3.991211251234741E15/2.251799813685248E15);
                double t182501 = omega*t182317*t182492*t182494*(7.0368744177664E13/3.74176054803257E14);
                double t182500 = -t182501+t182499;
                double t182502 = cx1*gx*t182441*t182335;
                double t182503 = cx4*gamma_bb[index]*t182430*t182336*t182437*t182339*4.0;
                double t182504 = cx2*gamma_bb[index]*t182340*t182452*t182429*2.0;
                double t182505 = cx3*gx*t182341*t182336*t182429*t182447*3.0;
                double t182506 = gx*t182335*3.0;
                double t182507 = gamma_bb[index]*t182340*t182429*6.0;
                double t182508 = gx*t182341*t182336*t182429*3.0;
                double t182509 = t182506+t182507+t182508;
                double t182510 = gx*t182335*4.0;
                double t182511 = gamma_bb[index]*t182340*t182429*1.2E1;
                double t182512 = gx*t182341*t182336*t182429*1.2E1;
                double t182513 = gamma_bb[index]*t182430*t182336*t182339*4.0;
                double t182514 = t182510+t182511+t182512+t182513;
                double t182515 = gx*t182335*2.0;
                double t182516 = gamma_bb[index]*t182340*t182429*2.0;
                double t182517 = t182515+t182516;
                double t182518 = t182502+t182503+t182504+t182505-cx1*gamma_bb[index]*t182340*t182429*t182465-cx2* \
                   t182340*t182336*t182480*t182517*t182429-cx4*t182430*t182514*t182339*t182348*t182476-cx3*gamma_bb[index]* \
                   gx*t182341*t182470*t182336*t182509*t182429;
                double t182519 = pow(rho_b[index],4.0/3.0);
                double t182520 = 1.0/sqrt(3.141592653589793);
                double t182521 = 1.0/pow(t182454,3.0/2.0);
                double t182522 = cx1*gx*t182441*t182335*(4.190715359480463E15/2.251799813685248E15);
                double t182523 = cx4*gamma_bb[index]*t182430*t182336*t182437*t182339*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t182524 = cx2*gamma_bb[index]*t182340*t182452*t182429*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182525 = cx3*gx*t182341*t182336*t182429*t182447*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t182527 = cx1*gamma_bb[index]*t182340*t182429*t182465*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182528 = cx3*gamma_bb[index]*gx*t182341*t182470*t182336*t182509*t182429*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182529 = cx4*t182430*t182514*t182339*t182348*t182476*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182530 = cx2*t182340*t182336*t182480*t182517*t182429*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182526 = -t182530+t182522+t182523+t182524+t182525-t182527-t182528-t182529;
                double t182531 = cx1*gamma_bb[index]*t182381*t182429*t182465*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t182532 = 1.0/(t182440*t182440*t182440);
                double t182533 = cx3*gx*t182341*t182470*t182336*t182429*t182469*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t182534 = cx2*gamma_bb[index]*t182340*t182480*t182429*t182479*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182535 = cx3*gamma_bb[index]*gx*t182470*t182336*t182383*t182509*t182429*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t182536 = gx*t182384*8.0;
                double t182537 = gamma_bb[index]*t182381*t182429*3.2E1;
                double t182538 = gx*t182336*t182383*t182429*2.4E1;
                double t182539 = t182536+t182537+t182538;
                double t182540 = cx3*gamma_bb[index]*gx*t182341*t182470*t182336*t182429*t182539*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182541 = cx4*gamma_bb[index]*t182430*t182336*t182339*t182475*t182476*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t182542 = cx4*t182430*t182514*t182391*t182348*t182476*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t182543 = gx*t182384*(3.2E1/3.0);
                double t182544 = gamma_bb[index]*t182381*t182429*6.4E1;
                double t182545 = gx*t182336*t182383*t182429*9.6E1;
                double t182546 = gamma_bb[index]*t182430*t182336*t182391*(1.28E2/3.0);
                double t182547 = t182543+t182544+t182545+t182546;
                double t182548 = cx4*t182430*t182339*t182348*t182547*t182476*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182549 = cx2*t182336*t182381*t182480*t182517*t182429*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t182550 = gx*t182384*(1.6E1/3.0);
                double t182551 = gamma_bb[index]*t182381*t182429*(3.2E1/3.0);
                double t182552 = t182550+t182551;
                double t182553 = cx2*t182340*t182336*t182480*t182552*t182429*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182554 = 1.0/(t182451*t182451*t182451);
                double t182555 = 1.0/(t182446*t182446*t182446);
                double t182556 = 1.0/(t182436*t182436*t182436);
                double t182558 = cx1*gx*t182441*t182384*(1.396905119826821E15/2.81474976710656E14);
                double t182559 = cx4*gamma_bb[index]*t182430*t182336*t182391*t182437*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t182560 = cx2*gamma_bb[index]*t182452*t182381*t182429*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t182561 = cx3*gx*t182336*t182383*t182429*t182447*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t182562 = cx1*gx*t182532*t182336*t182383*t182429*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t182563 = cx2*t182340*t182336*t182517*t182554*t182429*t182479*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182564 = cx3*gamma_bb[index]*gx*t182341*t182336*t182509*t182429*t182555*t182469*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t182565 = cx4*t182430*t182514*t182339*t182348*t182475*t182556*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182557 = t182531+t182540+t182541+t182533+t182542-t182560+t182534-t182561+t182535+t182553- \
                   t182562-t182563-t182564-t182565+t182548+t182549-t182558-t182559;
                double t182566 = t182456*t182457*t182557*t182489*(1.4000771998813E29/4.951760157141521E27);
                double t182567 = t182317*t182526*t182456*t182489*(1.4000771998813E29/7.427640235712282E27);
                double t182568 = 1.0/(t182454*t182454*t182454);
                double t182569 = t182481*t182526*t182456*t182457*t182568*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t182570 = t182566+t182567+t182569;
                double t182571 = t182526*t182458*t182459*(1.0/2.0);
                double t182572 = t182322*t182526*t182482*t182483*(2.475880078570761E27/1.4000771998813E29);
                double t182581 = t182526*t182456*t182457*t182459*t182489*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t182573 = t182571+t182572-t182581;
                double t182574 = t182414*t182454*t182482*t182483*(4.951760157141521E27/4.2002315996439E29);
                double t182575 = t182322*t182481*t182482*t182483*(2.475880078570761E27/1.4000771998813E29);
                double t182576 = t182322*t182454*t182482*t182491*t182459*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t182588 = t182491*t182459;
                double t182577 = t182574+t182575+t182576-t182588;
                double t182578 = t182322*t182455*t182495*(3.74176054803257E14/2.11106232532992E14);
                double t182579 = t182521*t182481*t182455*t182496*(3.74176054803257E14/1.40737488355328E14);
                double t182580 = t182578+t182579;
                double t182582 = omega*t182317*t182492*t182573*(7.0368744177664E13/3.74176054803257E14);
                double t182583 = omega*t182317*t182526*t182494*t182495*(3.5184372088832E13/3.74176054803257E14);
                double t182584 = t182520*t182521*t182526*t182455*t182459*t182496*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t182585 = t182582+t182583+t182584;
                double t182586 = t182520*t182580*t182459*(3.991211251234741E15/1.125899906842624E15);
                double t182587 = omega*t182413*t182492*t182494*(7.0368744177664E13/1.122528164409771E15);
                double t182589 = omega*t182317*t182492*t182577*(7.0368744177664E13/3.74176054803257E14);
                double t182590 = omega*t182317*t182481*t182494*t182495*(3.5184372088832E13/3.74176054803257E14);
                double t182591 = t182590+t182586+t182587+t182589;
                double t182592 = cx4*t182430*t182437*t182339*t182348;
                double t182593 = cx1*gamma_bb[index]*gx*t182441*t182335;
                double t182594 = cx3*gamma_bb[index]*gx*t182341*t182336*t182429*t182447;
                double t182595 = cx2*t182340*t182452*t182336*t182429;
                double t182596 = cx0+t182592+t182593+t182594+t182595;
                double t182597 = omega*t182317*t182492*t182585*(2.81474976710656E14/1.122528164409771E15);
                double t182598 = t182597-omega*t182500*t182317*t182526*t182495*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t182599 = omega*t182500*t182317*t182492*(2.81474976710656E14/1.122528164409771E15);
                double t182600 = t182599-1.0;
                v_rho_b_gamma_bb_[index] = -t182428*(t182376+t182362*t182359*(t182375-c0p*t182332*t182334*2.0))+rho_b[index]* \
                   t182428*(-t182423+t182362*t182359*(t182423-(t182374*1.0/(t182368*t182368)*(b2f*c*t182413*(1.0/3.0) \
                   +b4f*t182321*t182414*(2.0/3.0)+b1f*c*t182413*t182415*(1.0/6.0)+b3f*c*t182413*t182319*(1.0/2.0)))/t182371+ \
                   a1f*c*c0f*t182413*t182372*(2.0/3.0)-a1p*c*c0p*t182332*t182413*(2.0/3.0))+a1p*c*c0p*t182332*t182413* \
                   (2.0/3.0))-rho_b[index]*(t182376+t182362*t182359*(t182375-t182376))*(ccaa1*gcaa*t182384*t182377*(- \
                   8.0/3.0)+ccaa1*gamma_bb[index]*t182381*t182337*t182382*8.0-ccaa2*gamma_bb[index]*t182381*t182337*t182379* \
                   (3.2E1/3.0)+ccaa2*t182400*t182336*t182381*t182337*t182386*(1.6E1/3.0)+ccaa4*t182391*t182338*t182392* \
                   t182348*t182397*(3.2E1/3.0)+ccaa4*t182338*t182392*t182339*t182348*(gcaa*t182384*(3.2E1/3.0)+gamma_bb[index]* \
                   t182381*t182337*6.4E1+gamma_bb[index]*t182336*t182391*t182338*(1.28E2/3.0)+gcaa*t182336*t182337*t182383* \
                   9.6E1)-ccaa1*gcaa*1.0/(t182343*t182343*t182343)*t182336*t182337*t182383*(1.6E1/3.0)+ccaa2*t182340* \
                   t182336*t182337*t182386*(gcaa*t182384*(1.6E1/3.0)+gamma_bb[index]*t182381*t182337*(3.2E1/3.0))+ccaa2* \
                   gamma_bb[index]*t182340*t182403*t182337*t182386*2.0-ccaa4*gamma_bb[index]*t182336*t182391*t182338* \
                   t182378*(1.28E2/3.0)-ccaa3*gcaa*t182380*t182336*t182337*t182383*2.4E1+ccaa4*gamma_bb[index]*t182412* \
                   t182336*t182338*t182392*t182339*4.0+ccaa3*gcaa*t182341*t182407*t182336*t182337*t182385*3.0-ccaa2*t182400* \
                   t182340*t182403*t182336*t182337*1.0/(t182356*t182356*t182356)*2.0-ccaa4*t182412*1.0/(t182353*t182353* \
                   t182353)*t182338*t182339*t182348*t182397*2.0+ccaa3*gamma_bb[index]*gcaa*t182341*t182336*t182337*t182385* \
                   (gcaa*t182384*8.0+gamma_bb[index]*t182381*t182337*3.2E1+gcaa*t182336*t182337*t182383*2.4E1)+ccaa3* \
                   gamma_bb[index]*gcaa*t182336*t182390*t182337*t182383*t182385*8.0-ccaa3*gamma_bb[index]*gcaa*t182341* \
                   t182407*t182336*t182390*t182337*1.0/(t182347*t182347*t182347)*2.0)-c0*t182600*t182519*(cx1*gx*t182441* \
                   t182384*(-8.0/3.0)+cx1*gamma_bb[index]*t182381*t182429*t182465*8.0-cx2*gamma_bb[index]*t182452*t182381* \
                   t182429*(3.2E1/3.0)+cx2*t182340*t182336*t182480*t182552*t182429+cx2*t182336*t182381*t182480*t182517* \
                   t182429*(1.6E1/3.0)+cx4*t182430*t182514*t182391*t182348*t182476*(3.2E1/3.0)+cx4*t182430*t182339*t182348* \
                   t182547*t182476+cx2*gamma_bb[index]*t182340*t182480*t182429*t182479*2.0-cx4*gamma_bb[index]*t182430* \
                   t182336*t182391*t182437*(1.28E2/3.0)-cx1*gx*t182532*t182336*t182383*t182429*(1.6E1/3.0)-cx3*gx*t182336* \
                   t182383*t182429*t182447*2.4E1+cx4*gamma_bb[index]*t182430*t182336*t182339*t182475*t182476*4.0+cx3* \
                   gx*t182341*t182470*t182336*t182429*t182469*3.0-cx2*t182340*t182336*t182517*t182554*t182429*t182479* \
                   2.0-cx4*t182430*t182514*t182339*t182348*t182475*t182556*2.0+cx3*gamma_bb[index]*gx*t182341*t182470* \
                   t182336*t182429*t182539+cx3*gamma_bb[index]*gx*t182470*t182336*t182383*t182509*t182429*8.0-cx3*gamma_bb[index]* \
                   gx*t182341*t182336*t182509*t182429*t182555*t182469*2.0)-c0*t182600*t182518*t182496*(4.0/3.0)+c0*t182496* \
                   t182596*t182598*(4.0/3.0)-c0*t182519*t182596*(omega*t182317*t182492*(t182520*t182459*(t182322*t182521* \
                   t182526*t182455*(3.74176054803257E14/4.22212465065984E14)+t182521*t182455*t182557*t182496*(3.74176054803257E14/ \
                   1.40737488355328E14)+1.0/pow(t182454,5.0/2.0)*t182481*t182526*t182455*t182496*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t182413*t182492*t182573*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t182317*t182492*(t182570*t182459+t182414*t182526*t182482*t182483*(4.951760157141521E27/ \
                   4.2002315996439E29)-t182322*t182482*t182483*t182557*(2.475880078570761E27/1.4000771998813E29)+t182526* \
                   t182491*t182458*t182459*(1.0/2.0)+t182481*t182526*t182459*t182489*(1.0/2.0)+(t182526*t182458*t182459* \
                   (1.0/3.0))/rho_b[index]-t182322*t182570*t182454*t182482*t182459*(2.475880078570761E27/1.4000771998813E29) \
                   +t182322*t182526*t182482*t182491*t182459*(2.475880078570761E27/1.4000771998813E29)-t182526*t182491* \
                   t182456*t182457*t182459*t182489*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t182413*t182526*t182494*t182495*(3.5184372088832E13/1.122528164409771E15)+omega*t182317*t182481* \
                   t182573*t182495*(3.5184372088832E13/3.74176054803257E14)+omega*t182317*t182526*t182495*t182577*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t182317*t182494*t182557*t182495*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t182521*t182317*t182481*t182526*t182494*(1.7592186044416E13/3.74176054803257E14)+t182520*t182526* \
                   t182580*t182456*t182457*t182459*t182489*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t182413*t182492*t182585*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t182500*t182413*t182526*t182495*(1.40737488355328E14/3.367584493229313E15)+omega*t182500*t182317*t182557* \
                   t182495*(1.40737488355328E14/1.122528164409771E15)+omega*t182317*t182526*t182591*t182495*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t182317*t182481*t182495*t182585*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t182500*t182521*t182317*t182481*t182526*(7.0368744177664E13/1.122528164409771E15))-c0*t182519* \
                   t182598*(cx1*gamma_bb[index]*gx*t182441*t182384*(8.0/3.0)-cx1*t182336*t182381*t182429*t182465*(8.0/ \
                   3.0)+cx2*t182452*t182336*t182381*t182429*(1.6E1/3.0)+cx4*t182430*t182391*t182437*t182348*(3.2E1/3.0) \
                   -cx2*t182340*t182336*t182480*t182429*t182479-cx4*t182430*t182339*t182348*t182475*t182476+cx3*gamma_bb[index]* \
                   gx*t182336*t182383*t182429*t182447*8.0-cx3*gamma_bb[index]*gx*t182341*t182470*t182336*t182429*t182469) \
                   +c0*t182518*t182519*(omega*t182500*t182413*t182492*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t182317*t182492*t182591*(2.81474976710656E14/1.122528164409771E15)+omega*t182500*t182317*t182481*t182495* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t181013 = 1.0/pow(rho_a[index],1.0/3.0);
                double t181014 = c*t181013;
                double t181015 = sqrt(t181014);
                double t181016 = pow(t181014,3.0/2.0);
                double t181017 = c*c;
                double t181018 = 1.0/pow(rho_a[index],2.0/3.0);
                double t181019 = 1.0/c0p;
                double t181020 = b1p*t181015;
                double t181021 = b3p*t181016;
                double t181022 = b4p*t181017*t181018;
                double t181023 = b2p*c*t181013;
                double t181024 = t181020+t181021+t181022+t181023;
                double t181025 = 1.0/t181024;
                double t181026 = t181025*t181019*(1.0/2.0);
                double t181027 = t181026+1.0;
                double t181028 = log(t181027);
                double t181029 = a1p*c*t181013;
                double t181030 = t181029+1.0;
                double t181031 = pow(2.0,1.0/3.0);
                double t181032 = t181031*2.0;
                double t181033 = t181032-2.0;
                double t181034 = two_13*2.0;
                double t181035 = t181034-2.0;
                double t181036 = 1.0/t181035;
                double t181037 = 1.0/c0f;
                double t181038 = 1.0/pow(rho_b[index],1.0/3.0);
                double t181039 = c*t181038;
                double t181040 = sqrt(t181039);
                double t181041 = pow(t181039,3.0/2.0);
                double t181042 = 1.0/pow(rho_b[index],2.0/3.0);
                double t181043 = b1p*t181040;
                double t181044 = b3p*t181041;
                double t181045 = b4p*t181042*t181017;
                double t181046 = b2p*c*t181038;
                double t181047 = t181043+t181044+t181045+t181046;
                double t181048 = 1.0/t181047;
                double t181049 = t181019*t181048*(1.0/2.0);
                double t181050 = t181049+1.0;
                double t181051 = log(t181050);
                double t181052 = a1p*c*t181038;
                double t181053 = t181052+1.0;
                double t181054 = c0p*t181051*t181053*2.0;
                double t181055 = rho_a[index]+rho_b[index];
                double t181056 = 1.0/pow(t181055,1.0/3.0);
                double t181057 = c*t181056;
                double t181058 = sqrt(t181057);
                double t181059 = pow(t181057,3.0/2.0);
                double t181060 = 1.0/pow(t181055,2.0/3.0);
                double t181061 = b1p*t181058;
                double t181062 = b3p*t181059;
                double t181063 = b4p*t181060*t181017;
                double t181064 = b2p*c*t181056;
                double t181065 = t181061+t181062+t181063+t181064;
                double t181066 = 1.0/t181065;
                double t181067 = t181019*t181066*(1.0/2.0);
                double t181068 = t181067+1.0;
                double t181069 = log(t181068);
                double t181070 = a1p*c*t181056;
                double t181071 = t181070+1.0;
                double t181072 = c0p*t181071*t181069*2.0;
                double t181073 = rho_a[index]-rho_b[index];
                double t181074 = t181073*t181073;
                double t181075 = 1.0/t181055;
                double t181076 = t181073*t181075;
                double t181077 = 1.0/(t181055*t181055*t181055*t181055);
                double t181078 = t181074*t181074;
                double t181079 = t181076+1.0;
                double t181080 = pow(t181079,4.0/3.0);
                double t181081 = -t181076+1.0;
                double t181082 = pow(t181081,4.0/3.0);
                double t181083 = t181080+t181082-2.0;
                double t181084 = gcab*gcab;
                double t181085 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t181086 = 1.0/pow(rho_a[index],8.0/3.0);
                double t181087 = gamma_aa[index]*t181086*(1.0/2.0);
                double t181088 = 1.0/pow(rho_b[index],8.0/3.0);
                double t181089 = gamma_bb[index]*t181088*(1.0/2.0);
                double t181090 = t181087+t181089;
                double t181091 = gcab*t181090;
                double t181092 = t181091+1.0;
                double t181093 = t181090*t181090;
                double t181094 = t181084*t181093;
                double t181095 = gcab*t181090*2.0;
                double t181096 = t181094+t181095+1.0;
                double t181097 = t181084*t181084;
                double t181114 = gcab*t181086*2.0;
                double t181115 = t181090*t181084*t181086*6.0;
                double t181116 = gcab*t181084*t181093*t181086*6.0;
                double t181117 = t181090*t181093*t181086*t181097*2.0;
                double t181098 = t181114+t181115+t181116+t181117;
                double t181099 = t181093*t181093;
                double t181119 = gcab*t181086*(3.0/2.0);
                double t181120 = t181090*t181084*t181086*3.0;
                double t181121 = gcab*t181084*t181093*t181086*(3.0/2.0);
                double t181100 = t181120+t181121+t181119;
                double t181101 = t181084*t181093*3.0;
                double t181102 = gcab*t181090*t181084*t181093;
                double t181103 = gcab*t181090*3.0;
                double t181104 = t181101+t181102+t181103+1.0;
                double t181111 = gcab*t181086;
                double t181112 = t181090*t181084*t181086;
                double t181105 = t181111+t181112;
                double t181106 = t181084*t181093*6.0;
                double t181107 = gcab*t181090*t181084*t181093*4.0;
                double t181108 = t181097*t181099;
                double t181109 = gcab*t181090*4.0;
                double t181110 = t181106+t181107+t181108+t181109+1.0;
                double t181113 = 1.0/(t181096*t181096);
                double t181118 = 1.0/(t181110*t181110);
                double t181122 = 1.0/(t181104*t181104);
                double t181123 = b1f*t181015;
                double t181124 = b3f*t181016;
                double t181125 = b4f*t181017*t181018;
                double t181126 = b2f*c*t181013;
                double t181127 = t181123+t181124+t181125+t181126;
                double t181128 = 1.0/t181127;
                double t181129 = t181037*t181128*(1.0/2.0);
                double t181130 = t181129+1.0;
                double t181131 = log(t181130);
                double t181132 = a1f*c*t181013;
                double t181133 = t181132+1.0;
                double t181134 = c0f*t181131*t181133*2.0;
                double t181135 = c0p*t181030*t181028*2.0;
                double t181136 = gcaa*gcaa;
                double t181137 = gamma_aa[index]*gamma_aa[index];
                double t181138 = t181136*t181136;
                double t181139 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t181140 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t181141 = gamma_aa[index]*gcaa*t181086;
                double t181142 = t181141+1.0;
                double t181143 = gamma_aa[index]*gcaa*t181086*2.0;
                double t181144 = t181136*t181137*t181085;
                double t181145 = t181143+t181144+1.0;
                double t181146 = gamma_aa[index]*gcaa*t181086*3.0;
                double t181147 = gamma_aa[index]*gcaa*t181140*t181136*t181137;
                double t181148 = t181136*t181137*t181085*3.0;
                double t181149 = t181146+t181147+t181148+1.0;
                double t181150 = t181137*t181137;
                double t181166 = gcaa*t181086*4.0;
                double t181167 = gamma_aa[index]*t181136*t181085*1.2E1;
                double t181168 = gcaa*t181140*t181136*t181137*1.2E1;
                double t181169 = gamma_aa[index]*t181137*t181138*t181139*4.0;
                double t181151 = t181166+t181167+t181168+t181169;
                double t181152 = gamma_aa[index]*gcaa*t181086*4.0;
                double t181153 = gamma_aa[index]*gcaa*t181140*t181136*t181137*4.0;
                double t181154 = t181136*t181137*t181085*6.0;
                double t181155 = t181150*t181138*t181139;
                double t181156 = t181152+t181153+t181154+t181155+1.0;
                double t181159 = gcaa*t181086*2.0;
                double t181160 = gamma_aa[index]*t181136*t181085*2.0;
                double t181157 = t181160+t181159;
                double t181158 = 1.0/(t181149*t181149);
                double t181161 = 1.0/(t181145*t181145);
                double t181162 = gcaa*t181086*3.0;
                double t181163 = gamma_aa[index]*t181136*t181085*6.0;
                double t181164 = gcaa*t181140*t181136*t181137*3.0;
                double t181165 = t181162+t181163+t181164;
                double t181170 = 1.0/(t181156*t181156);
                double t181171 = gx*gx;
                double t181172 = t181171*t181171;
                double t181173 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t181174 = gamma_aa[index]*gx*t181086*4.0;
                double t181175 = gamma_aa[index]*gx*t181140*t181171*t181137*4.0;
                double t181176 = t181171*t181137*t181085*6.0;
                double t181177 = t181150*t181172*t181139;
                double t181178 = t181174+t181175+t181176+t181177+1.0;
                double t181179 = 1.0/t181178;
                double t181180 = cx4*t181150*t181172*t181139*t181179*(4.190715359480463E15/2.251799813685248E15);
                double t181181 = gamma_aa[index]*gx*t181086;
                double t181182 = t181181+1.0;
                double t181183 = 1.0/t181182;
                double t181184 = cx1*gamma_aa[index]*gx*t181183*t181086*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181185 = gamma_aa[index]*gx*t181086*3.0;
                double t181186 = gamma_aa[index]*gx*t181140*t181171*t181137;
                double t181187 = t181171*t181137*t181085*3.0;
                double t181188 = t181185+t181186+t181187+1.0;
                double t181189 = 1.0/t181188;
                double t181190 = cx3*gamma_aa[index]*gx*t181140*t181171*t181137*t181189*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181191 = gamma_aa[index]*gx*t181086*2.0;
                double t181192 = t181171*t181137*t181085;
                double t181193 = t181191+t181192+1.0;
                double t181194 = 1.0/t181193;
                double t181195 = cx2*t181171*t181137*t181085*t181194*(4.190715359480463E15/2.251799813685248E15);
                double t181196 = t181180+t181190+t181173+t181184+t181195;
                double t181197 = 1.0/t181196;
                double t181198 = 1.0/(omega*omega);
                double t181199 = pow(rho_a[index],2.0/3.0);
                double t181222 = t181197*t181198*t181199*(1.4000771998813E29/4.951760157141521E27);
                double t181200 = exp(-t181222);
                double t181201 = cx1*gx*t181183*t181086*(4.190715359480463E15/2.251799813685248E15);
                double t181202 = cx4*gamma_aa[index]*t181172*t181137*t181139*t181179*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t181203 = cx2*gamma_aa[index]*t181171*t181085*t181194*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181204 = cx3*gx*t181140*t181171*t181137*t181189*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t181205 = 1.0/(t181182*t181182);
                double t181206 = gx*t181086*3.0;
                double t181207 = gamma_aa[index]*t181171*t181085*6.0;
                double t181208 = gx*t181140*t181171*t181137*3.0;
                double t181209 = t181206+t181207+t181208;
                double t181210 = 1.0/(t181188*t181188);
                double t181211 = gx*t181086*4.0;
                double t181212 = gamma_aa[index]*t181171*t181085*1.2E1;
                double t181213 = gx*t181140*t181171*t181137*1.2E1;
                double t181214 = gamma_aa[index]*t181172*t181137*t181139*4.0;
                double t181215 = t181211+t181212+t181213+t181214;
                double t181216 = 1.0/(t181178*t181178);
                double t181217 = gx*t181086*2.0;
                double t181218 = gamma_aa[index]*t181171*t181085*2.0;
                double t181219 = t181217+t181218;
                double t181220 = 1.0/(t181193*t181193);
                double t181223 = cx1*gamma_aa[index]*t181205*t181171*t181085*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181224 = cx3*gamma_aa[index]*gx*t181210*t181140*t181171*t181137*t181209*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t181225 = cx4*t181150*t181215*t181216*t181172*t181139*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181226 = cx2*t181220*t181171*t181137*t181219*t181085*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181221 = t181201+t181202+t181203+t181204-t181223-t181224-t181225-t181226;
                double t181227 = omega*omega;
                double t181228 = t181200-1.0;
                double t181229 = sqrt(t181196);
                double t181230 = 1.0/omega;
                double t181231 = pow(rho_a[index],1.0/3.0);
                double t181232 = 1.0/sqrt(t181196);
                double t181233 = t181018*t181227*t181228*t181196*(2.475880078570761E27/1.4000771998813E29);
                double t181234 = -t181200+t181233+3.0/2.0;
                double t181235 = pow(rho_a[index],4.0/3.0);
                double t181236 = t181230*t181231*t181232*(3.74176054803257E14/7.0368744177664E13);
                double t181237 = erf(t181236);
                double t181238 = t181237*(3.991211251234741E15/2.251799813685248E15);
                double t181281 = omega*t181013*t181234*t181229*(7.0368744177664E13/3.74176054803257E14);
                double t181239 = -t181281+t181238;
                double t181240 = 1.0/(t181182*t181182*t181182);
                double t181241 = t181171*t181085*6.0;
                double t181242 = gamma_aa[index]*gx*t181140*t181171*6.0;
                double t181243 = t181241+t181242;
                double t181244 = t181215*t181215;
                double t181245 = 1.0/(t181178*t181178*t181178);
                double t181246 = t181219*t181219;
                double t181247 = 1.0/(t181193*t181193*t181193);
                double t181248 = t181171*t181085*1.2E1;
                double t181249 = gamma_aa[index]*gx*t181140*t181171*2.4E1;
                double t181250 = t181172*t181137*t181139*1.2E1;
                double t181251 = t181250+t181248+t181249;
                double t181252 = t181209*t181209;
                double t181253 = 1.0/(t181188*t181188*t181188);
                double t181254 = cx1*t181205*t181171*t181085*(4.190715359480463E15/1.125899906842624E15);
                double t181255 = cx2*t181220*t181172*t181137*t181139*(4.190715359480463E15/1.125899906842624E15);
                double t181256 = cx3*gamma_aa[index]*gx*t181210*t181140*t181171*t181243*t181137*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t181257 = cx3*gx*t181210*t181140*t181171*t181137*t181209*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t181258 = cx4*t181150*t181251*t181216*t181172*t181139*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181259 = cx2*gamma_aa[index]*t181220*t181171*t181219*t181085*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t181260 = cx4*gamma_aa[index]*t181215*t181216*t181172*t181137*t181139*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t181264 = cx2*t181171*t181085*t181194*(4.190715359480463E15/1.125899906842624E15);
                double t181265 = cx3*gamma_aa[index]*gx*t181140*t181171*t181189*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t181266 = cx4*t181172*t181137*t181139*t181179*(1.257214607844139E16/5.62949953421312E14);
                double t181267 = cx1*gamma_aa[index]*gx*t181140*t181240*t181171*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181268 = cx4*t181150*t181172*t181244*t181245*t181139*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181269 = cx2*t181171*t181137*t181246*t181085*t181247*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181270 = cx3*gamma_aa[index]*gx*t181140*t181171*t181252*t181253*t181137*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t181261 = t181260-t181270+t181254+t181255-t181264+t181256-t181265+t181257-t181266+t181258- \
                   t181267+t181259-t181268-t181269;
                double t181262 = t181221*t181221;
                double t181263 = 1.0/(t181196*t181196);
                double t181271 = t181200*t181221*t181197*(1.0/2.0);
                double t181272 = t181221*t181018*t181227*t181228*(2.475880078570761E27/1.4000771998813E29);
                double t181276 = t181200*t181221*t181263*t181198*t181199*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t181273 = t181271+t181272-t181276;
                double t181274 = 1.0/pow(t181196,3.0/2.0);
                double t181275 = 1.0/sqrt(3.141592653589793);
                double t181277 = omega*t181013*t181273*t181229*(7.0368744177664E13/3.74176054803257E14);
                double t181278 = omega*t181013*t181221*t181232*t181234*(3.5184372088832E13/3.74176054803257E14);
                double t181279 = t181200*t181221*t181230*t181231*t181274*t181275*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t181280 = t181277+t181278+t181279;
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t181135+t181033*t181036*(t181134-c0p*t181030*t181028* \
                   2.0))+rho_b[index]*(t181054-t181033*t181036*(t181054-c0f*log((t181037*(1.0/2.0))/(b1f*t181040+b3f* \
                   t181041+b2f*c*t181038+b4f*t181042*t181017)+1.0)*(a1f*c*t181038+1.0)*2.0))-t181055*(t181072-t181036* \
                   t181083*t181077*t181078*(t181072-c0f*log((t181037*(1.0/2.0))/(b1f*t181058+b3f*t181059+b2f*c*t181056+ \
                   b4f*t181060*t181017)+1.0)*(a1f*c*t181056+1.0)*2.0)+(Aa*t181036*t181083*log((1.0/2.0)/(Aa*(b1a*t181058+ \
                   b3a*t181059+b2a*c*t181056+b4a*t181060*t181017))+1.0)*(t181077*t181078-1.0)*(a1a*c*t181056+1.0)*2.0) \
                   /d2fz0))*(ccab1*1.0/(t181092*t181092)*t181084*t181085*(1.0/2.0)-(ccab2*t181084*t181085*(1.0/2.0))/ \
                   t181096-ccab2*(t181105*t181105)*t181084*t181093*1.0/(t181096*t181096*t181096)*2.0-ccab4*1.0/(t181110* \
                   t181110*t181110)*t181097*(t181098*t181098)*t181099*2.0+ccab2*t181113*t181093*t181085*t181097*(1.0/ \
                   2.0)+ccab4*t181118*t181097*t181099*(t181084*t181085*3.0+t181093*t181085*t181097*3.0+gcab*t181090*t181084* \
                   t181085*6.0)-(ccab4*t181093*t181085*t181097*3.0)/t181110+ccab2*t181113*t181105*t181090*t181084*t181086* \
                   2.0-(ccab3*gcab*t181090*t181084*t181085*(3.0/2.0))/t181104-ccab1*gcab*t181090*1.0/(t181092*t181092* \
                   t181092)*t181084*t181085*(1.0/2.0)-ccab3*gcab*(t181100*t181100)*1.0/(t181104*t181104*t181104)*t181090* \
                   t181084*t181093*2.0+ccab3*gcab*t181100*t181122*t181084*t181093*t181086*3.0+ccab4*t181090*t181118*t181093* \
                   t181086*t181097*t181098*4.0+ccab3*gcab*t181122*t181090*t181084*t181093*(t181084*t181085*(3.0/2.0)+ \
                   gcab*t181090*t181084*t181085*(3.0/2.0)))+rho_a[index]*(t181135+t181033*t181036*(t181134-t181135))* \
                   (ccaa1*1.0/(t181142*t181142)*t181136*t181085*2.0-(ccaa2*t181136*t181085*2.0)/t181145+ccaa2*t181161* \
                   t181137*t181138*t181139*2.0-(ccaa4*t181137*t181138*t181139*1.2E1)/t181156+ccaa4*t181150*t181170*t181138* \
                   t181139*(t181136*t181085*1.2E1+t181137*t181138*t181139*1.2E1+gamma_aa[index]*gcaa*t181140*t181136* \
                   2.4E1)-ccaa1*gamma_aa[index]*gcaa*t181140*1.0/(t181142*t181142*t181142)*t181136*2.0-(ccaa3*gamma_aa[index]* \
                   gcaa*t181140*t181136*6.0)/t181149-ccaa4*t181150*(t181151*t181151)*t181138*1.0/(t181156*t181156*t181156) \
                   *t181139*2.0-ccaa2*t181136*1.0/(t181145*t181145*t181145)*t181137*t181085*(t181157*t181157)*2.0+ccaa2* \
                   gamma_aa[index]*t181161*t181136*t181085*t181157*4.0+ccaa4*gamma_aa[index]*t181151*t181170*t181137* \
                   t181138*t181139*8.0+ccaa3*gcaa*t181140*t181136*t181137*t181165*t181158*6.0+ccaa3*gamma_aa[index]*gcaa* \
                   t181140*t181136*t181137*t181158*(t181136*t181085*6.0+gamma_aa[index]*gcaa*t181140*t181136*6.0)-ccaa3* \
                   gamma_aa[index]*gcaa*t181140*t181136*t181137*(t181165*t181165)*1.0/(t181149*t181149*t181149)*2.0)+ \
                   c0*t181235*(omega*t181013*t181229*(omega*t181013*t181229*(t181200*t181261*t181197*(1.0/2.0)+t181018* \
                   t181261*t181227*t181228*(2.475880078570761E27/1.4000771998813E29)-t181200*t181262*1.0/(t181196*t181196* \
                   t181196)*t181198*t181199*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega*omega*omega) \
                   *t181200*t181235*t181262*1.0/(t181196*t181196*t181196*t181196)*(1.960216165627461E58/2.451992865385422E55) \
                   -t181200*t181261*t181263*t181198*t181199*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)-omega*t181013*t181221*t181232*t181273*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t181013*t181232*t181234*t181261*(3.5184372088832E13/3.74176054803257E14)+omega*t181013*t181234* \
                   t181262*t181274*(1.7592186044416E13/3.74176054803257E14)+t181200*t181230*t181231*t181261*t181274*t181275* \
                   (1.493415679873386E30/1.584563250285287E29)+t181200*t181230*t181231*t181262*t181275*1.0/pow(t181196,5.0/ \
                   2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega)*rho_a[index]*t181200*t181262* \
                   t181275*1.0/pow(t181196,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56))*(-2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t181013*t181221*t181232*t181280*(2.81474976710656E14/1.122528164409771E15) \
                   +omega*t181013*t181232*t181261*t181239*(1.40737488355328E14/1.122528164409771E15)+omega*t181013*t181262* \
                   t181274*t181239*(7.0368744177664E13/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]*gx*t181183*t181086+ \
                   cx2*t181171*t181137*t181085*t181194+cx4*t181150*t181172*t181139*t181179+cx3*gamma_aa[index]*gx*t181140* \
                   t181171*t181137*t181189)+c0*t181235*(omega*t181013*t181280*t181229*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t181013*t181221*t181232*t181239*(1.40737488355328E14/1.122528164409771E15))*(cx1*gx*t181183* \
                   t181086-cx1*gamma_aa[index]*t181205*t181171*t181085+cx2*gamma_aa[index]*t181171*t181085*t181194*2.0- \
                   cx2*t181220*t181171*t181137*t181219*t181085-cx4*t181150*t181215*t181216*t181172*t181139+cx4*gamma_aa[index]* \
                   t181172*t181137*t181139*t181179*4.0+cx3*gx*t181140*t181171*t181137*t181189*3.0-cx3*gamma_aa[index]* \
                   gx*t181210*t181140*t181171*t181137*t181209)*2.0+c0*t181235*(omega*t181013*t181229*t181239*(2.81474976710656E14/ \
                   1.122528164409771E15)-1.0)*(cx1*t181205*t181171*t181085*2.0-cx2*t181171*t181085*t181194*2.0+cx2*t181220* \
                   t181172*t181137*t181139*2.0-cx4*t181172*t181137*t181139*t181179*1.2E1-cx2*t181171*t181137*t181246* \
                   t181085*t181247*2.0+cx4*t181150*t181251*t181216*t181172*t181139-cx4*t181150*t181172*t181244*t181245* \
                   t181139*2.0-cx1*gamma_aa[index]*gx*t181140*t181240*t181171*2.0-cx3*gamma_aa[index]*gx*t181140*t181171* \
                   t181189*6.0+cx2*gamma_aa[index]*t181220*t181171*t181219*t181085*4.0+cx4*gamma_aa[index]*t181215*t181216* \
                   t181172*t181137*t181139*8.0+cx3*gx*t181210*t181140*t181171*t181137*t181209*6.0+cx3*gamma_aa[index]* \
                   gx*t181210*t181140*t181171*t181243*t181137-cx3*gamma_aa[index]*gx*t181140*t181171*t181252*t181253* \
                   t181137*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t183697 = 1.0/pow(rho_a[index],1.0/3.0);
                double t183698 = c*t183697;
                double t183699 = sqrt(t183698);
                double t183700 = pow(t183698,3.0/2.0);
                double t183701 = c*c;
                double t183702 = 1.0/pow(rho_a[index],2.0/3.0);
                double t183703 = 1.0/c0p;
                double t183704 = b1p*t183699;
                double t183705 = b3p*t183700;
                double t183706 = b4p*t183701*t183702;
                double t183707 = b2p*c*t183697;
                double t183708 = t183704+t183705+t183706+t183707;
                double t183709 = 1.0/t183708;
                double t183710 = t183703*t183709*(1.0/2.0);
                double t183711 = t183710+1.0;
                double t183712 = log(t183711);
                double t183713 = a1p*c*t183697;
                double t183714 = t183713+1.0;
                double t183715 = gcaa*gcaa;
                double t183716 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t183717 = 1.0/pow(rho_a[index],8.0/3.0);
                double t183718 = gamma_aa[index]*gamma_aa[index];
                double t183719 = t183715*t183715;
                double t183720 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t183721 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t183722 = gamma_aa[index]*gcaa*t183717;
                double t183723 = t183722+1.0;
                double t183724 = gamma_aa[index]*gcaa*t183717*2.0;
                double t183725 = t183715*t183716*t183718;
                double t183726 = t183724+t183725+1.0;
                double t183727 = gamma_aa[index]*gcaa*t183717*3.0;
                double t183728 = gamma_aa[index]*gcaa*t183721*t183715*t183718;
                double t183729 = t183715*t183716*t183718*3.0;
                double t183730 = t183727+t183728+t183729+1.0;
                double t183731 = t183718*t183718;
                double t183747 = gcaa*t183717*4.0;
                double t183748 = gamma_aa[index]*t183715*t183716*1.2E1;
                double t183749 = gcaa*t183721*t183715*t183718*1.2E1;
                double t183750 = gamma_aa[index]*t183720*t183718*t183719*4.0;
                double t183732 = t183750+t183747+t183748+t183749;
                double t183733 = gamma_aa[index]*gcaa*t183717*4.0;
                double t183734 = gamma_aa[index]*gcaa*t183721*t183715*t183718*4.0;
                double t183735 = t183715*t183716*t183718*6.0;
                double t183736 = t183720*t183731*t183719;
                double t183737 = t183733+t183734+t183735+t183736+1.0;
                double t183740 = gcaa*t183717*2.0;
                double t183741 = gamma_aa[index]*t183715*t183716*2.0;
                double t183738 = t183740+t183741;
                double t183739 = 1.0/(t183730*t183730);
                double t183742 = 1.0/(t183726*t183726);
                double t183743 = gcaa*t183717*3.0;
                double t183744 = gamma_aa[index]*t183715*t183716*6.0;
                double t183745 = gcaa*t183721*t183715*t183718*3.0;
                double t183746 = t183743+t183744+t183745;
                double t183751 = 1.0/(t183737*t183737);
                double t183752 = gx*gx;
                double t183753 = t183752*t183752;
                double t183754 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t183755 = gamma_aa[index]*gx*t183717*4.0;
                double t183756 = gamma_aa[index]*gx*t183721*t183752*t183718*4.0;
                double t183757 = t183716*t183752*t183718*6.0;
                double t183758 = t183720*t183731*t183753;
                double t183759 = t183755+t183756+t183757+t183758+1.0;
                double t183760 = 1.0/t183759;
                double t183761 = cx4*t183720*t183731*t183760*t183753*(4.190715359480463E15/2.251799813685248E15);
                double t183762 = gamma_aa[index]*gx*t183717;
                double t183763 = t183762+1.0;
                double t183764 = 1.0/t183763;
                double t183765 = cx1*gamma_aa[index]*gx*t183717*t183764*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183766 = gamma_aa[index]*gx*t183717*3.0;
                double t183767 = gamma_aa[index]*gx*t183721*t183752*t183718;
                double t183768 = t183716*t183752*t183718*3.0;
                double t183769 = t183766+t183767+t183768+1.0;
                double t183770 = 1.0/t183769;
                double t183771 = cx3*gamma_aa[index]*gx*t183721*t183752*t183770*t183718*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183772 = gamma_aa[index]*gx*t183717*2.0;
                double t183773 = t183716*t183752*t183718;
                double t183774 = t183772+t183773+1.0;
                double t183775 = 1.0/t183774;
                double t183776 = cx2*t183716*t183752*t183718*t183775*(4.190715359480463E15/2.251799813685248E15);
                double t183777 = t183761+t183771+t183754+t183765+t183776;
                double t183778 = 1.0/t183777;
                double t183779 = 1.0/(omega*omega);
                double t183780 = pow(rho_a[index],2.0/3.0);
                double t183803 = t183780*t183778*t183779*(1.4000771998813E29/4.951760157141521E27);
                double t183781 = exp(-t183803);
                double t183782 = cx1*gx*t183717*t183764*(4.190715359480463E15/2.251799813685248E15);
                double t183783 = cx4*gamma_aa[index]*t183720*t183760*t183753*t183718*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t183784 = cx2*gamma_aa[index]*t183716*t183752*t183775*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183785 = cx3*gx*t183721*t183752*t183770*t183718*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t183786 = 1.0/(t183763*t183763);
                double t183787 = gx*t183717*3.0;
                double t183788 = gamma_aa[index]*t183716*t183752*6.0;
                double t183789 = gx*t183721*t183752*t183718*3.0;
                double t183790 = t183787+t183788+t183789;
                double t183791 = 1.0/(t183769*t183769);
                double t183792 = gx*t183717*4.0;
                double t183793 = gamma_aa[index]*t183716*t183752*1.2E1;
                double t183794 = gx*t183721*t183752*t183718*1.2E1;
                double t183795 = gamma_aa[index]*t183720*t183753*t183718*4.0;
                double t183796 = t183792+t183793+t183794+t183795;
                double t183797 = 1.0/(t183759*t183759);
                double t183798 = gx*t183717*2.0;
                double t183799 = gamma_aa[index]*t183716*t183752*2.0;
                double t183800 = t183798+t183799;
                double t183801 = 1.0/(t183774*t183774);
                double t183804 = cx1*gamma_aa[index]*t183716*t183752*t183786*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183805 = cx3*gamma_aa[index]*gx*t183721*t183752*t183718*t183790*t183791*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183806 = cx4*t183720*t183731*t183753*t183796*t183797*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183807 = cx2*t183800*t183801*t183716*t183752*t183718*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183802 = -t183804-t183805-t183806-t183807+t183782+t183783+t183784+t183785;
                double t183808 = omega*omega;
                double t183809 = t183781-1.0;
                double t183810 = sqrt(t183777);
                double t183811 = 1.0/omega;
                double t183812 = pow(rho_a[index],1.0/3.0);
                double t183813 = 1.0/sqrt(t183777);
                double t183814 = t183702*t183808*t183809*t183777*(2.475880078570761E27/1.4000771998813E29);
                double t183815 = t183814-t183781+3.0/2.0;
                double t183816 = pow(rho_a[index],4.0/3.0);
                double t183817 = t183811*t183812*t183813*(3.74176054803257E14/7.0368744177664E13);
                double t183818 = erf(t183817);
                double t183819 = t183818*(3.991211251234741E15/2.251799813685248E15);
                double t183862 = omega*t183810*t183815*t183697*(7.0368744177664E13/3.74176054803257E14);
                double t183820 = -t183862+t183819;
                double t183821 = 1.0/(t183763*t183763*t183763);
                double t183822 = t183716*t183752*6.0;
                double t183823 = gamma_aa[index]*gx*t183721*t183752*6.0;
                double t183824 = t183822+t183823;
                double t183825 = t183796*t183796;
                double t183826 = 1.0/(t183759*t183759*t183759);
                double t183827 = t183800*t183800;
                double t183828 = 1.0/(t183774*t183774*t183774);
                double t183829 = t183716*t183752*1.2E1;
                double t183830 = gamma_aa[index]*gx*t183721*t183752*2.4E1;
                double t183831 = t183720*t183753*t183718*1.2E1;
                double t183832 = t183830+t183831+t183829;
                double t183833 = t183790*t183790;
                double t183834 = 1.0/(t183769*t183769*t183769);
                double t183835 = cx1*t183716*t183752*t183786*(4.190715359480463E15/1.125899906842624E15);
                double t183836 = cx2*t183720*t183801*t183753*t183718*(4.190715359480463E15/1.125899906842624E15);
                double t183837 = cx3*gamma_aa[index]*gx*t183721*t183752*t183824*t183718*t183791*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t183838 = cx3*gx*t183721*t183752*t183718*t183790*t183791*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t183839 = cx4*t183720*t183731*t183832*t183753*t183797*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t183840 = cx2*gamma_aa[index]*t183800*t183801*t183716*t183752*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t183841 = cx4*gamma_aa[index]*t183720*t183753*t183718*t183796*t183797*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t183845 = cx2*t183716*t183752*t183775*(4.190715359480463E15/1.125899906842624E15);
                double t183846 = cx3*gamma_aa[index]*gx*t183721*t183752*t183770*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t183847 = cx4*t183720*t183760*t183753*t183718*(1.257214607844139E16/5.62949953421312E14);
                double t183848 = cx1*gamma_aa[index]*gx*t183721*t183821*t183752*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183849 = cx4*t183720*t183731*t183753*t183825*t183826*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183850 = cx2*t183716*t183752*t183718*t183827*t183828*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t183851 = cx3*gamma_aa[index]*gx*t183721*t183752*t183833*t183834*t183718*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t183842 = t183840+t183841-t183850-t183851+t183835+t183836-t183845+t183837-t183846+t183838- \
                   t183847+t183839-t183848-t183849;
                double t183843 = t183802*t183802;
                double t183844 = 1.0/(t183777*t183777);
                double t183852 = t183802*t183781*t183778*(1.0/2.0);
                double t183853 = t183702*t183802*t183808*t183809*(2.475880078570761E27/1.4000771998813E29);
                double t183857 = t183802*t183780*t183781*t183844*t183779*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t183854 = t183852+t183853-t183857;
                double t183855 = 1.0/pow(t183777,3.0/2.0);
                double t183856 = 1.0/sqrt(3.141592653589793);
                double t183858 = omega*t183810*t183854*t183697*(7.0368744177664E13/3.74176054803257E14);
                double t183859 = omega*t183802*t183813*t183815*t183697*(3.5184372088832E13/3.74176054803257E14);
                double t183860 = t183802*t183811*t183812*t183781*t183855*t183856*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t183861 = t183860+t183858+t183859;
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t183699+b3f*t183700+b2f*c*t183697+b4f*t183701*t183702))+1.0)*(a1f*c*t183697+1.0)*2.0-c0p*t183712*t183714* \
                   2.0))/(two_13*2.0-2.0)+c0p*t183712*t183714*2.0)*(ccaa1*1.0/(t183723*t183723)*t183715*t183716*2.0-(ccaa2* \
                   t183715*t183716*2.0)/t183726+ccaa2*t183720*t183742*t183718*t183719*2.0-(ccaa4*t183720*t183718*t183719* \
                   1.2E1)/t183737+ccaa4*t183720*t183731*t183751*t183719*(t183715*t183716*1.2E1+t183720*t183718*t183719* \
                   1.2E1+gamma_aa[index]*gcaa*t183721*t183715*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t183721*t183715*6.0) \
                   /t183730-ccaa1*gamma_aa[index]*gcaa*t183721*1.0/(t183723*t183723*t183723)*t183715*2.0-ccaa4*t183720* \
                   t183731*(t183732*t183732)*t183719*1.0/(t183737*t183737*t183737)*2.0-ccaa2*t183715*t183716*1.0/(t183726* \
                   t183726*t183726)*t183718*(t183738*t183738)*2.0+ccaa2*gamma_aa[index]*t183715*t183742*t183716*t183738* \
                   4.0+ccaa4*gamma_aa[index]*t183720*t183732*t183751*t183718*t183719*8.0+ccaa3*gcaa*t183721*t183715*t183718* \
                   t183746*t183739*6.0+ccaa3*gamma_aa[index]*gcaa*t183721*t183715*t183718*t183739*(t183715*t183716*6.0+ \
                   gamma_aa[index]*gcaa*t183721*t183715*6.0)-ccaa3*gamma_aa[index]*gcaa*t183721*1.0/(t183730*t183730* \
                   t183730)*t183715*t183718*(t183746*t183746)*2.0)+c0*t183816*(omega*t183810*t183697*(omega*t183810*t183697* \
                   (t183842*t183781*t183778*(1.0/2.0)+t183702*t183842*t183808*t183809*(2.475880078570761E27/1.4000771998813E29) \
                   -t183780*t183843*t183781*1.0/(t183777*t183777*t183777)*t183779*(7.000385999406499E29/9.903520314283042E27) \
                   +1.0/(omega*omega*omega*omega)*t183816*t183843*t183781*1.0/(t183777*t183777*t183777*t183777)*(1.960216165627461E58/ \
                   2.451992865385422E55)-t183842*t183780*t183781*t183844*t183779*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)-omega*t183802*t183813*t183854*t183697*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t183813*t183815*t183842*t183697*(3.5184372088832E13/3.74176054803257E14) \
                   +omega*t183815*t183843*t183855*t183697*(1.7592186044416E13/3.74176054803257E14)+t183811*t183812*t183842* \
                   t183781*t183855*t183856*(1.493415679873386E30/1.584563250285287E29)+t183811*t183812*t183843*t183781* \
                   t183856*1.0/pow(t183777,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega) \
                   *rho_a[index]*t183843*t183781*t183856*1.0/pow(t183777,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56) \
                   )*(-2.81474976710656E14/1.122528164409771E15)+omega*t183820*t183813*t183842*t183697*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t183802*t183813*t183861*t183697*(2.81474976710656E14/1.122528164409771E15) \
                   +omega*t183820*t183843*t183855*t183697*(7.0368744177664E13/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]* \
                   gx*t183717*t183764+cx2*t183716*t183752*t183718*t183775+cx4*t183720*t183731*t183760*t183753+cx3*gamma_aa[index]* \
                   gx*t183721*t183752*t183770*t183718)+c0*t183816*(omega*t183810*t183861*t183697*(2.81474976710656E14/ \
                   1.122528164409771E15)-omega*t183802*t183820*t183813*t183697*(1.40737488355328E14/1.122528164409771E15) \
                   )*(cx1*gx*t183717*t183764-cx1*gamma_aa[index]*t183716*t183752*t183786+cx2*gamma_aa[index]*t183716* \
                   t183752*t183775*2.0-cx2*t183800*t183801*t183716*t183752*t183718-cx4*t183720*t183731*t183753*t183796* \
                   t183797+cx4*gamma_aa[index]*t183720*t183760*t183753*t183718*4.0+cx3*gx*t183721*t183752*t183770*t183718* \
                   3.0-cx3*gamma_aa[index]*gx*t183721*t183752*t183718*t183790*t183791)*2.0+c0*t183816*(omega*t183810* \
                   t183820*t183697*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t183716*t183752*t183786*2.0-cx2* \
                   t183716*t183752*t183775*2.0+cx2*t183720*t183801*t183753*t183718*2.0-cx4*t183720*t183760*t183753*t183718* \
                   1.2E1-cx2*t183716*t183752*t183718*t183827*t183828*2.0-cx4*t183720*t183731*t183753*t183825*t183826* \
                   2.0+cx4*t183720*t183731*t183832*t183753*t183797-cx1*gamma_aa[index]*gx*t183721*t183821*t183752*2.0- \
                   cx3*gamma_aa[index]*gx*t183721*t183752*t183770*6.0+cx2*gamma_aa[index]*t183800*t183801*t183716*t183752* \
                   4.0+cx4*gamma_aa[index]*t183720*t183753*t183718*t183796*t183797*8.0+cx3*gx*t183721*t183752*t183718* \
                   t183790*t183791*6.0-cx3*gamma_aa[index]*gx*t183721*t183752*t183833*t183834*t183718*2.0+cx3*gamma_aa[index]* \
                   gx*t183721*t183752*t183824*t183718*t183791);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t181284 = 1.0/pow(rho_a[index],1.0/3.0);
                double t181285 = c*t181284;
                double t181286 = sqrt(t181285);
                double t181287 = pow(t181285,3.0/2.0);
                double t181288 = c*c;
                double t181289 = 1.0/pow(rho_a[index],2.0/3.0);
                double t181290 = 1.0/c0p;
                double t181291 = b1p*t181286;
                double t181292 = b3p*t181287;
                double t181293 = b4p*t181288*t181289;
                double t181294 = b2p*c*t181284;
                double t181295 = t181291+t181292+t181293+t181294;
                double t181296 = 1.0/t181295;
                double t181297 = t181290*t181296*(1.0/2.0);
                double t181298 = t181297+1.0;
                double t181299 = log(t181298);
                double t181300 = a1p*c*t181284;
                double t181301 = t181300+1.0;
                double t181302 = pow(2.0,1.0/3.0);
                double t181303 = t181302*2.0;
                double t181304 = t181303-2.0;
                double t181305 = two_13*2.0;
                double t181306 = t181305-2.0;
                double t181307 = 1.0/t181306;
                double t181308 = 1.0/c0f;
                double t181309 = 1.0/pow(rho_b[index],1.0/3.0);
                double t181310 = c*t181309;
                double t181311 = sqrt(t181310);
                double t181312 = pow(t181310,3.0/2.0);
                double t181313 = 1.0/pow(rho_b[index],2.0/3.0);
                double t181314 = b1p*t181311;
                double t181315 = b3p*t181312;
                double t181316 = b4p*t181313*t181288;
                double t181317 = b2p*c*t181309;
                double t181318 = t181314+t181315+t181316+t181317;
                double t181319 = 1.0/t181318;
                double t181320 = t181290*t181319*(1.0/2.0);
                double t181321 = t181320+1.0;
                double t181322 = log(t181321);
                double t181323 = a1p*c*t181309;
                double t181324 = t181323+1.0;
                double t181325 = c0p*t181322*t181324*2.0;
                double t181326 = rho_a[index]+rho_b[index];
                double t181327 = 1.0/pow(t181326,1.0/3.0);
                double t181328 = c*t181327;
                double t181329 = sqrt(t181328);
                double t181330 = pow(t181328,3.0/2.0);
                double t181331 = 1.0/pow(t181326,2.0/3.0);
                double t181332 = b1p*t181329;
                double t181333 = b3p*t181330;
                double t181334 = b4p*t181331*t181288;
                double t181335 = b2p*c*t181327;
                double t181336 = t181332+t181333+t181334+t181335;
                double t181337 = 1.0/t181336;
                double t181338 = t181290*t181337*(1.0/2.0);
                double t181339 = t181338+1.0;
                double t181340 = log(t181339);
                double t181341 = a1p*c*t181327;
                double t181342 = t181341+1.0;
                double t181343 = c0p*t181340*t181342*2.0;
                double t181344 = rho_a[index]-rho_b[index];
                double t181345 = t181344*t181344;
                double t181346 = 1.0/t181326;
                double t181347 = t181344*t181346;
                double t181348 = 1.0/(t181326*t181326*t181326*t181326);
                double t181349 = t181345*t181345;
                double t181350 = t181347+1.0;
                double t181351 = pow(t181350,4.0/3.0);
                double t181352 = -t181347+1.0;
                double t181353 = pow(t181352,4.0/3.0);
                double t181354 = t181351+t181353-2.0;
                double t181355 = gcab*gcab;
                double t181358 = 1.0/pow(rho_a[index],8.0/3.0);
                double t181359 = 1.0/pow(rho_b[index],8.0/3.0);
                double t181360 = gamma_aa[index]*t181358*(1.0/2.0);
                double t181361 = gamma_bb[index]*t181359*(1.0/2.0);
                double t181356 = t181360+t181361;
                double t181357 = t181356*t181356;
                double t181362 = t181355*t181355;
                double t181363 = t181357*t181357;
                double t181364 = t181355*t181357*3.0;
                double t181365 = gcab*t181355*t181356*t181357;
                double t181366 = gcab*t181356*3.0;
                double t181367 = t181364+t181365+t181366+1.0;
                double t181368 = t181355*t181357;
                double t181369 = gcab*t181356*2.0;
                double t181370 = t181368+t181369+1.0;
                double t181371 = t181355*t181357*6.0;
                double t181372 = gcab*t181355*t181356*t181357*4.0;
                double t181373 = t181362*t181363;
                double t181374 = gcab*t181356*4.0;
                double t181375 = t181371+t181372+t181373+t181374+1.0;
                double t181376 = 1.0/(t181370*t181370);
                double t181377 = gcab*t181358;
                double t181378 = t181355*t181356*t181358;
                double t181379 = t181377+t181378;
                double t181380 = gcab*t181359;
                double t181381 = t181355*t181356*t181359;
                double t181382 = t181380+t181381;
                double t181383 = gcab*t181356;
                double t181384 = t181383+1.0;
                double t181385 = gcab*t181358*2.0;
                double t181386 = t181355*t181356*t181358*6.0;
                double t181387 = gcab*t181355*t181357*t181358*6.0;
                double t181388 = t181362*t181356*t181357*t181358*2.0;
                double t181389 = t181385+t181386+t181387+t181388;
                double t181390 = 1.0/(t181375*t181375);
                double t181391 = gcab*t181359*2.0;
                double t181392 = t181355*t181356*t181359*6.0;
                double t181393 = gcab*t181355*t181357*t181359*6.0;
                double t181394 = t181362*t181356*t181357*t181359*2.0;
                double t181395 = t181391+t181392+t181393+t181394;
                double t181396 = gcab*t181358*(3.0/2.0);
                double t181397 = t181355*t181356*t181358*3.0;
                double t181398 = gcab*t181355*t181357*t181358*(3.0/2.0);
                double t181399 = t181396+t181397+t181398;
                double t181400 = 1.0/(t181367*t181367);
                double t181401 = gcab*t181359*(3.0/2.0);
                double t181402 = t181355*t181356*t181359*3.0;
                double t181403 = gcab*t181355*t181357*t181359*(3.0/2.0);
                double t181404 = t181401+t181402+t181403;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t181325-t181304*t181307*(t181325-c0f*log((t181308*(1.0/ \
                   2.0))/(b1f*t181311+b3f*t181312+b2f*c*t181309+b4f*t181313*t181288)+1.0)*(a1f*c*t181309+1.0)*2.0))+t181326* \
                   (t181343-t181307*t181354*t181348*t181349*(t181343-c0f*log((t181308*(1.0/2.0))/(b1f*t181329+b3f*t181330+ \
                   b2f*c*t181327+b4f*t181331*t181288)+1.0)*(a1f*c*t181327+1.0)*2.0)+(Aa*t181307*t181354*log((1.0/2.0) \
                   /(Aa*(b1a*t181329+b3a*t181330+b2a*c*t181327+b4a*t181331*t181288))+1.0)*(t181348*t181349-1.0)*(a1a* \
                   c*t181327+1.0)*2.0)/d2fz0)+rho_a[index]*(t181304*t181307*(c0p*t181301*t181299*2.0-c0f*log((t181308* \
                   (1.0/2.0))/(b1f*t181286+b3f*t181287+b2f*c*t181284+b4f*t181288*t181289)+1.0)*(a1f*c*t181284+1.0)*2.0) \
                   -c0p*t181301*t181299*2.0))*(ccab4*t181362*t181363*t181390*(t181355*t181358*t181359*3.0+t181362*t181357* \
                   t181358*t181359*3.0+gcab*t181355*t181356*t181358*t181359*6.0)-(ccab2*t181355*t181358*t181359*(1.0/ \
                   2.0))/t181370+ccab1*t181355*1.0/(t181384*t181384)*t181358*t181359*(1.0/2.0)+ccab2*t181355*t181382* \
                   t181356*t181358*t181376+ccab2*t181362*t181357*t181358*t181376*t181359*(1.0/2.0)+ccab2*t181355*t181356* \
                   t181376*t181359*t181379-ccab2*1.0/(t181370*t181370*t181370)*t181355*t181382*t181357*t181379*2.0-(ccab4* \
                   t181362*t181357*t181358*t181359*3.0)/t181375-ccab4*t181362*t181363*1.0/(t181375*t181375*t181375)*t181395* \
                   t181389*2.0+ccab3*gcab*t181400*t181404*t181355*t181357*t181358*(3.0/2.0)+ccab3*gcab*t181400*t181355* \
                   t181357*t181359*t181399*(3.0/2.0)+ccab4*t181362*t181390*t181356*t181357*t181358*t181395*2.0+ccab4* \
                   t181362*t181390*t181356*t181357*t181359*t181389*2.0+ccab3*gcab*t181400*t181355*t181356*t181357*(t181355* \
                   t181358*t181359*(3.0/2.0)+gcab*t181355*t181356*t181358*t181359*(3.0/2.0))-ccab1*gcab*t181355*t181356* \
                   1.0/(t181384*t181384*t181384)*t181358*t181359*(1.0/2.0)-(ccab3*gcab*t181355*t181356*t181358*t181359* \
                   (3.0/2.0))/t181367-ccab3*gcab*t181404*t181355*t181356*t181357*1.0/(t181367*t181367*t181367)*t181399* \
                   2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t181408 = 1.0/pow(rho_a[index],1.0/3.0);
                double t181409 = c*t181408;
                double t181410 = sqrt(t181409);
                double t181411 = pow(t181409,3.0/2.0);
                double t181412 = c*c;
                double t181413 = 1.0/pow(rho_a[index],2.0/3.0);
                double t181414 = 1.0/c0p;
                double t181415 = b1p*t181410;
                double t181416 = b3p*t181411;
                double t181417 = b4p*t181412*t181413;
                double t181418 = b2p*c*t181408;
                double t181419 = t181415+t181416+t181417+t181418;
                double t181420 = 1.0/t181419;
                double t181421 = t181420*t181414*(1.0/2.0);
                double t181422 = t181421+1.0;
                double t181423 = log(t181422);
                double t181424 = a1p*c*t181408;
                double t181425 = t181424+1.0;
                double t181426 = pow(2.0,1.0/3.0);
                double t181427 = t181426*2.0;
                double t181428 = t181427-2.0;
                double t181429 = two_13*2.0;
                double t181430 = t181429-2.0;
                double t181431 = 1.0/t181430;
                double t181432 = 1.0/c0f;
                double t181433 = 1.0/pow(rho_b[index],1.0/3.0);
                double t181434 = c*t181433;
                double t181435 = sqrt(t181434);
                double t181436 = pow(t181434,3.0/2.0);
                double t181437 = 1.0/pow(rho_b[index],2.0/3.0);
                double t181438 = b1p*t181435;
                double t181439 = b3p*t181436;
                double t181440 = b4p*t181412*t181437;
                double t181441 = b2p*c*t181433;
                double t181442 = t181440+t181441+t181438+t181439;
                double t181443 = 1.0/t181442;
                double t181444 = t181414*t181443*(1.0/2.0);
                double t181445 = t181444+1.0;
                double t181446 = log(t181445);
                double t181447 = a1p*c*t181433;
                double t181448 = t181447+1.0;
                double t181449 = c0p*t181446*t181448*2.0;
                double t181450 = rho_a[index]+rho_b[index];
                double t181451 = 1.0/pow(t181450,1.0/3.0);
                double t181452 = c*t181451;
                double t181453 = sqrt(t181452);
                double t181454 = pow(t181452,3.0/2.0);
                double t181455 = 1.0/pow(t181450,2.0/3.0);
                double t181456 = b1p*t181453;
                double t181457 = b3p*t181454;
                double t181458 = b4p*t181412*t181455;
                double t181459 = b2p*c*t181451;
                double t181460 = t181456+t181457+t181458+t181459;
                double t181461 = 1.0/t181460;
                double t181462 = t181414*t181461*(1.0/2.0);
                double t181463 = t181462+1.0;
                double t181464 = log(t181463);
                double t181465 = a1p*c*t181451;
                double t181466 = t181465+1.0;
                double t181467 = c0p*t181464*t181466*2.0;
                double t181468 = rho_a[index]-rho_b[index];
                double t181469 = t181468*t181468;
                double t181470 = 1.0/t181450;
                double t181471 = t181470*t181468;
                double t181472 = 1.0/(t181450*t181450*t181450*t181450);
                double t181473 = t181469*t181469;
                double t181474 = t181471+1.0;
                double t181475 = pow(t181474,4.0/3.0);
                double t181476 = -t181471+1.0;
                double t181477 = pow(t181476,4.0/3.0);
                double t181478 = t181475+t181477-2.0;
                double t181479 = gcab*gcab;
                double t181480 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t181481 = 1.0/pow(rho_a[index],8.0/3.0);
                double t181482 = gamma_aa[index]*t181481*(1.0/2.0);
                double t181483 = 1.0/pow(rho_b[index],8.0/3.0);
                double t181484 = gamma_bb[index]*t181483*(1.0/2.0);
                double t181485 = t181482+t181484;
                double t181486 = gcab*t181485;
                double t181487 = t181486+1.0;
                double t181488 = t181485*t181485;
                double t181489 = t181479*t181488;
                double t181490 = gcab*t181485*2.0;
                double t181491 = t181490+t181489+1.0;
                double t181492 = t181479*t181479;
                double t181509 = gcab*t181483*2.0;
                double t181510 = t181483*t181485*t181479*6.0;
                double t181511 = gcab*t181483*t181479*t181488*6.0;
                double t181512 = t181483*t181492*t181485*t181488*2.0;
                double t181493 = t181510+t181511+t181512+t181509;
                double t181494 = t181488*t181488;
                double t181514 = gcab*t181483*(3.0/2.0);
                double t181515 = t181483*t181485*t181479*3.0;
                double t181516 = gcab*t181483*t181479*t181488*(3.0/2.0);
                double t181495 = t181514+t181515+t181516;
                double t181496 = t181479*t181488*3.0;
                double t181497 = gcab*t181485*t181479*t181488;
                double t181498 = gcab*t181485*3.0;
                double t181499 = t181496+t181497+t181498+1.0;
                double t181506 = gcab*t181483;
                double t181507 = t181483*t181485*t181479;
                double t181500 = t181506+t181507;
                double t181501 = t181479*t181488*6.0;
                double t181502 = gcab*t181485*t181479*t181488*4.0;
                double t181503 = t181492*t181494;
                double t181504 = gcab*t181485*4.0;
                double t181505 = t181501+t181502+t181503+t181504+1.0;
                double t181508 = 1.0/(t181491*t181491);
                double t181513 = 1.0/(t181505*t181505);
                double t181517 = 1.0/(t181499*t181499);
                double t181518 = c0p*t181423*t181425*2.0;
                double t181519 = b1f*t181435;
                double t181520 = b3f*t181436;
                double t181521 = b4f*t181412*t181437;
                double t181522 = b2f*c*t181433;
                double t181523 = t181520+t181521+t181522+t181519;
                double t181524 = 1.0/t181523;
                double t181525 = t181432*t181524*(1.0/2.0);
                double t181526 = t181525+1.0;
                double t181527 = log(t181526);
                double t181528 = a1f*c*t181433;
                double t181529 = t181528+1.0;
                double t181530 = t181449-c0f*t181527*t181529*2.0;
                double t181531 = t181449-t181431*t181530*t181428;
                double t181532 = gcaa*gcaa;
                double t181533 = gamma_bb[index]*gamma_bb[index];
                double t181534 = t181532*t181532;
                double t181535 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t181536 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t181537 = gamma_bb[index]*gcaa*t181483;
                double t181538 = t181537+1.0;
                double t181539 = gamma_bb[index]*gcaa*t181483*2.0;
                double t181540 = t181532*t181533*t181480;
                double t181541 = t181540+t181539+1.0;
                double t181542 = gamma_bb[index]*gcaa*t181483*3.0;
                double t181543 = gamma_bb[index]*gcaa*t181532*t181533*t181536;
                double t181544 = t181532*t181533*t181480*3.0;
                double t181545 = t181542+t181543+t181544+1.0;
                double t181546 = t181533*t181533;
                double t181562 = gcaa*t181483*4.0;
                double t181563 = gamma_bb[index]*t181532*t181480*1.2E1;
                double t181564 = gcaa*t181532*t181533*t181536*1.2E1;
                double t181565 = gamma_bb[index]*t181533*t181534*t181535*4.0;
                double t181547 = t181562+t181563+t181564+t181565;
                double t181548 = gamma_bb[index]*gcaa*t181483*4.0;
                double t181549 = gamma_bb[index]*gcaa*t181532*t181533*t181536*4.0;
                double t181550 = t181532*t181533*t181480*6.0;
                double t181551 = t181534*t181535*t181546;
                double t181552 = t181550+t181551+t181548+t181549+1.0;
                double t181555 = gcaa*t181483*2.0;
                double t181556 = gamma_bb[index]*t181532*t181480*2.0;
                double t181553 = t181555+t181556;
                double t181554 = 1.0/(t181545*t181545);
                double t181557 = 1.0/(t181541*t181541);
                double t181558 = gcaa*t181483*3.0;
                double t181559 = gamma_bb[index]*t181532*t181480*6.0;
                double t181560 = gcaa*t181532*t181533*t181536*3.0;
                double t181561 = t181560+t181558+t181559;
                double t181566 = 1.0/(t181552*t181552);
                double t181567 = gx*gx;
                double t181568 = t181567*t181567;
                double t181569 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t181570 = gamma_bb[index]*gx*t181483*4.0;
                double t181571 = gamma_bb[index]*gx*t181533*t181536*t181567*4.0;
                double t181572 = t181533*t181480*t181567*6.0;
                double t181573 = t181535*t181546*t181568;
                double t181574 = t181570+t181571+t181572+t181573+1.0;
                double t181575 = 1.0/t181574;
                double t181576 = cx4*t181535*t181546*t181575*t181568*(4.190715359480463E15/2.251799813685248E15);
                double t181577 = gamma_bb[index]*gx*t181483;
                double t181578 = t181577+1.0;
                double t181579 = 1.0/t181578;
                double t181580 = cx1*gamma_bb[index]*gx*t181483*t181579*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181581 = gamma_bb[index]*gx*t181483*3.0;
                double t181582 = gamma_bb[index]*gx*t181533*t181536*t181567;
                double t181583 = t181533*t181480*t181567*3.0;
                double t181584 = t181581+t181582+t181583+1.0;
                double t181585 = 1.0/t181584;
                double t181586 = cx3*gamma_bb[index]*gx*t181533*t181536*t181567*t181585*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181587 = gamma_bb[index]*gx*t181483*2.0;
                double t181588 = t181533*t181480*t181567;
                double t181589 = t181587+t181588+1.0;
                double t181590 = 1.0/t181589;
                double t181591 = cx2*t181533*t181480*t181590*t181567*(4.190715359480463E15/2.251799813685248E15);
                double t181592 = t181580+t181591+t181576+t181586+t181569;
                double t181593 = 1.0/t181592;
                double t181594 = 1.0/(omega*omega);
                double t181595 = pow(rho_b[index],2.0/3.0);
                double t181618 = t181593*t181594*t181595*(1.4000771998813E29/4.951760157141521E27);
                double t181596 = exp(-t181618);
                double t181597 = cx1*gx*t181483*t181579*(4.190715359480463E15/2.251799813685248E15);
                double t181598 = cx4*gamma_bb[index]*t181533*t181535*t181575*t181568*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t181599 = cx2*gamma_bb[index]*t181480*t181590*t181567*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181600 = cx3*gx*t181533*t181536*t181567*t181585*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t181601 = 1.0/(t181578*t181578);
                double t181602 = gx*t181483*3.0;
                double t181603 = gamma_bb[index]*t181480*t181567*6.0;
                double t181604 = gx*t181533*t181536*t181567*3.0;
                double t181605 = t181602+t181603+t181604;
                double t181606 = 1.0/(t181584*t181584);
                double t181607 = gx*t181483*4.0;
                double t181608 = gamma_bb[index]*t181480*t181567*1.2E1;
                double t181609 = gx*t181533*t181536*t181567*1.2E1;
                double t181610 = gamma_bb[index]*t181533*t181535*t181568*4.0;
                double t181611 = t181610+t181607+t181608+t181609;
                double t181612 = 1.0/(t181574*t181574);
                double t181613 = gx*t181483*2.0;
                double t181614 = gamma_bb[index]*t181480*t181567*2.0;
                double t181615 = t181613+t181614;
                double t181616 = 1.0/(t181589*t181589);
                double t181619 = cx1*gamma_bb[index]*t181601*t181480*t181567*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181620 = cx3*gamma_bb[index]*gx*t181533*t181605*t181606*t181536*t181567*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t181621 = cx4*t181611*t181612*t181535*t181546*t181568*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181622 = cx2*t181533*t181480*t181615*t181616*t181567*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181617 = t181600-t181620-t181621-t181622-t181619+t181597+t181598+t181599;
                double t181623 = omega*omega;
                double t181624 = t181596-1.0;
                double t181625 = sqrt(t181592);
                double t181626 = 1.0/omega;
                double t181627 = pow(rho_b[index],1.0/3.0);
                double t181628 = 1.0/sqrt(t181592);
                double t181629 = t181623*t181624*t181437*t181592*(2.475880078570761E27/1.4000771998813E29);
                double t181630 = t181629-t181596+3.0/2.0;
                double t181631 = pow(rho_b[index],4.0/3.0);
                double t181632 = t181626*t181627*t181628*(3.74176054803257E14/7.0368744177664E13);
                double t181633 = erf(t181632);
                double t181634 = t181633*(3.991211251234741E15/2.251799813685248E15);
                double t181677 = omega*t181630*t181433*t181625*(7.0368744177664E13/3.74176054803257E14);
                double t181635 = t181634-t181677;
                double t181636 = 1.0/(t181578*t181578*t181578);
                double t181637 = t181480*t181567*6.0;
                double t181638 = gamma_bb[index]*gx*t181536*t181567*6.0;
                double t181639 = t181637+t181638;
                double t181640 = t181611*t181611;
                double t181641 = 1.0/(t181574*t181574*t181574);
                double t181642 = t181615*t181615;
                double t181643 = 1.0/(t181589*t181589*t181589);
                double t181644 = t181480*t181567*1.2E1;
                double t181645 = gamma_bb[index]*gx*t181536*t181567*2.4E1;
                double t181646 = t181533*t181535*t181568*1.2E1;
                double t181647 = t181644+t181645+t181646;
                double t181648 = t181605*t181605;
                double t181649 = 1.0/(t181584*t181584*t181584);
                double t181650 = cx1*t181601*t181480*t181567*(4.190715359480463E15/1.125899906842624E15);
                double t181651 = cx2*t181533*t181535*t181616*t181568*(4.190715359480463E15/1.125899906842624E15);
                double t181652 = cx3*gamma_bb[index]*gx*t181533*t181606*t181536*t181567*t181639*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t181653 = cx3*gx*t181533*t181605*t181606*t181536*t181567*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t181654 = cx4*t181612*t181535*t181546*t181647*t181568*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t181655 = cx2*gamma_bb[index]*t181480*t181615*t181616*t181567*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t181656 = cx4*gamma_bb[index]*t181611*t181612*t181533*t181535*t181568*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t181660 = cx2*t181480*t181590*t181567*(4.190715359480463E15/1.125899906842624E15);
                double t181661 = cx3*gamma_bb[index]*gx*t181536*t181567*t181585*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t181662 = cx4*t181533*t181535*t181575*t181568*(1.257214607844139E16/5.62949953421312E14);
                double t181663 = cx1*gamma_bb[index]*gx*t181536*t181636*t181567*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181664 = cx4*t181640*t181641*t181535*t181546*t181568*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181665 = cx2*t181533*t181480*t181642*t181643*t181567*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t181666 = cx3*gamma_bb[index]*gx*t181533*t181536*t181567*t181648*t181649*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t181657 = t181650+t181651-t181660+t181652-t181661+t181653-t181662+t181654-t181663+t181655- \
                   t181664+t181656-t181665-t181666;
                double t181658 = t181617*t181617;
                double t181659 = 1.0/(t181592*t181592);
                double t181667 = t181617*t181593*t181596*(1.0/2.0);
                double t181668 = t181623*t181624*t181437*t181617*(2.475880078570761E27/1.4000771998813E29);
                double t181672 = t181617*t181594*t181595*t181596*t181659*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t181669 = -t181672+t181667+t181668;
                double t181670 = 1.0/pow(t181592,3.0/2.0);
                double t181671 = 1.0/sqrt(3.141592653589793);
                double t181673 = omega*t181433*t181625*t181669*(7.0368744177664E13/3.74176054803257E14);
                double t181674 = omega*t181630*t181433*t181617*t181628*(3.5184372088832E13/3.74176054803257E14);
                double t181675 = t181670*t181617*t181626*t181671*t181627*t181596*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t181676 = t181673+t181674+t181675;
                v_gamma_bb_gamma_bb_[index] = (rho_b[index]*t181531+rho_a[index]*(t181518-t181431*t181428*(t181518- \
                   c0f*log((t181432*(1.0/2.0))/(b1f*t181410+b3f*t181411+b2f*c*t181408+b4f*t181412*t181413)+1.0)*(a1f* \
                   c*t181408+1.0)*2.0))-t181450*(t181467-t181431*t181472*t181473*t181478*(t181467-c0f*log((t181432*(1.0/ \
                   2.0))/(b1f*t181453+b3f*t181454+b2f*c*t181451+b4f*t181412*t181455)+1.0)*(a1f*c*t181451+1.0)*2.0)+(Aa* \
                   t181431*t181478*log((1.0/2.0)/(Aa*(b1a*t181453+b3a*t181454+b2a*c*t181451+b4a*t181412*t181455))+1.0) \
                   *(t181472*t181473-1.0)*(a1a*c*t181451+1.0)*2.0)/d2fz0))*((ccab2*t181480*t181479*(1.0/2.0))/t181491- \
                   ccab1*t181480*1.0/(t181487*t181487)*t181479*(1.0/2.0)+ccab2*(t181500*t181500)*1.0/(t181491*t181491* \
                   t181491)*t181479*t181488*2.0+ccab4*1.0/(t181505*t181505*t181505)*t181492*(t181493*t181493)*t181494* \
                   2.0-ccab2*t181480*t181508*t181492*t181488*(1.0/2.0)-ccab4*t181513*t181492*t181494*(t181480*t181479* \
                   3.0+t181480*t181492*t181488*3.0+gcab*t181480*t181485*t181479*6.0)+(ccab4*t181480*t181492*t181488*3.0) \
                   /t181505-ccab2*t181500*t181508*t181483*t181485*t181479*2.0+ccab1*gcab*t181480*t181485*1.0/(t181487* \
                   t181487*t181487)*t181479*(1.0/2.0)+(ccab3*gcab*t181480*t181485*t181479*(3.0/2.0))/t181499+ccab3*gcab* \
                   t181485*(t181495*t181495)*t181479*t181488*1.0/(t181499*t181499*t181499)*2.0-ccab3*gcab*t181517*t181483* \
                   t181495*t181479*t181488*3.0-ccab4*t181513*t181483*t181492*t181493*t181485*t181488*4.0-ccab3*gcab*t181517* \
                   t181485*t181479*t181488*(t181480*t181479*(3.0/2.0)+gcab*t181480*t181485*t181479*(3.0/2.0)))-rho_b[index]* \
                   t181531*((ccaa2*t181532*t181480*2.0)/t181541-ccaa1*t181532*t181480*1.0/(t181538*t181538)*2.0-ccaa2* \
                   t181533*t181534*t181535*t181557*2.0+(ccaa4*t181533*t181534*t181535*1.2E1)/t181552-ccaa4*t181534*t181535* \
                   t181546*t181566*(t181532*t181480*1.2E1+t181533*t181534*t181535*1.2E1+gamma_bb[index]*gcaa*t181532* \
                   t181536*2.4E1)+(ccaa3*gamma_bb[index]*gcaa*t181532*t181536*6.0)/t181545+ccaa1*gamma_bb[index]*gcaa* \
                   t181532*t181536*1.0/(t181538*t181538*t181538)*2.0+ccaa2*t181532*1.0/(t181541*t181541*t181541)*t181533* \
                   t181480*(t181553*t181553)*2.0+ccaa4*t181534*1.0/(t181552*t181552*t181552)*t181535*t181546*(t181547* \
                   t181547)*2.0-ccaa2*gamma_bb[index]*t181532*t181480*t181553*t181557*4.0-ccaa4*gamma_bb[index]*t181533* \
                   t181534*t181535*t181547*t181566*8.0-ccaa3*gcaa*t181532*t181533*t181561*t181536*t181554*6.0-ccaa3*gamma_bb[index]* \
                   gcaa*t181532*t181533*t181536*t181554*(t181532*t181480*6.0+gamma_bb[index]*gcaa*t181532*t181536*6.0) \
                   +ccaa3*gamma_bb[index]*gcaa*t181532*t181533*(t181561*t181561)*t181536*1.0/(t181545*t181545*t181545) \
                   *2.0)+c0*t181631*(omega*t181433*t181625*(omega*t181433*t181625*(t181593*t181657*t181596*(1.0/2.0)+ \
                   t181623*t181624*t181437*t181657*(2.475880078570761E27/1.4000771998813E29)-1.0/(t181592*t181592*t181592) \
                   *t181594*t181595*t181658*t181596*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega*omega* \
                   omega)*t181631*1.0/(t181592*t181592*t181592*t181592)*t181658*t181596*(1.960216165627461E58/2.451992865385422E55) \
                   -t181594*t181657*t181595*t181596*t181659*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t181630*t181433*t181670*t181658*(1.7592186044416E13/3.74176054803257E14) \
                   +omega*t181630*t181433*t181628*t181657*(3.5184372088832E13/3.74176054803257E14)-omega*t181433*t181617* \
                   t181628*t181669*(7.0368744177664E13/3.74176054803257E14)+t181670*t181626*t181671*t181627*t181657*t181596* \
                   (1.493415679873386E30/1.584563250285287E29)+t181626*t181671*t181627*1.0/pow(t181592,5.0/2.0)*t181658* \
                   t181596*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega)*rho_b[index]*t181671*1.0/ \
                   pow(t181592,7.0/2.0)*t181658*t181596*(2.090897243335959E59/7.846377169233351E56))*(-2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t181433*t181670*t181635*t181658*(7.0368744177664E13/1.122528164409771E15) \
                   +omega*t181433*t181635*t181628*t181657*(1.40737488355328E14/1.122528164409771E15)+omega*t181433*t181617* \
                   t181628*t181676*(2.81474976710656E14/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]*gx*t181483*t181579+ \
                   cx2*t181533*t181480*t181590*t181567+cx4*t181535*t181546*t181575*t181568+cx3*gamma_bb[index]*gx*t181533* \
                   t181536*t181567*t181585)+c0*t181631*(omega*t181433*t181625*t181676*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t181433*t181617*t181635*t181628*(1.40737488355328E14/1.122528164409771E15))*(cx1*gx*t181483* \
                   t181579-cx1*gamma_bb[index]*t181601*t181480*t181567+cx2*gamma_bb[index]*t181480*t181590*t181567*2.0- \
                   cx2*t181533*t181480*t181615*t181616*t181567-cx4*t181611*t181612*t181535*t181546*t181568+cx4*gamma_bb[index]* \
                   t181533*t181535*t181575*t181568*4.0+cx3*gx*t181533*t181536*t181567*t181585*3.0-cx3*gamma_bb[index]* \
                   gx*t181533*t181605*t181606*t181536*t181567)*2.0+c0*t181631*(omega*t181433*t181625*t181635*(2.81474976710656E14/ \
                   1.122528164409771E15)-1.0)*(cx1*t181601*t181480*t181567*2.0-cx2*t181480*t181590*t181567*2.0+cx2*t181533* \
                   t181535*t181616*t181568*2.0-cx4*t181533*t181535*t181575*t181568*1.2E1-cx2*t181533*t181480*t181642* \
                   t181643*t181567*2.0-cx4*t181640*t181641*t181535*t181546*t181568*2.0+cx4*t181612*t181535*t181546*t181647* \
                   t181568-cx1*gamma_bb[index]*gx*t181536*t181636*t181567*2.0-cx3*gamma_bb[index]*gx*t181536*t181567* \
                   t181585*6.0+cx2*gamma_bb[index]*t181480*t181615*t181616*t181567*4.0+cx4*gamma_bb[index]*t181611*t181612* \
                   t181533*t181535*t181568*8.0+cx3*gx*t181533*t181605*t181606*t181536*t181567*6.0+cx3*gamma_bb[index]* \
                   gx*t181533*t181606*t181536*t181567*t181639-cx3*gamma_bb[index]*gx*t181533*t181536*t181567*t181648* \
                   t181649*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t182607 = 1.0/pow(rho_b[index],1.0/3.0);
                double t182608 = c*t182607;
                double t182609 = sqrt(t182608);
                double t182610 = pow(t182608,3.0/2.0);
                double t182611 = c*c;
                double t182612 = 1.0/pow(rho_b[index],2.0/3.0);
                double t182613 = 1.0/c0p;
                double t182614 = b1p*t182609;
                double t182615 = b3p*t182610;
                double t182616 = b4p*t182611*t182612;
                double t182617 = b2p*c*t182607;
                double t182618 = t182614+t182615+t182616+t182617;
                double t182619 = 1.0/t182618;
                double t182620 = t182613*t182619*(1.0/2.0);
                double t182621 = t182620+1.0;
                double t182622 = log(t182621);
                double t182623 = a1p*c*t182607;
                double t182624 = t182623+1.0;
                double t182625 = gcaa*gcaa;
                double t182626 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t182627 = 1.0/pow(rho_b[index],8.0/3.0);
                double t182628 = gamma_bb[index]*gamma_bb[index];
                double t182629 = t182625*t182625;
                double t182630 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t182631 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t182632 = gamma_bb[index]*gcaa*t182627;
                double t182633 = t182632+1.0;
                double t182634 = gamma_bb[index]*gcaa*t182627*2.0;
                double t182635 = t182625*t182626*t182628;
                double t182636 = t182634+t182635+1.0;
                double t182637 = gamma_bb[index]*gcaa*t182627*3.0;
                double t182638 = gamma_bb[index]*gcaa*t182631*t182625*t182628;
                double t182639 = t182625*t182626*t182628*3.0;
                double t182640 = t182637+t182638+t182639+1.0;
                double t182641 = t182628*t182628;
                double t182657 = gcaa*t182627*4.0;
                double t182658 = gamma_bb[index]*t182625*t182626*1.2E1;
                double t182659 = gcaa*t182631*t182625*t182628*1.2E1;
                double t182660 = gamma_bb[index]*t182630*t182628*t182629*4.0;
                double t182642 = t182660+t182657+t182658+t182659;
                double t182643 = gamma_bb[index]*gcaa*t182627*4.0;
                double t182644 = gamma_bb[index]*gcaa*t182631*t182625*t182628*4.0;
                double t182645 = t182625*t182626*t182628*6.0;
                double t182646 = t182630*t182641*t182629;
                double t182647 = t182643+t182644+t182645+t182646+1.0;
                double t182650 = gcaa*t182627*2.0;
                double t182651 = gamma_bb[index]*t182625*t182626*2.0;
                double t182648 = t182650+t182651;
                double t182649 = 1.0/(t182640*t182640);
                double t182652 = 1.0/(t182636*t182636);
                double t182653 = gcaa*t182627*3.0;
                double t182654 = gamma_bb[index]*t182625*t182626*6.0;
                double t182655 = gcaa*t182631*t182625*t182628*3.0;
                double t182656 = t182653+t182654+t182655;
                double t182661 = 1.0/(t182647*t182647);
                double t182662 = gx*gx;
                double t182663 = t182662*t182662;
                double t182664 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t182665 = gamma_bb[index]*gx*t182627*4.0;
                double t182666 = gamma_bb[index]*gx*t182631*t182662*t182628*4.0;
                double t182667 = t182626*t182662*t182628*6.0;
                double t182668 = t182630*t182641*t182663;
                double t182669 = t182665+t182666+t182667+t182668+1.0;
                double t182670 = 1.0/t182669;
                double t182671 = cx4*t182630*t182641*t182670*t182663*(4.190715359480463E15/2.251799813685248E15);
                double t182672 = gamma_bb[index]*gx*t182627;
                double t182673 = t182672+1.0;
                double t182674 = 1.0/t182673;
                double t182675 = cx1*gamma_bb[index]*gx*t182627*t182674*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182676 = gamma_bb[index]*gx*t182627*3.0;
                double t182677 = gamma_bb[index]*gx*t182631*t182662*t182628;
                double t182678 = t182626*t182662*t182628*3.0;
                double t182679 = t182676+t182677+t182678+1.0;
                double t182680 = 1.0/t182679;
                double t182681 = cx3*gamma_bb[index]*gx*t182631*t182662*t182680*t182628*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182682 = gamma_bb[index]*gx*t182627*2.0;
                double t182683 = t182626*t182662*t182628;
                double t182684 = t182682+t182683+1.0;
                double t182685 = 1.0/t182684;
                double t182686 = cx2*t182626*t182662*t182628*t182685*(4.190715359480463E15/2.251799813685248E15);
                double t182687 = t182671+t182681+t182664+t182675+t182686;
                double t182688 = 1.0/t182687;
                double t182689 = 1.0/(omega*omega);
                double t182690 = pow(rho_b[index],2.0/3.0);
                double t182713 = t182690*t182688*t182689*(1.4000771998813E29/4.951760157141521E27);
                double t182691 = exp(-t182713);
                double t182692 = cx1*gx*t182627*t182674*(4.190715359480463E15/2.251799813685248E15);
                double t182693 = cx4*gamma_bb[index]*t182630*t182670*t182663*t182628*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t182694 = cx2*gamma_bb[index]*t182626*t182662*t182685*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182695 = cx3*gx*t182631*t182662*t182680*t182628*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t182696 = 1.0/(t182673*t182673);
                double t182697 = gx*t182627*3.0;
                double t182698 = gamma_bb[index]*t182626*t182662*6.0;
                double t182699 = gx*t182631*t182662*t182628*3.0;
                double t182700 = t182697+t182698+t182699;
                double t182701 = 1.0/(t182679*t182679);
                double t182702 = gx*t182627*4.0;
                double t182703 = gamma_bb[index]*t182626*t182662*1.2E1;
                double t182704 = gx*t182631*t182662*t182628*1.2E1;
                double t182705 = gamma_bb[index]*t182630*t182663*t182628*4.0;
                double t182706 = t182702+t182703+t182704+t182705;
                double t182707 = 1.0/(t182669*t182669);
                double t182708 = gx*t182627*2.0;
                double t182709 = gamma_bb[index]*t182626*t182662*2.0;
                double t182710 = t182708+t182709;
                double t182711 = 1.0/(t182684*t182684);
                double t182714 = cx1*gamma_bb[index]*t182626*t182662*t182696*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182715 = cx3*gamma_bb[index]*gx*t182700*t182701*t182631*t182662*t182628*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182716 = cx4*t182630*t182641*t182706*t182707*t182663*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182717 = cx2*t182710*t182711*t182626*t182662*t182628*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182712 = -t182714-t182715-t182716-t182717+t182692+t182693+t182694+t182695;
                double t182718 = omega*omega;
                double t182719 = t182691-1.0;
                double t182720 = sqrt(t182687);
                double t182721 = 1.0/omega;
                double t182722 = pow(rho_b[index],1.0/3.0);
                double t182723 = 1.0/sqrt(t182687);
                double t182724 = t182612*t182718*t182719*t182687*(2.475880078570761E27/1.4000771998813E29);
                double t182725 = t182724-t182691+3.0/2.0;
                double t182726 = pow(rho_b[index],4.0/3.0);
                double t182727 = t182721*t182722*t182723*(3.74176054803257E14/7.0368744177664E13);
                double t182728 = erf(t182727);
                double t182729 = t182728*(3.991211251234741E15/2.251799813685248E15);
                double t182772 = omega*t182720*t182607*t182725*(7.0368744177664E13/3.74176054803257E14);
                double t182730 = -t182772+t182729;
                double t182731 = 1.0/(t182673*t182673*t182673);
                double t182732 = t182626*t182662*6.0;
                double t182733 = gamma_bb[index]*gx*t182631*t182662*6.0;
                double t182734 = t182732+t182733;
                double t182735 = t182706*t182706;
                double t182736 = 1.0/(t182669*t182669*t182669);
                double t182737 = t182710*t182710;
                double t182738 = 1.0/(t182684*t182684*t182684);
                double t182739 = t182626*t182662*1.2E1;
                double t182740 = gamma_bb[index]*gx*t182631*t182662*2.4E1;
                double t182741 = t182630*t182663*t182628*1.2E1;
                double t182742 = t182740+t182741+t182739;
                double t182743 = t182700*t182700;
                double t182744 = 1.0/(t182679*t182679*t182679);
                double t182745 = cx1*t182626*t182662*t182696*(4.190715359480463E15/1.125899906842624E15);
                double t182746 = cx2*t182630*t182711*t182663*t182628*(4.190715359480463E15/1.125899906842624E15);
                double t182747 = cx3*gamma_bb[index]*gx*t182701*t182631*t182662*t182734*t182628*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t182748 = cx3*gx*t182700*t182701*t182631*t182662*t182628*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t182749 = cx4*t182630*t182641*t182742*t182707*t182663*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t182750 = cx2*gamma_bb[index]*t182710*t182711*t182626*t182662*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t182751 = cx4*gamma_bb[index]*t182630*t182706*t182707*t182663*t182628*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t182755 = cx2*t182626*t182662*t182685*(4.190715359480463E15/1.125899906842624E15);
                double t182756 = cx3*gamma_bb[index]*gx*t182631*t182662*t182680*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t182757 = cx4*t182630*t182670*t182663*t182628*(1.257214607844139E16/5.62949953421312E14);
                double t182758 = cx1*gamma_bb[index]*gx*t182631*t182731*t182662*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182759 = cx4*t182630*t182641*t182663*t182735*t182736*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182760 = cx2*t182626*t182662*t182628*t182737*t182738*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t182761 = cx3*gamma_bb[index]*gx*t182631*t182662*t182743*t182744*t182628*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t182752 = t182750+t182751-t182760-t182761+t182745+t182746-t182755+t182747-t182756+t182748- \
                   t182757+t182749-t182758-t182759;
                double t182753 = t182712*t182712;
                double t182754 = 1.0/(t182687*t182687);
                double t182762 = t182712*t182691*t182688*(1.0/2.0);
                double t182763 = t182612*t182712*t182718*t182719*(2.475880078570761E27/1.4000771998813E29);
                double t182767 = t182712*t182690*t182691*t182754*t182689*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t182764 = t182762+t182763-t182767;
                double t182765 = 1.0/pow(t182687,3.0/2.0);
                double t182766 = 1.0/sqrt(3.141592653589793);
                double t182768 = omega*t182720*t182607*t182764*(7.0368744177664E13/3.74176054803257E14);
                double t182769 = omega*t182712*t182723*t182607*t182725*(3.5184372088832E13/3.74176054803257E14);
                double t182770 = t182712*t182721*t182722*t182691*t182765*t182766*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t182771 = t182770+t182768+t182769;
                v_gamma_bb_gamma_bb_[index] = rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t182609+b3f*t182610+b2f*c*t182607+b4f*t182611*t182612))+1.0)*(a1f*c*t182607+1.0)*2.0-c0p*t182622*t182624* \
                   2.0))/(two_13*2.0-2.0)+c0p*t182622*t182624*2.0)*(ccaa1*1.0/(t182633*t182633)*t182625*t182626*2.0-(ccaa2* \
                   t182625*t182626*2.0)/t182636+ccaa2*t182630*t182652*t182628*t182629*2.0-(ccaa4*t182630*t182628*t182629* \
                   1.2E1)/t182647+ccaa4*t182630*t182641*t182661*t182629*(t182625*t182626*1.2E1+t182630*t182628*t182629* \
                   1.2E1+gamma_bb[index]*gcaa*t182631*t182625*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t182631*t182625*6.0) \
                   /t182640-ccaa1*gamma_bb[index]*gcaa*t182631*1.0/(t182633*t182633*t182633)*t182625*2.0-ccaa4*t182630* \
                   t182641*(t182642*t182642)*t182629*1.0/(t182647*t182647*t182647)*2.0-ccaa2*t182625*t182626*1.0/(t182636* \
                   t182636*t182636)*t182628*(t182648*t182648)*2.0+ccaa2*gamma_bb[index]*t182625*t182652*t182626*t182648* \
                   4.0+ccaa4*gamma_bb[index]*t182630*t182642*t182661*t182628*t182629*8.0+ccaa3*gcaa*t182631*t182625*t182628* \
                   t182656*t182649*6.0+ccaa3*gamma_bb[index]*gcaa*t182631*t182625*t182628*t182649*(t182625*t182626*6.0+ \
                   gamma_bb[index]*gcaa*t182631*t182625*6.0)-ccaa3*gamma_bb[index]*gcaa*t182631*1.0/(t182640*t182640* \
                   t182640)*t182625*t182628*(t182656*t182656)*2.0)+c0*t182726*(omega*t182720*t182607*(omega*t182720*t182607* \
                   (t182752*t182691*t182688*(1.0/2.0)+t182612*t182752*t182718*t182719*(2.475880078570761E27/1.4000771998813E29) \
                   -t182690*t182753*t182691*1.0/(t182687*t182687*t182687)*t182689*(7.000385999406499E29/9.903520314283042E27) \
                   +1.0/(omega*omega*omega*omega)*t182726*t182753*t182691*1.0/(t182687*t182687*t182687*t182687)*(1.960216165627461E58/ \
                   2.451992865385422E55)-t182752*t182690*t182691*t182754*t182689*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)-omega*t182712*t182723*t182607*t182764*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t182723*t182607*t182725*t182752*(3.5184372088832E13/3.74176054803257E14) \
                   +omega*t182607*t182725*t182753*t182765*(1.7592186044416E13/3.74176054803257E14)+t182721*t182722*t182752* \
                   t182691*t182765*t182766*(1.493415679873386E30/1.584563250285287E29)+t182721*t182722*t182753*t182691* \
                   t182766*1.0/pow(t182687,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega) \
                   *rho_b[index]*t182753*t182691*t182766*1.0/pow(t182687,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56) \
                   )*(-2.81474976710656E14/1.122528164409771E15)+omega*t182730*t182723*t182607*t182752*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t182712*t182723*t182607*t182771*(2.81474976710656E14/1.122528164409771E15) \
                   +omega*t182730*t182607*t182753*t182765*(7.0368744177664E13/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]* \
                   gx*t182627*t182674+cx2*t182626*t182662*t182628*t182685+cx4*t182630*t182641*t182670*t182663+cx3*gamma_bb[index]* \
                   gx*t182631*t182662*t182680*t182628)+c0*t182726*(omega*t182720*t182607*t182771*(2.81474976710656E14/ \
                   1.122528164409771E15)-omega*t182712*t182730*t182723*t182607*(1.40737488355328E14/1.122528164409771E15) \
                   )*(cx1*gx*t182627*t182674-cx1*gamma_bb[index]*t182626*t182662*t182696+cx2*gamma_bb[index]*t182626* \
                   t182662*t182685*2.0-cx2*t182710*t182711*t182626*t182662*t182628-cx4*t182630*t182641*t182706*t182707* \
                   t182663+cx4*gamma_bb[index]*t182630*t182670*t182663*t182628*4.0+cx3*gx*t182631*t182662*t182680*t182628* \
                   3.0-cx3*gamma_bb[index]*gx*t182700*t182701*t182631*t182662*t182628)*2.0+c0*t182726*(omega*t182720* \
                   t182730*t182607*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t182626*t182662*t182696*2.0-cx2* \
                   t182626*t182662*t182685*2.0+cx2*t182630*t182711*t182663*t182628*2.0-cx4*t182630*t182670*t182663*t182628* \
                   1.2E1-cx2*t182626*t182662*t182628*t182737*t182738*2.0+cx4*t182630*t182641*t182742*t182707*t182663- \
                   cx4*t182630*t182641*t182663*t182735*t182736*2.0-cx1*gamma_bb[index]*gx*t182631*t182731*t182662*2.0- \
                   cx3*gamma_bb[index]*gx*t182631*t182662*t182680*6.0+cx2*gamma_bb[index]*t182710*t182711*t182626*t182662* \
                   4.0+cx4*gamma_bb[index]*t182630*t182706*t182707*t182663*t182628*8.0+cx3*gx*t182700*t182701*t182631* \
                   t182662*t182628*6.0+cx3*gamma_bb[index]*gx*t182701*t182631*t182662*t182734*t182628-cx3*gamma_bb[index]* \
                   gx*t182631*t182662*t182743*t182744*t182628*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

