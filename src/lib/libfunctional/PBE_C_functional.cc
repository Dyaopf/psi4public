/**********************************************************
* PBE_C_functional.cc: definitions for PBE_C_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PBE_C_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PBE_C_Functional::PBE_C_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PBE_C";
    description_ = "PBE Correlation";
    citation_ = "J.P. Perdew, K. Burke., and M. Ernzerhof, Phys. Rev. Lett., 77, 3865-3868, 1996";
    
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double pi_m12 = 5.6418958354775628E-01;
    params_.push_back(make_pair("pi_m12",pi_m12));
    double bet = 6.6724550603149205E-02;
    params_.push_back(make_pair("bet",bet));
    double gammas = 3.1090690869654901E-02;
    params_.push_back(make_pair("gammas",gammas));
    double d2fz0 = 1.7099209341613653E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double Aa = 1.6886900000000000E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1090699999999999E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545349999999999E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PBE_C_Functional::~PBE_C_Functional()
{
}
void PBE_C_Functional::computeRKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double bet = params_[4].second;
    double gammas = params_[5].second;
    double d2fz0 = params_[6].second;
    double Aa = params_[7].second;
    double a1a = params_[8].second;
    double b1a = params_[9].second;
    double b2a = params_[10].second;
    double b3a = params_[11].second;
    double b4a = params_[12].second;
    double c0p = params_[13].second;
    double a1p = params_[14].second;
    double b1p = params_[15].second;
    double b2p = params_[16].second;
    double b3p = params_[17].second;
    double b4p = params_[18].second;
    double c0f = params_[19].second;
    double a1f = params_[20].second;
    double b1f = params_[21].second;
    double b2f = params_[22].second;
    double b3f = params_[23].second;
    double b4f = params_[24].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t20075 = 1/gammas;
            double t20076 = 1/k;
            double t20077 = 1/(pi_m12*pi_m12);
            double t20078 = rho_a[index]*2.0;
            double t20079 = 1/pow(t20078,1.0/3.0);
            double t20080 = c*t20079;
            double t20081 = 1/pow(t20078,7.0/3.0);
            double t20082 = 1/c0p;
            double t20083 = sqrt(t20080);
            double t20084 = b1p*t20083;
            double t20085 = pow(t20080,3.0/2.0);
            double t20086 = b3p*t20085;
            double t20087 = b2p*c*t20079;
            double t20088 = c*c;
            double t20089 = 1/pow(t20078,2.0/3.0);
            double t20090 = b4p*t20088*t20089;
            double t20091 = t20090+t20084+t20086+t20087;
            double t20092 = 1/t20091;
            double t20093 = t20082*t20092*(1.0/2.0);
            double t20094 = t20093+1.0;
            double t20095 = log(t20094);
            double t20096 = a1p*c*t20079;
            double t20097 = t20096+1.0;
            double t20098 = c0p*t20075*t20095*t20097*2.0;
            double t20099 = exp(t20098);
            double t20100 = t20099-1.0;
            double t20101 = 1/t20100;
            double t20102 = bet*gamma_aa[index]*t20101*t20081*t20075*t20076*t20077*(1.0/4.0);
            functional_[index] = rho_a[index]*(gammas*log((bet*gamma_aa[index]*t20081*t20075*t20076*t20077*(t20102+ \
               1.0)*(1.0/4.0))/(t20102+(bet*bet)*1/(gammas*gammas)*(gamma_aa[index]*gamma_aa[index])*1/(k*k)*1/(pi_m12* \
               pi_m12*pi_m12*pi_m12)*1/(t20100*t20100)*1/pow(t20078,1.4E1/3.0)*(1.0/1.6E1)+1.0)+1.0)-c0p*t20095*t20097* \
               2.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t20104 = 1/gammas;
            double t20105 = 1/k;
            double t20106 = 1/(pi_m12*pi_m12);
            double t20107 = rho_a[index]*2.0;
            double t20108 = 1/pow(t20107,1.0/3.0);
            double t20109 = c*t20108;
            double t20110 = 1/pow(t20107,7.0/3.0);
            double t20111 = 1/c0p;
            double t20112 = sqrt(t20109);
            double t20113 = b1p*t20112;
            double t20114 = pow(t20109,3.0/2.0);
            double t20115 = b3p*t20114;
            double t20116 = b2p*c*t20108;
            double t20117 = c*c;
            double t20118 = 1/pow(t20107,2.0/3.0);
            double t20119 = b4p*t20117*t20118;
            double t20120 = t20113+t20115+t20116+t20119;
            double t20121 = 1/t20120;
            double t20122 = t20111*t20121*(1.0/2.0);
            double t20123 = t20122+1.0;
            double t20124 = log(t20123);
            double t20125 = a1p*c*t20108;
            double t20126 = t20125+1.0;
            double t20127 = c0p*t20104*t20124*t20126*2.0;
            double t20128 = exp(t20127);
            double t20129 = t20128-1.0;
            double t20130 = 1/t20129;
            double t20131 = bet*gamma_aa[index]*t20110*t20130*t20104*t20105*t20106*(1.0/4.0);
            double t20132 = t20131+1.0;
            double t20133 = bet*bet;
            double t20134 = 1/(gammas*gammas);
            double t20135 = gamma_aa[index]*gamma_aa[index];
            double t20136 = 1/(k*k);
            double t20137 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t20138 = 1/pow(t20107,1.4E1/3.0);
            double t20139 = 1/(t20129*t20129);
            double t20140 = t20133*t20134*t20135*t20136*t20137*t20138*t20139*(1.0/1.6E1);
            double t20141 = t20131+t20140+1.0;
            double t20142 = 1/t20141;
            double t20143 = bet*gamma_aa[index]*t20110*t20104*t20105*t20132*t20106*t20142*(1.0/4.0);
            double t20144 = t20143+1.0;
            double t20145 = 1/pow(t20107,1.0E1/3.0);
            double t20146 = 1/pow(t20107,4.0/3.0);
            double t20147 = bet*gamma_aa[index]*t20130*t20104*t20105*t20106*t20145*(7.0/1.2E1);
            double t20148 = 1/t20123;
            double t20149 = 1/(t20120*t20120);
            double t20150 = b2p*c*t20146*(1.0/3.0);
            double t20151 = 1/pow(t20107,5.0/3.0);
            double t20152 = b4p*t20151*t20117*(2.0/3.0);
            double t20153 = 1/sqrt(t20109);
            double t20154 = b1p*c*t20153*t20146*(1.0/6.0);
            double t20155 = b3p*c*t20112*t20146*(1.0/2.0);
            double t20156 = t20150+t20152+t20154+t20155;
            double t20157 = t20126*t20156*t20148*t20149;
            double t20160 = a1p*c*c0p*t20124*t20146*(2.0/3.0);
            double t20158 = -t20160+t20157;
            double t20159 = bet*gamma_aa[index]*t20110*t20105*t20106*t20134*t20128*t20139*t20158*(1.0/4.0);
            v_rho_a_[index] = gammas*log(t20144)-rho_a[index]*(-t20160+t20157+(gammas*(bet*gamma_aa[index]*t20110* \
               t20104*t20105*t20106*t20142*(t20147+t20159)*(1.0/4.0)+bet*gamma_aa[index]*t20104*t20105*t20132*t20106* \
               t20142*t20145*(7.0/1.2E1)-bet*gamma_aa[index]*t20110*t20104*t20105*t20132*1/(t20141*t20141)*t20106* \
               (t20147+t20159+t20133*1/pow(t20107,1.7E1/3.0)*t20134*t20135*t20136*t20137*t20139*(7.0/2.4E1)+1/(gammas* \
               gammas*gammas)*t20133*t20135*t20136*t20128*t20137*1/(t20129*t20129*t20129)*t20138*t20158*(1.0/8.0) \
               )*(1.0/4.0)))/t20144)*2.0-c0p*t20124*t20126*2.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t20162 = 1/gammas;
                double t20163 = 1/k;
                double t20164 = 1/(pi_m12*pi_m12);
                double t20165 = rho_a[index]*2.0;
                double t20166 = 1/pow(t20165,1.0/3.0);
                double t20167 = c*t20166;
                double t20168 = 1/pow(t20165,7.0/3.0);
                double t20169 = 1/c0p;
                double t20170 = sqrt(t20167);
                double t20171 = b1p*t20170;
                double t20172 = pow(t20167,3.0/2.0);
                double t20173 = b3p*t20172;
                double t20174 = b2p*c*t20166;
                double t20175 = c*c;
                double t20176 = 1/pow(t20165,2.0/3.0);
                double t20177 = b4p*t20175*t20176;
                double t20178 = t20171+t20173+t20174+t20177;
                double t20179 = 1/t20178;
                double t20180 = t20169*t20179*(1.0/2.0);
                double t20181 = t20180+1.0;
                double t20182 = log(t20181);
                double t20183 = a1p*c*t20166;
                double t20184 = t20183+1.0;
                double t20185 = c0p*t20162*t20182*t20184*2.0;
                double t20186 = exp(t20185);
                double t20187 = t20186-1.0;
                double t20188 = 1/t20187;
                double t20189 = bet*gamma_aa[index]*t20162*t20163*t20164*t20168*t20188*(1.0/4.0);
                double t20190 = t20189+1.0;
                double t20191 = bet*bet;
                double t20192 = 1/(gammas*gammas);
                double t20193 = gamma_aa[index]*gamma_aa[index];
                double t20194 = 1/(k*k);
                double t20195 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t20196 = 1/pow(t20165,1.4E1/3.0);
                double t20197 = 1/(t20187*t20187);
                double t20198 = t20191*t20192*t20193*t20194*t20195*t20196*t20197*(1.0/1.6E1);
                double t20199 = t20189+t20198+1.0;
                double t20200 = 1/t20199;
                double t20201 = bet*gamma_aa[index]*t20200*t20162*t20163*t20190*t20164*t20168*(1.0/4.0);
                double t20202 = t20201+1.0;
                double t20203 = 1/t20202;
                double t20204 = 1/(t20199*t20199);
                v_gamma_aa_[index] = gammas*rho_a[index]*t20203*(bet*t20200*t20162*t20163*t20190*t20164*t20168*(1.0/ \
                   8.0)+gamma_aa[index]*t20200*t20191*t20192*t20194*t20195*t20196*t20188*(1.0/3.2E1)-bet*gamma_aa[index]* \
                   t20204*t20162*t20163*t20190*t20164*t20168*(bet*t20162*t20163*t20164*t20168*t20188*(1.0/8.0)+gamma_aa[index]* \
                   t20191*t20192*t20194*t20195*t20196*t20197*(1.0/1.6E1))*(1.0/4.0))*2.0+gammas*rho_a[index]*t20203*(bet* \
                   t20200*t20162*t20163*t20190*t20164*t20168*(1.0/1.6E1)+gamma_aa[index]*t20200*t20191*t20192*t20194* \
                   t20195*t20196*t20188*(1.0/6.4E1)-bet*gamma_aa[index]*t20204*t20162*t20163*t20190*t20164*t20168*(bet* \
                   t20162*t20163*t20164*t20168*t20188*(1.0/1.6E1)+gamma_aa[index]*t20191*t20192*t20194*t20195*t20196* \
                   t20197*(1.0/3.2E1))*(1.0/4.0))*4.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
                
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
                    
            //V_gamma_aa_gamma_aa
                    
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
                    
            //V_tau_a_tau_a
                   
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                       
            }
        }
    }
}
void PBE_C_Functional::computeUKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double bet = params_[4].second;
    double gammas = params_[5].second;
    double d2fz0 = params_[6].second;
    double Aa = params_[7].second;
    double a1a = params_[8].second;
    double b1a = params_[9].second;
    double b2a = params_[10].second;
    double b3a = params_[11].second;
    double b4a = params_[12].second;
    double c0p = params_[13].second;
    double a1p = params_[14].second;
    double b1p = params_[15].second;
    double b2p = params_[16].second;
    double b3p = params_[17].second;
    double b4p = params_[18].second;
    double c0f = params_[19].second;
    double a1f = params_[20].second;
    double b1f = params_[21].second;
    double b2f = params_[22].second;
    double b3f = params_[23].second;
    double b4f = params_[24].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t18697 = rho_a[index]+rho_b[index];
            double t18698 = 1/pow(t18697,1.0/3.0);
            double t18699 = c*t18698;
            double t18700 = 1/gammas;
            double t18701 = 1/k;
            double t18702 = 1/(pi_m12*pi_m12);
            double t18703 = 1/pow(t18697,7.0/3.0);
            double t18704 = 1/t18697;
            double t18705 = rho_a[index]-rho_b[index];
            double t18706 = t18704*t18705;
            double t18707 = 1/c0p;
            double t18708 = sqrt(t18699);
            double t18709 = b1p*t18708;
            double t18710 = pow(t18699,3.0/2.0);
            double t18711 = b3p*t18710;
            double t18712 = c*c;
            double t18713 = 1/pow(t18697,2.0/3.0);
            double t18714 = b4p*t18712*t18713;
            double t18715 = b2p*c*t18698;
            double t18716 = t18711+t18714+t18715+t18709;
            double t18717 = 1/t18716;
            double t18718 = t18707*t18717*(1.0/2.0);
            double t18719 = t18718+1.0;
            double t18720 = log(t18719);
            double t18721 = a1p*c*t18698;
            double t18722 = t18721+1.0;
            double t18723 = c0p*t18720*t18722*2.0;
            double t18724 = t18705*t18705;
            double t18725 = t18706+1.0;
            double t18726 = -t18706+1.0;
            double t18727 = two_13*2.0;
            double t18728 = t18727-2.0;
            double t18729 = 1/t18728;
            double t18730 = 1/(t18697*t18697*t18697*t18697);
            double t18731 = t18724*t18724;
            double t18732 = pow(t18725,4.0/3.0);
            double t18733 = pow(t18726,4.0/3.0);
            double t18734 = t18732+t18733-2.0;
            double t18735 = pow(t18725,2.0/3.0);
            double t18736 = t18735*(1.0/2.0);
            double t18737 = pow(t18726,2.0/3.0);
            double t18738 = t18737*(1.0/2.0);
            double t18739 = t18736+t18738;
            double t18740 = 1/(t18739*t18739);
            double t18741 = 1/(t18739*t18739*t18739);
            double t18742 = 1/c0f;
            double t18743 = b1f*t18708;
            double t18744 = b3f*t18710;
            double t18745 = b4f*t18712*t18713;
            double t18746 = b2f*c*t18698;
            double t18747 = t18743+t18744+t18745+t18746;
            double t18748 = 1/t18747;
            double t18749 = t18742*t18748*(1.0/2.0);
            double t18750 = t18749+1.0;
            double t18751 = log(t18750);
            double t18752 = a1f*c*t18698;
            double t18753 = t18752+1.0;
            double t18779 = c0f*t18751*t18753*2.0;
            double t18754 = t18723-t18779;
            double t18755 = t18730*t18731*t18734*t18754*t18729;
            double t18756 = 1/d2fz0;
            double t18757 = 1/Aa;
            double t18758 = b1a*t18708;
            double t18759 = b3a*t18710;
            double t18760 = b4a*t18712*t18713;
            double t18761 = b2a*c*t18698;
            double t18762 = t18760+t18761+t18758+t18759;
            double t18763 = 1/t18762;
            double t18764 = t18763*t18757*(1.0/2.0);
            double t18765 = t18764+1.0;
            double t18766 = log(t18765);
            double t18767 = a1a*c*t18698;
            double t18768 = t18767+1.0;
            double t18769 = t18730*t18731;
            double t18770 = t18769-1.0;
            double t18771 = Aa*t18734*t18770*t18729*t18756*t18766*t18768*2.0;
            double t18772 = -t18723+t18771+t18755;
            double t18780 = t18700*t18741*t18772;
            double t18773 = exp(-t18780);
            double t18774 = t18773-1.0;
            double t18775 = 1/t18774;
            double t18776 = gamma_ab[index]*2.0;
            double t18777 = gamma_aa[index]+gamma_bb[index]+t18776;
            double t18778 = bet*t18700*t18701*t18702*t18703*t18740*t18775*t18777*(1.0/1.6E1);
            double t18781 = t18739*t18739;
            functional_[index] = t18697*(-t18723+t18771+t18755+gammas*t18781*t18739*log((bet*t18700*t18701*t18702* \
               t18703*t18740*t18777*(t18778+1.0)*(1.0/1.6E1))/(t18778+(bet*bet)*1/(gammas*gammas)*1/(k*k)*1/(pi_m12* \
               pi_m12*pi_m12*pi_m12)*1/(t18774*t18774)*1/(t18739*t18739*t18739*t18739)*(t18777*t18777)*1/pow(t18697,1.4E1/ \
               3.0)*(1.0/2.56E2)+1.0)+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t19735 = pow(2.0,2.0/3.0);
            double t19736 = 1/gammas;
            double t19737 = 1/k;
            double t19738 = 1/(pi_m12*pi_m12);
            double t19739 = 1/pow(rho_a[index],7.0/3.0);
            double t19740 = 1/pow(rho_a[index],1.0/3.0);
            double t19741 = c*t19740;
            double t19742 = sqrt(t19741);
            double t19743 = pow(t19741,3.0/2.0);
            double t19744 = c*c;
            double t19745 = 1/pow(rho_a[index],2.0/3.0);
            double t19746 = 1/c0p;
            double t19747 = b1p*t19742;
            double t19748 = b3p*t19743;
            double t19749 = b4p*t19744*t19745;
            double t19750 = b2p*c*t19740;
            double t19751 = t19750+t19747+t19748+t19749;
            double t19752 = 1/t19751;
            double t19753 = t19752*t19746*(1.0/2.0);
            double t19754 = t19753+1.0;
            double t19755 = log(t19754);
            double t19756 = a1p*c*t19740;
            double t19757 = t19756+1.0;
            double t19758 = gamma_ab[index]*2.0;
            double t19759 = gamma_aa[index]+t19758;
            double t19760 = pow(2.0,1.0/3.0);
            double t19761 = t19760*2.0;
            double t19762 = t19761-2.0;
            double t19763 = two_13*2.0;
            double t19764 = t19763-2.0;
            double t19765 = 1/t19764;
            double t19766 = 1/c0f;
            double t19767 = b1f*t19742;
            double t19768 = b3f*t19743;
            double t19769 = b4f*t19744*t19745;
            double t19770 = b2f*c*t19740;
            double t19771 = t19770+t19767+t19768+t19769;
            double t19772 = 1/t19771;
            double t19773 = t19772*t19766*(1.0/2.0);
            double t19774 = t19773+1.0;
            double t19775 = log(t19774);
            double t19776 = a1f*c*t19740;
            double t19777 = t19776+1.0;
            double t19778 = c0f*t19775*t19777*2.0;
            double t19779 = c0p*t19755*t19757*2.0;
            double t19780 = t19778-t19779;
            double t19781 = t19762*t19780*t19765;
            double t19782 = t19781+t19779;
            double t19783 = t19736*t19782*2.0;
            double t19784 = exp(t19783);
            double t19785 = t19784-1.0;
            double t19786 = 1/t19785;
            double t19787 = bet*t19735*t19736*t19737*t19738*t19739*t19759*t19786*(1.0/1.6E1);
            functional_[index] = -(rho_a[index]+rho_b[index])*(t19781+t19779-gammas*log((bet*t19735*t19736*t19737* \
               t19738*t19739*t19759*(t19787+1.0)*(1.0/1.6E1))/(t19787+(bet*bet)*1/(gammas*gammas)*1/(k*k)*1/(pi_m12* \
               pi_m12*pi_m12*pi_m12)*1/pow(rho_a[index],1.4E1/3.0)*t19760*1/(t19785*t19785)*(t19759*t19759)*(1.0/ \
               1.28E2)+1.0)+1.0)*(1.0/2.0));
        } else if (rho_b[index] > cutoff_) {
            double t19403 = pow(2.0,2.0/3.0);
            double t19404 = 1/gammas;
            double t19405 = 1/k;
            double t19406 = 1/(pi_m12*pi_m12);
            double t19407 = 1/pow(rho_b[index],7.0/3.0);
            double t19408 = 1/pow(rho_b[index],1.0/3.0);
            double t19409 = c*t19408;
            double t19410 = sqrt(t19409);
            double t19411 = pow(t19409,3.0/2.0);
            double t19412 = c*c;
            double t19413 = 1/pow(rho_b[index],2.0/3.0);
            double t19414 = 1/c0p;
            double t19415 = b1p*t19410;
            double t19416 = b3p*t19411;
            double t19417 = b4p*t19412*t19413;
            double t19418 = b2p*c*t19408;
            double t19419 = t19415+t19416+t19417+t19418;
            double t19420 = 1/t19419;
            double t19421 = t19420*t19414*(1.0/2.0);
            double t19422 = t19421+1.0;
            double t19423 = log(t19422);
            double t19424 = a1p*c*t19408;
            double t19425 = t19424+1.0;
            double t19426 = gamma_ab[index]*2.0;
            double t19427 = gamma_bb[index]+t19426;
            double t19428 = pow(2.0,1.0/3.0);
            double t19429 = t19428*2.0;
            double t19430 = t19429-2.0;
            double t19431 = two_13*2.0;
            double t19432 = t19431-2.0;
            double t19433 = 1/t19432;
            double t19434 = 1/c0f;
            double t19435 = b1f*t19410;
            double t19436 = b3f*t19411;
            double t19437 = b4f*t19412*t19413;
            double t19438 = b2f*c*t19408;
            double t19439 = t19435+t19436+t19437+t19438;
            double t19440 = 1/t19439;
            double t19441 = t19440*t19434*(1.0/2.0);
            double t19442 = t19441+1.0;
            double t19443 = log(t19442);
            double t19444 = a1f*c*t19408;
            double t19445 = t19444+1.0;
            double t19446 = c0f*t19443*t19445*2.0;
            double t19447 = c0p*t19423*t19425*2.0;
            double t19448 = t19446-t19447;
            double t19449 = t19430*t19433*t19448;
            double t19450 = t19447+t19449;
            double t19451 = t19404*t19450*2.0;
            double t19452 = exp(t19451);
            double t19453 = t19452-1.0;
            double t19454 = 1/t19453;
            double t19455 = bet*t19403*t19404*t19405*t19406*t19407*t19427*t19454*(1.0/1.6E1);
            functional_[index] = -(rho_a[index]+rho_b[index])*(t19447+t19449-gammas*log((bet*t19403*t19404*t19405* \
               t19406*t19407*t19427*(t19455+1.0)*(1.0/1.6E1))/(t19455+(bet*bet)*1/(gammas*gammas)*1/(k*k)*1/(pi_m12* \
               pi_m12*pi_m12*pi_m12)*1/pow(rho_b[index],1.4E1/3.0)*1/(t19453*t19453)*(t19427*t19427)*t19428*(1.0/ \
               1.28E2)+1.0)+1.0)*(1.0/2.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t18783 = rho_a[index]+rho_b[index];
            double t18784 = 1/gammas;
            double t18785 = 1/k;
            double t18786 = 1/(pi_m12*pi_m12);
            double t18787 = 1/pow(t18783,7.0/3.0);
            double t18788 = 1/t18783;
            double t18789 = rho_a[index]-rho_b[index];
            double t18790 = t18788*t18789;
            double t18791 = 1/pow(t18783,1.0/3.0);
            double t18792 = c*t18791;
            double t18793 = sqrt(t18792);
            double t18794 = pow(t18792,3.0/2.0);
            double t18795 = c*c;
            double t18796 = 1/pow(t18783,2.0/3.0);
            double t18797 = 1/c0p;
            double t18798 = b1p*t18793;
            double t18799 = b3p*t18794;
            double t18800 = b4p*t18795*t18796;
            double t18801 = b2p*c*t18791;
            double t18802 = t18800+t18801+t18798+t18799;
            double t18803 = 1/t18802;
            double t18804 = t18803*t18797*(1.0/2.0);
            double t18805 = t18804+1.0;
            double t18806 = log(t18805);
            double t18807 = a1p*c*t18791;
            double t18808 = t18807+1.0;
            double t18809 = c0p*t18806*t18808*2.0;
            double t18810 = t18789*t18789;
            double t18811 = t18790+1.0;
            double t18812 = -t18790+1.0;
            double t18813 = two_13*2.0;
            double t18814 = t18813-2.0;
            double t18815 = 1/t18814;
            double t18816 = 1/(t18783*t18783*t18783*t18783);
            double t18817 = t18810*t18810;
            double t18818 = pow(t18811,4.0/3.0);
            double t18819 = pow(t18812,4.0/3.0);
            double t18820 = t18818+t18819-2.0;
            double t18821 = pow(t18811,2.0/3.0);
            double t18822 = t18821*(1.0/2.0);
            double t18823 = pow(t18812,2.0/3.0);
            double t18824 = t18823*(1.0/2.0);
            double t18825 = t18822+t18824;
            double t18826 = 1/(t18825*t18825);
            double t18827 = 1/(t18825*t18825*t18825);
            double t18828 = 1/c0f;
            double t18829 = b1f*t18793;
            double t18830 = b3f*t18794;
            double t18831 = b4f*t18795*t18796;
            double t18832 = b2f*c*t18791;
            double t18833 = t18830+t18831+t18832+t18829;
            double t18834 = 1/t18833;
            double t18835 = t18834*t18828*(1.0/2.0);
            double t18836 = t18835+1.0;
            double t18837 = log(t18836);
            double t18838 = a1f*c*t18791;
            double t18839 = t18838+1.0;
            double t18865 = c0f*t18837*t18839*2.0;
            double t18840 = t18809-t18865;
            double t18841 = t18820*t18840*t18815*t18816*t18817;
            double t18842 = 1/d2fz0;
            double t18843 = 1/Aa;
            double t18844 = b1a*t18793;
            double t18845 = b3a*t18794;
            double t18846 = b4a*t18795*t18796;
            double t18847 = b2a*c*t18791;
            double t18848 = t18844+t18845+t18846+t18847;
            double t18849 = 1/t18848;
            double t18850 = t18843*t18849*(1.0/2.0);
            double t18851 = t18850+1.0;
            double t18852 = log(t18851);
            double t18853 = a1a*c*t18791;
            double t18854 = t18853+1.0;
            double t18855 = t18816*t18817;
            double t18856 = t18855-1.0;
            double t18857 = Aa*t18820*t18815*t18842*t18852*t18854*t18856*2.0;
            double t18858 = t18841-t18809+t18857;
            double t18866 = t18827*t18784*t18858;
            double t18859 = exp(-t18866);
            double t18860 = t18859-1.0;
            double t18861 = 1/t18860;
            double t18862 = gamma_ab[index]*2.0;
            double t18863 = gamma_aa[index]+gamma_bb[index]+t18862;
            double t18864 = bet*t18861*t18826*t18863*t18784*t18785*t18786*t18787*(1.0/1.6E1);
            double t18867 = 1/(t18783*t18783);
            double t18887 = t18867*t18789;
            double t18868 = t18788-t18887;
            double t18869 = 1/pow(t18783,4.0/3.0);
            double t18870 = t18864+1.0;
            double t18871 = bet*bet;
            double t18872 = 1/(gammas*gammas);
            double t18873 = 1/(k*k);
            double t18874 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t18875 = 1/pow(t18783,1.4E1/3.0);
            double t18876 = 1/(t18860*t18860);
            double t18877 = 1/(t18825*t18825*t18825*t18825);
            double t18878 = t18863*t18863;
            double t18879 = t18871*t18872*t18873*t18874*t18875*t18876*t18877*t18878*(1.0/2.56E2);
            double t18880 = t18864+t18879+1.0;
            double t18881 = 1/t18880;
            double t18882 = bet*t18870*t18826*t18863*t18881*t18784*t18785*t18786*t18787*(1.0/1.6E1);
            double t18883 = t18882+1.0;
            double t18884 = t18825*t18825;
            double t18885 = 1/pow(t18783,1.0E1/3.0);
            double t18886 = 1/pow(t18811,1.0/3.0);
            double t18888 = t18868*t18886*(1.0/3.0);
            double t18889 = 1/pow(t18812,1.0/3.0);
            double t18906 = t18868*t18889*(1.0/3.0);
            double t18890 = -t18906+t18888;
            double t18891 = 1/t18805;
            double t18892 = 1/(t18802*t18802);
            double t18893 = 1/pow(t18783,5.0/3.0);
            double t18894 = b4p*t18893*t18795*(2.0/3.0);
            double t18895 = b2p*c*t18869*(1.0/3.0);
            double t18896 = 1/sqrt(t18792);
            double t18897 = b1p*c*t18869*t18896*(1.0/6.0);
            double t18898 = b3p*c*t18793*t18869*(1.0/2.0);
            double t18899 = t18894+t18895+t18897+t18898;
            double t18900 = t18808*t18891*t18892*t18899;
            double t18901 = 1/(t18783*t18783*t18783*t18783*t18783);
            double t18902 = pow(t18811,1.0/3.0);
            double t18903 = t18902*t18868*(4.0/3.0);
            double t18904 = pow(t18812,1.0/3.0);
            double t18910 = t18904*t18868*(4.0/3.0);
            double t18905 = -t18910+t18903;
            double t18907 = bet*t18861*t18826*t18863*t18784*t18785*t18786*t18885*(7.0/4.8E1);
            double t18908 = bet*t18861*t18827*t18863*t18890*t18784*t18785*t18786*t18787*(1.0/8.0);
            double t18909 = t18810*t18820*t18840*t18815*t18816*t18789*4.0;
            double t18911 = t18840*t18815*t18905*t18816*t18817;
            double t18912 = 1/t18836;
            double t18913 = 1/(t18833*t18833);
            double t18914 = b4f*t18893*t18795*(2.0/3.0);
            double t18915 = b2f*c*t18869*(1.0/3.0);
            double t18916 = b1f*c*t18869*t18896*(1.0/6.0);
            double t18917 = b3f*c*t18793*t18869*(1.0/2.0);
            double t18918 = t18914+t18915+t18916+t18917;
            double t18919 = a1f*c*c0f*t18837*t18869*(2.0/3.0);
            double t18920 = a1p*c*c0p*t18806*t18869*(2.0/3.0);
            double t18921 = t18901*t18817*4.0;
            double t18922 = Aa*t18815*t18842*t18905*t18852*t18854*t18856*2.0;
            double t18923 = 1/t18851;
            double t18924 = 1/(t18848*t18848);
            double t18925 = b4a*t18893*t18795*(2.0/3.0);
            double t18926 = b2a*c*t18869*(1.0/3.0);
            double t18927 = b1a*c*t18869*t18896*(1.0/6.0);
            double t18928 = b3a*c*t18793*t18869*(1.0/2.0);
            double t18929 = t18925+t18926+t18927+t18928;
            double t18930 = t18820*t18815*t18842*t18923*t18924*t18854*t18856*t18929;
            double t18934 = t18810*t18816*t18789*4.0;
            double t18931 = t18921-t18934;
            double t18938 = t18912*t18913*t18918*t18839;
            double t18932 = t18900-t18920+t18919-t18938;
            double t18933 = t18820*t18815*t18932*t18816*t18817;
            double t18939 = t18820*t18901*t18840*t18815*t18817*4.0;
            double t18940 = Aa*t18820*t18931*t18815*t18842*t18852*t18854*2.0;
            double t18941 = Aa*a1a*c*t18820*t18815*t18842*t18852*t18856*t18869*(2.0/3.0);
            double t18935 = -t18900+t18911+t18920+t18930+t18922-t18940-t18941+t18933+t18909-t18939;
            double t18936 = t18827*t18935*t18784;
            double t18942 = t18890*t18784*t18858*t18877*3.0;
            double t18937 = -t18942+t18936;
            double t18943 = log(t18883);
            v_rho_a_[index] = -t18809+t18857+t18783*(t18920+t18930+t18922-t18940-t18941-t18939+gammas*t18943* \
               t18890*t18884*3.0-t18808*t18891*t18892*t18899+t18820*t18815*t18816*t18817*(t18900-t18920+t18919-t18938) \
               -(gammas*t18825*t18884*(bet*t18826*t18863*t18881*t18784*t18785*t18786*t18787*(t18907+t18908-bet*t18826* \
               t18863*t18784*t18937*t18785*t18786*t18876*t18787*t18859*(1.0/1.6E1))*(1.0/1.6E1)+bet*t18870*t18826* \
               t18863*t18881*t18784*t18785*t18786*t18885*(7.0/4.8E1)-bet*t18870*t18826*1/(t18880*t18880)*t18863*t18784* \
               t18785*t18786*t18787*(t18907+t18908+t18871*t18872*1/pow(t18783,1.7E1/3.0)*t18873*t18874*t18876*t18877* \
               t18878*(7.0/3.84E2)+1/(t18825*t18825*t18825*t18825*t18825)*t18871*t18872*t18890*t18873*t18874*t18875* \
               t18876*t18878*(1.0/6.4E1)-1/(t18860*t18860*t18860)*t18871*t18872*t18873*t18874*t18937*t18875*t18859* \
               t18877*t18878*(1.0/1.28E2)-bet*t18826*t18863*t18784*t18937*t18785*t18786*t18876*t18787*t18859*(1.0/ \
               1.6E1))*(1.0/1.6E1)+bet*t18870*t18827*t18863*t18881*t18890*t18784*t18785*t18786*t18787*(1.0/8.0))) \
               /t18883+t18815*t18905*t18816*t18817*(t18809-t18865)+t18810*t18820*t18815*t18816*t18789*(t18809-t18865) \
               *4.0)+gammas*t18825*t18943*t18884+t18820*t18815*t18816*t18817*(t18809-t18865);
        } else if (rho_a[index] > cutoff_) {
            double t19789 = pow(2.0,2.0/3.0);
            double t19790 = 1/gammas;
            double t19791 = 1/k;
            double t19792 = 1/(pi_m12*pi_m12);
            double t19793 = 1/pow(rho_a[index],7.0/3.0);
            double t19794 = 1/pow(rho_a[index],1.0/3.0);
            double t19795 = c*t19794;
            double t19796 = sqrt(t19795);
            double t19797 = pow(t19795,3.0/2.0);
            double t19798 = c*c;
            double t19799 = 1/pow(rho_a[index],2.0/3.0);
            double t19800 = 1/c0p;
            double t19801 = b1p*t19796;
            double t19802 = b3p*t19797;
            double t19803 = b4p*t19798*t19799;
            double t19804 = b2p*c*t19794;
            double t19805 = t19801+t19802+t19803+t19804;
            double t19806 = 1/t19805;
            double t19807 = t19800*t19806*(1.0/2.0);
            double t19808 = t19807+1.0;
            double t19809 = log(t19808);
            double t19810 = a1p*c*t19794;
            double t19811 = t19810+1.0;
            double t19812 = gamma_ab[index]*2.0;
            double t19813 = gamma_aa[index]+t19812;
            double t19814 = pow(2.0,1.0/3.0);
            double t19815 = t19814*2.0;
            double t19816 = t19815-2.0;
            double t19817 = two_13*2.0;
            double t19818 = t19817-2.0;
            double t19819 = 1/t19818;
            double t19820 = 1/c0f;
            double t19821 = b1f*t19796;
            double t19822 = b3f*t19797;
            double t19823 = b4f*t19798*t19799;
            double t19824 = b2f*c*t19794;
            double t19825 = t19821+t19822+t19823+t19824;
            double t19826 = 1/t19825;
            double t19827 = t19820*t19826*(1.0/2.0);
            double t19828 = t19827+1.0;
            double t19829 = log(t19828);
            double t19830 = a1f*c*t19794;
            double t19831 = t19830+1.0;
            double t19832 = c0f*t19831*t19829*2.0;
            double t19833 = c0p*t19811*t19809*2.0;
            double t19834 = t19832-t19833;
            double t19835 = t19816*t19834*t19819;
            double t19836 = t19833+t19835;
            double t19837 = t19790*t19836*2.0;
            double t19838 = exp(t19837);
            double t19839 = t19838-1.0;
            double t19840 = 1/t19839;
            double t19841 = bet*t19813*t19840*t19790*t19791*t19792*t19793*t19789*(1.0/1.6E1);
            double t19842 = bet*bet;
            double t19843 = 1/(gammas*gammas);
            double t19844 = 1/(k*k);
            double t19845 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19846 = 1/pow(rho_a[index],1.4E1/3.0);
            double t19847 = 1/(t19839*t19839);
            double t19848 = t19813*t19813;
            double t19849 = t19814*t19842*t19843*t19844*t19845*t19846*t19847*t19848*(1.0/1.28E2);
            double t19850 = t19841+t19849+1.0;
            double t19851 = 1/t19850;
            double t19852 = 1/pow(rho_a[index],1.0E1/3.0);
            double t19853 = 1/pow(rho_a[index],4.0/3.0);
            double t19854 = 1/pow(rho_a[index],5.0/3.0);
            double t19855 = 1/sqrt(t19795);
            double t19856 = 1/t19808;
            double t19857 = 1/(t19805*t19805);
            double t19858 = b4p*t19854*t19798*(2.0/3.0);
            double t19859 = b2p*c*t19853*(1.0/3.0);
            double t19860 = b1p*c*t19853*t19855*(1.0/6.0);
            double t19861 = b3p*c*t19853*t19796*(1.0/2.0);
            double t19862 = t19860+t19861+t19858+t19859;
            double t19863 = t19811*t19862*t19856*t19857;
            double t19864 = t19841+1.0;
            double t19865 = bet*t19813*t19840*t19852*t19790*t19791*t19792*t19789*(7.0/4.8E1);
            double t19866 = 1/t19828;
            double t19867 = 1/(t19825*t19825);
            double t19868 = b4f*t19854*t19798*(2.0/3.0);
            double t19869 = b2f*c*t19853*(1.0/3.0);
            double t19870 = b1f*c*t19853*t19855*(1.0/6.0);
            double t19871 = b3f*c*t19853*t19796*(1.0/2.0);
            double t19872 = t19870+t19871+t19868+t19869;
            double t19873 = a1f*c*c0f*t19853*t19829*(2.0/3.0);
            double t19874 = a1p*c*c0p*t19853*t19809*(2.0/3.0);
            double t19878 = t19831*t19872*t19866*t19867;
            double t19875 = t19863+t19873-t19874-t19878;
            double t19876 = t19816*t19819*t19875;
            double t19877 = -t19863+t19874+t19876;
            double t19879 = bet*t19813*t19851*t19790*t19791*t19792*t19864*t19793*t19789*(1.0/1.6E1);
            double t19880 = t19879+1.0;
            v_rho_a_[index] = -t19833-t19835-(rho_a[index]+rho_b[index])*(t19863-t19874-t19876+(gammas*(bet*t19813* \
               t19851*t19852*t19790*t19791*t19792*t19864*t19789*(7.0/4.8E1)+bet*t19813*t19851*t19790*t19791*t19792* \
               t19793*t19789*(t19865-bet*t19813*t19843*t19791*t19792*t19793*t19838*t19847*t19877*t19789*(1.0/8.0) \
               )*(1.0/1.6E1)-bet*t19813*1/(t19850*t19850)*t19790*t19791*t19792*t19864*t19793*t19789*(t19865+1/pow(rho_a[index],1.7E1/ \
               3.0)*t19814*t19842*t19843*t19844*t19845*t19847*t19848*(7.0/1.92E2)-1/(gammas*gammas*gammas)*t19814* \
               t19842*t19844*t19845*t19846*t19838*1/(t19839*t19839*t19839)*t19848*t19877*(1.0/3.2E1)-bet*t19813*t19843* \
               t19791*t19792*t19793*t19838*t19847*t19877*t19789*(1.0/8.0))*(1.0/1.6E1))*(1.0/2.0))/t19880)+gammas* \
               log(t19880)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t19457 = pow(2.0,2.0/3.0);
            double t19458 = 1/gammas;
            double t19459 = 1/k;
            double t19460 = 1/(pi_m12*pi_m12);
            double t19461 = 1/pow(rho_b[index],7.0/3.0);
            double t19462 = 1/pow(rho_b[index],1.0/3.0);
            double t19463 = c*t19462;
            double t19464 = sqrt(t19463);
            double t19465 = pow(t19463,3.0/2.0);
            double t19466 = c*c;
            double t19467 = 1/pow(rho_b[index],2.0/3.0);
            double t19468 = 1/c0p;
            double t19469 = b1p*t19464;
            double t19470 = b3p*t19465;
            double t19471 = b4p*t19466*t19467;
            double t19472 = b2p*c*t19462;
            double t19473 = t19470+t19471+t19472+t19469;
            double t19474 = 1/t19473;
            double t19475 = t19474*t19468*(1.0/2.0);
            double t19476 = t19475+1.0;
            double t19477 = log(t19476);
            double t19478 = a1p*c*t19462;
            double t19479 = t19478+1.0;
            double t19480 = gamma_ab[index]*2.0;
            double t19481 = gamma_bb[index]+t19480;
            double t19482 = pow(2.0,1.0/3.0);
            double t19483 = t19482*2.0;
            double t19484 = t19483-2.0;
            double t19485 = two_13*2.0;
            double t19486 = t19485-2.0;
            double t19487 = 1/t19486;
            double t19488 = 1/c0f;
            double t19489 = b1f*t19464;
            double t19490 = b3f*t19465;
            double t19491 = b4f*t19466*t19467;
            double t19492 = b2f*c*t19462;
            double t19493 = t19490+t19491+t19492+t19489;
            double t19494 = 1/t19493;
            double t19495 = t19494*t19488*(1.0/2.0);
            double t19496 = t19495+1.0;
            double t19497 = log(t19496);
            double t19498 = a1f*c*t19462;
            double t19499 = t19498+1.0;
            double t19500 = c0f*t19497*t19499*2.0;
            double t19501 = c0p*t19477*t19479*2.0;
            double t19502 = t19500-t19501;
            double t19503 = t19502*t19484*t19487;
            double t19504 = t19501+t19503;
            double t19505 = t19504*t19458*2.0;
            double t19506 = exp(t19505);
            double t19507 = t19506-1.0;
            v_rho_a_[index] = -t19501-t19503+gammas*log((bet*t19460*t19461*t19481*t19457*t19458*t19459*((bet* \
               t19460*t19461*t19481*t19457*t19458*t19459*(1.0/1.6E1))/(exp(t19458*(t19501+t19484*t19487*(t19500-c0p* \
               t19477*t19479*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1))/((bet*t19460*t19461*t19481*t19457*t19458*t19459*(1.0/ \
               1.6E1))/t19507+(bet*bet)*1/(gammas*gammas)*1/(k*k)*1/(pi_m12*pi_m12*pi_m12*pi_m12)*1/pow(rho_b[index],1.4E1/ \
               3.0)*1/(t19507*t19507)*(t19481*t19481)*t19482*(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t18945 = rho_a[index]+rho_b[index];
            double t18946 = 1/gammas;
            double t18947 = 1/k;
            double t18948 = 1/(pi_m12*pi_m12);
            double t18949 = 1/pow(t18945,7.0/3.0);
            double t18950 = 1/t18945;
            double t18951 = rho_a[index]-rho_b[index];
            double t18952 = t18950*t18951;
            double t18953 = 1/pow(t18945,1.0/3.0);
            double t18954 = c*t18953;
            double t18955 = sqrt(t18954);
            double t18956 = pow(t18954,3.0/2.0);
            double t18957 = c*c;
            double t18958 = 1/pow(t18945,2.0/3.0);
            double t18959 = 1/c0p;
            double t18960 = b1p*t18955;
            double t18961 = b3p*t18956;
            double t18962 = b4p*t18957*t18958;
            double t18963 = b2p*c*t18953;
            double t18964 = t18960+t18961+t18962+t18963;
            double t18965 = 1/t18964;
            double t18966 = t18965*t18959*(1.0/2.0);
            double t18967 = t18966+1.0;
            double t18968 = log(t18967);
            double t18969 = a1p*c*t18953;
            double t18970 = t18969+1.0;
            double t18971 = c0p*t18970*t18968*2.0;
            double t18972 = t18951*t18951;
            double t18973 = t18952+1.0;
            double t18974 = -t18952+1.0;
            double t18975 = two_13*2.0;
            double t18976 = t18975-2.0;
            double t18977 = 1/t18976;
            double t18978 = 1/(t18945*t18945*t18945*t18945);
            double t18979 = t18972*t18972;
            double t18980 = pow(t18973,4.0/3.0);
            double t18981 = pow(t18974,4.0/3.0);
            double t18982 = t18980+t18981-2.0;
            double t18983 = pow(t18973,2.0/3.0);
            double t18984 = t18983*(1.0/2.0);
            double t18985 = pow(t18974,2.0/3.0);
            double t18986 = t18985*(1.0/2.0);
            double t18987 = t18984+t18986;
            double t18988 = 1/(t18987*t18987);
            double t18989 = 1/(t18987*t18987*t18987);
            double t18990 = 1/c0f;
            double t18991 = b1f*t18955;
            double t18992 = b3f*t18956;
            double t18993 = b4f*t18957*t18958;
            double t18994 = b2f*c*t18953;
            double t18995 = t18991+t18992+t18993+t18994;
            double t18996 = 1/t18995;
            double t18997 = t18990*t18996*(1.0/2.0);
            double t18998 = t18997+1.0;
            double t18999 = log(t18998);
            double t19000 = a1f*c*t18953;
            double t19001 = t19000+1.0;
            double t19027 = c0f*t18999*t19001*2.0;
            double t19002 = t18971-t19027;
            double t19003 = t18982*t18977*t18978*t18979*t19002;
            double t19004 = 1/d2fz0;
            double t19005 = 1/Aa;
            double t19006 = b1a*t18955;
            double t19007 = b3a*t18956;
            double t19008 = b4a*t18957*t18958;
            double t19009 = b2a*c*t18953;
            double t19010 = t19006+t19007+t19008+t19009;
            double t19011 = 1/t19010;
            double t19012 = t19011*t19005*(1.0/2.0);
            double t19013 = t19012+1.0;
            double t19014 = log(t19013);
            double t19015 = a1a*c*t18953;
            double t19016 = t19015+1.0;
            double t19017 = t18978*t18979;
            double t19018 = t19017-1.0;
            double t19019 = Aa*t18982*t18977*t19004*t19014*t19016*t19018*2.0;
            double t19020 = -t18971+t19003+t19019;
            double t19028 = t18946*t18989*t19020;
            double t19021 = exp(-t19028);
            double t19022 = t19021-1.0;
            double t19023 = 1/t19022;
            double t19024 = gamma_ab[index]*2.0;
            double t19025 = gamma_aa[index]+gamma_bb[index]+t19024;
            double t19026 = bet*t18946*t18947*t18948*t18949*t18988*t19023*t19025*(1.0/1.6E1);
            double t19029 = 1/(t18945*t18945);
            double t19030 = t18951*t19029;
            double t19031 = t18950+t19030;
            double t19032 = 1/pow(t18945,4.0/3.0);
            double t19033 = t19026+1.0;
            double t19034 = bet*bet;
            double t19035 = 1/(gammas*gammas);
            double t19036 = 1/(k*k);
            double t19037 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19038 = 1/pow(t18945,1.4E1/3.0);
            double t19039 = 1/(t19022*t19022);
            double t19040 = 1/(t18987*t18987*t18987*t18987);
            double t19041 = t19025*t19025;
            double t19042 = t19040*t19041*t19034*t19035*t19036*t19037*t19038*t19039*(1.0/2.56E2);
            double t19043 = t19042+t19026+1.0;
            double t19044 = 1/t19043;
            double t19045 = bet*t18946*t18947*t18948*t18949*t18988*t19033*t19025*t19044*(1.0/1.6E1);
            double t19046 = t19045+1.0;
            double t19047 = t18987*t18987;
            double t19048 = 1/pow(t18945,1.0E1/3.0);
            double t19049 = 1/pow(t18973,1.0/3.0);
            double t19050 = t19031*t19049*(1.0/3.0);
            double t19051 = 1/pow(t18974,1.0/3.0);
            double t19068 = t19031*t19051*(1.0/3.0);
            double t19052 = t19050-t19068;
            double t19053 = 1/t18967;
            double t19054 = 1/(t18964*t18964);
            double t19055 = 1/pow(t18945,5.0/3.0);
            double t19056 = b4p*t18957*t19055*(2.0/3.0);
            double t19057 = b2p*c*t19032*(1.0/3.0);
            double t19058 = 1/sqrt(t18954);
            double t19059 = b1p*c*t19032*t19058*(1.0/6.0);
            double t19060 = b3p*c*t18955*t19032*(1.0/2.0);
            double t19061 = t19060+t19056+t19057+t19059;
            double t19062 = t18970*t19061*t19053*t19054;
            double t19063 = 1/(t18945*t18945*t18945*t18945*t18945);
            double t19064 = pow(t18973,1.0/3.0);
            double t19065 = t19031*t19064*(4.0/3.0);
            double t19066 = pow(t18974,1.0/3.0);
            double t19072 = t19031*t19066*(4.0/3.0);
            double t19067 = -t19072+t19065;
            double t19069 = bet*t18946*t18947*t18948*t18988*t19023*t19025*t19048*(7.0/4.8E1);
            double t19070 = t18951*t18972*t18982*t18977*t18978*(t18971-t19027)*4.0;
            double t19071 = t18982*t18977*t18979*t19063*(t18971-t19027)*4.0;
            double t19073 = t18977*t18978*t18979*t19067*(t18971-t19027);
            double t19074 = 1/t18998;
            double t19075 = 1/(t18995*t18995);
            double t19076 = b4f*t18957*t19055*(2.0/3.0);
            double t19077 = b2f*c*t19032*(1.0/3.0);
            double t19078 = b1f*c*t19032*t19058*(1.0/6.0);
            double t19079 = b3f*c*t18955*t19032*(1.0/2.0);
            double t19080 = t19076+t19077+t19078+t19079;
            double t19081 = a1f*c*c0f*t18999*t19032*(2.0/3.0);
            double t19083 = a1p*c*c0p*t18968*t19032*(2.0/3.0);
            double t19097 = t19001*t19080*t19074*t19075;
            double t19082 = t19062+t19081-t19083-t19097;
            double t19084 = t18951*t18972*t18978*4.0;
            double t19085 = t18979*t19063*4.0;
            double t19086 = t19084+t19085;
            double t19087 = Aa*t18982*t18977*t19004*t19014*t19016*t19086*2.0;
            double t19088 = Aa*t18977*t19004*t19014*t19016*t19018*t19067*2.0;
            double t19089 = 1/t19013;
            double t19090 = 1/(t19010*t19010);
            double t19091 = b4a*t18957*t19055*(2.0/3.0);
            double t19092 = b2a*c*t19032*(1.0/3.0);
            double t19093 = b1a*c*t19032*t19058*(1.0/6.0);
            double t19094 = b3a*c*t18955*t19032*(1.0/2.0);
            double t19095 = t19091+t19092+t19093+t19094;
            double t19096 = Aa*a1a*c*t18982*t18977*t19004*t19014*t19032*t19018*(2.0/3.0);
            double t19101 = t18982*t18977*t18978*t18979*t19082;
            double t19102 = t18982*t18977*t19004*t19016*t19018*t19090*t19095*t19089;
            double t19098 = -t19101-t19102+t19070+t19062+t19071+t19073-t19083+t19087+t19096+t19088;
            double t19099 = t18946*t18989*t19098;
            double t19103 = t18946*t19020*t19040*t19052*3.0;
            double t19100 = -t19103+t19099;
            double t19104 = bet*t18946*t18947*t18948*t18949*t18988*t19100*t19021*t19025*t19039*(1.0/1.6E1);
            double t19105 = log(t19046);
            v_rho_b_[index] = -t18971+t19019-t18945*(-t19101-t19102+t19070+t19062+t19071+t19073-t19083+t19087+ \
               t19096+t19088+gammas*t19105*t19052*t19047*3.0+(gammas*t18987*t19047*(bet*t18946*t18947*t18948*t18988* \
               t19033*t19025*t19044*t19048*(7.0/4.8E1)+bet*t18946*t18947*t18948*t18949*t18988*t19025*t19044*(t19104+ \
               t19069-bet*t18946*t18947*t18948*t18949*t18989*t19023*t19025*t19052*(1.0/8.0))*(1.0/1.6E1)-bet*t18946* \
               t18947*t18948*t18949*t18989*t19033*t19025*t19052*t19044*(1.0/8.0)-bet*t18946*t18947*t18948*t18949* \
               t18988*t19033*t19025*1/(t19043*t19043)*(t19104+t19069+1/pow(t18945,1.7E1/3.0)*t19040*t19041*t19034* \
               t19035*t19036*t19037*t19039*(7.0/3.84E2)-bet*t18946*t18947*t18948*t18949*t18989*t19023*t19025*t19052* \
               (1.0/8.0)-1/(t18987*t18987*t18987*t18987*t18987)*t19041*t19034*t19052*t19035*t19036*t19037*t19038* \
               t19039*(1.0/6.4E1)+t19100*t19021*1/(t19022*t19022*t19022)*t19040*t19041*t19034*t19035*t19036*t19037* \
               t19038*(1.0/1.28E2))*(1.0/1.6E1)))/t19046)+gammas*t18987*t19105*t19047+t18982*t18977*t18978*t18979* \
               (t18971-t19027);
        } else if (rho_a[index] > cutoff_) {
            double t19882 = pow(2.0,2.0/3.0);
            double t19883 = 1/gammas;
            double t19884 = 1/k;
            double t19885 = 1/(pi_m12*pi_m12);
            double t19886 = 1/pow(rho_a[index],7.0/3.0);
            double t19887 = 1/pow(rho_a[index],1.0/3.0);
            double t19888 = c*t19887;
            double t19889 = sqrt(t19888);
            double t19890 = pow(t19888,3.0/2.0);
            double t19891 = c*c;
            double t19892 = 1/pow(rho_a[index],2.0/3.0);
            double t19893 = 1/c0p;
            double t19894 = b1p*t19889;
            double t19895 = b3p*t19890;
            double t19896 = b4p*t19891*t19892;
            double t19897 = b2p*c*t19887;
            double t19898 = t19894+t19895+t19896+t19897;
            double t19899 = 1/t19898;
            double t19900 = t19893*t19899*(1.0/2.0);
            double t19901 = t19900+1.0;
            double t19902 = log(t19901);
            double t19903 = a1p*c*t19887;
            double t19904 = t19903+1.0;
            double t19905 = gamma_ab[index]*2.0;
            double t19906 = gamma_aa[index]+t19905;
            double t19907 = pow(2.0,1.0/3.0);
            double t19908 = t19907*2.0;
            double t19909 = t19908-2.0;
            double t19910 = two_13*2.0;
            double t19911 = t19910-2.0;
            double t19912 = 1/t19911;
            double t19913 = 1/c0f;
            double t19914 = b1f*t19889;
            double t19915 = b3f*t19890;
            double t19916 = b4f*t19891*t19892;
            double t19917 = b2f*c*t19887;
            double t19918 = t19914+t19915+t19916+t19917;
            double t19919 = 1/t19918;
            double t19920 = t19913*t19919*(1.0/2.0);
            double t19921 = t19920+1.0;
            double t19922 = log(t19921);
            double t19923 = a1f*c*t19887;
            double t19924 = t19923+1.0;
            double t19925 = c0f*t19922*t19924*2.0;
            double t19926 = c0p*t19902*t19904*2.0;
            double t19927 = t19925-t19926;
            double t19928 = t19912*t19909*t19927;
            double t19929 = t19926+t19928;
            double t19930 = t19883*t19929*2.0;
            double t19931 = exp(t19930);
            double t19932 = t19931-1.0;
            v_rho_b_[index] = -t19926-t19928+gammas*log((bet*t19906*t19882*t19883*t19884*t19885*t19886*((bet* \
               t19906*t19882*t19883*t19884*t19885*t19886*(1.0/1.6E1))/(exp(t19883*(t19926+t19912*t19909*(t19925-c0p* \
               t19902*t19904*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1))/((bet*t19906*t19882*t19883*t19884*t19885*t19886*(1.0/ \
               1.6E1))/t19932+(bet*bet)*1/(gammas*gammas)*1/(k*k)*1/(pi_m12*pi_m12*pi_m12*pi_m12)*1/pow(rho_a[index],1.4E1/ \
               3.0)*1/(t19932*t19932)*(t19906*t19906)*t19907*(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t19509 = pow(2.0,2.0/3.0);
            double t19510 = 1/gammas;
            double t19511 = 1/k;
            double t19512 = 1/(pi_m12*pi_m12);
            double t19513 = 1/pow(rho_b[index],7.0/3.0);
            double t19514 = 1/pow(rho_b[index],1.0/3.0);
            double t19515 = c*t19514;
            double t19516 = sqrt(t19515);
            double t19517 = pow(t19515,3.0/2.0);
            double t19518 = c*c;
            double t19519 = 1/pow(rho_b[index],2.0/3.0);
            double t19520 = 1/c0p;
            double t19521 = b1p*t19516;
            double t19522 = b3p*t19517;
            double t19523 = b4p*t19518*t19519;
            double t19524 = b2p*c*t19514;
            double t19525 = t19521+t19522+t19523+t19524;
            double t19526 = 1/t19525;
            double t19527 = t19520*t19526*(1.0/2.0);
            double t19528 = t19527+1.0;
            double t19529 = log(t19528);
            double t19530 = a1p*c*t19514;
            double t19531 = t19530+1.0;
            double t19532 = gamma_ab[index]*2.0;
            double t19533 = gamma_bb[index]+t19532;
            double t19534 = pow(2.0,1.0/3.0);
            double t19535 = t19534*2.0;
            double t19536 = t19535-2.0;
            double t19537 = two_13*2.0;
            double t19538 = t19537-2.0;
            double t19539 = 1/t19538;
            double t19540 = 1/c0f;
            double t19541 = b1f*t19516;
            double t19542 = b3f*t19517;
            double t19543 = b4f*t19518*t19519;
            double t19544 = b2f*c*t19514;
            double t19545 = t19541+t19542+t19543+t19544;
            double t19546 = 1/t19545;
            double t19547 = t19540*t19546*(1.0/2.0);
            double t19548 = t19547+1.0;
            double t19549 = log(t19548);
            double t19550 = a1f*c*t19514;
            double t19551 = t19550+1.0;
            double t19552 = c0f*t19551*t19549*2.0;
            double t19553 = c0p*t19531*t19529*2.0;
            double t19554 = t19552-t19553;
            double t19555 = t19536*t19554*t19539;
            double t19556 = t19553+t19555;
            double t19557 = t19510*t19556*2.0;
            double t19558 = exp(t19557);
            double t19559 = t19558-1.0;
            double t19560 = 1/t19559;
            double t19561 = bet*t19510*t19511*t19512*t19513*t19533*t19560*t19509*(1.0/1.6E1);
            double t19562 = bet*bet;
            double t19563 = 1/(gammas*gammas);
            double t19564 = 1/(k*k);
            double t19565 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19566 = 1/pow(rho_b[index],1.4E1/3.0);
            double t19567 = 1/(t19559*t19559);
            double t19568 = t19533*t19533;
            double t19569 = t19534*t19562*t19563*t19564*t19565*t19566*t19567*t19568*(1.0/1.28E2);
            double t19570 = t19561+t19569+1.0;
            double t19571 = 1/t19570;
            double t19572 = 1/pow(rho_b[index],1.0E1/3.0);
            double t19573 = 1/pow(rho_b[index],4.0/3.0);
            double t19574 = 1/pow(rho_b[index],5.0/3.0);
            double t19575 = 1/sqrt(t19515);
            double t19576 = 1/t19528;
            double t19577 = 1/(t19525*t19525);
            double t19578 = b4p*t19518*t19574*(2.0/3.0);
            double t19579 = b2p*c*t19573*(1.0/3.0);
            double t19580 = b1p*c*t19573*t19575*(1.0/6.0);
            double t19581 = b3p*c*t19516*t19573*(1.0/2.0);
            double t19582 = t19580+t19581+t19578+t19579;
            double t19583 = t19531*t19582*t19576*t19577;
            double t19584 = t19561+1.0;
            double t19585 = bet*t19510*t19511*t19512*t19533*t19560*t19509*t19572*(7.0/4.8E1);
            double t19586 = 1/t19548;
            double t19587 = 1/(t19545*t19545);
            double t19588 = b4f*t19518*t19574*(2.0/3.0);
            double t19589 = b2f*c*t19573*(1.0/3.0);
            double t19590 = b1f*c*t19573*t19575*(1.0/6.0);
            double t19591 = b3f*c*t19516*t19573*(1.0/2.0);
            double t19592 = t19590+t19591+t19588+t19589;
            double t19593 = a1f*c*c0f*t19573*t19549*(2.0/3.0);
            double t19594 = a1p*c*c0p*t19573*t19529*(2.0/3.0);
            double t19598 = t19551*t19592*t19586*t19587;
            double t19595 = t19583+t19593-t19594-t19598;
            double t19596 = t19536*t19539*t19595;
            double t19597 = -t19583+t19594+t19596;
            double t19599 = bet*t19510*t19511*t19512*t19513*t19533*t19571*t19509*t19584*(1.0/1.6E1);
            double t19600 = t19599+1.0;
            v_rho_b_[index] = -t19553-t19555-(rho_a[index]+rho_b[index])*(t19583-t19594-t19596+(gammas*(bet*t19510* \
               t19511*t19512*t19533*t19571*t19509*t19572*t19584*(7.0/4.8E1)+bet*t19510*t19511*t19512*t19513*t19533* \
               t19571*t19509*(t19585-bet*t19511*t19512*t19513*t19533*t19509*t19563*t19558*t19567*t19597*(1.0/8.0) \
               )*(1.0/1.6E1)-bet*t19510*t19511*t19512*t19513*t19533*1/(t19570*t19570)*t19509*t19584*(t19585+1/pow(rho_b[index],1.7E1/ \
               3.0)*t19534*t19562*t19563*t19564*t19565*t19567*t19568*(7.0/1.92E2)-1/(gammas*gammas*gammas)*t19534* \
               t19562*t19564*t19565*t19566*t19558*1/(t19559*t19559*t19559)*t19568*t19597*(1.0/3.2E1)-bet*t19511*t19512* \
               t19513*t19533*t19509*t19563*t19558*t19567*t19597*(1.0/8.0))*(1.0/1.6E1))*(1.0/2.0))/t19600)+gammas* \
               log(t19600)*(1.0/2.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19107 = rho_a[index]+rho_b[index];
                double t19108 = 1/gammas;
                double t19109 = 1/k;
                double t19110 = 1/(pi_m12*pi_m12);
                double t19111 = 1/pow(t19107,7.0/3.0);
                double t19112 = 1/t19107;
                double t19113 = rho_a[index]-rho_b[index];
                double t19114 = t19112*t19113;
                double t19115 = 1/pow(t19107,1.0/3.0);
                double t19116 = c*t19115;
                double t19117 = sqrt(t19116);
                double t19118 = pow(t19116,3.0/2.0);
                double t19119 = c*c;
                double t19120 = 1/pow(t19107,2.0/3.0);
                double t19121 = 1/c0p;
                double t19122 = b1p*t19117;
                double t19123 = b3p*t19118;
                double t19124 = b4p*t19120*t19119;
                double t19125 = b2p*c*t19115;
                double t19126 = t19122+t19123+t19124+t19125;
                double t19127 = 1/t19126;
                double t19128 = t19121*t19127*(1.0/2.0);
                double t19129 = t19128+1.0;
                double t19130 = log(t19129);
                double t19131 = a1p*c*t19115;
                double t19132 = t19131+1.0;
                double t19133 = c0p*t19130*t19132*2.0;
                double t19134 = t19113*t19113;
                double t19135 = t19114+1.0;
                double t19136 = -t19114+1.0;
                double t19137 = two_13*2.0;
                double t19138 = t19137-2.0;
                double t19139 = 1/t19138;
                double t19140 = 1/(t19107*t19107*t19107*t19107);
                double t19141 = t19134*t19134;
                double t19142 = pow(t19135,4.0/3.0);
                double t19143 = pow(t19136,4.0/3.0);
                double t19144 = t19142+t19143-2.0;
                double t19145 = pow(t19135,2.0/3.0);
                double t19146 = t19145*(1.0/2.0);
                double t19147 = pow(t19136,2.0/3.0);
                double t19148 = t19147*(1.0/2.0);
                double t19149 = t19146+t19148;
                double t19150 = 1/(t19149*t19149);
                double t19151 = 1/(t19149*t19149*t19149);
                double t19152 = 1/c0f;
                double t19153 = b1f*t19117;
                double t19154 = b3f*t19118;
                double t19155 = b4f*t19120*t19119;
                double t19156 = b2f*c*t19115;
                double t19157 = t19153+t19154+t19155+t19156;
                double t19158 = 1/t19157;
                double t19159 = t19152*t19158*(1.0/2.0);
                double t19160 = t19159+1.0;
                double t19161 = log(t19160);
                double t19162 = a1f*c*t19115;
                double t19163 = t19162+1.0;
                double t19189 = c0f*t19161*t19163*2.0;
                double t19164 = t19133-t19189;
                double t19165 = t19140*t19141*t19144*t19164*t19139;
                double t19166 = 1/d2fz0;
                double t19167 = 1/Aa;
                double t19168 = b1a*t19117;
                double t19169 = b3a*t19118;
                double t19170 = b4a*t19120*t19119;
                double t19171 = b2a*c*t19115;
                double t19172 = t19170+t19171+t19168+t19169;
                double t19173 = 1/t19172;
                double t19174 = t19173*t19167*(1.0/2.0);
                double t19175 = t19174+1.0;
                double t19176 = log(t19175);
                double t19177 = a1a*c*t19115;
                double t19178 = t19177+1.0;
                double t19179 = t19140*t19141;
                double t19180 = t19179-1.0;
                double t19181 = Aa*t19144*t19180*t19139*t19166*t19176*t19178*2.0;
                double t19182 = -t19133+t19181+t19165;
                double t19190 = t19151*t19108*t19182;
                double t19183 = exp(-t19190);
                double t19184 = t19183-1.0;
                double t19185 = 1/t19184;
                double t19186 = gamma_ab[index]*2.0;
                double t19187 = gamma_aa[index]+gamma_bb[index]+t19186;
                double t19188 = bet*t19110*t19111*t19150*t19108*t19109*t19185*t19187*(1.0/1.6E1);
                double t19191 = t19149*t19149;
                double t19192 = t19188+1.0;
                double t19193 = bet*bet;
                double t19194 = 1/(gammas*gammas);
                double t19195 = 1/(k*k);
                double t19196 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19197 = 1/pow(t19107,1.4E1/3.0);
                double t19198 = 1/(t19184*t19184);
                double t19199 = 1/(t19149*t19149*t19149*t19149);
                double t19200 = t19187*t19187;
                double t19201 = t19200*t19193*t19194*t19195*t19196*t19197*t19198*t19199*(1.0/2.56E2);
                double t19202 = t19201+t19188+1.0;
                double t19203 = 1/t19202;
                v_gamma_aa_[index] = (gammas*t19107*t19191*t19149*(bet*t19110*t19111*t19203*t19150*t19108*t19109* \
                   t19192*(1.0/1.6E1)+t19203*t19193*t19185*t19194*t19195*t19187*t19196*t19197*t19199*(1.0/2.56E2)-bet* \
                   t19110*t19111*1/(t19202*t19202)*t19150*t19108*t19109*t19192*t19187*(bet*t19110*t19111*t19150*t19108* \
                   t19109*t19185*(1.0/1.6E1)+t19193*t19194*t19195*t19196*t19197*t19198*t19199*(gamma_aa[index]*2.0+gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/2.56E2))*(1.0/1.6E1)))/(bet*t19110*t19111*t19203*t19150*t19108*t19109* \
                   t19192*t19187*(1.0/1.6E1)+1.0);
            } else if (rho_a[index] > cutoff_) {
                double t19934 = pow(2.0,2.0/3.0);
                double t19935 = 1/gammas;
                double t19936 = 1/k;
                double t19937 = 1/(pi_m12*pi_m12);
                double t19938 = 1/pow(rho_a[index],7.0/3.0);
                double t19939 = 1/pow(rho_a[index],1.0/3.0);
                double t19940 = c*t19939;
                double t19941 = sqrt(t19940);
                double t19942 = pow(t19940,3.0/2.0);
                double t19943 = c*c;
                double t19944 = 1/pow(rho_a[index],2.0/3.0);
                double t19945 = 1/c0p;
                double t19946 = b1p*t19941;
                double t19947 = b3p*t19942;
                double t19948 = b4p*t19943*t19944;
                double t19949 = b2p*c*t19939;
                double t19950 = t19946+t19947+t19948+t19949;
                double t19951 = 1/t19950;
                double t19952 = t19951*t19945*(1.0/2.0);
                double t19953 = t19952+1.0;
                double t19954 = log(t19953);
                double t19955 = a1p*c*t19939;
                double t19956 = t19955+1.0;
                double t19957 = gamma_ab[index]*2.0;
                double t19958 = gamma_aa[index]+t19957;
                double t19959 = pow(2.0,1.0/3.0);
                double t19960 = t19959*2.0;
                double t19961 = t19960-2.0;
                double t19962 = two_13*2.0;
                double t19963 = t19962-2.0;
                double t19964 = 1/t19963;
                double t19965 = 1/c0f;
                double t19966 = b1f*t19941;
                double t19967 = b3f*t19942;
                double t19968 = b4f*t19943*t19944;
                double t19969 = b2f*c*t19939;
                double t19970 = t19966+t19967+t19968+t19969;
                double t19971 = 1/t19970;
                double t19972 = t19971*t19965*(1.0/2.0);
                double t19973 = t19972+1.0;
                double t19974 = log(t19973);
                double t19975 = a1f*c*t19939;
                double t19976 = t19975+1.0;
                double t19977 = c0f*t19974*t19976*2.0;
                double t19978 = c0p*t19954*t19956*2.0;
                double t19979 = t19977-t19978;
                double t19980 = t19961*t19964*t19979;
                double t19981 = t19980+t19978;
                double t19982 = t19935*t19981*2.0;
                double t19983 = exp(t19982);
                double t19984 = t19983-1.0;
                double t19985 = 1/t19984;
                double t19986 = bet*t19934*t19935*t19936*t19937*t19938*t19958*t19985*(1.0/1.6E1);
                double t19987 = bet*bet;
                double t19988 = 1/(gammas*gammas);
                double t19989 = 1/(k*k);
                double t19990 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19991 = 1/pow(rho_a[index],1.4E1/3.0);
                double t19992 = 1/(t19984*t19984);
                double t19993 = t19958*t19958;
                double t19994 = t19990*t19991*t19992*t19993*t19959*t19987*t19988*t19989*(1.0/1.28E2);
                double t19995 = t19994+t19986+1.0;
                double t19996 = 1/t19995;
                double t19997 = t19986+1.0;
                v_gamma_aa_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19934*t19935*t19936*t19937*t19938* \
                   t19996*t19997*(1.0/1.6E1)+t19990*t19991*t19958*t19985*t19959*t19987*t19996*t19988*t19989*(1.0/1.28E2) \
                   -bet*t19934*t19935*t19936*t19937*t19938*t19958*1/(t19995*t19995)*t19997*(bet*t19934*t19935*t19936* \
                   t19937*t19938*t19985*(1.0/1.6E1)+t19990*t19991*t19992*t19959*t19987*t19988*t19989*(gamma_aa[index]* \
                   2.0+gamma_ab[index]*4.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19934*t19935*t19936*t19937*t19938* \
                   t19958*t19996*((bet*t19934*t19935*t19936*t19937*t19938*t19958*(1.0/1.6E1))/(exp(t19935*(t19978+t19961* \
                   t19964*(t19977-c0p*t19954*t19956*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19205 = rho_a[index]+rho_b[index];
                double t19206 = 1/gammas;
                double t19207 = 1/k;
                double t19208 = 1/(pi_m12*pi_m12);
                double t19209 = 1/pow(t19205,7.0/3.0);
                double t19210 = 1/t19205;
                double t19211 = rho_a[index]-rho_b[index];
                double t19212 = t19210*t19211;
                double t19213 = 1/pow(t19205,1.0/3.0);
                double t19214 = c*t19213;
                double t19215 = sqrt(t19214);
                double t19216 = pow(t19214,3.0/2.0);
                double t19217 = c*c;
                double t19218 = 1/pow(t19205,2.0/3.0);
                double t19219 = 1/c0p;
                double t19220 = b1p*t19215;
                double t19221 = b3p*t19216;
                double t19222 = b4p*t19217*t19218;
                double t19223 = b2p*c*t19213;
                double t19224 = t19220+t19221+t19222+t19223;
                double t19225 = 1/t19224;
                double t19226 = t19225*t19219*(1.0/2.0);
                double t19227 = t19226+1.0;
                double t19228 = log(t19227);
                double t19229 = a1p*c*t19213;
                double t19230 = t19229+1.0;
                double t19231 = c0p*t19230*t19228*2.0;
                double t19232 = t19211*t19211;
                double t19233 = t19212+1.0;
                double t19234 = -t19212+1.0;
                double t19235 = two_13*2.0;
                double t19236 = t19235-2.0;
                double t19237 = 1/t19236;
                double t19238 = 1/(t19205*t19205*t19205*t19205);
                double t19239 = t19232*t19232;
                double t19240 = pow(t19233,4.0/3.0);
                double t19241 = pow(t19234,4.0/3.0);
                double t19242 = t19240+t19241-2.0;
                double t19243 = pow(t19233,2.0/3.0);
                double t19244 = t19243*(1.0/2.0);
                double t19245 = pow(t19234,2.0/3.0);
                double t19246 = t19245*(1.0/2.0);
                double t19247 = t19244+t19246;
                double t19248 = 1/(t19247*t19247);
                double t19249 = 1/(t19247*t19247*t19247);
                double t19250 = 1/c0f;
                double t19251 = b1f*t19215;
                double t19252 = b3f*t19216;
                double t19253 = b4f*t19217*t19218;
                double t19254 = b2f*c*t19213;
                double t19255 = t19251+t19252+t19253+t19254;
                double t19256 = 1/t19255;
                double t19257 = t19250*t19256*(1.0/2.0);
                double t19258 = t19257+1.0;
                double t19259 = log(t19258);
                double t19260 = a1f*c*t19213;
                double t19261 = t19260+1.0;
                double t19287 = c0f*t19261*t19259*2.0;
                double t19262 = t19231-t19287;
                double t19263 = t19242*t19262*t19237*t19238*t19239;
                double t19264 = 1/d2fz0;
                double t19265 = 1/Aa;
                double t19266 = b1a*t19215;
                double t19267 = b3a*t19216;
                double t19268 = b4a*t19217*t19218;
                double t19269 = b2a*c*t19213;
                double t19270 = t19266+t19267+t19268+t19269;
                double t19271 = 1/t19270;
                double t19272 = t19271*t19265*(1.0/2.0);
                double t19273 = t19272+1.0;
                double t19274 = log(t19273);
                double t19275 = a1a*c*t19213;
                double t19276 = t19275+1.0;
                double t19277 = t19238*t19239;
                double t19278 = t19277-1.0;
                double t19279 = Aa*t19242*t19237*t19264*t19274*t19276*t19278*2.0;
                double t19280 = -t19231+t19263+t19279;
                double t19288 = t19206*t19280*t19249;
                double t19281 = exp(-t19288);
                double t19282 = t19281-1.0;
                double t19283 = 1/t19282;
                double t19284 = gamma_ab[index]*2.0;
                double t19285 = gamma_aa[index]+gamma_bb[index]+t19284;
                double t19286 = bet*t19206*t19207*t19208*t19209*t19283*t19248*t19285*(1.0/1.6E1);
                double t19289 = t19247*t19247;
                double t19290 = t19286+1.0;
                double t19291 = bet*bet;
                double t19292 = 1/(gammas*gammas);
                double t19293 = 1/(k*k);
                double t19294 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19295 = 1/pow(t19205,1.4E1/3.0);
                double t19296 = 1/(t19282*t19282);
                double t19297 = 1/(t19247*t19247*t19247*t19247);
                double t19298 = t19285*t19285;
                double t19299 = t19291*t19292*t19293*t19294*t19295*t19296*t19297*t19298*(1.0/2.56E2);
                double t19300 = t19286+t19299+1.0;
                double t19301 = 1/t19300;
                v_gamma_ab_[index] = (gammas*t19205*t19247*t19289*(bet*t19301*t19206*t19207*t19208*t19209*t19290* \
                   t19248*(1.0/8.0)+t19301*t19291*t19283*t19292*t19293*t19285*t19294*t19295*t19297*(1.0/1.28E2)-bet*1/ \
                   (t19300*t19300)*t19206*t19207*t19208*t19209*t19290*t19248*t19285*(bet*t19206*t19207*t19208*t19209* \
                   t19283*t19248*(1.0/8.0)+t19291*t19292*t19293*t19294*t19295*t19296*t19297*(gamma_aa[index]*4.0+gamma_ab[index]* \
                   8.0+gamma_bb[index]*4.0)*(1.0/2.56E2))*(1.0/1.6E1)))/(bet*t19301*t19206*t19207*t19208*t19209*t19290* \
                   t19248*t19285*(1.0/1.6E1)+1.0);
            } else if (rho_a[index] > cutoff_) {
                double t19999 = pow(2.0,2.0/3.0);
                double t20000 = 1/gammas;
                double t20001 = 1/k;
                double t20002 = 1/(pi_m12*pi_m12);
                double t20003 = 1/pow(rho_a[index],7.0/3.0);
                double t20004 = 1/pow(rho_a[index],1.0/3.0);
                double t20005 = c*t20004;
                double t20006 = sqrt(t20005);
                double t20007 = pow(t20005,3.0/2.0);
                double t20008 = c*c;
                double t20009 = 1/pow(rho_a[index],2.0/3.0);
                double t20010 = 1/c0p;
                double t20011 = b1p*t20006;
                double t20012 = b3p*t20007;
                double t20013 = b4p*t20008*t20009;
                double t20014 = b2p*c*t20004;
                double t20015 = t20011+t20012+t20013+t20014;
                double t20016 = 1/t20015;
                double t20017 = t20010*t20016*(1.0/2.0);
                double t20018 = t20017+1.0;
                double t20019 = log(t20018);
                double t20020 = a1p*c*t20004;
                double t20021 = t20020+1.0;
                double t20022 = gamma_ab[index]*2.0;
                double t20023 = gamma_aa[index]+t20022;
                double t20024 = pow(2.0,1.0/3.0);
                double t20025 = t20024*2.0;
                double t20026 = t20025-2.0;
                double t20027 = two_13*2.0;
                double t20028 = t20027-2.0;
                double t20029 = 1/t20028;
                double t20030 = 1/c0f;
                double t20031 = b1f*t20006;
                double t20032 = b3f*t20007;
                double t20033 = b4f*t20008*t20009;
                double t20034 = b2f*c*t20004;
                double t20035 = t20031+t20032+t20033+t20034;
                double t20036 = 1/t20035;
                double t20037 = t20030*t20036*(1.0/2.0);
                double t20038 = t20037+1.0;
                double t20039 = log(t20038);
                double t20040 = a1f*c*t20004;
                double t20041 = t20040+1.0;
                double t20042 = c0f*t20041*t20039*2.0;
                double t20043 = c0p*t20021*t20019*2.0;
                double t20044 = t20042-t20043;
                double t20045 = t20026*t20044*t20029;
                double t20046 = t20043+t20045;
                double t20047 = t20000*t20046*2.0;
                double t20048 = exp(t20047);
                double t20049 = t20048-1.0;
                double t20050 = 1/t20049;
                double t20051 = bet*t19999*t20000*t20001*t20002*t20003*t20023*t20050*(1.0/1.6E1);
                double t20052 = bet*bet;
                double t20053 = 1/(gammas*gammas);
                double t20054 = 1/(k*k);
                double t20055 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t20056 = 1/pow(rho_a[index],1.4E1/3.0);
                double t20057 = 1/(t20049*t20049);
                double t20058 = t20023*t20023;
                double t20059 = t20024*t20052*t20053*t20054*t20055*t20056*t20057*t20058*(1.0/1.28E2);
                double t20060 = t20051+t20059+1.0;
                double t20061 = 1/t20060;
                double t20062 = t20051+1.0;
                v_gamma_ab_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19999*t20000*t20001*t20002*t20003* \
                   t20061*t20062*(1.0/8.0)+t20023*t20050*t20024*t20052*t20061*t20053*t20054*t20055*t20056*(1.0/6.4E1) \
                   -bet*t19999*t20000*t20001*t20002*t20003*t20023*1/(t20060*t20060)*t20062*(bet*t19999*t20000*t20001* \
                   t20002*t20003*t20050*(1.0/8.0)+t20024*t20052*t20053*t20054*t20055*t20056*t20057*(gamma_aa[index]*4.0+ \
                   gamma_ab[index]*8.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19999*t20000*t20001*t20002*t20003* \
                   t20023*t20061*((bet*t19999*t20000*t20001*t20002*t20003*t20023*(1.0/1.6E1))/(exp(t20000*(t20043+t20026* \
                   t20029*(t20042-c0p*t20021*t20019*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else if (rho_b[index] > cutoff_) {
                double t19603 = pow(2.0,2.0/3.0);
                double t19604 = 1/gammas;
                double t19605 = 1/k;
                double t19606 = 1/(pi_m12*pi_m12);
                double t19607 = 1/pow(rho_b[index],7.0/3.0);
                double t19608 = 1/pow(rho_b[index],1.0/3.0);
                double t19609 = c*t19608;
                double t19610 = sqrt(t19609);
                double t19611 = pow(t19609,3.0/2.0);
                double t19612 = c*c;
                double t19613 = 1/pow(rho_b[index],2.0/3.0);
                double t19614 = 1/c0p;
                double t19615 = b1p*t19610;
                double t19616 = b3p*t19611;
                double t19617 = b4p*t19612*t19613;
                double t19618 = b2p*c*t19608;
                double t19619 = t19615+t19616+t19617+t19618;
                double t19620 = 1/t19619;
                double t19621 = t19620*t19614*(1.0/2.0);
                double t19622 = t19621+1.0;
                double t19623 = log(t19622);
                double t19624 = a1p*c*t19608;
                double t19625 = t19624+1.0;
                double t19626 = gamma_ab[index]*2.0;
                double t19627 = gamma_bb[index]+t19626;
                double t19628 = pow(2.0,1.0/3.0);
                double t19629 = t19628*2.0;
                double t19630 = t19629-2.0;
                double t19631 = two_13*2.0;
                double t19632 = t19631-2.0;
                double t19633 = 1/t19632;
                double t19634 = 1/c0f;
                double t19635 = b1f*t19610;
                double t19636 = b3f*t19611;
                double t19637 = b4f*t19612*t19613;
                double t19638 = b2f*c*t19608;
                double t19639 = t19635+t19636+t19637+t19638;
                double t19640 = 1/t19639;
                double t19641 = t19640*t19634*(1.0/2.0);
                double t19642 = t19641+1.0;
                double t19643 = log(t19642);
                double t19644 = a1f*c*t19608;
                double t19645 = t19644+1.0;
                double t19646 = c0f*t19643*t19645*2.0;
                double t19647 = c0p*t19623*t19625*2.0;
                double t19648 = t19646-t19647;
                double t19649 = t19630*t19633*t19648;
                double t19650 = t19647+t19649;
                double t19651 = t19604*t19650*2.0;
                double t19652 = exp(t19651);
                double t19653 = t19652-1.0;
                double t19654 = 1/t19653;
                double t19655 = bet*t19603*t19604*t19605*t19606*t19607*t19627*t19654*(1.0/1.6E1);
                double t19656 = bet*bet;
                double t19657 = 1/(gammas*gammas);
                double t19658 = 1/(k*k);
                double t19659 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19660 = 1/pow(rho_b[index],1.4E1/3.0);
                double t19661 = 1/(t19653*t19653);
                double t19662 = t19627*t19627;
                double t19663 = t19660*t19661*t19662*t19628*t19656*t19657*t19658*t19659*(1.0/1.28E2);
                double t19664 = t19663+t19655+1.0;
                double t19665 = 1/t19664;
                double t19666 = t19655+1.0;
                v_gamma_ab_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19603*t19604*t19605*t19606*t19607* \
                   t19665*t19666*(1.0/8.0)+t19660*t19627*t19654*t19628*t19656*t19665*t19657*t19658*t19659*(1.0/6.4E1) \
                   -bet*t19603*t19604*t19605*t19606*t19607*t19627*1/(t19664*t19664)*t19666*(bet*t19603*t19604*t19605* \
                   t19606*t19607*t19654*(1.0/8.0)+t19660*t19661*t19628*t19656*t19657*t19658*t19659*(gamma_ab[index]*8.0+ \
                   gamma_bb[index]*4.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19603*t19604*t19605*t19606*t19607* \
                   t19627*t19665*((bet*t19603*t19604*t19605*t19606*t19607*t19627*(1.0/1.6E1))/(exp(t19604*(t19647+t19630* \
                   t19633*(t19646-c0p*t19623*t19625*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19303 = rho_a[index]+rho_b[index];
                double t19304 = 1/gammas;
                double t19305 = 1/k;
                double t19306 = 1/(pi_m12*pi_m12);
                double t19307 = 1/pow(t19303,7.0/3.0);
                double t19308 = 1/t19303;
                double t19309 = rho_a[index]-rho_b[index];
                double t19310 = t19308*t19309;
                double t19311 = 1/pow(t19303,1.0/3.0);
                double t19312 = c*t19311;
                double t19313 = sqrt(t19312);
                double t19314 = pow(t19312,3.0/2.0);
                double t19315 = c*c;
                double t19316 = 1/pow(t19303,2.0/3.0);
                double t19317 = 1/c0p;
                double t19318 = b1p*t19313;
                double t19319 = b3p*t19314;
                double t19320 = b4p*t19315*t19316;
                double t19321 = b2p*c*t19311;
                double t19322 = t19320+t19321+t19318+t19319;
                double t19323 = 1/t19322;
                double t19324 = t19323*t19317*(1.0/2.0);
                double t19325 = t19324+1.0;
                double t19326 = log(t19325);
                double t19327 = a1p*c*t19311;
                double t19328 = t19327+1.0;
                double t19329 = c0p*t19326*t19328*2.0;
                double t19330 = t19309*t19309;
                double t19331 = t19310+1.0;
                double t19332 = -t19310+1.0;
                double t19333 = two_13*2.0;
                double t19334 = t19333-2.0;
                double t19335 = 1/t19334;
                double t19336 = 1/(t19303*t19303*t19303*t19303);
                double t19337 = t19330*t19330;
                double t19338 = pow(t19331,4.0/3.0);
                double t19339 = pow(t19332,4.0/3.0);
                double t19340 = t19338+t19339-2.0;
                double t19341 = pow(t19331,2.0/3.0);
                double t19342 = t19341*(1.0/2.0);
                double t19343 = pow(t19332,2.0/3.0);
                double t19344 = t19343*(1.0/2.0);
                double t19345 = t19342+t19344;
                double t19346 = 1/(t19345*t19345);
                double t19347 = 1/(t19345*t19345*t19345);
                double t19348 = 1/c0f;
                double t19349 = b1f*t19313;
                double t19350 = b3f*t19314;
                double t19351 = b4f*t19315*t19316;
                double t19352 = b2f*c*t19311;
                double t19353 = t19350+t19351+t19352+t19349;
                double t19354 = 1/t19353;
                double t19355 = t19354*t19348*(1.0/2.0);
                double t19356 = t19355+1.0;
                double t19357 = log(t19356);
                double t19358 = a1f*c*t19311;
                double t19359 = t19358+1.0;
                double t19385 = c0f*t19357*t19359*2.0;
                double t19360 = t19329-t19385;
                double t19361 = t19340*t19360*t19335*t19336*t19337;
                double t19362 = 1/d2fz0;
                double t19363 = 1/Aa;
                double t19364 = b1a*t19313;
                double t19365 = b3a*t19314;
                double t19366 = b4a*t19315*t19316;
                double t19367 = b2a*c*t19311;
                double t19368 = t19364+t19365+t19366+t19367;
                double t19369 = 1/t19368;
                double t19370 = t19363*t19369*(1.0/2.0);
                double t19371 = t19370+1.0;
                double t19372 = log(t19371);
                double t19373 = a1a*c*t19311;
                double t19374 = t19373+1.0;
                double t19375 = t19336*t19337;
                double t19376 = t19375-1.0;
                double t19377 = Aa*t19340*t19335*t19362*t19372*t19374*t19376*2.0;
                double t19378 = t19361-t19329+t19377;
                double t19386 = t19304*t19347*t19378;
                double t19379 = exp(-t19386);
                double t19380 = t19379-1.0;
                double t19381 = 1/t19380;
                double t19382 = gamma_ab[index]*2.0;
                double t19383 = gamma_aa[index]+gamma_bb[index]+t19382;
                double t19384 = bet*t19304*t19305*t19306*t19307*t19381*t19346*t19383*(1.0/1.6E1);
                double t19387 = t19345*t19345;
                double t19388 = t19384+1.0;
                double t19389 = bet*bet;
                double t19390 = 1/(gammas*gammas);
                double t19391 = 1/(k*k);
                double t19392 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19393 = 1/pow(t19303,1.4E1/3.0);
                double t19394 = 1/(t19380*t19380);
                double t19395 = 1/(t19345*t19345*t19345*t19345);
                double t19396 = t19383*t19383;
                double t19397 = t19390*t19391*t19392*t19393*t19394*t19395*t19396*t19389*(1.0/2.56E2);
                double t19398 = t19384+t19397+1.0;
                double t19399 = 1/t19398;
                v_gamma_bb_[index] = (gammas*t19303*t19345*t19387*(bet*t19304*t19305*t19306*t19307*t19346*t19388* \
                   t19399*(1.0/1.6E1)+t19381*t19390*t19391*t19383*t19392*t19393*t19395*t19389*t19399*(1.0/2.56E2)-bet* \
                   t19304*t19305*t19306*t19307*t19346*t19383*t19388*1/(t19398*t19398)*(bet*t19304*t19305*t19306*t19307* \
                   t19381*t19346*(1.0/1.6E1)+t19390*t19391*t19392*t19393*t19394*t19395*t19389*(gamma_aa[index]*2.0+gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/2.56E2))*(1.0/1.6E1)))/(bet*t19304*t19305*t19306*t19307*t19346*t19383* \
                   t19388*t19399*(1.0/1.6E1)+1.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t19668 = pow(2.0,2.0/3.0);
                double t19669 = 1/gammas;
                double t19670 = 1/k;
                double t19671 = 1/(pi_m12*pi_m12);
                double t19672 = 1/pow(rho_b[index],7.0/3.0);
                double t19673 = 1/pow(rho_b[index],1.0/3.0);
                double t19674 = c*t19673;
                double t19675 = sqrt(t19674);
                double t19676 = pow(t19674,3.0/2.0);
                double t19677 = c*c;
                double t19678 = 1/pow(rho_b[index],2.0/3.0);
                double t19679 = 1/c0p;
                double t19680 = b1p*t19675;
                double t19681 = b3p*t19676;
                double t19682 = b4p*t19677*t19678;
                double t19683 = b2p*c*t19673;
                double t19684 = t19680+t19681+t19682+t19683;
                double t19685 = 1/t19684;
                double t19686 = t19685*t19679*(1.0/2.0);
                double t19687 = t19686+1.0;
                double t19688 = log(t19687);
                double t19689 = a1p*c*t19673;
                double t19690 = t19689+1.0;
                double t19691 = gamma_ab[index]*2.0;
                double t19692 = gamma_bb[index]+t19691;
                double t19693 = pow(2.0,1.0/3.0);
                double t19694 = t19693*2.0;
                double t19695 = t19694-2.0;
                double t19696 = two_13*2.0;
                double t19697 = t19696-2.0;
                double t19698 = 1/t19697;
                double t19699 = 1/c0f;
                double t19700 = b1f*t19675;
                double t19701 = b3f*t19676;
                double t19702 = b4f*t19677*t19678;
                double t19703 = b2f*c*t19673;
                double t19704 = t19700+t19701+t19702+t19703;
                double t19705 = 1/t19704;
                double t19706 = t19705*t19699*(1.0/2.0);
                double t19707 = t19706+1.0;
                double t19708 = log(t19707);
                double t19709 = a1f*c*t19673;
                double t19710 = t19709+1.0;
                double t19711 = c0f*t19710*t19708*2.0;
                double t19712 = c0p*t19690*t19688*2.0;
                double t19713 = t19711-t19712;
                double t19714 = t19713*t19695*t19698;
                double t19715 = t19712+t19714;
                double t19716 = t19715*t19669*2.0;
                double t19717 = exp(t19716);
                double t19718 = t19717-1.0;
                double t19719 = 1/t19718;
                double t19720 = bet*t19670*t19671*t19672*t19692*t19719*t19668*t19669*(1.0/1.6E1);
                double t19721 = bet*bet;
                double t19722 = 1/(gammas*gammas);
                double t19723 = 1/(k*k);
                double t19724 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19725 = 1/pow(rho_b[index],1.4E1/3.0);
                double t19726 = 1/(t19718*t19718);
                double t19727 = t19692*t19692;
                double t19728 = t19721*t19722*t19723*t19724*t19725*t19726*t19727*t19693*(1.0/1.28E2);
                double t19729 = t19720+t19728+1.0;
                double t19730 = 1/t19729;
                double t19731 = t19720+1.0;
                v_gamma_bb_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19730*t19731*t19670*t19671*t19672* \
                   t19668*t19669*(1.0/1.6E1)+t19721*t19730*t19722*t19723*t19724*t19725*t19692*t19719*t19693*(1.0/1.28E2) \
                   -bet*t19731*t19670*t19671*t19672*t19692*1/(t19729*t19729)*t19668*t19669*(bet*t19670*t19671*t19672* \
                   t19719*t19668*t19669*(1.0/1.6E1)+t19721*t19722*t19723*t19724*t19725*t19726*t19693*(gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19730*t19670*t19671*t19672*t19692* \
                   t19668*t19669*((bet*t19670*t19671*t19672*t19692*t19668*t19669*(1.0/1.6E1))/(exp(t19669*(t19712+t19695* \
                   t19698*(t19711-c0p*t19690*t19688*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        
        //V_rho_a_rho_b
        
        //V_rho_b_rho_b
        
        if (is_gga_) {

            //V_rho_a_gamma_aa
            
            //V_rho_a_gamma_ab
            
            //V_rho_a_gamma_bb
            
            //V_rho_b_gamma_aa
            
            //V_rho_b_gamma_ab
            
            //V_rho_b_gamma_bb
            
            //V_gamma_aa_gamma_aa
            
            //V_gamma_aa_gamma_ab
            
            //V_gamma_aa_gamma_bb
            
            //V_gamma_ab_gamma_ab
            
            //V_gamma_ab_gamma_bb
            
            //V_gamma_bb_gamma_bb
            
        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            
            //V_rho_a_tau_b
            
            //V_rho_b_tau_a
            
            //V_rho_b_tau_b
            
            //V_tau_a_tau_a
            
            //V_tau_a_tau_b
            
            //V_tau_b_tau_b
            
            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                            	
                //V_gamma_aa_tau_b
                            	
                //V_gamma_ab_tau_a
                            	
                //V_gamma_ab_tau_b
                            	
                //V_gamma_bb_tau_a
                            	
                //V_gamma_bb_tau_b
                          
            }  
        }
    }
}

}}

