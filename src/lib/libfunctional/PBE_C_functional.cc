/**********************************************************
* PBE_C_functional.cc: definitions for PBE_C_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PBE_C_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PBE_C_Functional::PBE_C_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PBE_C";
    description_ = "PBE Correlation";
    citation_ = "J.P. Perdew, K. Burke., and M. Ernzerhof, Phys. Rev. Lett., 77, 3865-3868, 1996";
    
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double pi_m12 = 5.6418958354775628E-01;
    params_.push_back(make_pair("pi_m12",pi_m12));
    double bet = 6.6724550603149205E-02;
    params_.push_back(make_pair("bet",bet));
    double gammas = 3.1090690869654901E-02;
    params_.push_back(make_pair("gammas",gammas));
    double d2fz0 = 1.7099209341613653E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double Aa = 1.6886900000000000E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1090699999999999E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545349999999999E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PBE_C_Functional::~PBE_C_Functional()
{
}
void PBE_C_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* gamma_aa;
    const double* tau_a;

    rho_a = prop->getDensityA();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double bet = params_[4].second;
    double gammas = params_[5].second;
    double d2fz0 = params_[6].second;
    double Aa = params_[7].second;
    double a1a = params_[8].second;
    double b1a = params_[9].second;
    double b2a = params_[10].second;
    double b3a = params_[11].second;
    double b4a = params_[12].second;
    double c0p = params_[13].second;
    double a1p = params_[14].second;
    double b1p = params_[15].second;
    double b2p = params_[16].second;
    double b3p = params_[17].second;
    double b4p = params_[18].second;
    double c0f = params_[19].second;
    double a1f = params_[20].second;
    double b1f = params_[21].second;
    double b2f = params_[22].second;
    double b3f = params_[23].second;
    double b4f = params_[24].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t20346 = 1.0/gammas;
            double t20347 = 1.0/k;
            double t20348 = 1.0/(pi_m12*pi_m12);
            double t20349 = rho_a[index]*2.0;
            double t20350 = 1.0/pow(t20349,1.0/3.0);
            double t20351 = c*t20350;
            double t20352 = 1.0/pow(t20349,7.0/3.0);
            double t20353 = 1.0/c0p;
            double t20354 = sqrt(t20351);
            double t20355 = b1p*t20354;
            double t20356 = pow(t20351,3.0/2.0);
            double t20357 = b3p*t20356;
            double t20358 = b2p*c*t20350;
            double t20359 = c*c;
            double t20360 = 1.0/pow(t20349,2.0/3.0);
            double t20361 = b4p*t20360*t20359;
            double t20362 = t20361+t20355+t20357+t20358;
            double t20363 = 1.0/t20362;
            double t20364 = t20353*t20363*(1.0/2.0);
            double t20365 = t20364+1.0;
            double t20366 = log(t20365);
            double t20367 = a1p*c*t20350;
            double t20368 = t20367+1.0;
            double t20369 = c0p*t20346*t20366*t20368*2.0;
            double t20370 = exp(t20369);
            double t20371 = t20370-1.0;
            double t20372 = 1.0/t20371;
            double t20373 = bet*gamma_aa[index]*t20352*t20372*t20346*t20347*t20348*(1.0/4.0);
            functional_[index] = rho_a[index]*(gammas*log((bet*gamma_aa[index]*t20352*t20346*t20347*t20348*(t20373+ \
               1.0)*(1.0/4.0))/(t20373+(bet*bet)*1.0/(gammas*gammas)*(gamma_aa[index]*gamma_aa[index])*1.0/(k*k)* \
               1.0/(pi_m12*pi_m12*pi_m12*pi_m12)*1.0/(t20371*t20371)*1.0/pow(t20349,1.4E1/3.0)*(1.0/1.6E1)+1.0)+1.0) \
               -c0p*t20366*t20368*2.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t20375 = 1.0/gammas;
            double t20376 = 1.0/k;
            double t20377 = 1.0/(pi_m12*pi_m12);
            double t20378 = rho_a[index]*2.0;
            double t20379 = 1.0/pow(t20378,1.0/3.0);
            double t20380 = c*t20379;
            double t20381 = 1.0/pow(t20378,7.0/3.0);
            double t20382 = 1.0/c0p;
            double t20383 = sqrt(t20380);
            double t20384 = b1p*t20383;
            double t20385 = pow(t20380,3.0/2.0);
            double t20386 = b3p*t20385;
            double t20387 = b2p*c*t20379;
            double t20388 = c*c;
            double t20389 = 1.0/pow(t20378,2.0/3.0);
            double t20390 = b4p*t20388*t20389;
            double t20391 = t20390+t20384+t20386+t20387;
            double t20392 = 1.0/t20391;
            double t20393 = t20382*t20392*(1.0/2.0);
            double t20394 = t20393+1.0;
            double t20395 = log(t20394);
            double t20396 = a1p*c*t20379;
            double t20397 = t20396+1.0;
            double t20398 = c0p*t20375*t20395*t20397*2.0;
            double t20399 = exp(t20398);
            double t20400 = t20399-1.0;
            double t20401 = 1.0/t20400;
            double t20402 = bet*gamma_aa[index]*t20401*t20381*t20375*t20376*t20377*(1.0/4.0);
            double t20403 = t20402+1.0;
            double t20404 = bet*bet;
            double t20405 = 1.0/(gammas*gammas);
            double t20406 = gamma_aa[index]*gamma_aa[index];
            double t20407 = 1.0/(k*k);
            double t20408 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t20409 = 1.0/pow(t20378,1.4E1/3.0);
            double t20410 = 1.0/(t20400*t20400);
            double t20411 = t20410*t20404*t20405*t20406*t20407*t20408*t20409*(1.0/1.6E1);
            double t20412 = t20402+t20411+1.0;
            double t20413 = 1.0/t20412;
            double t20414 = bet*gamma_aa[index]*t20403*t20413*t20381*t20375*t20376*t20377*(1.0/4.0);
            double t20415 = t20414+1.0;
            double t20416 = 1.0/pow(t20378,1.0E1/3.0);
            double t20417 = 1.0/pow(t20378,4.0/3.0);
            double t20418 = bet*gamma_aa[index]*t20401*t20416*t20375*t20376*t20377*(7.0/1.2E1);
            double t20419 = 1.0/t20394;
            double t20420 = 1.0/(t20391*t20391);
            double t20421 = b2p*c*t20417*(1.0/3.0);
            double t20422 = 1.0/pow(t20378,5.0/3.0);
            double t20423 = b4p*t20422*t20388*(2.0/3.0);
            double t20424 = 1.0/sqrt(t20380);
            double t20425 = b1p*c*t20424*t20417*(1.0/6.0);
            double t20426 = b3p*c*t20417*t20383*(1.0/2.0);
            double t20427 = t20421+t20423+t20425+t20426;
            double t20428 = t20420*t20427*t20419*t20397;
            double t20431 = a1p*c*c0p*t20417*t20395*(2.0/3.0);
            double t20429 = -t20431+t20428;
            double t20430 = bet*gamma_aa[index]*t20410*t20405*t20381*t20429*t20376*t20377*t20399*(1.0/4.0);
            v_rho_a_[index] = gammas*log(t20415)-rho_a[index]*(-t20431+t20428+(gammas*(bet*gamma_aa[index]*t20413* \
               t20381*t20375*t20376*t20377*(t20430+t20418)*(1.0/4.0)+bet*gamma_aa[index]*t20403*t20413*t20416*t20375* \
               t20376*t20377*(7.0/1.2E1)-bet*gamma_aa[index]*t20403*1.0/(t20412*t20412)*t20381*t20375*t20376*t20377* \
               (t20430+t20418+t20410*t20404*t20405*t20406*t20407*t20408*1.0/pow(t20378,1.7E1/3.0)*(7.0/2.4E1)+1.0/ \
               (gammas*gammas*gammas)*1.0/(t20400*t20400*t20400)*t20404*t20406*t20407*t20408*t20409*t20429*t20399* \
               (1.0/8.0))*(1.0/4.0)))/t20415)*2.0-c0p*t20395*t20397*2.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t20433 = 1.0/gammas;
                double t20434 = 1.0/k;
                double t20435 = 1.0/(pi_m12*pi_m12);
                double t20436 = rho_a[index]*2.0;
                double t20437 = 1.0/pow(t20436,1.0/3.0);
                double t20438 = c*t20437;
                double t20439 = 1.0/pow(t20436,7.0/3.0);
                double t20440 = 1.0/c0p;
                double t20441 = sqrt(t20438);
                double t20442 = b1p*t20441;
                double t20443 = pow(t20438,3.0/2.0);
                double t20444 = b3p*t20443;
                double t20445 = b2p*c*t20437;
                double t20446 = c*c;
                double t20447 = 1.0/pow(t20436,2.0/3.0);
                double t20448 = b4p*t20446*t20447;
                double t20449 = t20442+t20444+t20445+t20448;
                double t20450 = 1.0/t20449;
                double t20451 = t20440*t20450*(1.0/2.0);
                double t20452 = t20451+1.0;
                double t20453 = log(t20452);
                double t20454 = a1p*c*t20437;
                double t20455 = t20454+1.0;
                double t20456 = c0p*t20433*t20453*t20455*2.0;
                double t20457 = exp(t20456);
                double t20458 = t20457-1.0;
                double t20459 = 1.0/t20458;
                double t20460 = bet*gamma_aa[index]*t20433*t20434*t20435*t20439*t20459*(1.0/4.0);
                double t20461 = t20460+1.0;
                double t20462 = bet*bet;
                double t20463 = 1.0/(gammas*gammas);
                double t20464 = gamma_aa[index]*gamma_aa[index];
                double t20465 = 1.0/(k*k);
                double t20466 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t20467 = 1.0/pow(t20436,1.4E1/3.0);
                double t20468 = 1.0/(t20458*t20458);
                double t20469 = t20462*t20463*t20464*t20465*t20466*t20467*t20468*(1.0/1.6E1);
                double t20470 = t20460+t20469+1.0;
                double t20471 = 1.0/t20470;
                double t20472 = bet*gamma_aa[index]*t20433*t20434*t20461*t20435*t20471*t20439*(1.0/4.0);
                double t20473 = t20472+1.0;
                double t20474 = 1.0/t20473;
                double t20475 = 1.0/(t20470*t20470);
                v_gamma_aa_[index] = gammas*rho_a[index]*t20474*(bet*t20433*t20434*t20461*t20435*t20471*t20439*(1.0/ \
                   8.0)+gamma_aa[index]*t20462*t20471*t20463*t20465*t20466*t20467*t20459*(1.0/3.2E1)-bet*gamma_aa[index]* \
                   t20433*t20434*t20461*t20435*t20439*t20475*(bet*t20433*t20434*t20435*t20439*t20459*(1.0/8.0)+gamma_aa[index]* \
                   t20462*t20463*t20465*t20466*t20467*t20468*(1.0/1.6E1))*(1.0/4.0))*2.0+gammas*rho_a[index]*t20474*(bet* \
                   t20433*t20434*t20461*t20435*t20471*t20439*(1.0/1.6E1)+gamma_aa[index]*t20462*t20471*t20463*t20465* \
                   t20466*t20467*t20459*(1.0/6.4E1)-bet*gamma_aa[index]*t20433*t20434*t20461*t20435*t20439*t20475*(bet* \
                   t20433*t20434*t20435*t20439*t20459*(1.0/1.6E1)+gamma_aa[index]*t20462*t20463*t20465*t20466*t20467* \
                   t20468*(1.0/3.2E1))*(1.0/4.0))*4.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
                
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
                    
            //V_gamma_aa_gamma_aa
                    
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
                    
            //V_tau_a_tau_a
                   
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                       
            }
        }
    }
}
void PBE_C_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* rho_b;
    const double* gamma_aa;
    const double* gamma_ab;
    const double* gamma_bb;
    const double* tau_a;
    const double* tau_b;

    rho_a = prop->getDensityA();
    rho_b = prop->getDensityB();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
        gamma_ab = prop->getDensityGradientSquaredAB();
        gamma_bb = prop->getDensityGradientSquaredBB();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
        tau_b = prop->getKEDensityB();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double bet = params_[4].second;
    double gammas = params_[5].second;
    double d2fz0 = params_[6].second;
    double Aa = params_[7].second;
    double a1a = params_[8].second;
    double b1a = params_[9].second;
    double b2a = params_[10].second;
    double b3a = params_[11].second;
    double b4a = params_[12].second;
    double c0p = params_[13].second;
    double a1p = params_[14].second;
    double b1p = params_[15].second;
    double b2p = params_[16].second;
    double b3p = params_[17].second;
    double b4p = params_[18].second;
    double c0f = params_[19].second;
    double a1f = params_[20].second;
    double b1f = params_[21].second;
    double b2f = params_[22].second;
    double b3f = params_[23].second;
    double b4f = params_[24].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t18954 = rho_a[index]+rho_b[index];
            double t18955 = 1.0/pow(t18954,1.0/3.0);
            double t18956 = c*t18955;
            double t18957 = 1.0/gammas;
            double t18958 = 1.0/k;
            double t18959 = 1.0/(pi_m12*pi_m12);
            double t18960 = 1.0/pow(t18954,7.0/3.0);
            double t18961 = 1.0/t18954;
            double t18962 = rho_a[index]-rho_b[index];
            double t18963 = t18961*t18962;
            double t18964 = 1.0/c0p;
            double t18965 = sqrt(t18956);
            double t18966 = b1p*t18965;
            double t18967 = pow(t18956,3.0/2.0);
            double t18968 = b3p*t18967;
            double t18969 = c*c;
            double t18970 = 1.0/pow(t18954,2.0/3.0);
            double t18971 = b4p*t18970*t18969;
            double t18972 = b2p*c*t18955;
            double t18973 = t18971+t18972+t18966+t18968;
            double t18974 = 1.0/t18973;
            double t18975 = t18964*t18974*(1.0/2.0);
            double t18976 = t18975+1.0;
            double t18977 = log(t18976);
            double t18978 = a1p*c*t18955;
            double t18979 = t18978+1.0;
            double t18980 = c0p*t18977*t18979*2.0;
            double t18981 = t18962*t18962;
            double t18982 = t18963+1.0;
            double t18983 = -t18963+1.0;
            double t18984 = two_13*2.0;
            double t18985 = t18984-2.0;
            double t18986 = 1.0/t18985;
            double t18987 = 1.0/(t18954*t18954*t18954*t18954);
            double t18988 = t18981*t18981;
            double t18989 = pow(t18982,4.0/3.0);
            double t18990 = pow(t18983,4.0/3.0);
            double t18991 = t18990+t18989-2.0;
            double t18992 = pow(t18982,2.0/3.0);
            double t18993 = t18992*(1.0/2.0);
            double t18994 = pow(t18983,2.0/3.0);
            double t18995 = t18994*(1.0/2.0);
            double t18996 = t18993+t18995;
            double t18997 = 1.0/(t18996*t18996);
            double t18998 = 1.0/(t18996*t18996*t18996);
            double t18999 = 1.0/c0f;
            double t19000 = b1f*t18965;
            double t19001 = b3f*t18967;
            double t19002 = b4f*t18970*t18969;
            double t19003 = b2f*c*t18955;
            double t19004 = t19000+t19001+t19002+t19003;
            double t19005 = 1.0/t19004;
            double t19006 = t18999*t19005*(1.0/2.0);
            double t19007 = t19006+1.0;
            double t19008 = log(t19007);
            double t19009 = a1f*c*t18955;
            double t19010 = t19009+1.0;
            double t19036 = c0f*t19010*t19008*2.0;
            double t19011 = t18980-t19036;
            double t19012 = t18991*t18986*t18987*t18988*t19011;
            double t19013 = 1.0/d2fz0;
            double t19014 = 1.0/Aa;
            double t19015 = b1a*t18965;
            double t19016 = b3a*t18967;
            double t19017 = b4a*t18970*t18969;
            double t19018 = b2a*c*t18955;
            double t19019 = t19015+t19016+t19017+t19018;
            double t19020 = 1.0/t19019;
            double t19021 = t19020*t19014*(1.0/2.0);
            double t19022 = t19021+1.0;
            double t19023 = log(t19022);
            double t19024 = a1a*c*t18955;
            double t19025 = t19024+1.0;
            double t19026 = t18987*t18988;
            double t19027 = t19026-1.0;
            double t19028 = Aa*t18991*t18986*t19013*t19023*t19025*t19027*2.0;
            double t19029 = -t18980+t19012+t19028;
            double t19037 = t18957*t18998*t19029;
            double t19030 = exp(-t19037);
            double t19031 = t19030-1.0;
            double t19032 = 1.0/t19031;
            double t19033 = gamma_ab[index]*2.0;
            double t19034 = gamma_aa[index]+gamma_bb[index]+t19033;
            double t19035 = bet*t18960*t18957*t18958*t18959*t18997*t19032*t19034*(1.0/1.6E1);
            double t19038 = t18996*t18996;
            functional_[index] = t18954*(-t18980+t19012+t19028+gammas*t18996*t19038*log((bet*t18960*t18957*t18958* \
               t18959*t18997*t19034*(t19035+1.0)*(1.0/1.6E1))/(t19035+(bet*bet)*1.0/(gammas*gammas)*1.0/(k*k)*1.0/ \
               (pi_m12*pi_m12*pi_m12*pi_m12)*1.0/pow(t18954,1.4E1/3.0)*1.0/(t18996*t18996*t18996*t18996)*1.0/(t19031* \
               t19031)*(t19034*t19034)*(1.0/2.56E2)+1.0)+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t20006 = pow(2.0,2.0/3.0);
            double t20007 = 1.0/gammas;
            double t20008 = 1.0/k;
            double t20009 = 1.0/(pi_m12*pi_m12);
            double t20010 = 1.0/pow(rho_a[index],7.0/3.0);
            double t20011 = 1.0/pow(rho_a[index],1.0/3.0);
            double t20012 = c*t20011;
            double t20013 = sqrt(t20012);
            double t20014 = pow(t20012,3.0/2.0);
            double t20015 = c*c;
            double t20016 = 1.0/pow(rho_a[index],2.0/3.0);
            double t20017 = 1.0/c0p;
            double t20018 = b1p*t20013;
            double t20019 = b3p*t20014;
            double t20020 = b4p*t20015*t20016;
            double t20021 = b2p*c*t20011;
            double t20022 = t20020+t20021+t20018+t20019;
            double t20023 = 1.0/t20022;
            double t20024 = t20023*t20017*(1.0/2.0);
            double t20025 = t20024+1.0;
            double t20026 = log(t20025);
            double t20027 = a1p*c*t20011;
            double t20028 = t20027+1.0;
            double t20029 = gamma_ab[index]*2.0;
            double t20030 = gamma_aa[index]+t20029;
            double t20031 = pow(2.0,1.0/3.0);
            double t20032 = t20031*2.0;
            double t20033 = t20032-2.0;
            double t20034 = two_13*2.0;
            double t20035 = t20034-2.0;
            double t20036 = 1.0/t20035;
            double t20037 = 1.0/c0f;
            double t20038 = b1f*t20013;
            double t20039 = b3f*t20014;
            double t20040 = b4f*t20015*t20016;
            double t20041 = b2f*c*t20011;
            double t20042 = t20040+t20041+t20038+t20039;
            double t20043 = 1.0/t20042;
            double t20044 = t20043*t20037*(1.0/2.0);
            double t20045 = t20044+1.0;
            double t20046 = log(t20045);
            double t20047 = a1f*c*t20011;
            double t20048 = t20047+1.0;
            double t20049 = c0f*t20046*t20048*2.0;
            double t20050 = c0p*t20026*t20028*2.0;
            double t20051 = t20050-t20049;
            double t20056 = t20033*t20051*t20036;
            double t20052 = t20050-t20056;
            double t20053 = t20007*t20052*2.0;
            double t20054 = exp(t20053);
            double t20055 = t20054-1.0;
            double t20057 = 1.0/t20055;
            double t20058 = bet*t20010*t20030*t20006*t20007*t20008*t20009*t20057*(1.0/1.6E1);
            functional_[index] = (rho_a[index]+rho_b[index])*(-t20050+t20056+gammas*log((bet*t20010*t20030*t20006* \
               t20007*t20008*t20009*(t20058+1.0)*(1.0/1.6E1))/(t20058+(bet*bet)*1.0/(gammas*gammas)*1.0/(k*k)*1.0/ \
               (pi_m12*pi_m12*pi_m12*pi_m12)*1.0/pow(rho_a[index],1.4E1/3.0)*(t20030*t20030)*t20031*1.0/(t20055*t20055) \
               *(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0));
        } else if (rho_b[index] > cutoff_) {
            double t19674 = pow(2.0,2.0/3.0);
            double t19675 = 1.0/gammas;
            double t19676 = 1.0/k;
            double t19677 = 1.0/(pi_m12*pi_m12);
            double t19678 = 1.0/pow(rho_b[index],7.0/3.0);
            double t19679 = 1.0/pow(rho_b[index],1.0/3.0);
            double t19680 = c*t19679;
            double t19681 = sqrt(t19680);
            double t19682 = pow(t19680,3.0/2.0);
            double t19683 = c*c;
            double t19684 = 1.0/pow(rho_b[index],2.0/3.0);
            double t19685 = 1.0/c0p;
            double t19686 = b1p*t19681;
            double t19687 = b3p*t19682;
            double t19688 = b4p*t19683*t19684;
            double t19689 = b2p*c*t19679;
            double t19690 = t19686+t19687+t19688+t19689;
            double t19691 = 1.0/t19690;
            double t19692 = t19691*t19685*(1.0/2.0);
            double t19693 = t19692+1.0;
            double t19694 = log(t19693);
            double t19695 = a1p*c*t19679;
            double t19696 = t19695+1.0;
            double t19697 = gamma_ab[index]*2.0;
            double t19698 = gamma_bb[index]+t19697;
            double t19699 = pow(2.0,1.0/3.0);
            double t19700 = t19699*2.0;
            double t19701 = t19700-2.0;
            double t19702 = two_13*2.0;
            double t19703 = t19702-2.0;
            double t19704 = 1.0/t19703;
            double t19705 = 1.0/c0f;
            double t19706 = b1f*t19681;
            double t19707 = b3f*t19682;
            double t19708 = b4f*t19683*t19684;
            double t19709 = b2f*c*t19679;
            double t19710 = t19706+t19707+t19708+t19709;
            double t19711 = 1.0/t19710;
            double t19712 = t19711*t19705*(1.0/2.0);
            double t19713 = t19712+1.0;
            double t19714 = log(t19713);
            double t19715 = a1f*c*t19679;
            double t19716 = t19715+1.0;
            double t19717 = c0f*t19714*t19716*2.0;
            double t19718 = c0p*t19694*t19696*2.0;
            double t19719 = t19717-t19718;
            double t19720 = t19701*t19704*t19719;
            double t19721 = t19720+t19718;
            double t19722 = t19721*t19675*2.0;
            double t19723 = exp(t19722);
            double t19724 = t19723-1.0;
            double t19725 = 1.0/t19724;
            double t19726 = bet*t19725*t19674*t19675*t19676*t19677*t19678*t19698*(1.0/1.6E1);
            functional_[index] = -(rho_a[index]+rho_b[index])*(t19720+t19718-gammas*log((bet*t19674*t19675*t19676* \
               t19677*t19678*t19698*(t19726+1.0)*(1.0/1.6E1))/(t19726+(bet*bet)*1.0/(gammas*gammas)*1.0/(k*k)*1.0/ \
               (pi_m12*pi_m12*pi_m12*pi_m12)*1.0/pow(rho_b[index],1.4E1/3.0)*1.0/(t19724*t19724)*(t19698*t19698)* \
               t19699*(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t19040 = rho_a[index]+rho_b[index];
            double t19041 = 1.0/gammas;
            double t19042 = 1.0/k;
            double t19043 = 1.0/(pi_m12*pi_m12);
            double t19044 = 1.0/pow(t19040,7.0/3.0);
            double t19045 = 1.0/t19040;
            double t19046 = rho_a[index]-rho_b[index];
            double t19047 = t19045*t19046;
            double t19048 = 1.0/pow(t19040,1.0/3.0);
            double t19049 = c*t19048;
            double t19050 = sqrt(t19049);
            double t19051 = pow(t19049,3.0/2.0);
            double t19052 = c*c;
            double t19053 = 1.0/pow(t19040,2.0/3.0);
            double t19054 = 1.0/c0p;
            double t19055 = b1p*t19050;
            double t19056 = b3p*t19051;
            double t19057 = b4p*t19052*t19053;
            double t19058 = b2p*c*t19048;
            double t19059 = t19055+t19056+t19057+t19058;
            double t19060 = 1.0/t19059;
            double t19061 = t19060*t19054*(1.0/2.0);
            double t19062 = t19061+1.0;
            double t19063 = log(t19062);
            double t19064 = a1p*c*t19048;
            double t19065 = t19064+1.0;
            double t19066 = c0p*t19063*t19065*2.0;
            double t19067 = t19046*t19046;
            double t19068 = t19047+1.0;
            double t19069 = -t19047+1.0;
            double t19070 = two_13*2.0;
            double t19071 = t19070-2.0;
            double t19072 = 1.0/t19071;
            double t19073 = 1.0/(t19040*t19040*t19040*t19040);
            double t19074 = t19067*t19067;
            double t19075 = pow(t19068,4.0/3.0);
            double t19076 = pow(t19069,4.0/3.0);
            double t19077 = t19075+t19076-2.0;
            double t19078 = pow(t19068,2.0/3.0);
            double t19079 = t19078*(1.0/2.0);
            double t19080 = pow(t19069,2.0/3.0);
            double t19081 = t19080*(1.0/2.0);
            double t19082 = t19081+t19079;
            double t19083 = 1.0/(t19082*t19082);
            double t19084 = 1.0/(t19082*t19082*t19082);
            double t19085 = 1.0/c0f;
            double t19086 = b1f*t19050;
            double t19087 = b3f*t19051;
            double t19088 = b4f*t19052*t19053;
            double t19089 = b2f*c*t19048;
            double t19090 = t19086+t19087+t19088+t19089;
            double t19091 = 1.0/t19090;
            double t19092 = t19091*t19085*(1.0/2.0);
            double t19093 = t19092+1.0;
            double t19094 = log(t19093);
            double t19095 = a1f*c*t19048;
            double t19096 = t19095+1.0;
            double t19122 = c0f*t19094*t19096*2.0;
            double t19097 = -t19122+t19066;
            double t19098 = t19072*t19073*t19074*t19077*t19097;
            double t19099 = 1.0/d2fz0;
            double t19100 = 1.0/Aa;
            double t19101 = b1a*t19050;
            double t19102 = b3a*t19051;
            double t19103 = b4a*t19052*t19053;
            double t19104 = b2a*c*t19048;
            double t19105 = t19101+t19102+t19103+t19104;
            double t19106 = 1.0/t19105;
            double t19107 = t19100*t19106*(1.0/2.0);
            double t19108 = t19107+1.0;
            double t19109 = log(t19108);
            double t19110 = a1a*c*t19048;
            double t19111 = t19110+1.0;
            double t19112 = t19073*t19074;
            double t19113 = t19112-1.0;
            double t19114 = Aa*t19111*t19113*t19072*t19109*t19077*t19099*2.0;
            double t19115 = t19114-t19066+t19098;
            double t19116 = exp(-t19041*t19115*t19084);
            double t19117 = t19116-1.0;
            double t19118 = 1.0/t19117;
            double t19119 = gamma_ab[index]*2.0;
            double t19120 = gamma_aa[index]+gamma_bb[index]+t19119;
            double t19121 = bet*t19120*t19041*t19042*t19043*t19044*t19118*t19083*(1.0/1.6E1);
            double t19123 = 1.0/(t19040*t19040);
            double t19149 = t19123*t19046;
            double t19124 = t19045-t19149;
            double t19125 = 1.0/pow(t19040,4.0/3.0);
            double t19126 = t19122-t19066;
            double t19127 = t19072*t19126*t19073*t19074*t19077;
            double t19128 = -t19114+t19127+t19066;
            double t19129 = t19041*t19128*t19084;
            double t19130 = exp(t19129);
            double t19131 = t19130-1.0;
            double t19132 = 1.0/t19131;
            double t19133 = bet*t19120*t19041*t19042*t19132*t19043*t19044*t19083*(1.0/1.6E1);
            double t19134 = bet*bet;
            double t19135 = 1.0/(gammas*gammas);
            double t19136 = 1.0/(k*k);
            double t19137 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19138 = 1.0/pow(t19040,1.4E1/3.0);
            double t19139 = 1.0/(t19131*t19131);
            double t19140 = 1.0/(t19082*t19082*t19082*t19082);
            double t19141 = t19120*t19120;
            double t19142 = t19140*t19141*t19134*t19135*t19136*t19137*t19138*t19139*(1.0/2.56E2);
            double t19143 = t19082*t19082;
            double t19144 = t19133+1.0;
            double t19145 = t19133+t19142+1.0;
            double t19146 = 1.0/t19145;
            double t19147 = 1.0/pow(t19040,1.0E1/3.0);
            double t19148 = 1.0/pow(t19068,1.0/3.0);
            double t19150 = t19124*t19148*(1.0/3.0);
            double t19151 = 1.0/pow(t19069,1.0/3.0);
            double t19168 = t19124*t19151*(1.0/3.0);
            double t19152 = t19150-t19168;
            double t19153 = 1.0/t19062;
            double t19154 = 1.0/(t19059*t19059);
            double t19155 = 1.0/pow(t19040,5.0/3.0);
            double t19156 = b4p*t19052*t19155*(2.0/3.0);
            double t19157 = b2p*c*t19125*(1.0/3.0);
            double t19158 = 1.0/sqrt(t19049);
            double t19159 = b1p*c*t19125*t19158*(1.0/6.0);
            double t19160 = b3p*c*t19050*t19125*(1.0/2.0);
            double t19161 = t19160+t19156+t19157+t19159;
            double t19162 = t19161*t19153*t19154*t19065;
            double t19163 = 1.0/(t19040*t19040*t19040*t19040*t19040);
            double t19164 = pow(t19068,1.0/3.0);
            double t19165 = t19124*t19164*(4.0/3.0);
            double t19166 = pow(t19069,1.0/3.0);
            double t19172 = t19124*t19166*(4.0/3.0);
            double t19167 = -t19172+t19165;
            double t19169 = bet*t19120*t19041*t19042*t19132*t19043*t19083*t19147*(7.0/4.8E1);
            double t19170 = bet*t19120*t19041*t19042*t19132*t19043*t19044*t19152*t19084*(1.0/8.0);
            double t19171 = t19072*t19126*t19046*t19073*t19067*t19077*4.0;
            double t19173 = t19072*t19126*t19073*t19074*t19167;
            double t19174 = 1.0/t19093;
            double t19175 = 1.0/(t19090*t19090);
            double t19176 = b4f*t19052*t19155*(2.0/3.0);
            double t19177 = b2f*c*t19125*(1.0/3.0);
            double t19178 = b1f*c*t19125*t19158*(1.0/6.0);
            double t19179 = b3f*c*t19050*t19125*(1.0/2.0);
            double t19180 = t19176+t19177+t19178+t19179;
            double t19181 = a1f*c*c0f*t19125*t19094*(2.0/3.0);
            double t19183 = a1p*c*c0p*t19125*t19063*(2.0/3.0);
            double t19194 = t19180*t19174*t19175*t19096;
            double t19182 = t19162+t19181-t19183-t19194;
            double t19184 = t19163*t19074*4.0;
            double t19195 = t19046*t19073*t19067*4.0;
            double t19205 = t19184-t19195;
            double t19185 = Aa*t19111*t19205*t19072*t19109*t19077*t19099*2.0;
            double t19186 = 1.0/t19108;
            double t19187 = 1.0/(t19105*t19105);
            double t19188 = b4a*t19052*t19155*(2.0/3.0);
            double t19189 = b2a*c*t19125*(1.0/3.0);
            double t19190 = b1a*c*t19125*t19158*(1.0/6.0);
            double t19191 = b3a*c*t19050*t19125*(1.0/2.0);
            double t19192 = t19190+t19191+t19188+t19189;
            double t19193 = Aa*a1a*c*t19113*t19125*t19072*t19109*t19077*t19099*(2.0/3.0);
            double t19199 = t19072*t19126*t19163*t19074*t19077*4.0;
            double t19200 = t19072*t19073*t19074*t19182*t19077;
            double t19201 = Aa*t19111*t19113*t19072*t19109*t19167*t19099*2.0;
            double t19202 = t19111*t19113*t19072*t19192*t19077*t19186*t19187*t19099;
            double t19196 = -t19200-t19201-t19202+t19162+t19171+t19173-t19183+t19193+t19185-t19199;
            double t19197 = t19041*t19084*t19196;
            double t19203 = t19041*t19140*t19152*t19128*3.0;
            double t19198 = -t19203+t19197;
            double t19204 = bet*t19120*t19130*t19041*t19042*t19043*t19044*t19083*t19139*t19198*(1.0/1.6E1);
            double t19206 = bet*t19120*t19041*t19042*t19043*t19044*t19144*t19083*t19146*(1.0/1.6E1);
            double t19207 = t19206+1.0;
            v_rho_a_[index] = t19114-t19127-t19066+t19040*(t19201+t19202-t19171-t19173+t19183-t19193-t19185+t19199- \
               t19161*t19153*t19154*t19065+gammas*t19143*t19152*log((bet*t19120*t19041*t19042*t19043*t19044*t19083* \
               (t19121+1.0)*(1.0/1.6E1))/(t19121+t19142+1.0)+1.0)*3.0+t19072*t19073*t19074*t19077*(t19162+t19181- \
               t19183-t19194)-(gammas*t19143*t19082*(bet*t19120*t19041*t19042*t19043*t19144*t19083*t19146*t19147* \
               (7.0/4.8E1)+bet*t19120*t19041*t19042*t19043*t19044*t19083*t19146*(t19204+t19170+t19169)*(1.0/1.6E1) \
               +bet*t19120*t19041*t19042*t19043*t19044*t19152*t19144*t19146*t19084*(1.0/8.0)-bet*t19120*t19041*t19042* \
               t19043*t19044*t19144*1.0/(t19145*t19145)*t19083*(t19204+t19170+t19169+1.0/pow(t19040,1.7E1/3.0)*t19140* \
               t19141*t19134*t19135*t19136*t19137*t19139*(7.0/3.84E2)+t19141*t19134*t19152*t19135*1.0/(t19082*t19082* \
               t19082*t19082*t19082)*t19136*t19137*t19138*t19139*(1.0/6.4E1)+t19130*1.0/(t19131*t19131*t19131)*t19140* \
               t19141*t19134*t19135*t19136*t19137*t19138*t19198*(1.0/1.28E2))*(1.0/1.6E1)))/t19207)+gammas*t19143* \
               t19082*log(t19207);
        } else if (rho_a[index] > cutoff_) {
            double t20060 = pow(2.0,2.0/3.0);
            double t20061 = 1.0/gammas;
            double t20062 = 1.0/k;
            double t20063 = 1.0/(pi_m12*pi_m12);
            double t20064 = 1.0/pow(rho_a[index],7.0/3.0);
            double t20065 = 1.0/pow(rho_a[index],1.0/3.0);
            double t20066 = c*t20065;
            double t20067 = sqrt(t20066);
            double t20068 = pow(t20066,3.0/2.0);
            double t20069 = c*c;
            double t20070 = 1.0/pow(rho_a[index],2.0/3.0);
            double t20071 = 1.0/c0p;
            double t20072 = b1p*t20067;
            double t20073 = b3p*t20068;
            double t20074 = b4p*t20070*t20069;
            double t20075 = b2p*c*t20065;
            double t20076 = t20072+t20073+t20074+t20075;
            double t20077 = 1.0/t20076;
            double t20078 = t20071*t20077*(1.0/2.0);
            double t20079 = t20078+1.0;
            double t20080 = log(t20079);
            double t20081 = a1p*c*t20065;
            double t20082 = t20081+1.0;
            double t20083 = gamma_ab[index]*2.0;
            double t20084 = gamma_aa[index]+t20083;
            double t20085 = pow(2.0,1.0/3.0);
            double t20086 = t20085*2.0;
            double t20087 = t20086-2.0;
            double t20088 = two_13*2.0;
            double t20089 = t20088-2.0;
            double t20090 = 1.0/t20089;
            double t20091 = 1.0/c0f;
            double t20092 = b1f*t20067;
            double t20093 = b3f*t20068;
            double t20094 = b4f*t20070*t20069;
            double t20095 = b2f*c*t20065;
            double t20096 = t20092+t20093+t20094+t20095;
            double t20097 = 1.0/t20096;
            double t20098 = t20091*t20097*(1.0/2.0);
            double t20099 = t20098+1.0;
            double t20100 = log(t20099);
            double t20101 = a1f*c*t20065;
            double t20102 = t20101+1.0;
            double t20103 = c0f*t20100*t20102*2.0;
            double t20104 = c0p*t20080*t20082*2.0;
            double t20105 = t20103-t20104;
            double t20106 = t20105*t20090*t20087;
            double t20107 = t20104+t20106;
            double t20108 = t20061*t20107*2.0;
            double t20109 = exp(t20108);
            double t20110 = t20109-1.0;
            double t20111 = 1.0/t20110;
            double t20112 = bet*t20111*t20060*t20061*t20062*t20063*t20064*t20084*(1.0/1.6E1);
            double t20113 = bet*bet;
            double t20114 = 1.0/(gammas*gammas);
            double t20115 = 1.0/(k*k);
            double t20116 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t20117 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t20118 = 1.0/(t20110*t20110);
            double t20119 = t20084*t20084;
            double t20120 = t20113*t20114*t20115*t20116*t20117*t20118*t20119*t20085*(1.0/1.28E2);
            double t20121 = t20120+t20112+1.0;
            double t20122 = 1.0/t20121;
            double t20123 = 1.0/pow(rho_a[index],1.0E1/3.0);
            double t20124 = 1.0/pow(rho_a[index],4.0/3.0);
            double t20125 = 1.0/pow(rho_a[index],5.0/3.0);
            double t20126 = 1.0/sqrt(t20066);
            double t20127 = 1.0/t20079;
            double t20128 = 1.0/(t20076*t20076);
            double t20129 = b4p*t20125*t20069*(2.0/3.0);
            double t20130 = b2p*c*t20124*(1.0/3.0);
            double t20131 = b1p*c*t20124*t20126*(1.0/6.0);
            double t20132 = b3p*c*t20124*t20067*(1.0/2.0);
            double t20133 = t20130+t20131+t20132+t20129;
            double t20134 = t20133*t20082*t20127*t20128;
            double t20135 = t20112+1.0;
            double t20136 = bet*t20111*t20060*t20123*t20061*t20062*t20063*t20084*(7.0/4.8E1);
            double t20137 = 1.0/t20099;
            double t20138 = 1.0/(t20096*t20096);
            double t20139 = b4f*t20125*t20069*(2.0/3.0);
            double t20140 = b2f*c*t20124*(1.0/3.0);
            double t20141 = b1f*c*t20124*t20126*(1.0/6.0);
            double t20142 = b3f*c*t20124*t20067*(1.0/2.0);
            double t20143 = t20140+t20141+t20142+t20139;
            double t20144 = a1f*c*c0f*t20100*t20124*(2.0/3.0);
            double t20145 = a1p*c*c0p*t20124*t20080*(2.0/3.0);
            double t20149 = t20102*t20143*t20137*t20138;
            double t20146 = t20134+t20144-t20145-t20149;
            double t20147 = t20090*t20146*t20087;
            double t20148 = -t20134+t20145+t20147;
            double t20150 = bet*t20122*t20060*t20061*t20062*t20063*t20135*t20064*t20084*(1.0/1.6E1);
            double t20151 = t20150+1.0;
            v_rho_a_[index] = -t20104-t20106-(rho_a[index]+rho_b[index])*(t20134-t20145-t20147+(gammas*(bet*t20122* \
               t20060*t20123*t20061*t20062*t20063*t20135*t20084*(7.0/4.8E1)+bet*t20122*t20060*t20061*t20062*t20063* \
               t20064*t20084*(t20136-bet*t20060*t20114*t20062*t20063*t20064*t20109*t20118*t20084*t20148*(1.0/8.0) \
               )*(1.0/1.6E1)-bet*1.0/(t20121*t20121)*t20060*t20061*t20062*t20063*t20135*t20064*t20084*(t20136+1.0/ \
               pow(rho_a[index],1.7E1/3.0)*t20113*t20114*t20115*t20116*t20118*t20119*t20085*(7.0/1.92E2)-1.0/(gammas* \
               gammas*gammas)*1.0/(t20110*t20110*t20110)*t20113*t20115*t20116*t20117*t20109*t20119*t20085*t20148* \
               (1.0/3.2E1)-bet*t20060*t20114*t20062*t20063*t20064*t20109*t20118*t20084*t20148*(1.0/8.0))*(1.0/1.6E1) \
               )*(1.0/2.0))/t20151)+gammas*log(t20151)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t19728 = pow(2.0,2.0/3.0);
            double t19729 = 1.0/gammas;
            double t19730 = 1.0/k;
            double t19731 = 1.0/(pi_m12*pi_m12);
            double t19732 = 1.0/pow(rho_b[index],7.0/3.0);
            double t19733 = 1.0/pow(rho_b[index],1.0/3.0);
            double t19734 = c*t19733;
            double t19735 = sqrt(t19734);
            double t19736 = pow(t19734,3.0/2.0);
            double t19737 = c*c;
            double t19738 = 1.0/pow(rho_b[index],2.0/3.0);
            double t19739 = 1.0/c0p;
            double t19740 = b1p*t19735;
            double t19741 = b3p*t19736;
            double t19742 = b4p*t19737*t19738;
            double t19743 = b2p*c*t19733;
            double t19744 = t19740+t19741+t19742+t19743;
            double t19745 = 1.0/t19744;
            double t19746 = t19745*t19739*(1.0/2.0);
            double t19747 = t19746+1.0;
            double t19748 = log(t19747);
            double t19749 = a1p*c*t19733;
            double t19750 = t19749+1.0;
            double t19751 = gamma_ab[index]*2.0;
            double t19752 = gamma_bb[index]+t19751;
            double t19753 = pow(2.0,1.0/3.0);
            double t19754 = t19753*2.0;
            double t19755 = t19754-2.0;
            double t19756 = two_13*2.0;
            double t19757 = t19756-2.0;
            double t19758 = 1.0/t19757;
            double t19759 = 1.0/c0f;
            double t19760 = b1f*t19735;
            double t19761 = b3f*t19736;
            double t19762 = b4f*t19737*t19738;
            double t19763 = b2f*c*t19733;
            double t19764 = t19760+t19761+t19762+t19763;
            double t19765 = 1.0/t19764;
            double t19766 = t19765*t19759*(1.0/2.0);
            double t19767 = t19766+1.0;
            double t19768 = log(t19767);
            double t19769 = a1f*c*t19733;
            double t19770 = t19769+1.0;
            double t19771 = c0f*t19770*t19768*2.0;
            double t19772 = c0p*t19750*t19748*2.0;
            double t19773 = t19771-t19772;
            double t19774 = t19755*t19773*t19758;
            double t19775 = t19772+t19774;
            double t19776 = t19729*t19775*2.0;
            double t19777 = exp(t19776);
            double t19778 = t19777-1.0;
            v_rho_a_[index] = -t19772-t19774+gammas*log((bet*t19730*t19731*t19732*t19752*t19728*t19729*((bet* \
               t19730*t19731*t19732*t19752*t19728*t19729*(1.0/1.6E1))/(exp(t19729*(t19772+t19755*t19758*(t19771-c0p* \
               t19750*t19748*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1))/((bet*t19730*t19731*t19732*t19752*t19728*t19729*(1.0/ \
               1.6E1))/t19778+(bet*bet)*1.0/(gammas*gammas)*1.0/(k*k)*1.0/(pi_m12*pi_m12*pi_m12*pi_m12)*1.0/pow(rho_b[index],1.4E1/ \
               3.0)*(t19752*t19752)*t19753*1.0/(t19778*t19778)*(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t19209 = rho_a[index]+rho_b[index];
            double t19210 = 1.0/gammas;
            double t19211 = 1.0/k;
            double t19212 = 1.0/(pi_m12*pi_m12);
            double t19213 = 1.0/pow(t19209,7.0/3.0);
            double t19214 = 1.0/t19209;
            double t19215 = rho_a[index]-rho_b[index];
            double t19216 = t19214*t19215;
            double t19217 = 1.0/pow(t19209,1.0/3.0);
            double t19218 = c*t19217;
            double t19219 = sqrt(t19218);
            double t19220 = pow(t19218,3.0/2.0);
            double t19221 = c*c;
            double t19222 = 1.0/pow(t19209,2.0/3.0);
            double t19223 = 1.0/c0p;
            double t19224 = b1p*t19219;
            double t19225 = b3p*t19220;
            double t19226 = b4p*t19221*t19222;
            double t19227 = b2p*c*t19217;
            double t19228 = t19224+t19225+t19226+t19227;
            double t19229 = 1.0/t19228;
            double t19230 = t19223*t19229*(1.0/2.0);
            double t19231 = t19230+1.0;
            double t19232 = log(t19231);
            double t19233 = a1p*c*t19217;
            double t19234 = t19233+1.0;
            double t19235 = c0p*t19232*t19234*2.0;
            double t19236 = t19215*t19215;
            double t19237 = t19216+1.0;
            double t19238 = -t19216+1.0;
            double t19239 = two_13*2.0;
            double t19240 = t19239-2.0;
            double t19241 = 1.0/t19240;
            double t19242 = 1.0/(t19209*t19209*t19209*t19209);
            double t19243 = t19236*t19236;
            double t19244 = pow(t19237,4.0/3.0);
            double t19245 = pow(t19238,4.0/3.0);
            double t19246 = t19244+t19245-2.0;
            double t19247 = pow(t19237,2.0/3.0);
            double t19248 = t19247*(1.0/2.0);
            double t19249 = pow(t19238,2.0/3.0);
            double t19250 = t19249*(1.0/2.0);
            double t19251 = t19250+t19248;
            double t19252 = 1.0/(t19251*t19251);
            double t19253 = 1.0/(t19251*t19251*t19251);
            double t19254 = 1.0/c0f;
            double t19255 = b1f*t19219;
            double t19256 = b3f*t19220;
            double t19257 = b4f*t19221*t19222;
            double t19258 = b2f*c*t19217;
            double t19259 = t19255+t19256+t19257+t19258;
            double t19260 = 1.0/t19259;
            double t19261 = t19260*t19254*(1.0/2.0);
            double t19262 = t19261+1.0;
            double t19263 = log(t19262);
            double t19264 = a1f*c*t19217;
            double t19265 = t19264+1.0;
            double t19291 = c0f*t19263*t19265*2.0;
            double t19266 = t19235-t19291;
            double t19267 = t19241*t19242*t19243*t19246*t19266;
            double t19268 = 1.0/d2fz0;
            double t19269 = 1.0/Aa;
            double t19270 = b1a*t19219;
            double t19271 = b3a*t19220;
            double t19272 = b4a*t19221*t19222;
            double t19273 = b2a*c*t19217;
            double t19274 = t19270+t19271+t19272+t19273;
            double t19275 = 1.0/t19274;
            double t19276 = t19275*t19269*(1.0/2.0);
            double t19277 = t19276+1.0;
            double t19278 = log(t19277);
            double t19279 = a1a*c*t19217;
            double t19280 = t19279+1.0;
            double t19281 = t19242*t19243;
            double t19282 = t19281-1.0;
            double t19283 = Aa*t19241*t19280*t19246*t19282*t19268*t19278*2.0;
            double t19284 = -t19235+t19283+t19267;
            double t19292 = t19210*t19253*t19284;
            double t19285 = exp(-t19292);
            double t19286 = t19285-1.0;
            double t19287 = 1.0/t19286;
            double t19288 = gamma_ab[index]*2.0;
            double t19289 = gamma_aa[index]+gamma_bb[index]+t19288;
            double t19290 = bet*t19210*t19211*t19212*t19213*t19252*t19287*t19289*(1.0/1.6E1);
            double t19293 = 1.0/(t19209*t19209);
            double t19294 = t19215*t19293;
            double t19295 = t19214+t19294;
            double t19296 = 1.0/pow(t19209,4.0/3.0);
            double t19297 = t19290+1.0;
            double t19298 = bet*bet;
            double t19299 = 1.0/(gammas*gammas);
            double t19300 = 1.0/(k*k);
            double t19301 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19302 = 1.0/pow(t19209,1.4E1/3.0);
            double t19303 = 1.0/(t19286*t19286);
            double t19304 = 1.0/(t19251*t19251*t19251*t19251);
            double t19305 = t19289*t19289;
            double t19306 = t19300*t19301*t19302*t19303*t19304*t19305*t19298*t19299*(1.0/2.56E2);
            double t19307 = t19306+t19290+1.0;
            double t19308 = 1.0/t19307;
            double t19309 = bet*t19210*t19211*t19212*t19213*t19252*t19308*t19297*t19289*(1.0/1.6E1);
            double t19310 = t19309+1.0;
            double t19311 = t19251*t19251;
            double t19312 = 1.0/pow(t19209,1.0E1/3.0);
            double t19313 = 1.0/pow(t19237,1.0/3.0);
            double t19314 = t19313*t19295*(1.0/3.0);
            double t19315 = 1.0/pow(t19238,1.0/3.0);
            double t19332 = t19315*t19295*(1.0/3.0);
            double t19316 = t19314-t19332;
            double t19317 = 1.0/t19231;
            double t19318 = 1.0/(t19228*t19228);
            double t19319 = 1.0/pow(t19209,5.0/3.0);
            double t19320 = b4p*t19221*t19319*(2.0/3.0);
            double t19321 = b2p*c*t19296*(1.0/3.0);
            double t19322 = 1.0/sqrt(t19218);
            double t19323 = b1p*c*t19322*t19296*(1.0/6.0);
            double t19324 = b3p*c*t19219*t19296*(1.0/2.0);
            double t19325 = t19320+t19321+t19323+t19324;
            double t19326 = t19234*t19325*t19317*t19318;
            double t19327 = 1.0/(t19209*t19209*t19209*t19209*t19209);
            double t19328 = pow(t19237,1.0/3.0);
            double t19329 = t19328*t19295*(4.0/3.0);
            double t19330 = pow(t19238,1.0/3.0);
            double t19336 = t19330*t19295*(4.0/3.0);
            double t19331 = -t19336+t19329;
            double t19333 = bet*t19210*t19211*t19212*t19312*t19252*t19287*t19289*(7.0/4.8E1);
            double t19334 = t19241*t19215*t19242*t19236*t19246*(t19235-t19291)*4.0;
            double t19335 = t19241*t19243*t19246*t19327*(t19235-t19291)*4.0;
            double t19337 = t19241*t19331*t19242*t19243*(t19235-t19291);
            double t19338 = 1.0/t19262;
            double t19339 = 1.0/(t19259*t19259);
            double t19340 = b4f*t19221*t19319*(2.0/3.0);
            double t19341 = b2f*c*t19296*(1.0/3.0);
            double t19342 = b1f*c*t19322*t19296*(1.0/6.0);
            double t19343 = b3f*c*t19219*t19296*(1.0/2.0);
            double t19344 = t19340+t19341+t19342+t19343;
            double t19345 = a1f*c*c0f*t19263*t19296*(2.0/3.0);
            double t19347 = a1p*c*c0p*t19232*t19296*(2.0/3.0);
            double t19361 = t19344*t19265*t19338*t19339;
            double t19346 = -t19361+t19326+t19345-t19347;
            double t19348 = t19215*t19242*t19236*4.0;
            double t19349 = t19243*t19327*4.0;
            double t19350 = t19348+t19349;
            double t19351 = Aa*t19241*t19350*t19280*t19246*t19268*t19278*2.0;
            double t19352 = Aa*t19241*t19331*t19280*t19282*t19268*t19278*2.0;
            double t19353 = 1.0/t19277;
            double t19354 = 1.0/(t19274*t19274);
            double t19355 = b4a*t19221*t19319*(2.0/3.0);
            double t19356 = b2a*c*t19296*(1.0/3.0);
            double t19357 = b1a*c*t19322*t19296*(1.0/6.0);
            double t19358 = b3a*c*t19219*t19296*(1.0/2.0);
            double t19359 = t19355+t19356+t19357+t19358;
            double t19360 = Aa*a1a*c*t19241*t19246*t19282*t19268*t19278*t19296*(2.0/3.0);
            double t19362 = t19361-t19326-t19345+t19347;
            double t19363 = t19241*t19242*t19243*t19362*t19246;
            double t19367 = t19241*t19280*t19353*t19246*t19282*t19354*t19268*t19359;
            double t19364 = t19351+t19360+t19334+t19352+t19326+t19335+t19337-t19347-t19367-t19241*t19242*t19243* \
               t19246*t19346;
            double t19365 = t19210*t19253*t19364;
            double t19368 = t19210*t19304*t19316*t19284*3.0;
            double t19366 = t19365-t19368;
            double t19369 = log(t19310);
            v_rho_b_[index] = -t19235+t19283-t19209*(t19351+t19360+t19334+t19352+t19326+t19335+t19363+t19337- \
               t19347-t19367+gammas*t19311*t19316*t19369*3.0+(gammas*t19311*t19251*(bet*t19210*t19211*t19212*t19312* \
               t19252*t19308*t19297*t19289*(7.0/4.8E1)+bet*t19210*t19211*t19212*t19213*t19252*t19308*t19289*(t19333- \
               bet*t19210*t19211*t19212*t19213*t19253*t19316*t19287*t19289*(1.0/8.0)+bet*t19210*t19211*t19212*t19213* \
               t19303*t19252*t19285*t19366*t19289*(1.0/1.6E1))*(1.0/1.6E1)-bet*t19210*t19211*t19212*t19213*t19252* \
               1.0/(t19307*t19307)*t19297*t19289*(t19333+t19300*t19301*t19303*t19304*t19305*1.0/pow(t19209,1.7E1/ \
               3.0)*t19298*t19299*(7.0/3.84E2)-bet*t19210*t19211*t19212*t19213*t19253*t19316*t19287*t19289*(1.0/8.0) \
               -t19300*t19301*t19302*t19303*1.0/(t19251*t19251*t19251*t19251*t19251)*t19305*t19316*t19298*t19299* \
               (1.0/6.4E1)-bet*t19210*t19211*t19212*t19213*t19303*t19252*t19285*t19289*(t19368-t19210*t19253*(t19351+ \
               t19360+t19334+t19352+t19326+t19335+t19363+t19337-t19347-t19367))*(1.0/1.6E1)+t19300*t19301*t19302* \
               t19304*t19305*t19285*t19366*1.0/(t19286*t19286*t19286)*t19298*t19299*(1.0/1.28E2))*(1.0/1.6E1)-bet* \
               t19210*t19211*t19212*t19213*t19253*t19316*t19308*t19297*t19289*(1.0/8.0)))/t19310)+gammas*t19311*t19251* \
               t19369+t19241*t19242*t19243*t19246*(t19235-t19291);
        } else if (rho_a[index] > cutoff_) {
            double t20153 = pow(2.0,2.0/3.0);
            double t20154 = 1.0/gammas;
            double t20155 = 1.0/k;
            double t20156 = 1.0/(pi_m12*pi_m12);
            double t20157 = 1.0/pow(rho_a[index],7.0/3.0);
            double t20158 = 1.0/pow(rho_a[index],1.0/3.0);
            double t20159 = c*t20158;
            double t20160 = sqrt(t20159);
            double t20161 = pow(t20159,3.0/2.0);
            double t20162 = c*c;
            double t20163 = 1.0/pow(rho_a[index],2.0/3.0);
            double t20164 = 1.0/c0p;
            double t20165 = b1p*t20160;
            double t20166 = b3p*t20161;
            double t20167 = b4p*t20162*t20163;
            double t20168 = b2p*c*t20158;
            double t20169 = t20165+t20166+t20167+t20168;
            double t20170 = 1.0/t20169;
            double t20171 = t20170*t20164*(1.0/2.0);
            double t20172 = t20171+1.0;
            double t20173 = log(t20172);
            double t20174 = a1p*c*t20158;
            double t20175 = t20174+1.0;
            double t20176 = gamma_ab[index]*2.0;
            double t20177 = gamma_aa[index]+t20176;
            double t20178 = pow(2.0,1.0/3.0);
            double t20179 = t20178*2.0;
            double t20180 = t20179-2.0;
            double t20181 = two_13*2.0;
            double t20182 = t20181-2.0;
            double t20183 = 1.0/t20182;
            double t20184 = 1.0/c0f;
            double t20185 = b1f*t20160;
            double t20186 = b3f*t20161;
            double t20187 = b4f*t20162*t20163;
            double t20188 = b2f*c*t20158;
            double t20189 = t20185+t20186+t20187+t20188;
            double t20190 = 1.0/t20189;
            double t20191 = t20190*t20184*(1.0/2.0);
            double t20192 = t20191+1.0;
            double t20193 = log(t20192);
            double t20194 = a1f*c*t20158;
            double t20195 = t20194+1.0;
            double t20196 = c0f*t20193*t20195*2.0;
            double t20197 = c0p*t20173*t20175*2.0;
            double t20198 = t20196-t20197;
            double t20199 = t20180*t20183*t20198;
            double t20200 = t20197+t20199;
            double t20201 = t20200*t20154*2.0;
            double t20202 = exp(t20201);
            double t20203 = t20202-1.0;
            v_rho_b_[index] = -t20197-t20199+gammas*log((bet*t20153*t20154*t20155*t20156*t20157*t20177*((bet* \
               t20153*t20154*t20155*t20156*t20157*t20177*(1.0/1.6E1))/(exp(t20154*(t20197+t20180*t20183*(t20196-c0p* \
               t20173*t20175*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1))/((bet*t20153*t20154*t20155*t20156*t20157*t20177*(1.0/ \
               1.6E1))/t20203+(bet*bet)*1.0/(gammas*gammas)*1.0/(k*k)*1.0/(pi_m12*pi_m12*pi_m12*pi_m12)*1.0/pow(rho_a[index],1.4E1/ \
               3.0)*1.0/(t20203*t20203)*(t20177*t20177)*t20178*(1.0/1.28E2)+1.0)+1.0)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t19780 = pow(2.0,2.0/3.0);
            double t19781 = 1.0/gammas;
            double t19782 = 1.0/k;
            double t19783 = 1.0/(pi_m12*pi_m12);
            double t19784 = 1.0/pow(rho_b[index],7.0/3.0);
            double t19785 = 1.0/pow(rho_b[index],1.0/3.0);
            double t19786 = c*t19785;
            double t19787 = sqrt(t19786);
            double t19788 = pow(t19786,3.0/2.0);
            double t19789 = c*c;
            double t19790 = 1.0/pow(rho_b[index],2.0/3.0);
            double t19791 = 1.0/c0p;
            double t19792 = b1p*t19787;
            double t19793 = b3p*t19788;
            double t19794 = b4p*t19790*t19789;
            double t19795 = b2p*c*t19785;
            double t19796 = t19792+t19793+t19794+t19795;
            double t19797 = 1.0/t19796;
            double t19798 = t19791*t19797*(1.0/2.0);
            double t19799 = t19798+1.0;
            double t19800 = log(t19799);
            double t19801 = a1p*c*t19785;
            double t19802 = t19801+1.0;
            double t19803 = gamma_ab[index]*2.0;
            double t19804 = gamma_bb[index]+t19803;
            double t19805 = pow(2.0,1.0/3.0);
            double t19806 = t19805*2.0;
            double t19807 = t19806-2.0;
            double t19808 = two_13*2.0;
            double t19809 = t19808-2.0;
            double t19810 = 1.0/t19809;
            double t19811 = 1.0/c0f;
            double t19812 = b1f*t19787;
            double t19813 = b3f*t19788;
            double t19814 = b4f*t19790*t19789;
            double t19815 = b2f*c*t19785;
            double t19816 = t19812+t19813+t19814+t19815;
            double t19817 = 1.0/t19816;
            double t19818 = t19811*t19817*(1.0/2.0);
            double t19819 = t19818+1.0;
            double t19820 = log(t19819);
            double t19821 = a1f*c*t19785;
            double t19822 = t19821+1.0;
            double t19823 = c0f*t19820*t19822*2.0;
            double t19824 = c0p*t19800*t19802*2.0;
            double t19825 = t19823-t19824;
            double t19826 = t19810*t19807*t19825;
            double t19827 = t19824+t19826;
            double t19828 = t19781*t19827*2.0;
            double t19829 = exp(t19828);
            double t19830 = t19829-1.0;
            double t19831 = 1.0/t19830;
            double t19832 = bet*t19804*t19831*t19780*t19781*t19782*t19783*t19784*(1.0/1.6E1);
            double t19833 = bet*bet;
            double t19834 = 1.0/(gammas*gammas);
            double t19835 = 1.0/(k*k);
            double t19836 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t19837 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t19838 = 1.0/(t19830*t19830);
            double t19839 = t19804*t19804;
            double t19840 = t19805*t19833*t19834*t19835*t19836*t19837*t19838*t19839*(1.0/1.28E2);
            double t19841 = t19840+t19832+1.0;
            double t19842 = 1.0/t19841;
            double t19843 = 1.0/pow(rho_b[index],1.0E1/3.0);
            double t19844 = 1.0/pow(rho_b[index],4.0/3.0);
            double t19845 = 1.0/pow(rho_b[index],5.0/3.0);
            double t19846 = 1.0/sqrt(t19786);
            double t19847 = 1.0/t19799;
            double t19848 = 1.0/(t19796*t19796);
            double t19849 = b4p*t19845*t19789*(2.0/3.0);
            double t19850 = b2p*c*t19844*(1.0/3.0);
            double t19851 = b1p*c*t19844*t19846*(1.0/6.0);
            double t19852 = b3p*c*t19844*t19787*(1.0/2.0);
            double t19853 = t19850+t19851+t19852+t19849;
            double t19854 = t19802*t19853*t19847*t19848;
            double t19855 = t19832+1.0;
            double t19856 = bet*t19804*t19831*t19780*t19843*t19781*t19782*t19783*(7.0/4.8E1);
            double t19857 = 1.0/t19819;
            double t19858 = 1.0/(t19816*t19816);
            double t19859 = b4f*t19845*t19789*(2.0/3.0);
            double t19860 = b2f*c*t19844*(1.0/3.0);
            double t19861 = b1f*c*t19844*t19846*(1.0/6.0);
            double t19862 = b3f*c*t19844*t19787*(1.0/2.0);
            double t19863 = t19860+t19861+t19862+t19859;
            double t19864 = a1f*c*c0f*t19820*t19844*(2.0/3.0);
            double t19865 = a1p*c*c0p*t19800*t19844*(2.0/3.0);
            double t19869 = t19822*t19863*t19857*t19858;
            double t19866 = t19854+t19864-t19865-t19869;
            double t19867 = t19810*t19807*t19866;
            double t19868 = -t19854+t19865+t19867;
            double t19870 = bet*t19804*t19842*t19780*t19781*t19782*t19783*t19855*t19784*(1.0/1.6E1);
            double t19871 = t19870+1.0;
            v_rho_b_[index] = -t19824-t19826-(rho_a[index]+rho_b[index])*(t19854-t19865-t19867+(gammas*(bet*t19804* \
               t19842*t19780*t19843*t19781*t19782*t19783*t19855*(7.0/4.8E1)+bet*t19804*t19842*t19780*t19781*t19782* \
               t19783*t19784*(t19856-bet*t19804*t19780*t19834*t19782*t19783*t19784*t19829*t19838*t19868*(1.0/8.0) \
               )*(1.0/1.6E1)-bet*t19804*1.0/(t19841*t19841)*t19780*t19781*t19782*t19783*t19855*t19784*(t19856+1.0/ \
               pow(rho_b[index],1.7E1/3.0)*t19805*t19833*t19834*t19835*t19836*t19838*t19839*(7.0/1.92E2)-1.0/(gammas* \
               gammas*gammas)*1.0/(t19830*t19830*t19830)*t19805*t19833*t19835*t19836*t19837*t19829*t19839*t19868* \
               (1.0/3.2E1)-bet*t19804*t19780*t19834*t19782*t19783*t19784*t19829*t19838*t19868*(1.0/8.0))*(1.0/1.6E1) \
               )*(1.0/2.0))/t19871)+gammas*log(t19871)*(1.0/2.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19371 = rho_a[index]+rho_b[index];
                double t19372 = 1.0/gammas;
                double t19373 = 1.0/k;
                double t19374 = 1.0/(pi_m12*pi_m12);
                double t19375 = 1.0/pow(t19371,7.0/3.0);
                double t19376 = 1.0/t19371;
                double t19377 = rho_a[index]-rho_b[index];
                double t19378 = t19376*t19377;
                double t19379 = 1.0/pow(t19371,1.0/3.0);
                double t19380 = c*t19379;
                double t19381 = sqrt(t19380);
                double t19382 = pow(t19380,3.0/2.0);
                double t19383 = c*c;
                double t19384 = 1.0/pow(t19371,2.0/3.0);
                double t19385 = 1.0/c0p;
                double t19386 = b1p*t19381;
                double t19387 = b3p*t19382;
                double t19388 = b4p*t19383*t19384;
                double t19389 = b2p*c*t19379;
                double t19390 = t19386+t19387+t19388+t19389;
                double t19391 = 1.0/t19390;
                double t19392 = t19391*t19385*(1.0/2.0);
                double t19393 = t19392+1.0;
                double t19394 = log(t19393);
                double t19395 = a1p*c*t19379;
                double t19396 = t19395+1.0;
                double t19397 = c0p*t19394*t19396*2.0;
                double t19398 = t19377*t19377;
                double t19399 = t19378+1.0;
                double t19400 = -t19378+1.0;
                double t19401 = two_13*2.0;
                double t19402 = t19401-2.0;
                double t19403 = 1.0/t19402;
                double t19404 = 1.0/(t19371*t19371*t19371*t19371);
                double t19405 = t19398*t19398;
                double t19406 = pow(t19399,4.0/3.0);
                double t19407 = pow(t19400,4.0/3.0);
                double t19408 = t19406+t19407-2.0;
                double t19409 = pow(t19399,2.0/3.0);
                double t19410 = t19409*(1.0/2.0);
                double t19411 = pow(t19400,2.0/3.0);
                double t19412 = t19411*(1.0/2.0);
                double t19413 = t19410+t19412;
                double t19414 = 1.0/(t19413*t19413);
                double t19415 = 1.0/(t19413*t19413*t19413);
                double t19416 = 1.0/c0f;
                double t19417 = b1f*t19381;
                double t19418 = b3f*t19382;
                double t19419 = b4f*t19383*t19384;
                double t19420 = b2f*c*t19379;
                double t19421 = t19420+t19417+t19418+t19419;
                double t19422 = 1.0/t19421;
                double t19423 = t19422*t19416*(1.0/2.0);
                double t19424 = t19423+1.0;
                double t19425 = log(t19424);
                double t19426 = a1f*c*t19379;
                double t19427 = t19426+1.0;
                double t19453 = c0f*t19425*t19427*2.0;
                double t19428 = -t19453+t19397;
                double t19429 = t19403*t19404*t19405*t19408*t19428;
                double t19430 = 1.0/d2fz0;
                double t19431 = 1.0/Aa;
                double t19432 = b1a*t19381;
                double t19433 = b3a*t19382;
                double t19434 = b4a*t19383*t19384;
                double t19435 = b2a*c*t19379;
                double t19436 = t19432+t19433+t19434+t19435;
                double t19437 = 1.0/t19436;
                double t19438 = t19431*t19437*(1.0/2.0);
                double t19439 = t19438+1.0;
                double t19440 = log(t19439);
                double t19441 = a1a*c*t19379;
                double t19442 = t19441+1.0;
                double t19443 = t19404*t19405;
                double t19444 = t19443-1.0;
                double t19445 = Aa*t19403*t19430*t19440*t19442*t19408*t19444*2.0;
                double t19446 = t19445+t19429-t19397;
                double t19447 = exp(-t19415*t19372*t19446);
                double t19448 = t19447-1.0;
                double t19449 = 1.0/t19448;
                double t19450 = gamma_ab[index]*2.0;
                double t19451 = gamma_aa[index]+gamma_bb[index]+t19450;
                double t19452 = bet*t19414*t19451*t19372*t19373*t19374*t19375*t19449*(1.0/1.6E1);
                double t19454 = t19413*t19413;
                double t19455 = t19453-t19397;
                double t19456 = t19403*t19404*t19405*t19408*t19455;
                double t19457 = -t19445+t19456+t19397;
                double t19458 = t19415*t19372*t19457;
                double t19459 = exp(t19458);
                double t19460 = t19459-1.0;
                double t19461 = 1.0/t19460;
                double t19462 = bet*t19414*t19451*t19461*t19372*t19373*t19374*t19375*(1.0/1.6E1);
                double t19463 = bet*bet;
                double t19464 = 1.0/(gammas*gammas);
                double t19465 = 1.0/(k*k);
                double t19466 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19467 = 1.0/pow(t19371,1.4E1/3.0);
                double t19468 = 1.0/(t19460*t19460);
                double t19469 = 1.0/(t19413*t19413*t19413*t19413);
                double t19470 = t19451*t19451;
                double t19471 = t19470*t19463*t19464*t19465*t19466*t19467*t19468*t19469*(1.0/2.56E2);
                double t19472 = t19462+t19471+1.0;
                double t19473 = 1.0/t19472;
                double t19474 = t19462+1.0;
                v_gamma_aa_[index] = (gammas*t19413*t19371*t19454*(bet*t19414*t19372*t19373*t19374*t19473*t19375* \
                   t19474*(1.0/1.6E1)+t19451*t19461*t19463*t19464*t19473*t19465*t19466*t19467*t19469*(1.0/2.56E2)-bet* \
                   t19414*t19451*t19372*t19373*1.0/(t19472*t19472)*t19374*t19375*t19474*(bet*t19414*t19461*t19372*t19373* \
                   t19374*t19375*(1.0/1.6E1)+t19463*t19464*t19465*t19466*t19467*t19468*t19469*(gamma_aa[index]*2.0+gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/2.56E2))*(1.0/1.6E1)))/((bet*t19414*t19451*t19372*t19373*t19374*t19375* \
                   (t19452+1.0)*(1.0/1.6E1))/(t19452+t19471+1.0)+1.0);
            } else if (rho_a[index] > cutoff_) {
                double t20205 = pow(2.0,2.0/3.0);
                double t20206 = 1.0/gammas;
                double t20207 = 1.0/k;
                double t20208 = 1.0/(pi_m12*pi_m12);
                double t20209 = 1.0/pow(rho_a[index],7.0/3.0);
                double t20210 = 1.0/pow(rho_a[index],1.0/3.0);
                double t20211 = c*t20210;
                double t20212 = sqrt(t20211);
                double t20213 = pow(t20211,3.0/2.0);
                double t20214 = c*c;
                double t20215 = 1.0/pow(rho_a[index],2.0/3.0);
                double t20216 = 1.0/c0p;
                double t20217 = b1p*t20212;
                double t20218 = b3p*t20213;
                double t20219 = b4p*t20214*t20215;
                double t20220 = b2p*c*t20210;
                double t20221 = t20220+t20217+t20218+t20219;
                double t20222 = 1.0/t20221;
                double t20223 = t20222*t20216*(1.0/2.0);
                double t20224 = t20223+1.0;
                double t20225 = log(t20224);
                double t20226 = a1p*c*t20210;
                double t20227 = t20226+1.0;
                double t20228 = gamma_ab[index]*2.0;
                double t20229 = gamma_aa[index]+t20228;
                double t20230 = pow(2.0,1.0/3.0);
                double t20231 = t20230*2.0;
                double t20232 = t20231-2.0;
                double t20233 = two_13*2.0;
                double t20234 = t20233-2.0;
                double t20235 = 1.0/t20234;
                double t20236 = 1.0/c0f;
                double t20237 = b1f*t20212;
                double t20238 = b3f*t20213;
                double t20239 = b4f*t20214*t20215;
                double t20240 = b2f*c*t20210;
                double t20241 = t20240+t20237+t20238+t20239;
                double t20242 = 1.0/t20241;
                double t20243 = t20242*t20236*(1.0/2.0);
                double t20244 = t20243+1.0;
                double t20245 = log(t20244);
                double t20246 = a1f*c*t20210;
                double t20247 = t20246+1.0;
                double t20248 = c0f*t20245*t20247*2.0;
                double t20249 = c0p*t20225*t20227*2.0;
                double t20250 = t20248-t20249;
                double t20251 = t20232*t20250*t20235;
                double t20252 = t20251+t20249;
                double t20253 = t20206*t20252*2.0;
                double t20254 = exp(t20253);
                double t20255 = t20254-1.0;
                double t20256 = 1.0/t20255;
                double t20257 = bet*t20205*t20206*t20207*t20208*t20209*t20229*t20256*(1.0/1.6E1);
                double t20258 = bet*bet;
                double t20259 = 1.0/(gammas*gammas);
                double t20260 = 1.0/(k*k);
                double t20261 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t20262 = 1.0/pow(rho_a[index],1.4E1/3.0);
                double t20263 = 1.0/(t20255*t20255);
                double t20264 = t20229*t20229;
                double t20265 = t20230*t20260*t20261*t20262*t20263*t20264*t20258*t20259*(1.0/1.28E2);
                double t20266 = t20265+t20257+1.0;
                double t20267 = 1.0/t20266;
                double t20268 = t20257+1.0;
                v_gamma_aa_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t20205*t20206*t20207*t20208*t20209* \
                   t20267*t20268*(1.0/1.6E1)+t20230*t20260*t20261*t20262*t20229*t20256*t20258*t20267*t20259*(1.0/1.28E2) \
                   -bet*t20205*t20206*t20207*t20208*t20209*t20229*1.0/(t20266*t20266)*t20268*(bet*t20205*t20206*t20207* \
                   t20208*t20209*t20256*(1.0/1.6E1)+t20230*t20260*t20261*t20262*t20263*t20258*t20259*(gamma_aa[index]* \
                   2.0+gamma_ab[index]*4.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t20205*t20206*t20207*t20208*t20209* \
                   t20229*t20267*((bet*t20205*t20206*t20207*t20208*t20209*t20229*(1.0/1.6E1))/(exp(t20206*(t20249+t20232* \
                   t20235*(t20248-c0p*t20225*t20227*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19476 = rho_a[index]+rho_b[index];
                double t19477 = 1.0/gammas;
                double t19478 = 1.0/k;
                double t19479 = 1.0/(pi_m12*pi_m12);
                double t19480 = 1.0/pow(t19476,7.0/3.0);
                double t19481 = 1.0/t19476;
                double t19482 = rho_a[index]-rho_b[index];
                double t19483 = t19481*t19482;
                double t19484 = 1.0/pow(t19476,1.0/3.0);
                double t19485 = c*t19484;
                double t19486 = sqrt(t19485);
                double t19487 = pow(t19485,3.0/2.0);
                double t19488 = c*c;
                double t19489 = 1.0/pow(t19476,2.0/3.0);
                double t19490 = 1.0/c0p;
                double t19491 = b1p*t19486;
                double t19492 = b3p*t19487;
                double t19493 = b4p*t19488*t19489;
                double t19494 = b2p*c*t19484;
                double t19495 = t19491+t19492+t19493+t19494;
                double t19496 = 1.0/t19495;
                double t19497 = t19490*t19496*(1.0/2.0);
                double t19498 = t19497+1.0;
                double t19499 = log(t19498);
                double t19500 = a1p*c*t19484;
                double t19501 = t19500+1.0;
                double t19502 = c0p*t19501*t19499*2.0;
                double t19503 = t19482*t19482;
                double t19504 = t19483+1.0;
                double t19505 = -t19483+1.0;
                double t19506 = two_13*2.0;
                double t19507 = t19506-2.0;
                double t19508 = 1.0/t19507;
                double t19509 = 1.0/(t19476*t19476*t19476*t19476);
                double t19510 = t19503*t19503;
                double t19511 = pow(t19504,4.0/3.0);
                double t19512 = pow(t19505,4.0/3.0);
                double t19513 = t19511+t19512-2.0;
                double t19514 = pow(t19504,2.0/3.0);
                double t19515 = t19514*(1.0/2.0);
                double t19516 = pow(t19505,2.0/3.0);
                double t19517 = t19516*(1.0/2.0);
                double t19518 = t19515+t19517;
                double t19519 = 1.0/(t19518*t19518);
                double t19520 = 1.0/(t19518*t19518*t19518);
                double t19521 = 1.0/c0f;
                double t19522 = b1f*t19486;
                double t19523 = b3f*t19487;
                double t19524 = b4f*t19488*t19489;
                double t19525 = b2f*c*t19484;
                double t19526 = t19522+t19523+t19524+t19525;
                double t19527 = 1.0/t19526;
                double t19528 = t19521*t19527*(1.0/2.0);
                double t19529 = t19528+1.0;
                double t19530 = log(t19529);
                double t19531 = a1f*c*t19484;
                double t19532 = t19531+1.0;
                double t19558 = c0f*t19530*t19532*2.0;
                double t19533 = t19502-t19558;
                double t19534 = t19510*t19513*t19533*t19508*t19509;
                double t19535 = 1.0/d2fz0;
                double t19536 = 1.0/Aa;
                double t19537 = b1a*t19486;
                double t19538 = b3a*t19487;
                double t19539 = b4a*t19488*t19489;
                double t19540 = b2a*c*t19484;
                double t19541 = t19540+t19537+t19538+t19539;
                double t19542 = 1.0/t19541;
                double t19543 = t19542*t19536*(1.0/2.0);
                double t19544 = t19543+1.0;
                double t19545 = log(t19544);
                double t19546 = a1a*c*t19484;
                double t19547 = t19546+1.0;
                double t19548 = t19510*t19509;
                double t19549 = t19548-1.0;
                double t19550 = Aa*t19513*t19508*t19535*t19545*t19547*t19549*2.0;
                double t19551 = -t19502+t19550+t19534;
                double t19559 = t19520*t19551*t19477;
                double t19552 = exp(-t19559);
                double t19553 = t19552-1.0;
                double t19554 = 1.0/t19553;
                double t19555 = gamma_ab[index]*2.0;
                double t19556 = gamma_aa[index]+gamma_bb[index]+t19555;
                double t19557 = bet*t19480*t19554*t19519*t19556*t19477*t19478*t19479*(1.0/1.6E1);
                double t19560 = t19518*t19518;
                double t19561 = t19557+1.0;
                double t19562 = bet*bet;
                double t19563 = 1.0/(gammas*gammas);
                double t19564 = 1.0/(k*k);
                double t19565 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19566 = 1.0/pow(t19476,1.4E1/3.0);
                double t19567 = 1.0/(t19553*t19553);
                double t19568 = 1.0/(t19518*t19518*t19518*t19518);
                double t19569 = t19556*t19556;
                double t19570 = t19562*t19563*t19564*t19565*t19566*t19567*t19568*t19569*(1.0/2.56E2);
                double t19571 = t19570+t19557+1.0;
                double t19572 = 1.0/t19571;
                v_gamma_ab_[index] = (gammas*t19560*t19518*t19476*(bet*t19480*t19561*t19572*t19519*t19477*t19478* \
                   t19479*(1.0/8.0)+t19562*t19554*t19563*t19572*t19564*t19556*t19565*t19566*t19568*(1.0/1.28E2)-bet*t19480* \
                   t19561*1.0/(t19571*t19571)*t19519*t19556*t19477*t19478*t19479*(bet*t19480*t19554*t19519*t19477*t19478* \
                   t19479*(1.0/8.0)+t19562*t19563*t19564*t19565*t19566*t19567*t19568*(gamma_aa[index]*4.0+gamma_ab[index]* \
                   8.0+gamma_bb[index]*4.0)*(1.0/2.56E2))*(1.0/1.6E1)))/(bet*t19480*t19561*t19572*t19519*t19556*t19477* \
                   t19478*t19479*(1.0/1.6E1)+1.0);
            } else if (rho_a[index] > cutoff_) {
                double t20270 = pow(2.0,2.0/3.0);
                double t20271 = 1.0/gammas;
                double t20272 = 1.0/k;
                double t20273 = 1.0/(pi_m12*pi_m12);
                double t20274 = 1.0/pow(rho_a[index],7.0/3.0);
                double t20275 = 1.0/pow(rho_a[index],1.0/3.0);
                double t20276 = c*t20275;
                double t20277 = sqrt(t20276);
                double t20278 = pow(t20276,3.0/2.0);
                double t20279 = c*c;
                double t20280 = 1.0/pow(rho_a[index],2.0/3.0);
                double t20281 = 1.0/c0p;
                double t20282 = b1p*t20277;
                double t20283 = b3p*t20278;
                double t20284 = b4p*t20280*t20279;
                double t20285 = b2p*c*t20275;
                double t20286 = t20282+t20283+t20284+t20285;
                double t20287 = 1.0/t20286;
                double t20288 = t20281*t20287*(1.0/2.0);
                double t20289 = t20288+1.0;
                double t20290 = log(t20289);
                double t20291 = a1p*c*t20275;
                double t20292 = t20291+1.0;
                double t20293 = gamma_ab[index]*2.0;
                double t20294 = gamma_aa[index]+t20293;
                double t20295 = pow(2.0,1.0/3.0);
                double t20296 = t20295*2.0;
                double t20297 = t20296-2.0;
                double t20298 = two_13*2.0;
                double t20299 = t20298-2.0;
                double t20300 = 1.0/t20299;
                double t20301 = 1.0/c0f;
                double t20302 = b1f*t20277;
                double t20303 = b3f*t20278;
                double t20304 = b4f*t20280*t20279;
                double t20305 = b2f*c*t20275;
                double t20306 = t20302+t20303+t20304+t20305;
                double t20307 = 1.0/t20306;
                double t20308 = t20301*t20307*(1.0/2.0);
                double t20309 = t20308+1.0;
                double t20310 = log(t20309);
                double t20311 = a1f*c*t20275;
                double t20312 = t20311+1.0;
                double t20313 = c0f*t20310*t20312*2.0;
                double t20314 = c0p*t20290*t20292*2.0;
                double t20315 = t20313-t20314;
                double t20316 = t20300*t20315*t20297;
                double t20317 = t20314+t20316;
                double t20318 = t20271*t20317*2.0;
                double t20319 = exp(t20318);
                double t20320 = t20319-1.0;
                double t20321 = 1.0/t20320;
                double t20322 = bet*t20321*t20270*t20271*t20272*t20273*t20274*t20294*(1.0/1.6E1);
                double t20323 = bet*bet;
                double t20324 = 1.0/(gammas*gammas);
                double t20325 = 1.0/(k*k);
                double t20326 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t20327 = 1.0/pow(rho_a[index],1.4E1/3.0);
                double t20328 = 1.0/(t20320*t20320);
                double t20329 = t20294*t20294;
                double t20330 = t20323*t20324*t20325*t20326*t20327*t20328*t20329*t20295*(1.0/1.28E2);
                double t20331 = t20330+t20322+1.0;
                double t20332 = 1.0/t20331;
                double t20333 = t20322+1.0;
                v_gamma_ab_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t20332*t20270*t20333*t20271*t20272* \
                   t20273*t20274*(1.0/8.0)+t20321*t20323*t20332*t20324*t20325*t20326*t20327*t20294*t20295*(1.0/6.4E1) \
                   -bet*1.0/(t20331*t20331)*t20270*t20333*t20271*t20272*t20273*t20274*t20294*(bet*t20321*t20270*t20271* \
                   t20272*t20273*t20274*(1.0/8.0)+t20323*t20324*t20325*t20326*t20327*t20328*t20295*(gamma_aa[index]*4.0+ \
                   gamma_ab[index]*8.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t20332*t20270*t20271*t20272*t20273* \
                   t20274*t20294*((bet*t20270*t20271*t20272*t20273*t20274*t20294*(1.0/1.6E1))/(exp(t20271*(t20314+t20300* \
                   t20297*(t20313-c0p*t20290*t20292*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else if (rho_b[index] > cutoff_) {
                double t19874 = pow(2.0,2.0/3.0);
                double t19875 = 1.0/gammas;
                double t19876 = 1.0/k;
                double t19877 = 1.0/(pi_m12*pi_m12);
                double t19878 = 1.0/pow(rho_b[index],7.0/3.0);
                double t19879 = 1.0/pow(rho_b[index],1.0/3.0);
                double t19880 = c*t19879;
                double t19881 = sqrt(t19880);
                double t19882 = pow(t19880,3.0/2.0);
                double t19883 = c*c;
                double t19884 = 1.0/pow(rho_b[index],2.0/3.0);
                double t19885 = 1.0/c0p;
                double t19886 = b1p*t19881;
                double t19887 = b3p*t19882;
                double t19888 = b4p*t19883*t19884;
                double t19889 = b2p*c*t19879;
                double t19890 = t19886+t19887+t19888+t19889;
                double t19891 = 1.0/t19890;
                double t19892 = t19891*t19885*(1.0/2.0);
                double t19893 = t19892+1.0;
                double t19894 = log(t19893);
                double t19895 = a1p*c*t19879;
                double t19896 = t19895+1.0;
                double t19897 = gamma_ab[index]*2.0;
                double t19898 = gamma_bb[index]+t19897;
                double t19899 = pow(2.0,1.0/3.0);
                double t19900 = t19899*2.0;
                double t19901 = t19900-2.0;
                double t19902 = two_13*2.0;
                double t19903 = t19902-2.0;
                double t19904 = 1.0/t19903;
                double t19905 = 1.0/c0f;
                double t19906 = b1f*t19881;
                double t19907 = b3f*t19882;
                double t19908 = b4f*t19883*t19884;
                double t19909 = b2f*c*t19879;
                double t19910 = t19906+t19907+t19908+t19909;
                double t19911 = 1.0/t19910;
                double t19912 = t19911*t19905*(1.0/2.0);
                double t19913 = t19912+1.0;
                double t19914 = log(t19913);
                double t19915 = a1f*c*t19879;
                double t19916 = t19915+1.0;
                double t19917 = c0f*t19914*t19916*2.0;
                double t19918 = c0p*t19894*t19896*2.0;
                double t19919 = t19917-t19918;
                double t19920 = t19901*t19904*t19919;
                double t19921 = t19920+t19918;
                double t19922 = t19921*t19875*2.0;
                double t19923 = exp(t19922);
                double t19924 = t19923-1.0;
                double t19925 = 1.0/t19924;
                double t19926 = bet*t19925*t19874*t19875*t19876*t19877*t19878*t19898*(1.0/1.6E1);
                double t19927 = bet*bet;
                double t19928 = 1.0/(gammas*gammas);
                double t19929 = 1.0/(k*k);
                double t19930 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19931 = 1.0/pow(rho_b[index],1.4E1/3.0);
                double t19932 = 1.0/(t19924*t19924);
                double t19933 = t19898*t19898;
                double t19934 = t19930*t19931*t19932*t19933*t19927*t19928*t19929*t19899*(1.0/1.28E2);
                double t19935 = t19934+t19926+1.0;
                double t19936 = 1.0/t19935;
                double t19937 = t19926+1.0;
                v_gamma_ab_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19936*t19874*t19937*t19875*t19876* \
                   t19877*t19878*(1.0/8.0)+t19930*t19931*t19925*t19927*t19936*t19928*t19929*t19898*t19899*(1.0/6.4E1) \
                   -bet*1.0/(t19935*t19935)*t19874*t19937*t19875*t19876*t19877*t19878*t19898*(bet*t19925*t19874*t19875* \
                   t19876*t19877*t19878*(1.0/8.0)+t19930*t19931*t19932*t19927*t19928*t19929*t19899*(gamma_ab[index]*8.0+ \
                   gamma_bb[index]*4.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19936*t19874*t19875*t19876*t19877* \
                   t19878*t19898*((bet*t19874*t19875*t19876*t19877*t19878*t19898*(1.0/1.6E1))/(exp(t19875*(t19918+t19901* \
                   t19904*(t19917-c0p*t19894*t19896*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19574 = rho_a[index]+rho_b[index];
                double t19575 = 1.0/gammas;
                double t19576 = 1.0/k;
                double t19577 = 1.0/(pi_m12*pi_m12);
                double t19578 = 1.0/pow(t19574,7.0/3.0);
                double t19579 = 1.0/t19574;
                double t19580 = rho_a[index]-rho_b[index];
                double t19581 = t19580*t19579;
                double t19582 = 1.0/pow(t19574,1.0/3.0);
                double t19583 = c*t19582;
                double t19584 = sqrt(t19583);
                double t19585 = pow(t19583,3.0/2.0);
                double t19586 = c*c;
                double t19587 = 1.0/pow(t19574,2.0/3.0);
                double t19588 = 1.0/c0p;
                double t19589 = b1p*t19584;
                double t19590 = b3p*t19585;
                double t19591 = b4p*t19586*t19587;
                double t19592 = b2p*c*t19582;
                double t19593 = t19590+t19591+t19592+t19589;
                double t19594 = 1.0/t19593;
                double t19595 = t19594*t19588*(1.0/2.0);
                double t19596 = t19595+1.0;
                double t19597 = log(t19596);
                double t19598 = a1p*c*t19582;
                double t19599 = t19598+1.0;
                double t19600 = c0p*t19597*t19599*2.0;
                double t19601 = t19580*t19580;
                double t19602 = t19581+1.0;
                double t19603 = -t19581+1.0;
                double t19604 = two_13*2.0;
                double t19605 = t19604-2.0;
                double t19606 = 1.0/t19605;
                double t19607 = 1.0/(t19574*t19574*t19574*t19574);
                double t19608 = t19601*t19601;
                double t19609 = pow(t19602,4.0/3.0);
                double t19610 = pow(t19603,4.0/3.0);
                double t19611 = t19610+t19609-2.0;
                double t19612 = pow(t19602,2.0/3.0);
                double t19613 = t19612*(1.0/2.0);
                double t19614 = pow(t19603,2.0/3.0);
                double t19615 = t19614*(1.0/2.0);
                double t19616 = t19613+t19615;
                double t19617 = 1.0/(t19616*t19616);
                double t19618 = 1.0/(t19616*t19616*t19616);
                double t19619 = 1.0/c0f;
                double t19620 = b1f*t19584;
                double t19621 = b3f*t19585;
                double t19622 = b4f*t19586*t19587;
                double t19623 = b2f*c*t19582;
                double t19624 = t19620+t19621+t19622+t19623;
                double t19625 = 1.0/t19624;
                double t19626 = t19625*t19619*(1.0/2.0);
                double t19627 = t19626+1.0;
                double t19628 = log(t19627);
                double t19629 = a1f*c*t19582;
                double t19630 = t19629+1.0;
                double t19656 = c0f*t19630*t19628*2.0;
                double t19631 = t19600-t19656;
                double t19632 = t19611*t19631*t19606*t19607*t19608;
                double t19633 = 1.0/d2fz0;
                double t19634 = 1.0/Aa;
                double t19635 = b1a*t19584;
                double t19636 = b3a*t19585;
                double t19637 = b4a*t19586*t19587;
                double t19638 = b2a*c*t19582;
                double t19639 = t19635+t19636+t19637+t19638;
                double t19640 = 1.0/t19639;
                double t19641 = t19640*t19634*(1.0/2.0);
                double t19642 = t19641+1.0;
                double t19643 = log(t19642);
                double t19644 = a1a*c*t19582;
                double t19645 = t19644+1.0;
                double t19646 = t19607*t19608;
                double t19647 = t19646-1.0;
                double t19648 = Aa*t19611*t19606*t19633*t19643*t19645*t19647*2.0;
                double t19649 = -t19600+t19632+t19648;
                double t19657 = t19618*t19575*t19649;
                double t19650 = exp(-t19657);
                double t19651 = t19650-1.0;
                double t19652 = 1.0/t19651;
                double t19653 = gamma_ab[index]*2.0;
                double t19654 = gamma_aa[index]+gamma_bb[index]+t19653;
                double t19655 = bet*t19652*t19617*t19654*t19575*t19576*t19577*t19578*(1.0/1.6E1);
                double t19658 = t19616*t19616;
                double t19659 = t19655+1.0;
                double t19660 = bet*bet;
                double t19661 = 1.0/(gammas*gammas);
                double t19662 = 1.0/(k*k);
                double t19663 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19664 = 1.0/pow(t19574,1.4E1/3.0);
                double t19665 = 1.0/(t19651*t19651);
                double t19666 = 1.0/(t19616*t19616*t19616*t19616);
                double t19667 = t19654*t19654;
                double t19668 = t19660*t19661*t19662*t19663*t19664*t19665*t19666*t19667*(1.0/2.56E2);
                double t19669 = t19655+t19668+1.0;
                double t19670 = 1.0/t19669;
                v_gamma_bb_[index] = (gammas*t19616*t19574*t19658*(bet*t19670*t19617*t19575*t19576*t19577*t19578* \
                   t19659*(1.0/1.6E1)+t19660*t19652*t19661*t19670*t19662*t19654*t19663*t19664*t19666*(1.0/2.56E2)-bet* \
                   t19617*t19654*t19575*t19576*t19577*t19578*t19659*1.0/(t19669*t19669)*(bet*t19652*t19617*t19575*t19576* \
                   t19577*t19578*(1.0/1.6E1)+t19660*t19661*t19662*t19663*t19664*t19665*t19666*(gamma_aa[index]*2.0+gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/2.56E2))*(1.0/1.6E1)))/(bet*t19670*t19617*t19654*t19575*t19576*t19577* \
                   t19578*t19659*(1.0/1.6E1)+1.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t19939 = pow(2.0,2.0/3.0);
                double t19940 = 1.0/gammas;
                double t19941 = 1.0/k;
                double t19942 = 1.0/(pi_m12*pi_m12);
                double t19943 = 1.0/pow(rho_b[index],7.0/3.0);
                double t19944 = 1.0/pow(rho_b[index],1.0/3.0);
                double t19945 = c*t19944;
                double t19946 = sqrt(t19945);
                double t19947 = pow(t19945,3.0/2.0);
                double t19948 = c*c;
                double t19949 = 1.0/pow(rho_b[index],2.0/3.0);
                double t19950 = 1.0/c0p;
                double t19951 = b1p*t19946;
                double t19952 = b3p*t19947;
                double t19953 = b4p*t19948*t19949;
                double t19954 = b2p*c*t19944;
                double t19955 = t19951+t19952+t19953+t19954;
                double t19956 = 1.0/t19955;
                double t19957 = t19950*t19956*(1.0/2.0);
                double t19958 = t19957+1.0;
                double t19959 = log(t19958);
                double t19960 = a1p*c*t19944;
                double t19961 = t19960+1.0;
                double t19962 = gamma_ab[index]*2.0;
                double t19963 = gamma_bb[index]+t19962;
                double t19964 = pow(2.0,1.0/3.0);
                double t19965 = t19964*2.0;
                double t19966 = t19965-2.0;
                double t19967 = two_13*2.0;
                double t19968 = t19967-2.0;
                double t19969 = 1.0/t19968;
                double t19970 = 1.0/c0f;
                double t19971 = b1f*t19946;
                double t19972 = b3f*t19947;
                double t19973 = b4f*t19948*t19949;
                double t19974 = b2f*c*t19944;
                double t19975 = t19971+t19972+t19973+t19974;
                double t19976 = 1.0/t19975;
                double t19977 = t19970*t19976*(1.0/2.0);
                double t19978 = t19977+1.0;
                double t19979 = log(t19978);
                double t19980 = a1f*c*t19944;
                double t19981 = t19980+1.0;
                double t19982 = c0f*t19981*t19979*2.0;
                double t19983 = c0p*t19961*t19959*2.0;
                double t19984 = t19982-t19983;
                double t19985 = t19966*t19984*t19969;
                double t19986 = t19983+t19985;
                double t19987 = t19940*t19986*2.0;
                double t19988 = exp(t19987);
                double t19989 = t19988-1.0;
                double t19990 = 1.0/t19989;
                double t19991 = bet*t19940*t19941*t19942*t19943*t19963*t19990*t19939*(1.0/1.6E1);
                double t19992 = bet*bet;
                double t19993 = 1.0/(gammas*gammas);
                double t19994 = 1.0/(k*k);
                double t19995 = 1.0/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t19996 = 1.0/pow(rho_b[index],1.4E1/3.0);
                double t19997 = 1.0/(t19989*t19989);
                double t19998 = t19963*t19963;
                double t19999 = t19964*t19992*t19993*t19994*t19995*t19996*t19997*t19998*(1.0/1.28E2);
                double t20000 = t19991+t19999+1.0;
                double t20001 = 1.0/t20000;
                double t20002 = t19991+1.0;
                v_gamma_bb_[index] = (gammas*(rho_a[index]+rho_b[index])*(bet*t19940*t19941*t19942*t19943*t19939* \
                   t20001*t20002*(1.0/1.6E1)+t19963*t19990*t19964*t19992*t19993*t19994*t19995*t19996*t20001*(1.0/1.28E2) \
                   -bet*t19940*t19941*t19942*t19943*t19963*t19939*1.0/(t20000*t20000)*t20002*(bet*t19940*t19941*t19942* \
                   t19943*t19990*t19939*(1.0/1.6E1)+t19964*t19992*t19993*t19994*t19995*t19996*t19997*(gamma_ab[index]* \
                   4.0+gamma_bb[index]*2.0)*(1.0/1.28E2))*(1.0/1.6E1))*(1.0/2.0))/(bet*t19940*t19941*t19942*t19943*t19963* \
                   t19939*t20001*((bet*t19940*t19941*t19942*t19943*t19963*t19939*(1.0/1.6E1))/(exp(t19940*(t19983+t19966* \
                   t19969*(t19982-c0p*t19961*t19959*2.0))*2.0)-1.0)+1.0)*(1.0/1.6E1)+1.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        
        //V_rho_a_rho_b
        
        //V_rho_b_rho_b
        
        if (is_gga_) {

            //V_rho_a_gamma_aa
            
            //V_rho_a_gamma_ab
            
            //V_rho_a_gamma_bb
            
            //V_rho_b_gamma_aa
            
            //V_rho_b_gamma_ab
            
            //V_rho_b_gamma_bb
            
            //V_gamma_aa_gamma_aa
            
            //V_gamma_aa_gamma_ab
            
            //V_gamma_aa_gamma_bb
            
            //V_gamma_ab_gamma_ab
            
            //V_gamma_ab_gamma_bb
            
            //V_gamma_bb_gamma_bb
            
        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            
            //V_rho_a_tau_b
            
            //V_rho_b_tau_a
            
            //V_rho_b_tau_b
            
            //V_tau_a_tau_a
            
            //V_tau_a_tau_b
            
            //V_tau_b_tau_b
            
            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                            	
                //V_gamma_aa_tau_b
                            	
                //V_gamma_ab_tau_a
                            	
                //V_gamma_ab_tau_b
                            	
                //V_gamma_bb_tau_a
                            	
                //V_gamma_bb_tau_b
                          
            }  
        }
    }
}

}}

