#include <libmints/vector.h>
#include "B972_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

B972_CFunctional::B972_CFunctional()
{
    name_ = "B972_C";
    description_ = "    2nd-Order B97 Correlation Expansion\n";
    citation_ = "    F.A. Hamprecht et. al., J. Chem. Phys., 109(15), 6264-6271, 1998\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["d2fz0"] =   1.7099210000000000E+00;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["Aa"] =   1.6886999999999999E-02;
    parameters_["a1a"] =   1.1125000000000000E-01;
    parameters_["b1a"] =   1.0356999999999999E+01;
    parameters_["b2a"] =   3.6231000000000000E+00;
    parameters_["b3a"] =   8.8026000000000004E-01;
    parameters_["b4a"] =   4.9670999999999998E-01;
    parameters_["c0p"] =   3.1091000000000001E-02;
    parameters_["a1p"] =   2.1370000000000000E-01;
    parameters_["b1p"] =   7.5956999999999999E+00;
    parameters_["b2p"] =   3.5876000000000001E+00;
    parameters_["b3p"] =   1.6382000000000001E+00;
    parameters_["b4p"] =   4.9293999999999999E-01;
    parameters_["c0f"] =   1.5545000000000000E-02;
    parameters_["a1f"] =   2.0548000000000000E-01;
    parameters_["b1f"] =   1.4118900000000000E+01;
    parameters_["b2f"] =   6.1977000000000002E+00;
    parameters_["b3f"] =   3.3662000000000001E+00;
    parameters_["b4f"] =   6.2517000000000000E-01;
    parameters_["gcab"] =   6.0000000000000001E-03;
    parameters_["gcaa"] =   2.0000000000000001E-01;
    parameters_["ccab0"] =   9.5568900000000001E-01;
    parameters_["ccab1"] =   7.8855200000000003E-01;
    parameters_["ccab2"] =  -5.4786900000000003E+00;
    parameters_["ccaa0"] =   8.2001099999999993E-02;
    parameters_["ccaa1"] =   2.7168100000000002E+00;
    parameters_["ccaa2"] =  -2.8710300000000002E+00;
}
B972_CFunctional::~B972_CFunctional()
{
}
void B972_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double two_13 = parameters_["two_13"];
    double d2fz0 = parameters_["d2fz0"];
    double c = parameters_["c"];
    double Aa = parameters_["Aa"];
    double a1a = parameters_["a1a"];
    double b1a = parameters_["b1a"];
    double b2a = parameters_["b2a"];
    double b3a = parameters_["b3a"];
    double b4a = parameters_["b4a"];
    double c0p = parameters_["c0p"];
    double a1p = parameters_["a1p"];
    double b1p = parameters_["b1p"];
    double b2p = parameters_["b2p"];
    double b3p = parameters_["b3p"];
    double b4p = parameters_["b4p"];
    double c0f = parameters_["c0f"];
    double a1f = parameters_["a1f"];
    double b1f = parameters_["b1f"];
    double b2f = parameters_["b2f"];
    double b3f = parameters_["b3f"];
    double b4f = parameters_["b4f"];
    double gcab = parameters_["gcab"];
    double gcaa = parameters_["gcaa"];
    double ccab0 = parameters_["ccab0"];
    double ccab1 = parameters_["ccab1"];
    double ccab2 = parameters_["ccab2"];
    double ccaa0 = parameters_["ccaa0"];
    double ccaa1 = parameters_["ccaa1"];
    double ccaa2 = parameters_["ccaa2"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t31947 = 1.0/pow(rho_b,1.0/3.0);
                double t31948 = c*t31947;
                double t31949 = sqrt(t31948);
                double t31950 = pow(t31948,3.0/2.0);
                double t31951 = c*c;
                double t31952 = 1.0/pow(rho_b,2.0/3.0);
                double t31953 = 1.0/c0p;
                double t31954 = b1p*t31949;
                double t31955 = b3p*t31950;
                double t31956 = b4p*t31951*t31952;
                double t31957 = b2p*c*t31947;
                double t31958 = t31954+t31955+t31956+t31957;
                double t31959 = 1.0/t31958;
                double t31960 = t31953*t31959*(1.0/2.0);
                double t31961 = t31960+1.0;
                double t31962 = log(t31961);
                double t31963 = a1p*c*t31947;
                double t31964 = t31963+1.0;
                double t31965 = 1.0/pow(rho_b,8.0/3.0);
                double t31966 = gamma_bb*gamma_bb;
                double t31967 = gcaa*gcaa;
                double t31968 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t31949+b3f*t31950+b2f*c*t31947+b4f*t31951*t31952))+1.0)*(a1f*c*t31947+1.0)*2.0-c0p*t31962*t31964*2.0))/(two_13*2.0-2.0)+c0p*t31962*t31964*2.0)*(ccaa0+(ccaa2*t31966*t31967*t31968)/(gamma_bb*gcaa*t31965*2.0+t31966*t31967*t31968+1.0)+(ccaa1*gamma_bb*gcaa*t31965)/(gamma_bb*gcaa*t31965+1.0));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t31971 = 1.0/pow(rho_b,1.0/3.0);
                double t31972 = c*t31971;
                double t31973 = sqrt(t31972);
                double t31974 = pow(t31972,3.0/2.0);
                double t31975 = c*c;
                double t31976 = 1.0/pow(rho_b,2.0/3.0);
                double t31977 = 1.0/c0p;
                double t31978 = b1p*t31973;
                double t31979 = b3p*t31974;
                double t31980 = b4p*t31975*t31976;
                double t31981 = b2p*c*t31971;
                double t31982 = t31980+t31981+t31978+t31979;
                double t31983 = 1.0/t31982;
                double t31984 = t31983*t31977*(1.0/2.0);
                double t31985 = t31984+1.0;
                double t31986 = log(t31985);
                double t31987 = a1p*c*t31971;
                double t31988 = t31987+1.0;
                double t31989 = 1.0/pow(rho_b,8.0/3.0);
                double t31990 = gamma_bb*gamma_bb;
                double t31991 = gcaa*gcaa;
                double t31992 = 1.0/pow(rho_b,1.6E1/3.0);
                double t31993 = pow(2.0,1.0/3.0);
                double t31994 = t31993*2.0;
                double t31995 = t31994-2.0;
                double t31996 = two_13*2.0;
                double t31997 = t31996-2.0;
                double t31998 = 1.0/t31997;
                double t31999 = a1f*c*t31971;
                double t32000 = t31999+1.0;
                double t32001 = 1.0/c0f;
                double t32002 = b1f*t31973;
                double t32003 = b3f*t31974;
                double t32004 = b4f*t31975*t31976;
                double t32005 = b2f*c*t31971;
                double t32006 = t32002+t32003+t32004+t32005;
                double t32007 = 1.0/t32006;
                double t32008 = t32001*t32007*(1.0/2.0);
                double t32009 = t32008+1.0;
                double t32010 = 1.0/pow(rho_b,4.0/3.0);
                double t32011 = 1.0/pow(rho_b,5.0/3.0);
                double t32012 = 1.0/sqrt(t31972);
                double t32013 = log(t32009);
                double t32014 = 1.0/t31985;
                double t32015 = 1.0/(t31982*t31982);
                double t32016 = b4p*t31975*t32011*(2.0/3.0);
                double t32017 = b2p*c*t32010*(1.0/3.0);
                double t32018 = b1p*c*t32010*t32012*(1.0/6.0);
                double t32019 = b3p*c*t31973*t32010*(1.0/2.0);
                double t32020 = t32016+t32017+t32018+t32019;
                double t32021 = t31988*t32020*t32014*t32015;
                double t32022 = gamma_bb*gcaa*t31989;
                double t32023 = t32022+1.0;
                double t32024 = 1.0/t32023;
                double t32025 = ccaa1*gamma_bb*gcaa*t31989*t32024;
                double t32026 = gamma_bb*gcaa*t31989*2.0;
                double t32027 = t31990*t31991*t31992;
                double t32028 = t32026+t32027+1.0;
                double t32029 = 1.0/t32028;
                double t32030 = ccaa2*t31990*t31991*t31992*t32029;
                double t32031 = ccaa0+t32030+t32025;
                double t32032 = c0f*t32000*t32013*2.0;
                double t32033 = c0p*t31986*t31988*2.0;
                double t32034 = 1.0/pow(rho_b,1.9E1/3.0);
                double t32035 = 1.0/pow(rho_b,1.1E1/3.0);
                v_rho_b[Q] += scale * -t32031*(t32033+t31995*t31998*(t32032-c0p*t31986*t31988*2.0))+rho_b*t32031*(-t32021+t31995*t31998*(t32021-(t32000*1.0/(t32006*t32006)*(b2f*c*t32010*(1.0/3.0)+b4f*t31975*t32011*(2.0/3.0)+b1f*c*t32010*t32012*(1.0/6.0)+b3f*c*t31973*t32010*(1.0/2.0)))/t32009+a1f*c*c0f*t32010*t32013*(2.0/3.0)-a1p*c*c0p*t31986*t32010*(2.0/3.0))+a1p*c*c0p*t31986*t32010*(2.0/3.0))+rho_b*(t32033+t31995*t31998*(t32032-t32033))*(ccaa1*gamma_bb*gcaa*t32024*t32035*(8.0/3.0)+ccaa2*t31990*t31991*t32034*t32029*(1.6E1/3.0)-ccaa1*t31990*t31991*1.0/(t32023*t32023)*t32034*(8.0/3.0)-ccaa2*t31990*t31991*t31992*1.0/(t32028*t32028)*(gamma_bb*gcaa*t32035*(1.6E1/3.0)+t31990*t31991*t32034*(1.6E1/3.0)));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t32039 = 1.0/pow(rho_b,1.0/3.0);
                double t32040 = c*t32039;
                double t32041 = sqrt(t32040);
                double t32042 = pow(t32040,3.0/2.0);
                double t32043 = c*c;
                double t32044 = 1.0/pow(rho_b,2.0/3.0);
                double t32045 = 1.0/c0p;
                double t32046 = b1p*t32041;
                double t32047 = b3p*t32042;
                double t32048 = b4p*t32043*t32044;
                double t32049 = b2p*c*t32039;
                double t32050 = t32046+t32047+t32048+t32049;
                double t32051 = 1.0/t32050;
                double t32052 = t32051*t32045*(1.0/2.0);
                double t32053 = t32052+1.0;
                double t32054 = log(t32053);
                double t32055 = a1p*c*t32039;
                double t32056 = t32055+1.0;
                double t32057 = 1.0/pow(rho_b,8.0/3.0);
                double t32058 = gcaa*gcaa;
                double t32059 = 1.0/pow(rho_b,1.6E1/3.0);
                double t32060 = gamma_bb*gcaa*t32057;
                double t32061 = t32060+1.0;
                double t32062 = gamma_bb*gamma_bb;
                double t32063 = gamma_bb*gcaa*t32057*2.0;
                double t32064 = t32062*t32058*t32059;
                double t32065 = t32063+t32064+1.0;
                v_gamma_bb[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t32041+b3f*t32042+b2f*c*t32039+b4f*t32043*t32044))+1.0)*(a1f*c*t32039+1.0)*2.0-c0p*t32054*t32056*2.0))/(two_13*2.0-2.0)+c0p*t32054*t32056*2.0)*((ccaa1*gcaa*t32057)/t32061-ccaa1*gamma_bb*1.0/(t32061*t32061)*t32058*t32059+(ccaa2*gamma_bb*t32058*t32059*2.0)/t32065-ccaa2*t32062*1.0/(t32065*t32065)*t32058*t32059*(gcaa*t32057*2.0+gamma_bb*t32058*t32059*2.0));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t32071 = 1.0/pow(rho_b,1.0/3.0);
                double t32072 = c*t32071;
                double t32073 = sqrt(t32072);
                double t32074 = pow(t32072,3.0/2.0);
                double t32075 = c*c;
                double t32076 = 1.0/pow(rho_b,2.0/3.0);
                double t32077 = 1.0/c0p;
                double t32078 = b1p*t32073;
                double t32079 = b3p*t32074;
                double t32080 = b4p*t32075*t32076;
                double t32081 = b2p*c*t32071;
                double t32082 = t32080+t32081+t32078+t32079;
                double t32083 = 1.0/t32082;
                double t32084 = t32083*t32077*(1.0/2.0);
                double t32085 = t32084+1.0;
                double t32086 = log(t32085);
                double t32087 = a1p*c*t32071;
                double t32088 = t32087+1.0;
                double t32089 = 1.0/pow(rho_b,8.0/3.0);
                double t32090 = gamma_bb*gamma_bb;
                double t32091 = gcaa*gcaa;
                double t32092 = 1.0/pow(rho_b,1.9E1/3.0);
                double t32093 = gamma_bb*gcaa*t32089;
                double t32094 = t32093+1.0;
                double t32095 = 1.0/pow(rho_b,1.6E1/3.0);
                double t32096 = 1.0/pow(rho_b,1.1E1/3.0);
                double t32097 = gamma_bb*gcaa*t32089*2.0;
                double t32098 = t32090*t32091*t32095;
                double t32099 = t32097+t32098+1.0;
                double t32100 = pow(2.0,1.0/3.0);
                double t32101 = t32100*2.0;
                double t32102 = t32101-2.0;
                double t32103 = two_13*2.0;
                double t32104 = t32103-2.0;
                double t32105 = 1.0/t32104;
                double t32106 = a1f*c*t32071;
                double t32107 = t32106+1.0;
                double t32108 = 1.0/c0f;
                double t32109 = b1f*t32073;
                double t32110 = b3f*t32074;
                double t32111 = b4f*t32075*t32076;
                double t32112 = b2f*c*t32071;
                double t32113 = t32110+t32111+t32112+t32109;
                double t32114 = 1.0/t32113;
                double t32115 = t32114*t32108*(1.0/2.0);
                double t32116 = t32115+1.0;
                double t32117 = 1.0/pow(rho_b,4.0/3.0);
                double t32118 = 1.0/pow(rho_b,5.0/3.0);
                double t32119 = 1.0/sqrt(t32072);
                double t32120 = log(t32116);
                double t32121 = 1.0/t32085;
                double t32122 = 1.0/(t32082*t32082);
                double t32123 = b4p*t32118*t32075*(2.0/3.0);
                double t32124 = b2p*c*t32117*(1.0/3.0);
                double t32125 = b1p*c*t32117*t32119*(1.0/6.0);
                double t32126 = b3p*c*t32117*t32073*(1.0/2.0);
                double t32127 = t32123+t32124+t32125+t32126;
                double t32128 = t32121*t32122*t32127*t32088;
                double t32129 = 1.0/t32094;
                double t32130 = 1.0/t32099;
                double t32131 = ccaa1*gamma_bb*gcaa*t32129*t32089;
                double t32132 = ccaa2*t32130*t32090*t32091*t32095;
                double t32133 = ccaa0+t32131+t32132;
                double t32134 = 1.0/t32116;
                double t32135 = b4f*t32118*t32075*(2.0/3.0);
                double t32136 = b2f*c*t32117*(1.0/3.0);
                double t32137 = b1f*c*t32117*t32119*(1.0/6.0);
                double t32138 = b3f*c*t32117*t32073*(1.0/2.0);
                double t32139 = t32135+t32136+t32137+t32138;
                double t32140 = 1.0/(t32113*t32113);
                double t32141 = 1.0/pow(rho_b,7.0/3.0);
                double t32142 = 1.0/pow(t32072,3.0/2.0);
                double t32143 = t32139*t32139;
                double t32144 = t32127*t32127;
                double t32145 = 1.0/(t32082*t32082*t32082);
                double t32146 = t32121*t32144*t32145*t32088*2.0;
                double t32147 = b4p*t32075*t32089*(1.0E1/9.0);
                double t32148 = b2p*c*t32141*(4.0/9.0);
                double t32149 = b3p*t32119*t32075*t32089*(1.0/1.2E1);
                double t32150 = b1p*c*t32141*t32119*(2.0/9.0);
                double t32151 = b3p*c*t32141*t32073*(2.0/3.0);
                double t32152 = t32150+t32151+t32147+t32148+t32149-b1p*t32142*t32075*t32089*(1.0/3.6E1);
                double t32153 = 1.0/(t32085*t32085);
                double t32154 = 1.0/(t32082*t32082*t32082*t32082);
                double t32155 = a1p*c*c0p*t32141*t32086*(8.0/9.0);
                double t32156 = c0f*t32120*t32107*2.0;
                double t32157 = c0p*t32086*t32088*2.0;
                double t32158 = 1.0/pow(rho_b,2.2E1/3.0);
                double t32159 = 1.0/(t32094*t32094);
                double t32160 = gamma_bb*gcaa*t32096*(1.6E1/3.0);
                double t32161 = t32090*t32091*t32092*(1.6E1/3.0);
                double t32162 = t32160+t32161;
                double t32163 = 1.0/(t32099*t32099);
                double t32164 = 1.0/pow(rho_b,1.4E1/3.0);
                double t32165 = a1f*c*c0f*t32120*t32117*(2.0/3.0);
                double t32166 = a1p*c*c0p*t32117*t32086*(2.0/3.0);
                double t32167 = ccaa1*gamma_bb*gcaa*t32129*t32096*(8.0/3.0);
                double t32168 = ccaa2*t32130*t32090*t32091*t32092*(1.6E1/3.0);
                double t32169 = t32167+t32168-ccaa1*t32090*t32091*t32092*t32159*(8.0/3.0)-ccaa2*t32090*t32162*t32091*t32163*t32095;
                v_rho_b_rho_b[Q] += scale * t32169*(t32157+t32102*t32105*(t32156-c0p*t32086*t32088*2.0))*2.0+t32133*(-t32128+t32166+t32102*t32105*(t32128+t32165-t32140*t32107*t32134*t32139-a1p*c*c0p*t32117*t32086*(2.0/3.0)))*2.0+rho_b*t32133*(-t32146-t32155+t32102*t32105*(t32146+t32155-t32121*t32122*t32152*t32088-1.0/(t32113*t32113*t32113)*t32107*t32134*t32143*2.0+t32140*t32107*t32134*(b2f*c*t32141*(4.0/9.0)+b4f*t32075*t32089*(1.0E1/9.0)+b1f*c*t32141*t32119*(2.0/9.0)+b3f*c*t32141*t32073*(2.0/3.0)-b1f*t32142*t32075*t32089*(1.0/3.6E1)+b3f*t32119*t32075*t32089*(1.0/1.2E1))+1.0/(t32113*t32113*t32113*t32113)*t32107*1.0/(t32116*t32116)*t32143*t32108*(1.0/2.0)-a1f*c*c0f*t32120*t32141*(8.0/9.0)-t32144*t32153*t32154*t32077*t32088*(1.0/2.0)+a1f*c*t32140*t32134*t32117*t32139*(2.0/3.0)-a1p*c*t32121*t32122*t32117*t32127*(2.0/3.0))+t32121*t32122*t32152*t32088+t32144*t32153*t32154*t32077*t32088*(1.0/2.0)+a1p*c*t32121*t32122*t32117*t32127*(2.0/3.0))-rho_b*t32169*(-t32128+t32166+t32102*t32105*(t32128+t32165-t32166-t32140*t32107*t32134*t32139))*2.0-rho_b*(t32157+t32102*t32105*(t32156-t32157))*(ccaa1*gamma_bb*gcaa*t32164*t32129*(8.8E1/9.0)+ccaa2*t32130*t32090*t32091*t32158*(3.04E2/9.0)-ccaa1*t32090*t32091*t32158*t32159*2.4E1-ccaa2*t32090*t32162*t32091*t32163*t32092*(3.2E1/3.0)-ccaa2*t32090*t32091*t32163*t32095*(gamma_bb*gcaa*t32164*(1.76E2/9.0)+t32090*t32091*t32158*(3.04E2/9.0))+ccaa2*t32090*(t32162*t32162)*t32091*t32095*1.0/(t32099*t32099*t32099)*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*t32090*t32091*1.0/(t32094*t32094*t32094)*(1.28E2/9.0));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t32255 = 1.0/pow(rho_b,1.0/3.0);
                double t32256 = c*t32255;
                double t32257 = sqrt(t32256);
                double t32258 = pow(t32256,3.0/2.0);
                double t32259 = c*c;
                double t32260 = 1.0/pow(rho_b,2.0/3.0);
                double t32261 = 1.0/c0p;
                double t32262 = b1p*t32257;
                double t32263 = b3p*t32258;
                double t32264 = b4p*t32260*t32259;
                double t32265 = b2p*c*t32255;
                double t32266 = t32262+t32263+t32264+t32265;
                double t32267 = 1.0/t32266;
                double t32268 = t32261*t32267*(1.0/2.0);
                double t32269 = t32268+1.0;
                double t32270 = log(t32269);
                double t32271 = a1p*c*t32255;
                double t32272 = t32271+1.0;
                double t32273 = gcaa*gcaa;
                double t32274 = 1.0/pow(rho_b,1.6E1/3.0);
                double t32275 = 1.0/pow(rho_b,8.0/3.0);
                double t32276 = gamma_bb*gcaa*t32275;
                double t32277 = t32276+1.0;
                double t32278 = gamma_bb*gamma_bb;
                double t32279 = gamma_bb*gcaa*t32275*2.0;
                double t32280 = t32273*t32274*t32278;
                double t32281 = t32280+t32279+1.0;
                double t32283 = gcaa*t32275*2.0;
                double t32284 = gamma_bb*t32273*t32274*2.0;
                double t32282 = t32283+t32284;
                double t32285 = 1.0/(t32281*t32281);
                v_gamma_bb_gamma_bb[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t32257+b3f*t32258+b2f*c*t32255+b4f*t32260*t32259))+1.0)*(a1f*c*t32255+1.0)*2.0-c0p*t32270*t32272*2.0))/(two_13*2.0-2.0)+c0p*t32270*t32272*2.0)*((ccaa2*t32273*t32274*2.0)/t32281-ccaa1*t32273*t32274*1.0/(t32277*t32277)*2.0-ccaa2*1.0/pow(rho_b,3.2E1/3.0)*(t32273*t32273)*t32285*t32278*2.0+ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t32273*1.0/(t32277*t32277*t32277)*2.0+ccaa2*1.0/(t32281*t32281*t32281)*t32273*(t32282*t32282)*t32274*t32278*2.0-ccaa2*gamma_bb*t32273*t32282*t32274*t32285*4.0);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t32176 = 1.0/pow(rho_b,1.0/3.0);
                double t32177 = c*t32176;
                double t32178 = sqrt(t32177);
                double t32179 = pow(t32177,3.0/2.0);
                double t32180 = c*c;
                double t32181 = 1.0/pow(rho_b,2.0/3.0);
                double t32182 = 1.0/c0p;
                double t32183 = b1p*t32178;
                double t32184 = b3p*t32179;
                double t32185 = b4p*t32180*t32181;
                double t32186 = b2p*c*t32176;
                double t32187 = t32183+t32184+t32185+t32186;
                double t32188 = 1.0/t32187;
                double t32189 = t32182*t32188*(1.0/2.0);
                double t32190 = t32189+1.0;
                double t32191 = log(t32190);
                double t32192 = a1p*c*t32176;
                double t32193 = t32192+1.0;
                double t32194 = 1.0/pow(rho_b,8.0/3.0);
                double t32195 = gcaa*gcaa;
                double t32196 = 1.0/pow(rho_b,1.6E1/3.0);
                double t32197 = gamma_bb*gcaa*t32194;
                double t32198 = t32197+1.0;
                double t32199 = gamma_bb*gamma_bb;
                double t32200 = gamma_bb*gcaa*t32194*2.0;
                double t32201 = t32195*t32196*t32199;
                double t32202 = t32200+t32201+1.0;
                double t32203 = pow(2.0,1.0/3.0);
                double t32204 = t32203*2.0;
                double t32205 = t32204-2.0;
                double t32206 = two_13*2.0;
                double t32207 = t32206-2.0;
                double t32208 = 1.0/t32207;
                double t32209 = 1.0/c0f;
                double t32210 = b1f*t32178;
                double t32211 = b3f*t32179;
                double t32212 = b4f*t32180*t32181;
                double t32213 = b2f*c*t32176;
                double t32214 = t32210+t32211+t32212+t32213;
                double t32215 = 1.0/t32214;
                double t32216 = t32215*t32209*(1.0/2.0);
                double t32217 = t32216+1.0;
                double t32218 = log(t32217);
                double t32219 = a1f*c*t32176;
                double t32220 = t32219+1.0;
                double t32221 = c0f*t32220*t32218*2.0;
                double t32222 = c0p*t32191*t32193*2.0;
                double t32223 = 1.0/t32198;
                double t32224 = 1.0/t32202;
                double t32225 = 1.0/pow(rho_b,1.9E1/3.0);
                double t32226 = 1.0/(t32198*t32198);
                double t32227 = 1.0/pow(rho_b,1.1E1/3.0);
                double t32228 = 1.0/(t32202*t32202);
                double t32229 = gcaa*t32194*2.0;
                double t32230 = gamma_bb*t32195*t32196*2.0;
                double t32231 = t32230+t32229;
                double t32232 = gamma_bb*gcaa*t32227*(1.6E1/3.0);
                double t32233 = t32225*t32195*t32199*(1.6E1/3.0);
                double t32234 = t32232+t32233;
                double t32235 = 1.0/pow(rho_b,4.0/3.0);
                double t32236 = 1.0/pow(rho_b,5.0/3.0);
                double t32237 = 1.0/sqrt(t32177);
                double t32238 = 1.0/t32190;
                double t32239 = 1.0/(t32187*t32187);
                double t32240 = b4p*t32180*t32236*(2.0/3.0);
                double t32241 = b2p*c*t32235*(1.0/3.0);
                double t32242 = b1p*c*t32235*t32237*(1.0/6.0);
                double t32243 = b3p*c*t32235*t32178*(1.0/2.0);
                double t32244 = t32240+t32241+t32242+t32243;
                double t32245 = t32244*t32193*t32238*t32239;
                double t32246 = ccaa1*gcaa*t32223*t32194;
                double t32247 = ccaa2*gamma_bb*t32224*t32195*t32196*2.0;
                double t32248 = t32246+t32247-ccaa1*gamma_bb*t32226*t32195*t32196-ccaa2*t32231*t32228*t32195*t32196*t32199;
                v_rho_b_gamma_bb[Q] += scale * -t32248*(t32222+t32205*t32208*(t32221-c0p*t32191*t32193*2.0))+rho_b*t32248*(-t32245+t32205*t32208*(t32245-(t32220*1.0/(t32214*t32214)*(b2f*c*t32235*(1.0/3.0)+b4f*t32180*t32236*(2.0/3.0)+b1f*c*t32235*t32237*(1.0/6.0)+b3f*c*t32235*t32178*(1.0/2.0)))/t32217+a1f*c*c0f*t32235*t32218*(2.0/3.0)-a1p*c*c0p*t32235*t32191*(2.0/3.0))+a1p*c*c0p*t32235*t32191*(2.0/3.0))+rho_b*(t32222+t32205*t32208*(t32221-t32222))*(ccaa1*gcaa*t32223*t32227*(8.0/3.0)+ccaa2*gamma_bb*t32224*t32225*t32195*(3.2E1/3.0)-ccaa1*gamma_bb*t32225*t32226*t32195*8.0-ccaa2*t32231*t32225*t32228*t32195*t32199*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t32195*1.0/(t32198*t32198*t32198)*t32199*(1.6E1/3.0)-ccaa2*t32228*t32195*t32196*t32199*(gcaa*t32227*(1.6E1/3.0)+gamma_bb*t32225*t32195*(3.2E1/3.0))-ccaa2*gamma_bb*t32234*t32228*t32195*t32196*2.0+ccaa2*1.0/(t32202*t32202*t32202)*t32231*t32234*t32195*t32196*t32199*2.0);
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t32300 = 1.0/pow(rho_a,1.0/3.0);
                double t32301 = c*t32300;
                double t32302 = sqrt(t32301);
                double t32303 = pow(t32301,3.0/2.0);
                double t32304 = c*c;
                double t32305 = 1.0/pow(rho_a,2.0/3.0);
                double t32306 = 1.0/c0p;
                double t32307 = b1p*t32302;
                double t32308 = b3p*t32303;
                double t32309 = b4p*t32304*t32305;
                double t32310 = b2p*c*t32300;
                double t32311 = t32310+t32307+t32308+t32309;
                double t32312 = 1.0/t32311;
                double t32313 = t32312*t32306*(1.0/2.0);
                double t32314 = t32313+1.0;
                double t32315 = log(t32314);
                double t32316 = a1p*c*t32300;
                double t32317 = t32316+1.0;
                double t32318 = 1.0/pow(rho_a,8.0/3.0);
                double t32319 = gamma_aa*gamma_aa;
                double t32320 = gcaa*gcaa;
                double t32321 = 1.0/pow(rho_a,1.6E1/3.0);
                v[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t32302+b3f*t32303+b2f*c*t32300+b4f*t32304*t32305))+1.0)*(a1f*c*t32300+1.0)*2.0-c0p*t32315*t32317*2.0))/(two_13*2.0-2.0)+c0p*t32315*t32317*2.0)*(ccaa0+(ccaa2*t32320*t32321*t32319)/(gamma_aa*gcaa*t32318*2.0+t32320*t32321*t32319+1.0)+(ccaa1*gamma_aa*gcaa*t32318)/(gamma_aa*gcaa*t32318+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t32323 = 1.0/pow(rho_a,1.0/3.0);
                double t32324 = c*t32323;
                double t32325 = sqrt(t32324);
                double t32326 = pow(t32324,3.0/2.0);
                double t32327 = c*c;
                double t32328 = 1.0/pow(rho_a,2.0/3.0);
                double t32329 = 1.0/c0p;
                double t32330 = b1p*t32325;
                double t32331 = b3p*t32326;
                double t32332 = b4p*t32327*t32328;
                double t32333 = b2p*c*t32323;
                double t32334 = t32330+t32331+t32332+t32333;
                double t32335 = 1.0/t32334;
                double t32336 = t32335*t32329*(1.0/2.0);
                double t32337 = t32336+1.0;
                double t32338 = log(t32337);
                double t32339 = a1p*c*t32323;
                double t32340 = t32339+1.0;
                double t32341 = 1.0/pow(rho_a,8.0/3.0);
                double t32342 = gamma_aa*gamma_aa;
                double t32343 = gcaa*gcaa;
                double t32344 = 1.0/pow(rho_a,1.6E1/3.0);
                double t32345 = pow(2.0,1.0/3.0);
                double t32346 = t32345*2.0;
                double t32347 = t32346-2.0;
                double t32348 = two_13*2.0;
                double t32349 = t32348-2.0;
                double t32350 = 1.0/t32349;
                double t32351 = a1f*c*t32323;
                double t32352 = t32351+1.0;
                double t32353 = 1.0/c0f;
                double t32354 = b1f*t32325;
                double t32355 = b3f*t32326;
                double t32356 = b4f*t32327*t32328;
                double t32357 = b2f*c*t32323;
                double t32358 = t32354+t32355+t32356+t32357;
                double t32359 = 1.0/t32358;
                double t32360 = t32353*t32359*(1.0/2.0);
                double t32361 = t32360+1.0;
                double t32362 = 1.0/pow(rho_a,4.0/3.0);
                double t32363 = 1.0/pow(rho_a,5.0/3.0);
                double t32364 = 1.0/sqrt(t32324);
                double t32365 = log(t32361);
                double t32366 = 1.0/t32337;
                double t32367 = 1.0/(t32334*t32334);
                double t32368 = b4p*t32327*t32363*(2.0/3.0);
                double t32369 = b2p*c*t32362*(1.0/3.0);
                double t32370 = b1p*c*t32362*t32364*(1.0/6.0);
                double t32371 = b3p*c*t32325*t32362*(1.0/2.0);
                double t32372 = t32370+t32371+t32368+t32369;
                double t32373 = t32340*t32372*t32366*t32367;
                double t32374 = gamma_aa*gcaa*t32341;
                double t32375 = t32374+1.0;
                double t32376 = 1.0/t32375;
                double t32377 = ccaa1*gamma_aa*gcaa*t32341*t32376;
                double t32378 = gamma_aa*gcaa*t32341*2.0;
                double t32379 = t32342*t32343*t32344;
                double t32380 = t32378+t32379+1.0;
                double t32381 = 1.0/t32380;
                double t32382 = ccaa2*t32342*t32343*t32344*t32381;
                double t32383 = ccaa0+t32382+t32377;
                double t32384 = c0f*t32352*t32365*2.0;
                double t32385 = c0p*t32340*t32338*2.0;
                double t32386 = 1.0/pow(rho_a,1.9E1/3.0);
                double t32387 = 1.0/pow(rho_a,1.1E1/3.0);
                v_rho_a[Q] += scale * -t32383*(t32385+t32350*t32347*(t32384-c0p*t32340*t32338*2.0))+rho_a*t32383*(-t32373+t32350*t32347*(t32373-(t32352*1.0/(t32358*t32358)*(b2f*c*t32362*(1.0/3.0)+b4f*t32327*t32363*(2.0/3.0)+b1f*c*t32362*t32364*(1.0/6.0)+b3f*c*t32325*t32362*(1.0/2.0)))/t32361+a1f*c*c0f*t32362*t32365*(2.0/3.0)-a1p*c*c0p*t32362*t32338*(2.0/3.0))+a1p*c*c0p*t32362*t32338*(2.0/3.0))+rho_a*(t32385+t32350*t32347*(t32384-t32385))*(ccaa1*gamma_aa*gcaa*t32376*t32387*(8.0/3.0)+ccaa2*t32342*t32343*t32381*t32386*(1.6E1/3.0)-ccaa1*t32342*t32343*1.0/(t32375*t32375)*t32386*(8.0/3.0)-ccaa2*t32342*t32343*t32344*1.0/(t32380*t32380)*(gamma_aa*gcaa*t32387*(1.6E1/3.0)+t32342*t32343*t32386*(1.6E1/3.0)));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t32390 = 1.0/pow(rho_a,1.0/3.0);
                double t32391 = c*t32390;
                double t32392 = sqrt(t32391);
                double t32393 = pow(t32391,3.0/2.0);
                double t32394 = c*c;
                double t32395 = 1.0/pow(rho_a,2.0/3.0);
                double t32396 = 1.0/c0p;
                double t32397 = b1p*t32392;
                double t32398 = b3p*t32393;
                double t32399 = b4p*t32394*t32395;
                double t32400 = b2p*c*t32390;
                double t32401 = t32400+t32397+t32398+t32399;
                double t32402 = 1.0/t32401;
                double t32403 = t32402*t32396*(1.0/2.0);
                double t32404 = t32403+1.0;
                double t32405 = log(t32404);
                double t32406 = a1p*c*t32390;
                double t32407 = t32406+1.0;
                double t32408 = 1.0/pow(rho_a,8.0/3.0);
                double t32409 = gcaa*gcaa;
                double t32410 = 1.0/pow(rho_a,1.6E1/3.0);
                double t32411 = gamma_aa*gcaa*t32408;
                double t32412 = t32411+1.0;
                double t32413 = gamma_aa*gamma_aa;
                double t32414 = gamma_aa*gcaa*t32408*2.0;
                double t32415 = t32410*t32413*t32409;
                double t32416 = t32414+t32415+1.0;
                v_gamma_aa[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t32392+b3f*t32393+b2f*c*t32390+b4f*t32394*t32395))+1.0)*(a1f*c*t32390+1.0)*2.0-c0p*t32405*t32407*2.0))/(two_13*2.0-2.0)+c0p*t32405*t32407*2.0)*((ccaa1*gcaa*t32408)/t32412-ccaa1*gamma_aa*t32410*1.0/(t32412*t32412)*t32409+(ccaa2*gamma_aa*t32410*t32409*2.0)/t32416-ccaa2*t32410*t32413*1.0/(t32416*t32416)*t32409*(gcaa*t32408*2.0+gamma_aa*t32410*t32409*2.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t32422 = 1.0/pow(rho_a,1.0/3.0);
                double t32423 = c*t32422;
                double t32424 = sqrt(t32423);
                double t32425 = pow(t32423,3.0/2.0);
                double t32426 = c*c;
                double t32427 = 1.0/pow(rho_a,2.0/3.0);
                double t32428 = 1.0/c0p;
                double t32429 = b1p*t32424;
                double t32430 = b3p*t32425;
                double t32431 = b4p*t32426*t32427;
                double t32432 = b2p*c*t32422;
                double t32433 = t32430+t32431+t32432+t32429;
                double t32434 = 1.0/t32433;
                double t32435 = t32434*t32428*(1.0/2.0);
                double t32436 = t32435+1.0;
                double t32437 = log(t32436);
                double t32438 = a1p*c*t32422;
                double t32439 = t32438+1.0;
                double t32440 = 1.0/pow(rho_a,8.0/3.0);
                double t32441 = gamma_aa*gamma_aa;
                double t32442 = gcaa*gcaa;
                double t32443 = 1.0/pow(rho_a,1.9E1/3.0);
                double t32444 = gamma_aa*gcaa*t32440;
                double t32445 = t32444+1.0;
                double t32446 = 1.0/pow(rho_a,1.6E1/3.0);
                double t32447 = 1.0/pow(rho_a,1.1E1/3.0);
                double t32448 = gamma_aa*gcaa*t32440*2.0;
                double t32449 = t32441*t32442*t32446;
                double t32450 = t32448+t32449+1.0;
                double t32451 = pow(2.0,1.0/3.0);
                double t32452 = t32451*2.0;
                double t32453 = t32452-2.0;
                double t32454 = two_13*2.0;
                double t32455 = t32454-2.0;
                double t32456 = 1.0/t32455;
                double t32457 = a1f*c*t32422;
                double t32458 = t32457+1.0;
                double t32459 = 1.0/c0f;
                double t32460 = b1f*t32424;
                double t32461 = b3f*t32425;
                double t32462 = b4f*t32426*t32427;
                double t32463 = b2f*c*t32422;
                double t32464 = t32460+t32461+t32462+t32463;
                double t32465 = 1.0/t32464;
                double t32466 = t32465*t32459*(1.0/2.0);
                double t32467 = t32466+1.0;
                double t32468 = 1.0/pow(rho_a,4.0/3.0);
                double t32469 = 1.0/pow(rho_a,5.0/3.0);
                double t32470 = 1.0/sqrt(t32423);
                double t32471 = log(t32467);
                double t32472 = 1.0/t32436;
                double t32473 = 1.0/(t32433*t32433);
                double t32474 = b4p*t32426*t32469*(2.0/3.0);
                double t32475 = b2p*c*t32468*(1.0/3.0);
                double t32476 = b1p*c*t32470*t32468*(1.0/6.0);
                double t32477 = b3p*c*t32424*t32468*(1.0/2.0);
                double t32478 = t32474+t32475+t32476+t32477;
                double t32479 = t32472*t32473*t32439*t32478;
                double t32480 = 1.0/t32445;
                double t32481 = 1.0/t32450;
                double t32482 = ccaa1*gamma_aa*gcaa*t32440*t32480;
                double t32483 = ccaa2*t32441*t32442*t32481*t32446;
                double t32484 = ccaa0+t32482+t32483;
                double t32485 = 1.0/t32467;
                double t32486 = b4f*t32426*t32469*(2.0/3.0);
                double t32487 = b2f*c*t32468*(1.0/3.0);
                double t32488 = b1f*c*t32470*t32468*(1.0/6.0);
                double t32489 = b3f*c*t32424*t32468*(1.0/2.0);
                double t32490 = t32486+t32487+t32488+t32489;
                double t32491 = 1.0/(t32464*t32464);
                double t32492 = 1.0/pow(rho_a,7.0/3.0);
                double t32493 = 1.0/pow(t32423,3.0/2.0);
                double t32494 = t32490*t32490;
                double t32495 = t32478*t32478;
                double t32496 = 1.0/(t32433*t32433*t32433);
                double t32497 = t32472*t32439*t32495*t32496*2.0;
                double t32498 = b4p*t32440*t32426*(1.0E1/9.0);
                double t32499 = b2p*c*t32492*(4.0/9.0);
                double t32500 = b3p*t32440*t32470*t32426*(1.0/1.2E1);
                double t32501 = b1p*c*t32470*t32492*(2.0/9.0);
                double t32502 = b3p*c*t32424*t32492*(2.0/3.0);
                double t32503 = t32500+t32501+t32502+t32498+t32499-b1p*t32440*t32426*t32493*(1.0/3.6E1);
                double t32504 = 1.0/(t32436*t32436);
                double t32505 = 1.0/(t32433*t32433*t32433*t32433);
                double t32506 = a1p*c*c0p*t32437*t32492*(8.0/9.0);
                double t32507 = c0f*t32471*t32458*2.0;
                double t32508 = c0p*t32437*t32439*2.0;
                double t32509 = 1.0/pow(rho_a,2.2E1/3.0);
                double t32510 = 1.0/(t32445*t32445);
                double t32511 = gamma_aa*gcaa*t32447*(1.6E1/3.0);
                double t32512 = t32441*t32442*t32443*(1.6E1/3.0);
                double t32513 = t32511+t32512;
                double t32514 = 1.0/(t32450*t32450);
                double t32515 = 1.0/pow(rho_a,1.4E1/3.0);
                double t32516 = a1f*c*c0f*t32471*t32468*(2.0/3.0);
                double t32517 = a1p*c*c0p*t32437*t32468*(2.0/3.0);
                double t32518 = ccaa1*gamma_aa*gcaa*t32480*t32447*(8.0/3.0);
                double t32519 = ccaa2*t32441*t32442*t32443*t32481*(1.6E1/3.0);
                double t32520 = t32518+t32519-ccaa1*t32510*t32441*t32442*t32443*(8.0/3.0)-ccaa2*t32441*t32513*t32442*t32514*t32446;
                v_rho_a_rho_a[Q] += scale * t32520*(t32508+t32453*t32456*(t32507-c0p*t32437*t32439*2.0))*2.0+t32484*(t32517-t32479+t32453*t32456*(t32516+t32479-t32490*t32491*t32458*t32485-a1p*c*c0p*t32437*t32468*(2.0/3.0)))*2.0+rho_a*t32484*(-t32506-t32497+t32453*t32456*(t32506+t32497-t32503*t32472*t32473*t32439-1.0/(t32464*t32464*t32464)*t32458*t32485*t32494*2.0+t32491*t32458*t32485*(b2f*c*t32492*(4.0/9.0)+b4f*t32440*t32426*(1.0E1/9.0)+b1f*c*t32470*t32492*(2.0/9.0)+b3f*c*t32424*t32492*(2.0/3.0)-b1f*t32440*t32426*t32493*(1.0/3.6E1)+b3f*t32440*t32470*t32426*(1.0/1.2E1))+1.0/(t32464*t32464*t32464*t32464)*t32458*1.0/(t32467*t32467)*t32494*t32459*(1.0/2.0)-a1f*c*c0f*t32471*t32492*(8.0/9.0)-t32504*t32505*t32428*t32439*t32495*(1.0/2.0)+a1f*c*t32490*t32491*t32485*t32468*(2.0/3.0)-a1p*c*t32472*t32473*t32468*t32478*(2.0/3.0))+t32503*t32472*t32473*t32439+t32504*t32505*t32428*t32439*t32495*(1.0/2.0)+a1p*c*t32472*t32473*t32468*t32478*(2.0/3.0))-rho_a*t32520*(t32517-t32479+t32453*t32456*(t32516-t32517+t32479-t32490*t32491*t32458*t32485))*2.0-rho_a*(t32508+t32453*t32456*(t32507-t32508))*(ccaa1*gamma_aa*gcaa*t32515*t32480*(8.8E1/9.0)-ccaa1*t32510*t32441*t32442*t32509*2.4E1+ccaa2*t32441*t32442*t32481*t32509*(3.04E2/9.0)-ccaa2*t32441*t32513*t32442*t32514*t32443*(3.2E1/3.0)-ccaa2*t32441*t32442*t32514*t32446*(gamma_aa*gcaa*t32515*(1.76E2/9.0)+t32441*t32442*t32509*(3.04E2/9.0))+ccaa2*t32441*1.0/(t32450*t32450*t32450)*(t32513*t32513)*t32442*t32446*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*t32441*t32442*1.0/(t32445*t32445*t32445)*(1.28E2/9.0));
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t32603 = 1.0/pow(rho_a,1.0/3.0);
                double t32604 = c*t32603;
                double t32605 = sqrt(t32604);
                double t32606 = pow(t32604,3.0/2.0);
                double t32607 = c*c;
                double t32608 = 1.0/pow(rho_a,2.0/3.0);
                double t32609 = 1.0/c0p;
                double t32610 = b1p*t32605;
                double t32611 = b3p*t32606;
                double t32612 = b4p*t32607*t32608;
                double t32613 = b2p*c*t32603;
                double t32614 = t32610+t32611+t32612+t32613;
                double t32615 = 1.0/t32614;
                double t32616 = t32615*t32609*(1.0/2.0);
                double t32617 = t32616+1.0;
                double t32618 = log(t32617);
                double t32619 = a1p*c*t32603;
                double t32620 = t32619+1.0;
                double t32621 = gcaa*gcaa;
                double t32622 = 1.0/pow(rho_a,1.6E1/3.0);
                double t32623 = 1.0/pow(rho_a,8.0/3.0);
                double t32624 = gamma_aa*gcaa*t32623;
                double t32625 = t32624+1.0;
                double t32626 = gamma_aa*gamma_aa;
                double t32627 = gamma_aa*gcaa*t32623*2.0;
                double t32628 = t32621*t32622*t32626;
                double t32629 = t32627+t32628+1.0;
                double t32631 = gcaa*t32623*2.0;
                double t32632 = gamma_aa*t32621*t32622*2.0;
                double t32630 = t32631+t32632;
                double t32633 = 1.0/(t32629*t32629);
                v_gamma_aa_gamma_aa[Q] += scale * rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t32605+b3f*t32606+b2f*c*t32603+b4f*t32607*t32608))+1.0)*(a1f*c*t32603+1.0)*2.0-c0p*t32620*t32618*2.0))/(two_13*2.0-2.0)+c0p*t32620*t32618*2.0)*(ccaa1*t32621*t32622*1.0/(t32625*t32625)*2.0-(ccaa2*t32621*t32622*2.0)/t32629+ccaa2*1.0/pow(rho_a,3.2E1/3.0)*(t32621*t32621)*t32633*t32626*2.0-ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t32621*1.0/(t32625*t32625*t32625)*2.0-ccaa2*t32621*(t32630*t32630)*t32622*t32626*1.0/(t32629*t32629*t32629)*2.0+ccaa2*gamma_aa*t32621*t32630*t32622*t32633*4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t32524 = 1.0/pow(rho_a,1.0/3.0);
                double t32525 = c*t32524;
                double t32526 = sqrt(t32525);
                double t32527 = pow(t32525,3.0/2.0);
                double t32528 = c*c;
                double t32529 = 1.0/pow(rho_a,2.0/3.0);
                double t32530 = 1.0/c0p;
                double t32531 = b1p*t32526;
                double t32532 = b3p*t32527;
                double t32533 = b4p*t32528*t32529;
                double t32534 = b2p*c*t32524;
                double t32535 = t32531+t32532+t32533+t32534;
                double t32536 = 1.0/t32535;
                double t32537 = t32530*t32536*(1.0/2.0);
                double t32538 = t32537+1.0;
                double t32539 = log(t32538);
                double t32540 = a1p*c*t32524;
                double t32541 = t32540+1.0;
                double t32542 = 1.0/pow(rho_a,8.0/3.0);
                double t32543 = gcaa*gcaa;
                double t32544 = 1.0/pow(rho_a,1.6E1/3.0);
                double t32545 = gamma_aa*gcaa*t32542;
                double t32546 = t32545+1.0;
                double t32547 = gamma_aa*gamma_aa;
                double t32548 = gamma_aa*gcaa*t32542*2.0;
                double t32549 = t32543*t32544*t32547;
                double t32550 = t32548+t32549+1.0;
                double t32551 = pow(2.0,1.0/3.0);
                double t32552 = t32551*2.0;
                double t32553 = t32552-2.0;
                double t32554 = two_13*2.0;
                double t32555 = t32554-2.0;
                double t32556 = 1.0/t32555;
                double t32557 = 1.0/c0f;
                double t32558 = b1f*t32526;
                double t32559 = b3f*t32527;
                double t32560 = b4f*t32528*t32529;
                double t32561 = b2f*c*t32524;
                double t32562 = t32560+t32561+t32558+t32559;
                double t32563 = 1.0/t32562;
                double t32564 = t32563*t32557*(1.0/2.0);
                double t32565 = t32564+1.0;
                double t32566 = log(t32565);
                double t32567 = a1f*c*t32524;
                double t32568 = t32567+1.0;
                double t32569 = c0f*t32566*t32568*2.0;
                double t32570 = c0p*t32541*t32539*2.0;
                double t32571 = 1.0/t32546;
                double t32572 = 1.0/t32550;
                double t32573 = 1.0/pow(rho_a,1.9E1/3.0);
                double t32574 = 1.0/(t32546*t32546);
                double t32575 = 1.0/pow(rho_a,1.1E1/3.0);
                double t32576 = 1.0/(t32550*t32550);
                double t32577 = gcaa*t32542*2.0;
                double t32578 = gamma_aa*t32543*t32544*2.0;
                double t32579 = t32577+t32578;
                double t32580 = gamma_aa*gcaa*t32575*(1.6E1/3.0);
                double t32581 = t32543*t32573*t32547*(1.6E1/3.0);
                double t32582 = t32580+t32581;
                double t32583 = 1.0/pow(rho_a,4.0/3.0);
                double t32584 = 1.0/pow(rho_a,5.0/3.0);
                double t32585 = 1.0/sqrt(t32525);
                double t32586 = 1.0/t32538;
                double t32587 = 1.0/(t32535*t32535);
                double t32588 = b4p*t32528*t32584*(2.0/3.0);
                double t32589 = b2p*c*t32583*(1.0/3.0);
                double t32590 = b1p*c*t32583*t32585*(1.0/6.0);
                double t32591 = b3p*c*t32526*t32583*(1.0/2.0);
                double t32592 = t32590+t32591+t32588+t32589;
                double t32593 = t32541*t32592*t32586*t32587;
                double t32594 = ccaa1*gcaa*t32542*t32571;
                double t32595 = ccaa2*gamma_aa*t32543*t32544*t32572*2.0;
                double t32596 = t32594+t32595-ccaa1*gamma_aa*t32543*t32544*t32574-ccaa2*t32543*t32544*t32547*t32576*t32579;
                v_rho_a_gamma_aa[Q] += scale * -t32596*(t32570+t32553*t32556*(t32569-c0p*t32541*t32539*2.0))+rho_a*t32596*(-t32593+t32553*t32556*(t32593-(1.0/(t32562*t32562)*t32568*(b2f*c*t32583*(1.0/3.0)+b4f*t32528*t32584*(2.0/3.0)+b1f*c*t32583*t32585*(1.0/6.0)+b3f*c*t32526*t32583*(1.0/2.0)))/t32565+a1f*c*c0f*t32583*t32566*(2.0/3.0)-a1p*c*c0p*t32583*t32539*(2.0/3.0))+a1p*c*c0p*t32583*t32539*(2.0/3.0))+rho_a*(t32570-t32553*t32556*(t32570-t32569))*(ccaa1*gcaa*t32571*t32575*(8.0/3.0)+ccaa2*gamma_aa*t32543*t32572*t32573*(3.2E1/3.0)-ccaa1*gamma_aa*t32543*t32573*t32574*8.0-ccaa2*t32543*t32573*t32547*t32576*t32579*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t32543*1.0/(t32546*t32546*t32546)*t32547*(1.6E1/3.0)-ccaa2*t32543*t32544*t32547*t32576*(gcaa*t32575*(1.6E1/3.0)+gamma_aa*t32543*t32573*(3.2E1/3.0))-ccaa2*gamma_aa*t32543*t32544*t32582*t32576*2.0+ccaa2*1.0/(t32550*t32550*t32550)*t32543*t32544*t32582*t32547*t32579*2.0);
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t29355 = 1.0/pow(rho_a,8.0/3.0);
                double t29356 = gamma_aa*t29355*(1.0/2.0);
                double t29357 = 1.0/pow(rho_b,8.0/3.0);
                double t29358 = gamma_bb*t29357*(1.0/2.0);
                double t29353 = t29356+t29358;
                double t29354 = gcab*gcab;
                double t29359 = t29353*t29353;
                double t29360 = 1.0/pow(rho_a,1.0/3.0);
                double t29361 = c*t29360;
                double t29362 = sqrt(t29361);
                double t29363 = pow(t29361,3.0/2.0);
                double t29364 = c*c;
                double t29365 = 1.0/pow(rho_a,2.0/3.0);
                double t29366 = 1.0/c0p;
                double t29367 = b1p*t29362;
                double t29368 = b3p*t29363;
                double t29369 = b4p*t29364*t29365;
                double t29370 = b2p*c*t29360;
                double t29371 = t29370+t29367+t29368+t29369;
                double t29372 = 1.0/t29371;
                double t29373 = t29372*t29366*(1.0/2.0);
                double t29374 = t29373+1.0;
                double t29375 = log(t29374);
                double t29376 = a1p*c*t29360;
                double t29377 = t29376+1.0;
                double t29378 = pow(2.0,1.0/3.0);
                double t29379 = t29378*2.0;
                double t29380 = t29379-2.0;
                double t29381 = two_13*2.0;
                double t29382 = t29381-2.0;
                double t29383 = 1.0/t29382;
                double t29384 = 1.0/c0f;
                double t29385 = 1.0/pow(rho_b,1.0/3.0);
                double t29386 = c*t29385;
                double t29387 = sqrt(t29386);
                double t29388 = pow(t29386,3.0/2.0);
                double t29389 = 1.0/pow(rho_b,2.0/3.0);
                double t29390 = b1p*t29387;
                double t29391 = b3p*t29388;
                double t29392 = b4p*t29364*t29389;
                double t29393 = b2p*c*t29385;
                double t29394 = t29390+t29391+t29392+t29393;
                double t29395 = 1.0/t29394;
                double t29396 = t29366*t29395*(1.0/2.0);
                double t29397 = t29396+1.0;
                double t29398 = log(t29397);
                double t29399 = a1p*c*t29385;
                double t29400 = t29399+1.0;
                double t29401 = c0p*t29400*t29398*2.0;
                double t29402 = rho_a+rho_b;
                double t29403 = 1.0/pow(t29402,1.0/3.0);
                double t29404 = c*t29403;
                double t29405 = sqrt(t29404);
                double t29406 = pow(t29404,3.0/2.0);
                double t29407 = 1.0/pow(t29402,2.0/3.0);
                double t29408 = b1p*t29405;
                double t29409 = b3p*t29406;
                double t29410 = b4p*t29407*t29364;
                double t29411 = b2p*c*t29403;
                double t29412 = t29410+t29411+t29408+t29409;
                double t29413 = 1.0/t29412;
                double t29414 = t29413*t29366*(1.0/2.0);
                double t29415 = t29414+1.0;
                double t29416 = log(t29415);
                double t29417 = a1p*c*t29403;
                double t29418 = t29417+1.0;
                double t29419 = c0p*t29416*t29418*2.0;
                double t29420 = rho_a-rho_b;
                double t29421 = t29420*t29420;
                double t29422 = 1.0/t29402;
                double t29423 = t29420*t29422;
                double t29424 = 1.0/(t29402*t29402*t29402*t29402);
                double t29425 = t29421*t29421;
                double t29426 = t29423+1.0;
                double t29427 = pow(t29426,4.0/3.0);
                double t29428 = -t29423+1.0;
                double t29429 = pow(t29428,4.0/3.0);
                double t29430 = t29427+t29429-2.0;
                double t29431 = c0p*t29375*t29377*2.0;
                double t29432 = b1f*t29362;
                double t29433 = b3f*t29363;
                double t29434 = b4f*t29364*t29365;
                double t29435 = b2f*c*t29360;
                double t29436 = t29432+t29433+t29434+t29435;
                double t29437 = 1.0/t29436;
                double t29438 = t29437*t29384*(1.0/2.0);
                double t29439 = t29438+1.0;
                double t29440 = log(t29439);
                double t29441 = a1f*c*t29360;
                double t29442 = t29441+1.0;
                double t29443 = t29431-c0f*t29440*t29442*2.0;
                double t29444 = t29431-t29380*t29443*t29383;
                double t29445 = gamma_aa*gamma_aa;
                double t29446 = gcaa*gcaa;
                double t29447 = 1.0/pow(rho_a,1.6E1/3.0);
                double t29448 = b1f*t29387;
                double t29449 = b3f*t29388;
                double t29450 = b4f*t29364*t29389;
                double t29451 = b2f*c*t29385;
                double t29452 = t29450+t29451+t29448+t29449;
                double t29453 = 1.0/t29452;
                double t29454 = t29453*t29384*(1.0/2.0);
                double t29455 = t29454+1.0;
                double t29456 = log(t29455);
                double t29457 = a1f*c*t29385;
                double t29458 = t29457+1.0;
                double t29459 = t29401-c0f*t29456*t29458*2.0;
                double t29460 = t29401-t29380*t29383*t29459;
                double t29461 = gamma_bb*gamma_bb;
                double t29462 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * (ccab0+(ccab1*gcab*t29353)/(gcab*t29353+1.0)+(ccab2*t29354*t29359)/(gcab*t29353*2.0+t29354*t29359+1.0))*(rho_b*t29460+rho_a*t29444-t29402*(t29419-t29430*t29424*t29425*t29383*(t29419-c0f*log((t29384*(1.0/2.0))/(b1f*t29405+b3f*t29406+b2f*c*t29403+b4f*t29407*t29364)+1.0)*(a1f*c*t29403+1.0)*2.0)+(Aa*t29430*t29383*log((1.0/2.0)/(Aa*(b1a*t29405+b3a*t29406+b2a*c*t29403+b4a*t29407*t29364))+1.0)*(t29424*t29425-1.0)*(a1a*c*t29403+1.0)*2.0)/d2fz0))-rho_a*t29444*(ccaa0+(ccaa2*t29445*t29446*t29447)/(gamma_aa*gcaa*t29355*2.0+t29445*t29446*t29447+1.0)+(ccaa1*gamma_aa*gcaa*t29355)/(gamma_aa*gcaa*t29355+1.0))-rho_b*t29460*(ccaa0+(ccaa2*t29461*t29462*t29446)/(gamma_bb*gcaa*t29357*2.0+t29461*t29462*t29446+1.0)+(ccaa1*gamma_bb*gcaa*t29357)/(gamma_bb*gcaa*t29357+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t29464 = 1.0/pow(rho_a,1.0/3.0);
                double t29465 = c*t29464;
                double t29466 = sqrt(t29465);
                double t29467 = pow(t29465,3.0/2.0);
                double t29468 = c*c;
                double t29469 = 1.0/pow(rho_a,2.0/3.0);
                double t29470 = 1.0/c0p;
                double t29471 = b1p*t29466;
                double t29472 = b3p*t29467;
                double t29473 = b4p*t29468*t29469;
                double t29474 = b2p*c*t29464;
                double t29475 = t29471+t29472+t29473+t29474;
                double t29476 = 1.0/t29475;
                double t29477 = t29470*t29476*(1.0/2.0);
                double t29478 = t29477+1.0;
                double t29479 = log(t29478);
                double t29480 = a1p*c*t29464;
                double t29481 = t29480+1.0;
                double t29482 = 1.0/pow(rho_a,8.0/3.0);
                double t29483 = gamma_aa*gamma_aa;
                double t29484 = gcaa*gcaa;
                double t29485 = 1.0/pow(rho_a,1.6E1/3.0);
                double t29488 = gamma_aa*t29482*(1.0/2.0);
                double t29489 = 1.0/pow(rho_b,8.0/3.0);
                double t29490 = gamma_bb*t29489*(1.0/2.0);
                double t29486 = t29490+t29488;
                double t29487 = gcab*gcab;
                double t29491 = t29486*t29486;
                double t29492 = rho_a+rho_b;
                double t29493 = 1.0/pow(t29492,1.0/3.0);
                double t29494 = c*t29493;
                double t29495 = sqrt(t29494);
                double t29496 = b1p*t29495;
                double t29497 = pow(t29494,3.0/2.0);
                double t29498 = b3p*t29497;
                double t29499 = 1.0/pow(t29492,2.0/3.0);
                double t29500 = b4p*t29468*t29499;
                double t29501 = b2p*c*t29493;
                double t29502 = t29500+t29501+t29496+t29498;
                double t29503 = 1.0/pow(t29492,4.0/3.0);
                double t29504 = two_13*2.0;
                double t29505 = t29504-2.0;
                double t29506 = 1.0/t29505;
                double t29507 = 1.0/c0f;
                double t29508 = 1.0/t29502;
                double t29509 = t29470*t29508*(1.0/2.0);
                double t29510 = t29509+1.0;
                double t29511 = a1p*c*t29493;
                double t29512 = t29511+1.0;
                double t29513 = rho_a-rho_b;
                double t29514 = t29513*t29513;
                double t29515 = 1.0/t29492;
                double t29516 = t29513*t29515;
                double t29517 = b1f*t29495;
                double t29518 = b3f*t29497;
                double t29519 = b4f*t29468*t29499;
                double t29520 = b2f*c*t29493;
                double t29521 = t29520+t29517+t29518+t29519;
                double t29522 = 1.0/t29521;
                double t29523 = t29522*t29507*(1.0/2.0);
                double t29524 = t29523+1.0;
                double t29525 = log(t29524);
                double t29526 = a1f*c*t29493;
                double t29527 = t29526+1.0;
                double t29528 = log(t29510);
                double t29538 = c0f*t29525*t29527*2.0;
                double t29539 = c0p*t29512*t29528*2.0;
                double t29529 = t29538-t29539;
                double t29530 = t29516+1.0;
                double t29531 = pow(t29530,4.0/3.0);
                double t29532 = -t29516+1.0;
                double t29533 = pow(t29532,4.0/3.0);
                double t29534 = t29531+t29533-2.0;
                double t29535 = 1.0/(t29492*t29492);
                double t29566 = t29513*t29535;
                double t29536 = t29515-t29566;
                double t29537 = 1.0/(t29492*t29492*t29492*t29492);
                double t29540 = t29514*t29514;
                double t29541 = 1.0/pow(t29492,5.0/3.0);
                double t29542 = 1.0/sqrt(t29494);
                double t29543 = 1.0/t29510;
                double t29544 = 1.0/(t29502*t29502);
                double t29545 = b4p*t29541*t29468*(2.0/3.0);
                double t29546 = b2p*c*t29503*(1.0/3.0);
                double t29547 = b1p*c*t29503*t29542*(1.0/6.0);
                double t29548 = b3p*c*t29503*t29495*(1.0/2.0);
                double t29549 = t29545+t29546+t29547+t29548;
                double t29550 = t29512*t29543*t29544*t29549;
                double t29551 = 1.0/(t29492*t29492*t29492*t29492*t29492);
                double t29552 = 1.0/d2fz0;
                double t29553 = 1.0/Aa;
                double t29554 = b1a*t29495;
                double t29555 = b3a*t29497;
                double t29556 = b4a*t29468*t29499;
                double t29557 = b2a*c*t29493;
                double t29558 = t29554+t29555+t29556+t29557;
                double t29559 = 1.0/t29558;
                double t29560 = t29553*t29559*(1.0/2.0);
                double t29561 = t29560+1.0;
                double t29562 = log(t29561);
                double t29563 = a1a*c*t29493;
                double t29564 = t29563+1.0;
                double t29565 = pow(t29530,1.0/3.0);
                double t29567 = t29536*t29565*(4.0/3.0);
                double t29568 = pow(t29532,1.0/3.0);
                double t29569 = t29567-t29536*t29568*(4.0/3.0);
                double t29570 = t29540*t29537;
                double t29571 = t29570-1.0;
                double t29572 = pow(2.0,1.0/3.0);
                double t29573 = t29572*2.0;
                double t29574 = t29573-2.0;
                double t29575 = a1f*c*t29464;
                double t29576 = t29575+1.0;
                double t29577 = b1f*t29466;
                double t29578 = b3f*t29467;
                double t29579 = b4f*t29468*t29469;
                double t29580 = b2f*c*t29464;
                double t29581 = t29580+t29577+t29578+t29579;
                double t29582 = 1.0/t29581;
                double t29583 = t29507*t29582*(1.0/2.0);
                double t29584 = t29583+1.0;
                double t29585 = 1.0/pow(rho_a,4.0/3.0);
                double t29586 = 1.0/pow(rho_a,5.0/3.0);
                double t29587 = 1.0/sqrt(t29465);
                double t29588 = log(t29584);
                double t29589 = 1.0/t29478;
                double t29590 = 1.0/(t29475*t29475);
                double t29591 = b4p*t29468*t29586*(2.0/3.0);
                double t29592 = b2p*c*t29585*(1.0/3.0);
                double t29593 = b1p*c*t29585*t29587*(1.0/6.0);
                double t29594 = b3p*c*t29466*t29585*(1.0/2.0);
                double t29595 = t29591+t29592+t29593+t29594;
                double t29596 = t29481*t29590*t29595*t29589;
                double t29597 = c0f*t29576*t29588*2.0;
                double t29598 = c0p*t29481*t29479*2.0;
                double t29599 = t29597-t29598;
                double t29600 = 1.0/pow(rho_b,1.0/3.0);
                double t29601 = c*t29600;
                double t29602 = sqrt(t29601);
                double t29603 = pow(t29601,3.0/2.0);
                double t29604 = 1.0/pow(rho_b,2.0/3.0);
                double t29605 = b1p*t29602;
                double t29606 = b3p*t29603;
                double t29607 = b4p*t29604*t29468;
                double t29608 = b2p*c*t29600;
                double t29609 = t29605+t29606+t29607+t29608;
                double t29610 = 1.0/t29609;
                double t29611 = t29610*t29470*(1.0/2.0);
                double t29612 = t29611+1.0;
                double t29613 = log(t29612);
                double t29614 = a1p*c*t29600;
                double t29615 = t29614+1.0;
                double t29616 = c0p*t29613*t29615*2.0;
                double t29617 = t29540*t29506*t29534*t29537*t29529;
                double t29618 = Aa*t29506*t29534*t29552*t29562*t29571*t29564*2.0;
                double t29619 = gcab*t29486;
                double t29620 = t29619+1.0;
                double t29621 = 1.0/t29620;
                double t29622 = 1.0/pow(rho_a,1.1E1/3.0);
                double t29623 = t29491*t29487;
                double t29624 = gcab*t29486*2.0;
                double t29625 = t29623+t29624+1.0;
                double t29626 = 1.0/t29625;
                double t29627 = 1.0/t29584;
                double t29628 = 1.0/(t29581*t29581);
                double t29629 = b4f*t29468*t29586*(2.0/3.0);
                double t29630 = b2f*c*t29585*(1.0/3.0);
                double t29631 = b1f*c*t29585*t29587*(1.0/6.0);
                double t29632 = b3f*c*t29466*t29585*(1.0/2.0);
                double t29633 = t29630+t29631+t29632+t29629;
                double t29634 = a1f*c*c0f*t29585*t29588*(2.0/3.0);
                double t29635 = a1p*c*c0p*t29585*t29479*(2.0/3.0);
                double t29636 = gamma_aa*gcaa*t29482;
                double t29637 = t29636+1.0;
                double t29638 = 1.0/t29637;
                double t29639 = ccaa1*gamma_aa*gcaa*t29482*t29638;
                double t29640 = gamma_aa*gcaa*t29482*2.0;
                double t29641 = t29483*t29484*t29485;
                double t29642 = t29640+t29641+1.0;
                double t29643 = 1.0/t29642;
                double t29644 = ccaa2*t29643*t29483*t29484*t29485;
                double t29645 = ccaa0+t29644+t29639;
                double t29646 = t29506*t29574*t29599;
                double t29647 = t29646+t29598;
                double t29648 = 1.0/pow(rho_a,1.9E1/3.0);
                v_rho_a[Q] += scale * -t29645*(t29598+t29506*t29574*(t29597-c0p*t29481*t29479*2.0))-(ccab0+ccab1*gcab*t29621*t29486+ccab2*t29491*t29626*t29487)*(t29617+t29618+t29539-t29598+t29492*(t29550-t29540*t29506*t29534*t29537*(t29550-(1.0/(t29521*t29521)*t29527*(b2f*c*t29503*(1.0/3.0)+b4f*t29541*t29468*(2.0/3.0)+b1f*c*t29503*t29542*(1.0/6.0)+b3f*c*t29503*t29495*(1.0/2.0)))/t29524+a1f*c*c0f*t29503*t29525*(2.0/3.0)-a1p*c*c0p*t29503*t29528*(2.0/3.0))-a1p*c*c0p*t29503*t29528*(2.0/3.0)-t29540*t29506*t29551*t29534*t29529*4.0+t29540*t29506*t29537*t29529*t29569+t29513*t29514*t29506*t29534*t29537*t29529*4.0-Aa*t29506*t29534*t29552*t29562*t29564*(t29540*t29551*4.0-t29513*t29514*t29537*4.0)*2.0+Aa*t29506*t29552*t29562*t29571*t29564*t29569*2.0+(t29506*t29534*t29552*t29571*t29564*1.0/(t29558*t29558)*(b2a*c*t29503*(1.0/3.0)+b4a*t29541*t29468*(2.0/3.0)+b1a*c*t29503*t29542*(1.0/6.0)+b3a*c*t29503*t29495*(1.0/2.0)))/t29561-Aa*a1a*c*t29503*t29506*t29534*t29552*t29562*t29571*(2.0/3.0))+rho_a*(t29635-t29596+t29506*t29574*(t29634+t29596-t29633*t29627*t29628*t29576-a1p*c*c0p*t29585*t29479*(2.0/3.0)))-t29506*t29574*t29599)-(rho_a*t29647+rho_b*(t29616-t29506*t29574*(t29616-c0f*log((t29507*(1.0/2.0))/(b1f*t29602+b3f*t29603+b2f*c*t29600+b4f*t29604*t29468)+1.0)*(a1f*c*t29600+1.0)*2.0))-t29492*(t29617+t29618+t29539))*(ccab1*gamma_aa*gcab*t29621*t29622*(4.0/3.0)-ccab2*1.0/(t29625*t29625)*t29491*t29487*(gamma_aa*gcab*t29622*(8.0/3.0)+gamma_aa*t29622*t29486*t29487*(8.0/3.0))-ccab1*gamma_aa*1.0/(t29620*t29620)*t29622*t29486*t29487*(4.0/3.0)+ccab2*gamma_aa*t29622*t29626*t29486*t29487*(8.0/3.0))+rho_a*t29647*(ccaa1*gamma_aa*gcaa*t29622*t29638*(8.0/3.0)+ccaa2*t29643*t29483*t29484*t29648*(1.6E1/3.0)-ccaa1*t29483*t29484*1.0/(t29637*t29637)*t29648*(8.0/3.0)-ccaa2*1.0/(t29642*t29642)*t29483*t29484*t29485*(gamma_aa*gcaa*t29622*(1.6E1/3.0)+t29483*t29484*t29648*(1.6E1/3.0)))+rho_a*t29645*(t29635-t29596+t29506*t29574*(t29634-t29635+t29596-t29633*t29627*t29628*t29576));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t29650 = 1.0/pow(rho_b,1.0/3.0);
                double t29651 = c*t29650;
                double t29652 = sqrt(t29651);
                double t29653 = pow(t29651,3.0/2.0);
                double t29654 = c*c;
                double t29655 = 1.0/pow(rho_b,2.0/3.0);
                double t29656 = 1.0/c0p;
                double t29657 = b1p*t29652;
                double t29658 = b3p*t29653;
                double t29659 = b4p*t29654*t29655;
                double t29660 = b2p*c*t29650;
                double t29661 = t29660+t29657+t29658+t29659;
                double t29662 = 1.0/t29661;
                double t29663 = t29662*t29656*(1.0/2.0);
                double t29664 = t29663+1.0;
                double t29665 = log(t29664);
                double t29666 = a1p*c*t29650;
                double t29667 = t29666+1.0;
                double t29668 = 1.0/pow(rho_b,8.0/3.0);
                double t29669 = gamma_bb*gamma_bb;
                double t29670 = gcaa*gcaa;
                double t29671 = 1.0/pow(rho_b,1.6E1/3.0);
                double t29674 = 1.0/pow(rho_a,8.0/3.0);
                double t29675 = gamma_aa*t29674*(1.0/2.0);
                double t29676 = gamma_bb*t29668*(1.0/2.0);
                double t29672 = t29675+t29676;
                double t29673 = gcab*gcab;
                double t29677 = t29672*t29672;
                double t29678 = rho_a+rho_b;
                double t29679 = 1.0/pow(t29678,1.0/3.0);
                double t29680 = c*t29679;
                double t29681 = sqrt(t29680);
                double t29682 = b1p*t29681;
                double t29683 = pow(t29680,3.0/2.0);
                double t29684 = b3p*t29683;
                double t29685 = 1.0/pow(t29678,2.0/3.0);
                double t29686 = b4p*t29654*t29685;
                double t29687 = b2p*c*t29679;
                double t29688 = t29682+t29684+t29686+t29687;
                double t29689 = 1.0/pow(t29678,4.0/3.0);
                double t29690 = two_13*2.0;
                double t29691 = t29690-2.0;
                double t29692 = 1.0/t29691;
                double t29693 = 1.0/c0f;
                double t29694 = 1.0/t29688;
                double t29695 = t29656*t29694*(1.0/2.0);
                double t29696 = t29695+1.0;
                double t29697 = a1p*c*t29679;
                double t29698 = t29697+1.0;
                double t29699 = rho_a-rho_b;
                double t29700 = t29699*t29699;
                double t29701 = 1.0/t29678;
                double t29702 = t29701*t29699;
                double t29703 = b1f*t29681;
                double t29704 = b3f*t29683;
                double t29705 = b4f*t29654*t29685;
                double t29706 = b2f*c*t29679;
                double t29707 = t29703+t29704+t29705+t29706;
                double t29708 = 1.0/t29707;
                double t29709 = t29708*t29693*(1.0/2.0);
                double t29710 = t29709+1.0;
                double t29711 = log(t29710);
                double t29712 = a1f*c*t29679;
                double t29713 = t29712+1.0;
                double t29714 = log(t29696);
                double t29725 = c0f*t29711*t29713*2.0;
                double t29726 = c0p*t29714*t29698*2.0;
                double t29715 = t29725-t29726;
                double t29716 = t29702+1.0;
                double t29717 = pow(t29716,4.0/3.0);
                double t29718 = -t29702+1.0;
                double t29719 = pow(t29718,4.0/3.0);
                double t29720 = t29717+t29719-2.0;
                double t29721 = 1.0/(t29678*t29678);
                double t29722 = t29721*t29699;
                double t29723 = t29701+t29722;
                double t29724 = 1.0/(t29678*t29678*t29678*t29678);
                double t29727 = t29700*t29700;
                double t29728 = 1.0/pow(t29678,5.0/3.0);
                double t29729 = 1.0/sqrt(t29680);
                double t29730 = 1.0/t29696;
                double t29731 = 1.0/(t29688*t29688);
                double t29732 = b4p*t29654*t29728*(2.0/3.0);
                double t29733 = b2p*c*t29689*(1.0/3.0);
                double t29734 = b1p*c*t29729*t29689*(1.0/6.0);
                double t29735 = b3p*c*t29681*t29689*(1.0/2.0);
                double t29736 = t29732+t29733+t29734+t29735;
                double t29737 = 1.0/(t29678*t29678*t29678*t29678*t29678);
                double t29738 = 1.0/d2fz0;
                double t29739 = 1.0/Aa;
                double t29740 = b1a*t29681;
                double t29741 = b3a*t29683;
                double t29742 = b4a*t29654*t29685;
                double t29743 = b2a*c*t29679;
                double t29744 = t29740+t29741+t29742+t29743;
                double t29745 = 1.0/t29744;
                double t29746 = t29745*t29739*(1.0/2.0);
                double t29747 = t29746+1.0;
                double t29748 = log(t29747);
                double t29749 = a1a*c*t29679;
                double t29750 = t29749+1.0;
                double t29751 = pow(t29716,1.0/3.0);
                double t29752 = t29723*t29751*(4.0/3.0);
                double t29753 = pow(t29718,1.0/3.0);
                double t29754 = t29752-t29723*t29753*(4.0/3.0);
                double t29755 = t29724*t29727;
                double t29756 = t29755-1.0;
                double t29757 = pow(2.0,1.0/3.0);
                double t29758 = t29757*2.0;
                double t29759 = t29758-2.0;
                double t29760 = a1f*c*t29650;
                double t29761 = t29760+1.0;
                double t29762 = b1f*t29652;
                double t29763 = b3f*t29653;
                double t29764 = b4f*t29654*t29655;
                double t29765 = b2f*c*t29650;
                double t29766 = t29762+t29763+t29764+t29765;
                double t29767 = 1.0/t29766;
                double t29768 = t29693*t29767*(1.0/2.0);
                double t29769 = t29768+1.0;
                double t29770 = 1.0/pow(rho_b,4.0/3.0);
                double t29771 = 1.0/pow(rho_b,5.0/3.0);
                double t29772 = 1.0/sqrt(t29651);
                double t29773 = log(t29769);
                double t29774 = 1.0/t29664;
                double t29775 = 1.0/(t29661*t29661);
                double t29776 = b4p*t29654*t29771*(2.0/3.0);
                double t29777 = b2p*c*t29770*(1.0/3.0);
                double t29778 = b1p*c*t29770*t29772*(1.0/6.0);
                double t29779 = b3p*c*t29652*t29770*(1.0/2.0);
                double t29780 = t29776+t29777+t29778+t29779;
                double t29781 = t29780*t29774*t29667*t29775;
                double t29782 = c0f*t29761*t29773*2.0;
                double t29783 = c0p*t29665*t29667*2.0;
                double t29784 = a1p*c*c0p*t29714*t29689*(2.0/3.0);
                double t29785 = 1.0/pow(rho_a,1.0/3.0);
                double t29786 = c*t29785;
                double t29787 = sqrt(t29786);
                double t29788 = pow(t29786,3.0/2.0);
                double t29789 = 1.0/pow(rho_a,2.0/3.0);
                double t29790 = b1p*t29787;
                double t29791 = b3p*t29788;
                double t29792 = b4p*t29654*t29789;
                double t29793 = b2p*c*t29785;
                double t29794 = t29790+t29791+t29792+t29793;
                double t29795 = 1.0/t29794;
                double t29796 = t29656*t29795*(1.0/2.0);
                double t29797 = t29796+1.0;
                double t29798 = log(t29797);
                double t29799 = a1p*c*t29785;
                double t29800 = t29799+1.0;
                double t29801 = c0p*t29800*t29798*2.0;
                double t29802 = t29782-t29783;
                double t29803 = t29720*t29715*t29724*t29727*t29692;
                double t29804 = Aa*t29720*t29750*t29692*t29738*t29756*t29748*2.0;
                double t29805 = gcab*t29672;
                double t29806 = t29805+1.0;
                double t29807 = 1.0/t29806;
                double t29808 = 1.0/pow(rho_b,1.1E1/3.0);
                double t29809 = t29673*t29677;
                double t29810 = gcab*t29672*2.0;
                double t29811 = t29810+t29809+1.0;
                double t29812 = 1.0/t29811;
                double t29813 = 1.0/t29769;
                double t29814 = 1.0/(t29766*t29766);
                double t29815 = b4f*t29654*t29771*(2.0/3.0);
                double t29816 = b2f*c*t29770*(1.0/3.0);
                double t29817 = b1f*c*t29770*t29772*(1.0/6.0);
                double t29818 = b3f*c*t29652*t29770*(1.0/2.0);
                double t29819 = t29815+t29816+t29817+t29818;
                double t29820 = a1f*c*c0f*t29770*t29773*(2.0/3.0);
                double t29821 = a1p*c*c0p*t29770*t29665*(2.0/3.0);
                double t29822 = gamma_bb*gcaa*t29668;
                double t29823 = t29822+1.0;
                double t29824 = 1.0/t29823;
                double t29825 = ccaa1*gamma_bb*gcaa*t29824*t29668;
                double t29826 = gamma_bb*gcaa*t29668*2.0;
                double t29827 = t29670*t29671*t29669;
                double t29828 = t29826+t29827+1.0;
                double t29829 = 1.0/t29828;
                double t29830 = ccaa2*t29670*t29671*t29829*t29669;
                double t29831 = ccaa0+t29830+t29825;
                double t29832 = t29802*t29692*t29759;
                double t29833 = t29832+t29783;
                double t29834 = 1.0/pow(rho_b,1.9E1/3.0);
                v_rho_b[Q] += scale * -(ccab0+ccab1*gcab*t29672*t29807+ccab2*t29812*t29673*t29677)*(t29803+t29804+t29726-t29783+rho_b*(t29821-t29781+t29692*t29759*(t29820+t29781-t29813*t29814*t29761*t29819-a1p*c*c0p*t29770*t29665*(2.0/3.0)))-t29678*(t29784-t29730*t29731*t29736*t29698+t29720*t29715*t29727*t29692*t29737*4.0+t29715*t29724*t29727*t29754*t29692-t29720*t29724*t29727*t29692*(t29784-t29730*t29731*t29736*t29698+(t29713*1.0/(t29707*t29707)*(b2f*c*t29689*(1.0/3.0)+b4f*t29654*t29728*(2.0/3.0)+b1f*c*t29729*t29689*(1.0/6.0)+b3f*c*t29681*t29689*(1.0/2.0)))/t29710-a1f*c*c0f*t29711*t29689*(2.0/3.0))+t29700*t29720*t29715*t29724*t29692*t29699*4.0+Aa*t29720*t29750*t29692*t29738*t29748*(t29727*t29737*4.0+t29700*t29724*t29699*4.0)*2.0+Aa*t29750*t29754*t29692*t29738*t29756*t29748*2.0-(t29720*t29750*1.0/(t29744*t29744)*t29692*t29738*t29756*(b2a*c*t29689*(1.0/3.0)+b4a*t29654*t29728*(2.0/3.0)+b1a*c*t29729*t29689*(1.0/6.0)+b3a*c*t29681*t29689*(1.0/2.0)))/t29747+Aa*a1a*c*t29720*t29692*t29738*t29756*t29748*t29689*(2.0/3.0))-t29802*t29692*t29759)-t29831*(t29783+t29692*t29759*(t29782-c0p*t29665*t29667*2.0))-(rho_b*t29833+rho_a*(t29801-t29692*t29759*(t29801-c0f*log((t29693*(1.0/2.0))/(b1f*t29787+b3f*t29788+b2f*c*t29785+b4f*t29654*t29789)+1.0)*(a1f*c*t29785+1.0)*2.0))-t29678*(t29803+t29804+t29726))*(ccab1*gamma_bb*gcab*t29807*t29808*(4.0/3.0)-ccab2*1.0/(t29811*t29811)*t29673*t29677*(gamma_bb*gcab*t29808*(8.0/3.0)+gamma_bb*t29672*t29673*t29808*(8.0/3.0))-ccab1*gamma_bb*1.0/(t29806*t29806)*t29672*t29673*t29808*(4.0/3.0)+ccab2*gamma_bb*t29812*t29672*t29673*t29808*(8.0/3.0))+rho_b*t29833*(ccaa1*gamma_bb*gcaa*t29824*t29808*(8.0/3.0)+ccaa2*t29670*t29834*t29829*t29669*(1.6E1/3.0)-ccaa1*t29670*1.0/(t29823*t29823)*t29834*t29669*(8.0/3.0)-ccaa2*t29670*t29671*1.0/(t29828*t29828)*t29669*(gamma_bb*gcaa*t29808*(1.6E1/3.0)+t29670*t29834*t29669*(1.6E1/3.0)))+rho_b*t29831*(t29821-t29781+t29692*t29759*(t29820-t29821+t29781-t29813*t29814*t29761*t29819));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t29836 = 1.0/pow(rho_a,1.0/3.0);
                double t29837 = c*t29836;
                double t29838 = sqrt(t29837);
                double t29839 = pow(t29837,3.0/2.0);
                double t29840 = c*c;
                double t29841 = 1.0/pow(rho_a,2.0/3.0);
                double t29842 = 1.0/c0p;
                double t29843 = b1p*t29838;
                double t29844 = b3p*t29839;
                double t29845 = b4p*t29840*t29841;
                double t29846 = b2p*c*t29836;
                double t29847 = t29843+t29844+t29845+t29846;
                double t29848 = 1.0/t29847;
                double t29849 = t29842*t29848*(1.0/2.0);
                double t29850 = t29849+1.0;
                double t29851 = log(t29850);
                double t29852 = a1p*c*t29836;
                double t29853 = t29852+1.0;
                double t29854 = pow(2.0,1.0/3.0);
                double t29855 = t29854*2.0;
                double t29856 = t29855-2.0;
                double t29857 = two_13*2.0;
                double t29858 = t29857-2.0;
                double t29859 = 1.0/t29858;
                double t29860 = 1.0/c0f;
                double t29861 = 1.0/pow(rho_b,1.0/3.0);
                double t29862 = c*t29861;
                double t29863 = sqrt(t29862);
                double t29864 = pow(t29862,3.0/2.0);
                double t29865 = 1.0/pow(rho_b,2.0/3.0);
                double t29866 = b1p*t29863;
                double t29867 = b3p*t29864;
                double t29868 = b4p*t29840*t29865;
                double t29869 = b2p*c*t29861;
                double t29870 = t29866+t29867+t29868+t29869;
                double t29871 = 1.0/t29870;
                double t29872 = t29842*t29871*(1.0/2.0);
                double t29873 = t29872+1.0;
                double t29874 = log(t29873);
                double t29875 = a1p*c*t29861;
                double t29876 = t29875+1.0;
                double t29877 = c0p*t29874*t29876*2.0;
                double t29878 = rho_a+rho_b;
                double t29879 = 1.0/pow(t29878,1.0/3.0);
                double t29880 = c*t29879;
                double t29881 = sqrt(t29880);
                double t29882 = pow(t29880,3.0/2.0);
                double t29883 = 1.0/pow(t29878,2.0/3.0);
                double t29884 = b1p*t29881;
                double t29885 = b3p*t29882;
                double t29886 = b4p*t29840*t29883;
                double t29887 = b2p*c*t29879;
                double t29888 = t29884+t29885+t29886+t29887;
                double t29889 = 1.0/t29888;
                double t29890 = t29842*t29889*(1.0/2.0);
                double t29891 = t29890+1.0;
                double t29892 = log(t29891);
                double t29893 = a1p*c*t29879;
                double t29894 = t29893+1.0;
                double t29895 = c0p*t29892*t29894*2.0;
                double t29896 = rho_a-rho_b;
                double t29897 = t29896*t29896;
                double t29898 = 1.0/t29878;
                double t29899 = t29896*t29898;
                double t29900 = 1.0/(t29878*t29878*t29878*t29878);
                double t29901 = t29897*t29897;
                double t29902 = t29899+1.0;
                double t29903 = pow(t29902,4.0/3.0);
                double t29904 = -t29899+1.0;
                double t29905 = pow(t29904,4.0/3.0);
                double t29906 = t29903+t29905-2.0;
                double t29907 = 1.0/pow(rho_a,8.0/3.0);
                double t29908 = gamma_aa*t29907*(1.0/2.0);
                double t29909 = 1.0/pow(rho_b,8.0/3.0);
                double t29910 = gamma_bb*t29909*(1.0/2.0);
                double t29911 = t29910+t29908;
                double t29912 = gcab*t29911;
                double t29913 = t29912+1.0;
                double t29914 = gcab*gcab;
                double t29915 = t29911*t29911;
                double t29916 = t29914*t29915;
                double t29917 = gcab*t29911*2.0;
                double t29918 = t29916+t29917+1.0;
                double t29919 = c0p*t29851*t29853*2.0;
                double t29920 = b1f*t29838;
                double t29921 = b3f*t29839;
                double t29922 = b4f*t29840*t29841;
                double t29923 = b2f*c*t29836;
                double t29924 = t29920+t29921+t29922+t29923;
                double t29925 = 1.0/t29924;
                double t29926 = t29860*t29925*(1.0/2.0);
                double t29927 = t29926+1.0;
                double t29928 = log(t29927);
                double t29929 = a1f*c*t29836;
                double t29930 = t29929+1.0;
                double t29931 = t29919-c0f*t29930*t29928*2.0;
                double t29932 = t29919-t29931*t29856*t29859;
                double t29933 = gcaa*gcaa;
                double t29934 = 1.0/pow(rho_a,1.6E1/3.0);
                double t29935 = gamma_aa*gcaa*t29907;
                double t29936 = t29935+1.0;
                double t29937 = gamma_aa*gamma_aa;
                double t29938 = gamma_aa*gcaa*t29907*2.0;
                double t29939 = t29933*t29934*t29937;
                double t29940 = t29938+t29939+1.0;
                v_gamma_aa[Q] += scale * (rho_a*t29932+rho_b*(t29877-t29856*t29859*(t29877-c0f*log((t29860*(1.0/2.0))/(b1f*t29863+b3f*t29864+b2f*c*t29861+b4f*t29840*t29865)+1.0)*(a1f*c*t29861+1.0)*2.0))-t29878*(t29895-t29900*t29901*t29906*t29859*(t29895-c0f*log((t29860*(1.0/2.0))/(b1f*t29881+b3f*t29882+b2f*c*t29879+b4f*t29840*t29883)+1.0)*(a1f*c*t29879+1.0)*2.0)+(Aa*t29906*t29859*log((1.0/2.0)/(Aa*(b1a*t29881+b3a*t29882+b2a*c*t29879+b4a*t29840*t29883))+1.0)*(t29900*t29901-1.0)*(a1a*c*t29879+1.0)*2.0)/d2fz0))*((ccab1*gcab*t29907*(1.0/2.0))/t29913-ccab2*t29914*t29915*1.0/(t29918*t29918)*(gcab*t29907+t29911*t29914*t29907)-ccab1*t29911*1.0/(t29913*t29913)*t29914*t29907*(1.0/2.0)+(ccab2*t29911*t29914*t29907)/t29918)-rho_a*t29932*((ccaa1*gcaa*t29907)/t29936+(ccaa2*gamma_aa*t29933*t29934*2.0)/t29940-ccaa1*gamma_aa*t29933*t29934*1.0/(t29936*t29936)-ccaa2*1.0/(t29940*t29940)*t29933*t29934*t29937*(gcaa*t29907*2.0+gamma_aa*t29933*t29934*2.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t29943 = 1.0/pow(rho_a,1.0/3.0);
                double t29944 = c*t29943;
                double t29945 = sqrt(t29944);
                double t29946 = pow(t29944,3.0/2.0);
                double t29947 = c*c;
                double t29948 = 1.0/pow(rho_a,2.0/3.0);
                double t29949 = 1.0/c0p;
                double t29950 = b1p*t29945;
                double t29951 = b3p*t29946;
                double t29952 = b4p*t29947*t29948;
                double t29953 = b2p*c*t29943;
                double t29954 = t29950+t29951+t29952+t29953;
                double t29955 = 1.0/t29954;
                double t29956 = t29955*t29949*(1.0/2.0);
                double t29957 = t29956+1.0;
                double t29958 = log(t29957);
                double t29959 = a1p*c*t29943;
                double t29960 = t29959+1.0;
                double t29961 = pow(2.0,1.0/3.0);
                double t29962 = t29961*2.0;
                double t29963 = t29962-2.0;
                double t29964 = two_13*2.0;
                double t29965 = t29964-2.0;
                double t29966 = 1.0/t29965;
                double t29967 = 1.0/c0f;
                double t29968 = 1.0/pow(rho_b,1.0/3.0);
                double t29969 = c*t29968;
                double t29970 = sqrt(t29969);
                double t29971 = pow(t29969,3.0/2.0);
                double t29972 = 1.0/pow(rho_b,2.0/3.0);
                double t29973 = b1p*t29970;
                double t29974 = b3p*t29971;
                double t29975 = b4p*t29972*t29947;
                double t29976 = b2p*c*t29968;
                double t29977 = t29973+t29974+t29975+t29976;
                double t29978 = 1.0/t29977;
                double t29979 = t29949*t29978*(1.0/2.0);
                double t29980 = t29979+1.0;
                double t29981 = log(t29980);
                double t29982 = a1p*c*t29968;
                double t29983 = t29982+1.0;
                double t29984 = c0p*t29981*t29983*2.0;
                double t29985 = rho_a+rho_b;
                double t29986 = 1.0/pow(t29985,1.0/3.0);
                double t29987 = c*t29986;
                double t29988 = sqrt(t29987);
                double t29989 = pow(t29987,3.0/2.0);
                double t29990 = 1.0/pow(t29985,2.0/3.0);
                double t29991 = b1p*t29988;
                double t29992 = b3p*t29989;
                double t29993 = b4p*t29990*t29947;
                double t29994 = b2p*c*t29986;
                double t29995 = t29991+t29992+t29993+t29994;
                double t29996 = 1.0/t29995;
                double t29997 = t29949*t29996*(1.0/2.0);
                double t29998 = t29997+1.0;
                double t29999 = log(t29998);
                double t30000 = a1p*c*t29986;
                double t30001 = t30000+1.0;
                double t30002 = c0p*t29999*t30001*2.0;
                double t30003 = rho_a-rho_b;
                double t30004 = t30003*t30003;
                double t30005 = 1.0/t29985;
                double t30006 = t30003*t30005;
                double t30007 = 1.0/(t29985*t29985*t29985*t29985);
                double t30008 = t30004*t30004;
                double t30009 = t30006+1.0;
                double t30010 = pow(t30009,4.0/3.0);
                double t30011 = -t30006+1.0;
                double t30012 = pow(t30011,4.0/3.0);
                double t30013 = t30010+t30012-2.0;
                double t30014 = 1.0/pow(rho_b,8.0/3.0);
                double t30015 = 1.0/pow(rho_a,8.0/3.0);
                double t30016 = gamma_aa*t30015*(1.0/2.0);
                double t30017 = gamma_bb*t30014*(1.0/2.0);
                double t30018 = t30016+t30017;
                double t30019 = gcab*t30018;
                double t30020 = t30019+1.0;
                double t30021 = gcab*gcab;
                double t30022 = t30018*t30018;
                double t30023 = t30021*t30022;
                double t30024 = gcab*t30018*2.0;
                double t30025 = t30023+t30024+1.0;
                double t30026 = c0p*t29960*t29958*2.0;
                double t30027 = b1f*t29970;
                double t30028 = b3f*t29971;
                double t30029 = b4f*t29972*t29947;
                double t30030 = b2f*c*t29968;
                double t30031 = t30030+t30027+t30028+t30029;
                double t30032 = 1.0/t30031;
                double t30033 = t29967*t30032*(1.0/2.0);
                double t30034 = t30033+1.0;
                double t30035 = log(t30034);
                double t30036 = a1f*c*t29968;
                double t30037 = t30036+1.0;
                double t30038 = t29984-c0f*t30035*t30037*2.0;
                double t30039 = t29984-t29963*t29966*t30038;
                double t30040 = gcaa*gcaa;
                double t30041 = 1.0/pow(rho_b,1.6E1/3.0);
                double t30042 = gamma_bb*gcaa*t30014;
                double t30043 = t30042+1.0;
                double t30044 = gamma_bb*gamma_bb;
                double t30045 = gamma_bb*gcaa*t30014*2.0;
                double t30046 = t30040*t30041*t30044;
                double t30047 = t30045+t30046+1.0;
                v_gamma_bb[Q] += scale * (rho_b*t30039+rho_a*(t30026-t29963*t29966*(t30026-c0f*log((t29967*(1.0/2.0))/(b1f*t29945+b3f*t29946+b2f*c*t29943+b4f*t29947*t29948)+1.0)*(a1f*c*t29943+1.0)*2.0))-t29985*(t30002-t29966*t30013*t30007*t30008*(t30002-c0f*log((t29967*(1.0/2.0))/(b1f*t29988+b3f*t29989+b2f*c*t29986+b4f*t29990*t29947)+1.0)*(a1f*c*t29986+1.0)*2.0)+(Aa*t29966*t30013*log((1.0/2.0)/(Aa*(b1a*t29988+b3a*t29989+b2a*c*t29986+b4a*t29990*t29947))+1.0)*(t30007*t30008-1.0)*(a1a*c*t29986+1.0)*2.0)/d2fz0))*((ccab1*gcab*t30014*(1.0/2.0))/t30020-ccab2*t30021*t30022*1.0/(t30025*t30025)*(gcab*t30014+t30021*t30014*t30018)-ccab1*1.0/(t30020*t30020)*t30021*t30014*t30018*(1.0/2.0)+(ccab2*t30021*t30014*t30018)/t30025)-rho_b*t30039*((ccaa1*gcaa*t30014)/t30043-ccaa1*gamma_bb*t30040*t30041*1.0/(t30043*t30043)+(ccaa2*gamma_bb*t30040*t30041*2.0)/t30047-ccaa2*t30040*t30041*t30044*1.0/(t30047*t30047)*(gcaa*t30014*2.0+gamma_bb*t30040*t30041*2.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t30051 = 1.0/pow(rho_a,1.0/3.0);
                double t30052 = c*t30051;
                double t30053 = sqrt(t30052);
                double t30054 = pow(t30052,3.0/2.0);
                double t30055 = c*c;
                double t30056 = 1.0/pow(rho_a,2.0/3.0);
                double t30057 = 1.0/c0p;
                double t30058 = b1p*t30053;
                double t30059 = b3p*t30054;
                double t30060 = b4p*t30055*t30056;
                double t30061 = b2p*c*t30051;
                double t30062 = t30060+t30061+t30058+t30059;
                double t30063 = 1.0/t30062;
                double t30064 = t30063*t30057*(1.0/2.0);
                double t30065 = t30064+1.0;
                double t30066 = log(t30065);
                double t30067 = a1p*c*t30051;
                double t30068 = t30067+1.0;
                double t30069 = 1.0/pow(rho_a,8.0/3.0);
                double t30070 = gamma_aa*gamma_aa;
                double t30071 = gcaa*gcaa;
                double t30072 = 1.0/pow(rho_a,1.9E1/3.0);
                double t30073 = gamma_aa*gcaa*t30069;
                double t30074 = t30073+1.0;
                double t30075 = 1.0/pow(rho_a,1.6E1/3.0);
                double t30076 = 1.0/pow(rho_a,1.1E1/3.0);
                double t30077 = gamma_aa*gcaa*t30069*2.0;
                double t30078 = t30070*t30071*t30075;
                double t30079 = t30077+t30078+1.0;
                double t30082 = gamma_aa*t30069*(1.0/2.0);
                double t30083 = 1.0/pow(rho_b,8.0/3.0);
                double t30084 = gamma_bb*t30083*(1.0/2.0);
                double t30080 = t30082+t30084;
                double t30081 = gcab*gcab;
                double t30085 = t30080*t30080;
                double t30086 = rho_a+rho_b;
                double t30087 = 1.0/pow(t30086,1.0/3.0);
                double t30088 = c*t30087;
                double t30089 = sqrt(t30088);
                double t30090 = b1p*t30089;
                double t30091 = pow(t30088,3.0/2.0);
                double t30092 = b3p*t30091;
                double t30093 = 1.0/pow(t30086,2.0/3.0);
                double t30094 = b4p*t30055*t30093;
                double t30095 = b2p*c*t30087;
                double t30096 = t30090+t30092+t30094+t30095;
                double t30097 = 1.0/pow(t30086,7.0/3.0);
                double t30098 = 1.0/pow(t30086,8.0/3.0);
                double t30099 = 1.0/sqrt(t30088);
                double t30100 = a1p*c*t30087;
                double t30101 = t30100+1.0;
                double t30102 = 1.0/t30096;
                double t30103 = t30102*t30057*(1.0/2.0);
                double t30104 = t30103+1.0;
                double t30105 = 1.0/t30104;
                double t30106 = 1.0/pow(t30086,4.0/3.0);
                double t30146 = 1.0/pow(t30086,5.0/3.0);
                double t30148 = b4p*t30055*t30146*(2.0/3.0);
                double t30149 = b2p*c*t30106*(1.0/3.0);
                double t30150 = b1p*c*t30106*t30099*(1.0/6.0);
                double t30151 = b3p*c*t30106*t30089*(1.0/2.0);
                double t30107 = t30150+t30151+t30148+t30149;
                double t30108 = two_13*2.0;
                double t30109 = t30108-2.0;
                double t30110 = 1.0/t30109;
                double t30111 = 1.0/c0f;
                double t30112 = rho_a-rho_b;
                double t30113 = 1.0/t30086;
                double t30114 = t30112*t30113;
                double t30115 = b1f*t30089;
                double t30116 = b3f*t30091;
                double t30117 = b4f*t30055*t30093;
                double t30118 = b2f*c*t30087;
                double t30119 = t30115+t30116+t30117+t30118;
                double t30120 = 1.0/t30119;
                double t30121 = t30111*t30120*(1.0/2.0);
                double t30122 = t30121+1.0;
                double t30123 = log(t30122);
                double t30124 = a1f*c*t30087;
                double t30125 = t30124+1.0;
                double t30126 = log(t30104);
                double t30134 = c0f*t30123*t30125*2.0;
                double t30135 = c0p*t30101*t30126*2.0;
                double t30127 = t30134-t30135;
                double t30128 = t30112*t30112;
                double t30129 = t30114+1.0;
                double t30130 = pow(t30129,4.0/3.0);
                double t30131 = -t30114+1.0;
                double t30132 = pow(t30131,4.0/3.0);
                double t30133 = t30130+t30132-2.0;
                double t30136 = 1.0/(t30086*t30086);
                double t30140 = t30112*t30136;
                double t30137 = t30113-t30140;
                double t30138 = 1.0/(t30086*t30086*t30086*t30086);
                double t30139 = pow(t30129,1.0/3.0);
                double t30141 = t30137*t30139*(4.0/3.0);
                double t30142 = pow(t30131,1.0/3.0);
                double t30174 = t30142*t30137*(4.0/3.0);
                double t30143 = t30141-t30174;
                double t30144 = 1.0/(t30086*t30086*t30086*t30086*t30086);
                double t30145 = t30128*t30128;
                double t30147 = 1.0/(t30096*t30096);
                double t30152 = 1.0/t30122;
                double t30153 = 1.0/(t30119*t30119);
                double t30154 = b4f*t30055*t30146*(2.0/3.0);
                double t30155 = b2f*c*t30106*(1.0/3.0);
                double t30156 = b1f*c*t30106*t30099*(1.0/6.0);
                double t30157 = b3f*c*t30106*t30089*(1.0/2.0);
                double t30158 = t30154+t30155+t30156+t30157;
                double t30159 = t30101*t30105*t30107*t30147;
                double t30160 = a1f*c*c0f*t30123*t30106*(2.0/3.0);
                double t30161 = t30107*t30107;
                double t30162 = 1.0/pow(t30088,3.0/2.0);
                double t30163 = b4p*t30055*t30098*(1.0E1/9.0);
                double t30164 = b2p*c*t30097*(4.0/9.0);
                double t30165 = b1p*c*t30097*t30099*(2.0/9.0);
                double t30166 = b3p*c*t30097*t30089*(2.0/3.0);
                double t30167 = b3p*t30055*t30098*t30099*(1.0/1.2E1);
                double t30168 = t30163+t30164+t30165+t30166+t30167-b1p*t30162*t30055*t30098*(1.0/3.6E1);
                double t30169 = 1.0/(t30096*t30096*t30096);
                double t30170 = t30101*t30105*t30161*t30169*2.0;
                double t30171 = t30158*t30158;
                double t30172 = 1.0/(t30104*t30104);
                double t30173 = 1.0/(t30096*t30096*t30096*t30096);
                double t30262 = t30125*t30152*t30153*t30158;
                double t30263 = a1p*c*c0p*t30106*t30126*(2.0/3.0);
                double t30175 = t30160-t30262-t30263+t30159;
                double t30176 = t30136*2.0;
                double t30177 = 1.0/(t30086*t30086*t30086);
                double t30195 = t30112*t30177*2.0;
                double t30178 = t30176-t30195;
                double t30179 = t30137*t30137;
                double t30180 = a1p*c*c0p*t30126*t30097*(8.0/9.0);
                double t30181 = 1.0/(t30086*t30086*t30086*t30086*t30086*t30086);
                double t30182 = 1.0/d2fz0;
                double t30183 = 1.0/Aa;
                double t30184 = b1a*t30089;
                double t30185 = b3a*t30091;
                double t30186 = b4a*t30055*t30093;
                double t30187 = b2a*c*t30087;
                double t30188 = t30184+t30185+t30186+t30187;
                double t30189 = 1.0/t30188;
                double t30190 = t30183*t30189*(1.0/2.0);
                double t30191 = t30190+1.0;
                double t30192 = log(t30191);
                double t30193 = a1a*c*t30087;
                double t30194 = t30193+1.0;
                double t30196 = t30142*t30178*(4.0/3.0);
                double t30197 = 1.0/pow(t30129,2.0/3.0);
                double t30198 = t30179*t30197*(4.0/9.0);
                double t30199 = 1.0/pow(t30131,2.0/3.0);
                double t30200 = t30179*t30199*(4.0/9.0);
                double t30201 = t30200+t30196+t30198-t30139*t30178*(4.0/3.0);
                double t30202 = t30144*t30145*4.0;
                double t30214 = t30112*t30128*t30138*4.0;
                double t30203 = t30202-t30214;
                double t30204 = 1.0/t30191;
                double t30205 = t30145*t30138;
                double t30206 = t30205-1.0;
                double t30207 = 1.0/(t30188*t30188);
                double t30208 = b4a*t30055*t30146*(2.0/3.0);
                double t30209 = b2a*c*t30106*(1.0/3.0);
                double t30210 = b1a*c*t30106*t30099*(1.0/6.0);
                double t30211 = b3a*c*t30106*t30089*(1.0/2.0);
                double t30212 = t30210+t30211+t30208+t30209;
                double t30213 = t30212*t30212;
                double t30215 = t30101*t30105*t30147*t30168;
                double t30216 = pow(2.0,1.0/3.0);
                double t30217 = t30216*2.0;
                double t30218 = t30217-2.0;
                double t30219 = a1f*c*t30051;
                double t30220 = t30219+1.0;
                double t30221 = b1f*t30053;
                double t30222 = b3f*t30054;
                double t30223 = b4f*t30055*t30056;
                double t30224 = b2f*c*t30051;
                double t30225 = t30221+t30222+t30223+t30224;
                double t30226 = 1.0/t30225;
                double t30227 = t30111*t30226*(1.0/2.0);
                double t30228 = t30227+1.0;
                double t30229 = 1.0/pow(rho_a,4.0/3.0);
                double t30231 = 1.0/pow(rho_a,5.0/3.0);
                double t30232 = 1.0/sqrt(t30052);
                double t30238 = b4f*t30231*t30055*(2.0/3.0);
                double t30239 = b2f*c*t30229*(1.0/3.0);
                double t30240 = b1f*c*t30232*t30229*(1.0/6.0);
                double t30241 = b3f*c*t30053*t30229*(1.0/2.0);
                double t30230 = t30240+t30241+t30238+t30239;
                double t30243 = b4p*t30231*t30055*(2.0/3.0);
                double t30244 = b2p*c*t30229*(1.0/3.0);
                double t30245 = b1p*c*t30232*t30229*(1.0/6.0);
                double t30246 = b3p*c*t30053*t30229*(1.0/2.0);
                double t30233 = t30243+t30244+t30245+t30246;
                double t30234 = 1.0/t30228;
                double t30235 = 1.0/pow(rho_a,7.0/3.0);
                double t30236 = 1.0/t30065;
                double t30237 = 1.0/pow(t30052,3.0/2.0);
                double t30242 = t30230*t30230;
                double t30247 = t30233*t30233;
                double t30248 = log(t30228);
                double t30249 = 1.0/(t30225*t30225);
                double t30250 = 1.0/(t30062*t30062);
                double t30251 = 1.0/(t30062*t30062*t30062);
                double t30252 = t30251*t30236*t30247*t30068*2.0;
                double t30253 = b4p*t30055*t30069*(1.0E1/9.0);
                double t30254 = b2p*c*t30235*(4.0/9.0);
                double t30255 = b3p*t30232*t30055*t30069*(1.0/1.2E1);
                double t30256 = b1p*c*t30232*t30235*(2.0/9.0);
                double t30257 = b3p*c*t30053*t30235*(2.0/3.0);
                double t30319 = b1p*t30055*t30237*t30069*(1.0/3.6E1);
                double t30258 = t30253+t30254+t30255+t30256-t30319+t30257;
                double t30259 = 1.0/(t30065*t30065);
                double t30260 = 1.0/(t30062*t30062*t30062*t30062);
                double t30261 = a1p*c*c0p*t30235*t30066*(8.0/9.0);
                double t30264 = gcab*t30080;
                double t30265 = t30264+1.0;
                double t30266 = 1.0/t30265;
                double t30267 = t30081*t30085;
                double t30268 = gcab*t30080*2.0;
                double t30269 = t30267+t30268+1.0;
                double t30270 = 1.0/t30269;
                double t30271 = t30220*t30230*t30234*t30249;
                double t30272 = a1p*c*c0p*t30066*t30229*(2.0/3.0);
                double t30274 = t30250*t30233*t30236*t30068;
                double t30277 = a1f*c*c0f*t30229*t30248*(2.0/3.0);
                double t30273 = t30271+t30272-t30274-t30277;
                double t30275 = c0f*t30220*t30248*2.0;
                double t30276 = c0p*t30066*t30068*2.0;
                double t30278 = t30110*t30218*t30273;
                double t30279 = -t30272+t30274+t30278;
                double t30280 = 1.0/t30074;
                double t30281 = 1.0/t30079;
                double t30282 = t30275-t30276;
                double t30283 = t30110*t30218*t30282;
                double t30284 = 1.0/pow(rho_b,1.0/3.0);
                double t30285 = c*t30284;
                double t30286 = sqrt(t30285);
                double t30287 = pow(t30285,3.0/2.0);
                double t30288 = 1.0/pow(rho_b,2.0/3.0);
                double t30289 = b1p*t30286;
                double t30290 = b3p*t30287;
                double t30291 = b4p*t30055*t30288;
                double t30292 = b2p*c*t30284;
                double t30293 = t30290+t30291+t30292+t30289;
                double t30294 = 1.0/t30293;
                double t30295 = t30057*t30294*(1.0/2.0);
                double t30296 = t30295+1.0;
                double t30297 = log(t30296);
                double t30298 = a1p*c*t30284;
                double t30299 = t30298+1.0;
                double t30300 = c0p*t30297*t30299*2.0;
                double t30301 = 1.0/(t30265*t30265);
                double t30302 = 1.0/pow(rho_a,2.2E1/3.0);
                double t30303 = gamma_aa*gcab*t30076*(8.0/3.0);
                double t30304 = gamma_aa*t30080*t30081*t30076*(8.0/3.0);
                double t30305 = t30303+t30304;
                double t30306 = 1.0/pow(rho_a,1.4E1/3.0);
                double t30307 = 1.0/(t30269*t30269);
                double t30308 = ccaa1*gamma_aa*gcaa*t30280*t30069;
                double t30309 = ccaa2*t30070*t30071*t30281*t30075;
                double t30310 = ccaa0+t30308+t30309;
                double t30311 = 1.0/(t30225*t30225*t30225);
                double t30312 = b4f*t30055*t30069*(1.0E1/9.0);
                double t30313 = b2f*c*t30235*(4.0/9.0);
                double t30314 = b3f*t30232*t30055*t30069*(1.0/1.2E1);
                double t30315 = b1f*c*t30232*t30235*(2.0/9.0);
                double t30316 = b3f*c*t30053*t30235*(2.0/3.0);
                double t30317 = t30312+t30313+t30314+t30315+t30316-b1f*t30055*t30237*t30069*(1.0/3.6E1);
                double t30318 = t30220*t30234*t30317*t30249;
                double t30320 = t30250*t30236*t30068*t30258;
                double t30321 = 1.0/(t30228*t30228);
                double t30322 = 1.0/(t30225*t30225*t30225*t30225);
                double t30323 = t30111*t30220*t30321*t30322*t30242*(1.0/2.0);
                double t30324 = t30260*t30057*t30247*t30068*t30259*(1.0/2.0);
                double t30325 = a1f*c*t30230*t30234*t30229*t30249*(2.0/3.0);
                double t30326 = a1p*c*t30250*t30233*t30236*t30229*(2.0/3.0);
                double t30327 = t30283+t30276;
                double t30328 = 1.0/(t30074*t30074);
                double t30329 = gamma_aa*gcaa*t30076*(1.6E1/3.0);
                double t30330 = t30070*t30071*t30072*(1.6E1/3.0);
                double t30331 = t30330+t30329;
                double t30332 = 1.0/(t30079*t30079);
                double t30333 = ccaa1*gamma_aa*gcaa*t30280*t30076*(8.0/3.0);
                double t30334 = ccaa2*t30070*t30071*t30072*t30281*(1.6E1/3.0);
                double t30335 = t30333+t30334-ccaa1*t30070*t30071*t30072*t30328*(8.0/3.0)-ccaa2*t30070*t30331*t30071*t30332*t30075;
                v_rho_a_rho_a[Q] += scale * t30310*t30279*-2.0+t30335*(t30276+t30110*t30218*(t30275-c0p*t30066*t30068*2.0))*2.0-(ccab1*gamma_aa*gcab*t30076*t30266*(4.0/3.0)-ccab2*t30305*t30081*t30307*t30085-ccab1*gamma_aa*t30301*t30080*t30081*t30076*(4.0/3.0)+ccab2*gamma_aa*t30080*t30081*t30270*t30076*(8.0/3.0))*(-t30135+t30283+t30276+rho_a*t30279+t30086*(t30263-t30159+t30110*t30133*t30144*t30127*t30145*4.0-t30110*t30143*t30127*t30145*t30138+t30110*t30133*t30145*t30138*t30175-t30110*t30112*t30133*t30127*t30128*t30138*4.0+Aa*t30110*t30203*t30133*t30182*t30192*t30194*2.0-Aa*t30110*t30143*t30206*t30182*t30192*t30194*2.0-t30110*t30212*t30204*t30133*t30206*t30207*t30182*t30194+Aa*a1a*c*t30110*t30106*t30133*t30206*t30182*t30192*(2.0/3.0))-t30110*t30133*t30127*t30145*t30138-Aa*t30110*t30133*t30206*t30182*t30192*t30194*2.0)*2.0+(ccab0+ccab1*gcab*t30080*t30266+ccab2*t30081*t30270*t30085)*(t30086*(-t30170+t30215-t30180-t30110*t30201*t30127*t30145*t30138-t30110*t30133*t30127*t30145*t30181*2.0E1+t30110*t30143*t30144*t30127*t30145*8.0-t30110*t30133*t30144*t30145*t30175*8.0-t30110*t30133*t30127*t30128*t30138*1.2E1+t30101*t30161*t30172*t30173*t30057*(1.0/2.0)+t30110*t30143*t30145*t30138*t30175*2.0+t30110*t30133*t30145*t30138*(t30170-t30215+t30180-t30125*t30152*t30171*1.0/(t30119*t30119*t30119)*2.0+t30125*t30152*t30153*(b2f*c*t30097*(4.0/9.0)+b4f*t30055*t30098*(1.0E1/9.0)+b1f*c*t30097*t30099*(2.0/9.0)+b3f*c*t30097*t30089*(2.0/3.0)-b1f*t30162*t30055*t30098*(1.0/3.6E1)+b3f*t30055*t30098*t30099*(1.0/1.2E1))+t30111*1.0/(t30122*t30122)*t30125*t30171*1.0/(t30119*t30119*t30119*t30119)*(1.0/2.0)-a1f*c*c0f*t30123*t30097*(8.0/9.0)-t30101*t30161*t30172*t30173*t30057*(1.0/2.0)+a1f*c*t30106*t30152*t30153*t30158*(2.0/3.0)-a1p*c*t30105*t30106*t30107*t30147*(2.0/3.0))+t30110*t30112*t30133*t30144*t30127*t30128*3.2E1-t30110*t30112*t30143*t30127*t30128*t30138*8.0+t30110*t30112*t30133*t30128*t30138*t30175*8.0+a1p*c*t30105*t30106*t30107*t30147*(2.0/3.0)-Aa*t30110*t30201*t30206*t30182*t30192*t30194*2.0+Aa*t30110*t30203*t30143*t30182*t30192*t30194*4.0-Aa*t30110*t30133*t30182*t30192*t30194*(t30145*t30181*2.0E1+t30128*t30138*1.2E1-t30112*t30144*t30128*3.2E1)*2.0+t30110*t30203*t30212*t30204*t30133*t30207*t30182*t30194*2.0-t30110*t30212*t30204*t30143*t30206*t30207*t30182*t30194*2.0-t30110*t30204*t30213*t30133*t30206*t30182*t30194*1.0/(t30188*t30188*t30188)*2.0+t30110*t30204*t30133*t30206*t30207*t30182*t30194*(b2a*c*t30097*(4.0/9.0)+b4a*t30055*t30098*(1.0E1/9.0)+b1a*c*t30097*t30099*(2.0/9.0)+b3a*c*t30097*t30089*(2.0/3.0)-b1a*t30162*t30055*t30098*(1.0/3.6E1)+b3a*t30055*t30098*t30099*(1.0/1.2E1))-Aa*a1a*c*t30110*t30203*t30106*t30133*t30182*t30192*(4.0/3.0)+Aa*a1a*c*t30110*t30106*t30143*t30206*t30182*t30192*(4.0/3.0)-Aa*a1a*c*t30110*t30133*t30206*t30182*t30192*t30097*(8.0/9.0)+t30110*t30213*t30133*t30206*t30182*1.0/(t30191*t30191)*t30183*t30194*1.0/(t30188*t30188*t30188*t30188)*(1.0/2.0)+a1a*c*t30110*t30212*t30204*t30106*t30133*t30206*t30207*t30182*(2.0/3.0))-rho_a*(t30320-t30252-t30261+t30324+t30326+t30110*t30218*(t30323+t30252+t30261+t30325+t30318-t30220*t30311*t30242*t30234*2.0-t30250*t30236*t30068*t30258-a1f*c*c0f*t30235*t30248*(8.0/9.0)-t30260*t30057*t30247*t30068*t30259*(1.0/2.0)-a1p*c*t30250*t30233*t30236*t30229*(2.0/3.0)))+t30110*t30218*t30273*2.0-t30101*t30105*t30107*t30147*2.0+t30250*t30233*t30236*t30068*2.0+a1p*c*c0p*t30106*t30126*(4.0/3.0)-a1p*c*c0p*t30066*t30229*(4.0/3.0)+t30110*t30133*t30144*t30127*t30145*8.0-t30110*t30143*t30127*t30145*t30138*2.0+t30110*t30133*t30145*t30138*t30175*2.0-t30110*t30112*t30133*t30127*t30128*t30138*8.0+Aa*t30110*t30203*t30133*t30182*t30192*t30194*4.0-Aa*t30110*t30143*t30206*t30182*t30192*t30194*4.0-t30110*t30212*t30204*t30133*t30206*t30207*t30182*t30194*2.0+Aa*a1a*c*t30110*t30106*t30133*t30206*t30182*t30192*(4.0/3.0))+(rho_a*t30327+rho_b*(t30300-t30110*t30218*(t30300-c0f*log((t30111*(1.0/2.0))/(b1f*t30286+b3f*t30287+b2f*c*t30284+b4f*t30055*t30288)+1.0)*(a1f*c*t30284+1.0)*2.0))-t30086*(t30135+t30110*t30133*t30127*t30145*t30138+Aa*t30110*t30133*t30206*t30182*t30192*t30194*2.0))*(-ccab2*t30081*t30307*t30085*(gamma_aa*gcab*t30306*(8.8E1/9.0)+t30302*t30070*t30081*(3.2E1/9.0)+gamma_aa*t30080*t30081*t30306*(8.8E1/9.0))+ccab2*(t30305*t30305)*t30081*t30085*1.0/(t30269*t30269*t30269)*2.0+ccab1*gamma_aa*gcab*t30306*t30266*(4.4E1/9.0)-ccab1*t30301*t30302*t30070*t30081*(3.2E1/9.0)+ccab2*t30302*t30070*t30081*t30270*(3.2E1/9.0)-ccab1*gamma_aa*t30301*t30080*t30081*t30306*(4.4E1/9.0)+ccab2*gamma_aa*t30080*t30081*t30270*t30306*(8.8E1/9.0)-ccab2*gamma_aa*t30080*t30305*t30081*t30307*t30076*(1.6E1/3.0)+ccab1*gcab*t30302*t30070*t30080*t30081*1.0/(t30265*t30265*t30265)*(3.2E1/9.0))+rho_a*t30310*(t30320-t30252-t30261+t30324+t30326-t30110*t30218*(t30320-t30323-t30252-t30261+t30324-t30325+t30326-t30318+t30220*t30311*t30242*t30234*2.0+a1f*c*c0f*t30235*t30248*(8.0/9.0)))-rho_a*t30327*(ccaa1*gamma_aa*gcaa*t30306*t30280*(8.8E1/9.0)+ccaa2*t30302*t30070*t30071*t30281*(3.04E2/9.0)-ccaa1*t30302*t30070*t30071*t30328*2.4E1-ccaa2*t30070*t30331*t30071*t30332*t30072*(3.2E1/3.0)-ccaa2*t30070*t30071*t30332*t30075*(gamma_aa*gcaa*t30306*(1.76E2/9.0)+t30302*t30070*t30071*(3.04E2/9.0))+ccaa2*t30070*(t30331*t30331)*t30071*t30075*1.0/(t30079*t30079*t30079)*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*t30070*t30071*1.0/(t30074*t30074*t30074)*(1.28E2/9.0))+rho_a*t30335*t30279*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t30337 = 1.0/pow(rho_a,1.0/3.0);
                double t30338 = c*t30337;
                double t30339 = sqrt(t30338);
                double t30340 = pow(t30338,3.0/2.0);
                double t30341 = c*c;
                double t30342 = 1.0/pow(rho_a,2.0/3.0);
                double t30343 = 1.0/c0p;
                double t30344 = b1p*t30339;
                double t30345 = b3p*t30340;
                double t30346 = b4p*t30341*t30342;
                double t30347 = b2p*c*t30337;
                double t30348 = t30344+t30345+t30346+t30347;
                double t30349 = 1.0/t30348;
                double t30350 = t30343*t30349*(1.0/2.0);
                double t30351 = t30350+1.0;
                double t30352 = log(t30351);
                double t30353 = a1p*c*t30337;
                double t30354 = t30353+1.0;
                double t30355 = pow(2.0,1.0/3.0);
                double t30356 = t30355*2.0;
                double t30357 = t30356-2.0;
                double t30358 = two_13*2.0;
                double t30359 = t30358-2.0;
                double t30360 = 1.0/t30359;
                double t30361 = 1.0/c0f;
                double t30362 = 1.0/pow(rho_b,1.0/3.0);
                double t30363 = c*t30362;
                double t30364 = sqrt(t30363);
                double t30365 = pow(t30363,3.0/2.0);
                double t30366 = 1.0/pow(rho_b,2.0/3.0);
                double t30367 = b1p*t30364;
                double t30368 = b3p*t30365;
                double t30369 = b4p*t30341*t30366;
                double t30370 = b2p*c*t30362;
                double t30371 = t30370+t30367+t30368+t30369;
                double t30372 = 1.0/t30371;
                double t30373 = t30343*t30372*(1.0/2.0);
                double t30374 = t30373+1.0;
                double t30375 = log(t30374);
                double t30376 = a1p*c*t30362;
                double t30377 = t30376+1.0;
                double t30378 = c0p*t30375*t30377*2.0;
                double t30379 = rho_a+rho_b;
                double t30380 = 1.0/pow(t30379,1.0/3.0);
                double t30381 = c*t30380;
                double t30382 = sqrt(t30381);
                double t30383 = pow(t30381,3.0/2.0);
                double t30384 = 1.0/pow(t30379,2.0/3.0);
                double t30385 = b1p*t30382;
                double t30386 = b3p*t30383;
                double t30387 = b4p*t30341*t30384;
                double t30388 = b2p*c*t30380;
                double t30389 = t30385+t30386+t30387+t30388;
                double t30390 = 1.0/t30389;
                double t30391 = t30343*t30390*(1.0/2.0);
                double t30392 = t30391+1.0;
                double t30393 = log(t30392);
                double t30394 = a1p*c*t30380;
                double t30395 = t30394+1.0;
                double t30396 = c0p*t30393*t30395*2.0;
                double t30397 = rho_a-rho_b;
                double t30398 = t30397*t30397;
                double t30399 = 1.0/t30379;
                double t30400 = t30397*t30399;
                double t30401 = 1.0/(t30379*t30379*t30379*t30379);
                double t30402 = t30398*t30398;
                double t30403 = t30400+1.0;
                double t30404 = pow(t30403,4.0/3.0);
                double t30405 = -t30400+1.0;
                double t30406 = pow(t30405,4.0/3.0);
                double t30407 = t30404+t30406-2.0;
                double t30408 = gcab*gcab;
                double t30409 = 1.0/pow(rho_a,1.1E1/3.0);
                double t30410 = 1.0/pow(rho_b,1.1E1/3.0);
                double t30411 = 1.0/pow(rho_a,8.0/3.0);
                double t30412 = gamma_aa*t30411*(1.0/2.0);
                double t30413 = 1.0/pow(rho_b,8.0/3.0);
                double t30414 = gamma_bb*t30413*(1.0/2.0);
                double t30415 = t30412+t30414;
                double t30416 = t30415*t30415;
                double t30417 = t30416*t30408;
                double t30418 = gcab*t30415*2.0;
                double t30419 = t30417+t30418+1.0;
                double t30420 = gamma_aa*gcab*t30409*(8.0/3.0);
                double t30421 = gamma_aa*t30415*t30408*t30409*(8.0/3.0);
                double t30422 = t30420+t30421;
                double t30423 = gamma_bb*gcab*t30410*(8.0/3.0);
                double t30424 = gamma_bb*t30410*t30415*t30408*(8.0/3.0);
                double t30425 = t30423+t30424;
                double t30426 = 1.0/(t30419*t30419);
                double t30427 = gcab*t30415;
                double t30428 = t30427+1.0;
                double t30429 = 1.0/(t30428*t30428);
                double t30430 = 1.0/t30419;
                double t30431 = 1.0/pow(t30379,4.0/3.0);
                double t30432 = b1f*t30382;
                double t30433 = b3f*t30383;
                double t30434 = b4f*t30341*t30384;
                double t30435 = b2f*c*t30380;
                double t30436 = t30432+t30433+t30434+t30435;
                double t30437 = 1.0/t30436;
                double t30438 = t30361*t30437*(1.0/2.0);
                double t30439 = t30438+1.0;
                double t30440 = log(t30439);
                double t30441 = a1f*c*t30380;
                double t30442 = t30441+1.0;
                double t30444 = c0f*t30440*t30442*2.0;
                double t30443 = -t30444+t30396;
                double t30445 = 1.0/(t30379*t30379);
                double t30473 = t30445*t30397;
                double t30446 = -t30473+t30399;
                double t30447 = t30444-t30396;
                double t30448 = 1.0/pow(t30379,5.0/3.0);
                double t30449 = 1.0/sqrt(t30381);
                double t30450 = 1.0/t30392;
                double t30451 = 1.0/(t30389*t30389);
                double t30452 = b4p*t30341*t30448*(2.0/3.0);
                double t30453 = b2p*c*t30431*(1.0/3.0);
                double t30454 = b1p*c*t30431*t30449*(1.0/6.0);
                double t30455 = b3p*c*t30431*t30382*(1.0/2.0);
                double t30456 = t30452+t30453+t30454+t30455;
                double t30457 = t30450*t30451*t30456*t30395;
                double t30458 = 1.0/d2fz0;
                double t30459 = 1.0/Aa;
                double t30460 = b1a*t30382;
                double t30461 = b3a*t30383;
                double t30462 = b4a*t30341*t30384;
                double t30463 = b2a*c*t30380;
                double t30464 = t30460+t30461+t30462+t30463;
                double t30465 = 1.0/t30464;
                double t30466 = t30465*t30459*(1.0/2.0);
                double t30467 = t30466+1.0;
                double t30468 = log(t30467);
                double t30469 = a1a*c*t30380;
                double t30470 = t30469+1.0;
                double t30471 = 1.0/(t30379*t30379*t30379*t30379*t30379);
                double t30472 = pow(t30403,1.0/3.0);
                double t30474 = t30472*t30446*(4.0/3.0);
                double t30475 = pow(t30405,1.0/3.0);
                double t30554 = t30446*t30475*(4.0/3.0);
                double t30476 = -t30554+t30474;
                double t30477 = t30401*t30402;
                double t30478 = t30477-1.0;
                double t30479 = a1f*c*t30337;
                double t30480 = t30479+1.0;
                double t30481 = b1f*t30339;
                double t30482 = b3f*t30340;
                double t30483 = b4f*t30341*t30342;
                double t30484 = b2f*c*t30337;
                double t30485 = t30481+t30482+t30483+t30484;
                double t30486 = 1.0/t30485;
                double t30487 = t30361*t30486*(1.0/2.0);
                double t30488 = t30487+1.0;
                double t30489 = 1.0/pow(rho_a,4.0/3.0);
                double t30490 = 1.0/pow(rho_a,5.0/3.0);
                double t30491 = 1.0/sqrt(t30338);
                double t30492 = log(t30488);
                double t30493 = 1.0/t30351;
                double t30494 = 1.0/(t30348*t30348);
                double t30495 = b4p*t30341*t30490*(2.0/3.0);
                double t30496 = b2p*c*t30489*(1.0/3.0);
                double t30497 = b1p*c*t30491*t30489*(1.0/6.0);
                double t30498 = b3p*c*t30339*t30489*(1.0/2.0);
                double t30499 = t30495+t30496+t30497+t30498;
                double t30500 = t30354*t30493*t30494*t30499;
                double t30501 = c0f*t30480*t30492*2.0;
                double t30502 = c0p*t30352*t30354*2.0;
                double t30503 = Aa*t30360*t30407*t30470*t30458*t30468*t30478*2.0;
                double t30504 = 1.0/t30428;
                double t30505 = t30402*t30360*t30407*t30471*t30447*4.0;
                double t30506 = t30473+t30399;
                double t30507 = 1.0/t30439;
                double t30508 = 1.0/(t30436*t30436);
                double t30509 = b4f*t30341*t30448*(2.0/3.0);
                double t30510 = b2f*c*t30431*(1.0/3.0);
                double t30511 = b1f*c*t30431*t30449*(1.0/6.0);
                double t30512 = b3f*c*t30431*t30382*(1.0/2.0);
                double t30513 = t30510+t30511+t30512+t30509;
                double t30514 = a1f*c*c0f*t30431*t30440*(2.0/3.0);
                double t30515 = a1p*c*c0p*t30431*t30393*(2.0/3.0);
                double t30516 = t30402*t30471*4.0;
                double t30517 = t30506*t30472*(4.0/3.0);
                double t30553 = t30506*t30475*(4.0/3.0);
                double t30518 = t30517-t30553;
                double t30519 = 1.0/t30467;
                double t30520 = 1.0/(t30464*t30464);
                double t30521 = b4a*t30341*t30448*(2.0/3.0);
                double t30522 = b2a*c*t30431*(1.0/3.0);
                double t30523 = b1a*c*t30431*t30449*(1.0/6.0);
                double t30524 = b3a*c*t30431*t30382*(1.0/2.0);
                double t30525 = t30521+t30522+t30523+t30524;
                double t30526 = Aa*a1a*c*t30431*t30360*t30407*t30458*t30468*t30478*(2.0/3.0);
                double t30527 = a1f*c*t30362;
                double t30528 = t30527+1.0;
                double t30529 = b1f*t30364;
                double t30530 = b3f*t30365;
                double t30531 = b4f*t30341*t30366;
                double t30532 = b2f*c*t30362;
                double t30533 = t30530+t30531+t30532+t30529;
                double t30534 = 1.0/t30533;
                double t30535 = t30361*t30534*(1.0/2.0);
                double t30536 = t30535+1.0;
                double t30537 = 1.0/pow(rho_b,4.0/3.0);
                double t30538 = 1.0/pow(rho_b,5.0/3.0);
                double t30539 = 1.0/sqrt(t30363);
                double t30540 = log(t30536);
                double t30541 = 1.0/t30374;
                double t30542 = 1.0/(t30371*t30371);
                double t30543 = b4p*t30341*t30538*(2.0/3.0);
                double t30544 = b2p*c*t30537*(1.0/3.0);
                double t30545 = b1p*c*t30537*t30539*(1.0/6.0);
                double t30546 = b3p*c*t30364*t30537*(1.0/2.0);
                double t30547 = t30543+t30544+t30545+t30546;
                double t30548 = t30541*t30542*t30547*t30377;
                double t30549 = t30378-c0f*t30540*t30528*2.0;
                double t30550 = t30401*t30402*t30360*t30407*t30447;
                double t30551 = 1.0/pow(t30379,7.0/3.0);
                double t30552 = 1.0/pow(t30379,8.0/3.0);
                double t30570 = t30513*t30442*t30507*t30508;
                double t30555 = t30514-t30515-t30570+t30457;
                double t30556 = t30456*t30456;
                double t30557 = 1.0/pow(t30381,3.0/2.0);
                double t30558 = b4p*t30341*t30552*(1.0E1/9.0);
                double t30559 = b2p*c*t30551*(4.0/9.0);
                double t30560 = b1p*c*t30551*t30449*(2.0/9.0);
                double t30561 = b3p*c*t30551*t30382*(2.0/3.0);
                double t30562 = b3p*t30341*t30552*t30449*(1.0/1.2E1);
                double t30563 = t30560+t30561+t30562+t30558+t30559-b1p*t30341*t30552*t30557*(1.0/3.6E1);
                double t30564 = t30450*t30451*t30563*t30395;
                double t30565 = 1.0/(t30389*t30389*t30389);
                double t30566 = t30513*t30513;
                double t30567 = 1.0/(t30392*t30392);
                double t30568 = 1.0/(t30389*t30389*t30389*t30389);
                double t30569 = t30343*t30556*t30395*t30567*t30568*(1.0/2.0);
                double t30571 = 1.0/(t30379*t30379*t30379);
                double t30572 = a1p*c*t30431*t30450*t30451*t30456*(2.0/3.0);
                double t30573 = 1.0/(t30379*t30379*t30379*t30379*t30379*t30379);
                double t30574 = t30401*t30397*t30398*4.0;
                double t30575 = t30516+t30574;
                double t30576 = t30571*t30475*t30397*(8.0/3.0);
                double t30577 = 1.0/pow(t30403,2.0/3.0);
                double t30578 = t30506*t30446*t30577*(4.0/9.0);
                double t30579 = 1.0/pow(t30405,2.0/3.0);
                double t30580 = t30506*t30446*t30579*(4.0/9.0);
                double t30581 = t30580+t30576+t30578-t30472*t30571*t30397*(8.0/3.0);
                double t30582 = t30525*t30525;
                double t30583 = t30516-t30574;
                double t30584 = t30401*t30402*t30360*t30518*t30447;
                double t30585 = Aa*t30360*t30407*t30470*t30458*t30575*t30468*2.0;
                double t30586 = Aa*t30360*t30470*t30518*t30458*t30468*t30478*2.0;
                v_rho_a_rho_b[Q] += scale * (ccab0+ccab1*gcab*t30504*t30415+ccab2*t30430*t30416*t30408)*(t30584+t30585+t30586+t30379*(t30572+t30564+t30569-t30450*t30556*t30565*t30395*2.0+t30401*t30402*t30360*t30476*(t30514-t30515-t30570+t30457)-a1p*c*c0p*t30551*t30393*(8.0/9.0)-t30401*t30402*t30360*t30407*(t30572+t30564+t30569-t30450*t30556*t30565*t30395*2.0+t30442*t30507*1.0/(t30436*t30436*t30436)*t30566*2.0-t30442*t30507*t30508*(b2f*c*t30551*(4.0/9.0)+b4f*t30341*t30552*(1.0E1/9.0)+b1f*c*t30551*t30449*(2.0/9.0)+b3f*c*t30551*t30382*(2.0/3.0)-b1f*t30341*t30552*t30557*(1.0/3.6E1)+b3f*t30341*t30552*t30449*(1.0/1.2E1))-t30361*t30442*1.0/(t30436*t30436*t30436*t30436)*1.0/(t30439*t30439)*t30566*(1.0/2.0)+a1f*c*c0f*t30440*t30551*(8.0/9.0)-a1p*c*c0p*t30551*t30393*(8.0/9.0)-a1f*c*t30431*t30513*t30507*t30508*(2.0/3.0))-t30401*t30402*t30360*t30518*t30555+t30401*t30402*t30360*t30581*t30447-t30402*t30360*t30407*t30471*t30555*8.0-t30402*t30360*t30407*t30447*t30573*2.0E1-t30402*t30360*t30471*t30518*t30447*4.0+t30402*t30360*t30471*t30447*t30476*4.0+t30401*t30360*t30407*t30447*t30398*1.2E1+t30401*t30360*t30518*t30447*t30397*t30398*4.0+t30401*t30360*t30447*t30476*t30397*t30398*4.0-Aa*t30360*t30470*t30518*t30583*t30458*t30468*2.0+Aa*t30360*t30470*t30581*t30458*t30468*t30478*2.0+Aa*t30360*t30470*t30458*t30476*t30575*t30468*2.0-Aa*t30360*t30407*t30470*t30458*t30468*(t30402*t30573*2.0E1-t30401*t30398*1.2E1)*2.0+t30520*t30360*t30407*t30470*t30525*t30519*t30583*t30458+t30520*t30360*t30407*t30470*t30525*t30519*t30458*t30575+t30520*t30360*t30470*t30525*t30518*t30519*t30458*t30478-t30520*t30360*t30470*t30525*t30519*t30458*t30476*t30478-t30360*t30407*t30470*1.0/(t30464*t30464*t30464)*t30519*t30582*t30458*t30478*2.0+t30520*t30360*t30407*t30470*t30519*t30458*t30478*(b2a*c*t30551*(4.0/9.0)+b4a*t30341*t30552*(1.0E1/9.0)+b1a*c*t30551*t30449*(2.0/9.0)+b3a*c*t30551*t30382*(2.0/3.0)-b1a*t30341*t30552*t30557*(1.0/3.6E1)+b3a*t30341*t30552*t30449*(1.0/1.2E1))-Aa*a1a*c*t30431*t30360*t30407*t30583*t30458*t30468*(2.0/3.0)-Aa*a1a*c*t30431*t30360*t30407*t30458*t30575*t30468*(2.0/3.0)-Aa*a1a*c*t30431*t30360*t30518*t30458*t30468*t30478*(2.0/3.0)-Aa*a1a*c*t30360*t30407*t30551*t30458*t30468*t30478*(8.0/9.0)+Aa*a1a*c*t30431*t30360*t30458*t30476*t30468*t30478*(2.0/3.0)+t30360*t30407*t30470*1.0/(t30464*t30464*t30464*t30464)*t30582*t30458*1.0/(t30467*t30467)*t30459*t30478*(1.0/2.0)+a1a*c*t30520*t30431*t30360*t30407*t30525*t30519*t30458*t30478*(2.0/3.0))-t30450*t30451*t30456*t30395*2.0+t30401*t30402*t30360*t30407*(t30514-t30515-t30570+t30457)*2.0+a1p*c*c0p*t30431*t30393*(4.0/3.0)-t30401*t30402*t30360*t30447*t30476+t30402*t30360*t30407*t30471*t30447*8.0-Aa*t30360*t30470*t30458*t30476*t30468*t30478*2.0+Aa*t30360*t30407*t30470*t30458*t30468*(t30516-t30574)*2.0-t30520*t30360*t30407*t30470*t30525*t30519*t30458*t30478*2.0+Aa*a1a*c*t30431*t30360*t30407*t30458*t30468*t30478*(4.0/3.0))+(ccab1*gamma_aa*gcab*t30504*t30409*(4.0/3.0)-ccab2*t30422*t30416*t30408*t30426+ccab2*gamma_aa*t30430*t30415*t30408*t30409*(8.0/3.0)-ccab1*gamma_aa*t30415*t30408*t30409*t30429*(4.0/3.0))*(t30503+t30550-t30378+t30396-t30379*(t30505+t30515+t30526-t30457+t30584+t30585+t30586+t30401*t30402*t30360*t30407*t30555+t30401*t30360*t30407*t30447*t30397*t30398*4.0-t30520*t30360*t30407*t30470*t30525*t30519*t30458*t30478)+rho_b*(-t30548+t30360*t30357*(t30548-(1.0/(t30533*t30533)*t30528*(b2f*c*t30537*(1.0/3.0)+b4f*t30341*t30538*(2.0/3.0)+b1f*c*t30537*t30539*(1.0/6.0)+b3f*c*t30364*t30537*(1.0/2.0)))/t30536+a1f*c*c0f*t30540*t30537*(2.0/3.0)-a1p*c*c0p*t30375*t30537*(2.0/3.0))+a1p*c*c0p*t30375*t30537*(2.0/3.0))+t30360*t30357*t30549)-(rho_b*(t30378-t30360*t30357*t30549)+rho_a*(t30502+t30360*t30357*(t30501-c0p*t30352*t30354*2.0))-t30379*(t30503+t30396-t30401*t30402*t30360*t30407*t30443))*(ccab2*t30422*t30416*t30425*t30408*1.0/(t30419*t30419*t30419)*-2.0-ccab2*gamma_aa*gamma_bb*t30410*t30430*t30408*t30409*(3.2E1/9.0)+ccab1*gamma_aa*gamma_bb*t30410*t30408*t30409*t30429*(3.2E1/9.0)+ccab2*gamma_bb*t30410*t30422*t30415*t30408*t30426*(8.0/3.0)+ccab2*gamma_aa*t30415*t30425*t30408*t30426*t30409*(8.0/3.0)+ccab2*gamma_aa*gamma_bb*t30410*t30416*(t30408*t30408)*t30426*t30409*(3.2E1/9.0)-ccab1*gamma_aa*gamma_bb*gcab*t30410*t30415*t30408*t30409*1.0/(t30428*t30428*t30428)*(3.2E1/9.0))+(ccab1*gamma_bb*gcab*t30410*t30504*(4.0/3.0)-ccab2*t30416*t30425*t30408*t30426+ccab2*gamma_bb*t30410*t30430*t30415*t30408*(8.0/3.0)-ccab1*gamma_bb*t30410*t30415*t30408*t30429*(4.0/3.0))*(-t30502+t30503+t30550+t30396-t30379*(t30505+t30515+t30526-t30457+t30401*t30402*t30360*t30407*(t30514+t30457-t30513*t30442*t30507*t30508-a1p*c*c0p*t30431*t30393*(2.0/3.0))-t30401*t30402*t30360*t30447*t30476+t30401*t30360*t30407*t30443*t30397*t30398*4.0-Aa*t30360*t30470*t30458*t30476*t30468*t30478*2.0+Aa*t30360*t30407*t30470*t30458*t30468*(t30516-t30401*t30397*t30398*4.0)*2.0-t30520*t30360*t30407*t30470*t30525*t30519*t30458*t30478)+rho_a*(-t30500+t30360*t30357*(t30500-(t30480*1.0/(t30485*t30485)*(b2f*c*t30489*(1.0/3.0)+b4f*t30341*t30490*(2.0/3.0)+b1f*c*t30491*t30489*(1.0/6.0)+b3f*c*t30339*t30489*(1.0/2.0)))/t30488+a1f*c*c0f*t30492*t30489*(2.0/3.0)-a1p*c*c0p*t30352*t30489*(2.0/3.0))+a1p*c*c0p*t30352*t30489*(2.0/3.0))-t30360*t30357*(t30501-t30502));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t30588 = 1.0/pow(rho_b,1.0/3.0);
                double t30589 = c*t30588;
                double t30590 = sqrt(t30589);
                double t30591 = pow(t30589,3.0/2.0);
                double t30592 = c*c;
                double t30593 = 1.0/pow(rho_b,2.0/3.0);
                double t30594 = 1.0/c0p;
                double t30595 = b1p*t30590;
                double t30596 = b3p*t30591;
                double t30597 = b4p*t30592*t30593;
                double t30598 = b2p*c*t30588;
                double t30599 = t30595+t30596+t30597+t30598;
                double t30600 = 1.0/t30599;
                double t30601 = t30600*t30594*(1.0/2.0);
                double t30602 = t30601+1.0;
                double t30603 = log(t30602);
                double t30604 = a1p*c*t30588;
                double t30605 = t30604+1.0;
                double t30606 = 1.0/pow(rho_b,8.0/3.0);
                double t30607 = gamma_bb*gamma_bb;
                double t30608 = gcaa*gcaa;
                double t30609 = 1.0/pow(rho_b,1.9E1/3.0);
                double t30610 = gamma_bb*gcaa*t30606;
                double t30611 = t30610+1.0;
                double t30612 = 1.0/pow(rho_b,1.6E1/3.0);
                double t30613 = 1.0/pow(rho_b,1.1E1/3.0);
                double t30614 = gamma_bb*gcaa*t30606*2.0;
                double t30615 = t30612*t30607*t30608;
                double t30616 = t30614+t30615+1.0;
                double t30619 = 1.0/pow(rho_a,8.0/3.0);
                double t30620 = gamma_aa*t30619*(1.0/2.0);
                double t30621 = gamma_bb*t30606*(1.0/2.0);
                double t30617 = t30620+t30621;
                double t30618 = gcab*gcab;
                double t30622 = t30617*t30617;
                double t30623 = rho_a+rho_b;
                double t30624 = 1.0/pow(t30623,1.0/3.0);
                double t30625 = c*t30624;
                double t30626 = sqrt(t30625);
                double t30627 = b1p*t30626;
                double t30628 = pow(t30625,3.0/2.0);
                double t30629 = b3p*t30628;
                double t30630 = 1.0/pow(t30623,2.0/3.0);
                double t30631 = b4p*t30630*t30592;
                double t30632 = b2p*c*t30624;
                double t30633 = t30631+t30632+t30627+t30629;
                double t30634 = 1.0/pow(t30623,7.0/3.0);
                double t30635 = 1.0/pow(t30623,8.0/3.0);
                double t30636 = 1.0/sqrt(t30625);
                double t30637 = a1p*c*t30624;
                double t30638 = t30637+1.0;
                double t30639 = 1.0/t30633;
                double t30640 = t30594*t30639*(1.0/2.0);
                double t30641 = t30640+1.0;
                double t30642 = 1.0/t30641;
                double t30643 = 1.0/pow(t30623,4.0/3.0);
                double t30683 = 1.0/pow(t30623,5.0/3.0);
                double t30685 = b4p*t30592*t30683*(2.0/3.0);
                double t30686 = b2p*c*t30643*(1.0/3.0);
                double t30687 = b1p*c*t30643*t30636*(1.0/6.0);
                double t30688 = b3p*c*t30643*t30626*(1.0/2.0);
                double t30644 = t30685+t30686+t30687+t30688;
                double t30645 = two_13*2.0;
                double t30646 = t30645-2.0;
                double t30647 = 1.0/t30646;
                double t30648 = 1.0/c0f;
                double t30649 = rho_a-rho_b;
                double t30650 = 1.0/t30623;
                double t30651 = t30650*t30649;
                double t30652 = b1f*t30626;
                double t30653 = b3f*t30628;
                double t30654 = b4f*t30630*t30592;
                double t30655 = b2f*c*t30624;
                double t30656 = t30652+t30653+t30654+t30655;
                double t30657 = 1.0/t30656;
                double t30658 = t30648*t30657*(1.0/2.0);
                double t30659 = t30658+1.0;
                double t30660 = log(t30659);
                double t30661 = a1f*c*t30624;
                double t30662 = t30661+1.0;
                double t30663 = log(t30641);
                double t30671 = c0f*t30660*t30662*2.0;
                double t30672 = c0p*t30663*t30638*2.0;
                double t30664 = t30671-t30672;
                double t30665 = t30649*t30649;
                double t30666 = t30651+1.0;
                double t30667 = pow(t30666,4.0/3.0);
                double t30668 = -t30651+1.0;
                double t30669 = pow(t30668,4.0/3.0);
                double t30670 = t30667+t30669-2.0;
                double t30673 = 1.0/(t30623*t30623);
                double t30674 = t30673*t30649;
                double t30675 = t30650+t30674;
                double t30676 = 1.0/(t30623*t30623*t30623*t30623);
                double t30677 = pow(t30666,1.0/3.0);
                double t30678 = t30675*t30677*(4.0/3.0);
                double t30679 = pow(t30668,1.0/3.0);
                double t30711 = t30675*t30679*(4.0/3.0);
                double t30680 = -t30711+t30678;
                double t30681 = 1.0/(t30623*t30623*t30623*t30623*t30623);
                double t30682 = t30665*t30665;
                double t30684 = 1.0/(t30633*t30633);
                double t30689 = 1.0/t30659;
                double t30690 = 1.0/(t30656*t30656);
                double t30691 = b4f*t30592*t30683*(2.0/3.0);
                double t30692 = b2f*c*t30643*(1.0/3.0);
                double t30693 = b1f*c*t30643*t30636*(1.0/6.0);
                double t30694 = b3f*c*t30643*t30626*(1.0/2.0);
                double t30695 = t30691+t30692+t30693+t30694;
                double t30696 = t30642*t30644*t30638*t30684;
                double t30697 = a1f*c*c0f*t30660*t30643*(2.0/3.0);
                double t30698 = t30644*t30644;
                double t30699 = 1.0/pow(t30625,3.0/2.0);
                double t30700 = b4p*t30635*t30592*(1.0E1/9.0);
                double t30701 = b2p*c*t30634*(4.0/9.0);
                double t30702 = b1p*c*t30634*t30636*(2.0/9.0);
                double t30703 = b3p*c*t30634*t30626*(2.0/3.0);
                double t30704 = b3p*t30635*t30636*t30592*(1.0/1.2E1);
                double t30705 = t30700+t30701+t30702+t30703+t30704-b1p*t30635*t30592*t30699*(1.0/3.6E1);
                double t30706 = 1.0/(t30633*t30633*t30633);
                double t30707 = t30642*t30706*t30638*t30698*2.0;
                double t30708 = t30695*t30695;
                double t30709 = 1.0/(t30641*t30641);
                double t30710 = 1.0/(t30633*t30633*t30633*t30633);
                double t30712 = t30673*2.0;
                double t30713 = 1.0/(t30623*t30623*t30623);
                double t30714 = t30713*t30649*2.0;
                double t30715 = t30712+t30714;
                double t30716 = t30675*t30675;
                double t30717 = a1p*c*c0p*t30634*t30663*(8.0/9.0);
                double t30718 = 1.0/(t30623*t30623*t30623*t30623*t30623*t30623);
                double t30719 = 1.0/d2fz0;
                double t30720 = 1.0/Aa;
                double t30721 = b1a*t30626;
                double t30722 = b3a*t30628;
                double t30723 = b4a*t30630*t30592;
                double t30724 = b2a*c*t30624;
                double t30725 = t30721+t30722+t30723+t30724;
                double t30726 = 1.0/t30725;
                double t30727 = t30720*t30726*(1.0/2.0);
                double t30728 = t30727+1.0;
                double t30729 = log(t30728);
                double t30730 = a1a*c*t30624;
                double t30731 = t30730+1.0;
                double t30732 = t30715*t30677*(4.0/3.0);
                double t30733 = 1.0/pow(t30666,2.0/3.0);
                double t30734 = t30733*t30716*(4.0/9.0);
                double t30735 = 1.0/pow(t30668,2.0/3.0);
                double t30736 = t30716*t30735*(4.0/9.0);
                double t30737 = t30732+t30734+t30736-t30715*t30679*(4.0/3.0);
                double t30738 = t30665*t30649*t30676*4.0;
                double t30739 = t30681*t30682*4.0;
                double t30740 = t30738+t30739;
                double t30741 = 1.0/t30728;
                double t30742 = t30682*t30676;
                double t30743 = t30742-1.0;
                double t30744 = 1.0/(t30725*t30725);
                double t30745 = b4a*t30592*t30683*(2.0/3.0);
                double t30746 = b2a*c*t30643*(1.0/3.0);
                double t30747 = b1a*c*t30643*t30636*(1.0/6.0);
                double t30748 = b3a*c*t30643*t30626*(1.0/2.0);
                double t30749 = t30745+t30746+t30747+t30748;
                double t30750 = t30749*t30749;
                double t30752 = t30662*t30690*t30695*t30689;
                double t30753 = a1p*c*c0p*t30643*t30663*(2.0/3.0);
                double t30751 = -t30752-t30753+t30696+t30697;
                double t30754 = pow(2.0,1.0/3.0);
                double t30755 = t30754*2.0;
                double t30756 = t30755-2.0;
                double t30757 = a1f*c*t30588;
                double t30758 = t30757+1.0;
                double t30759 = b1f*t30590;
                double t30760 = b3f*t30591;
                double t30761 = b4f*t30592*t30593;
                double t30762 = b2f*c*t30588;
                double t30763 = t30760+t30761+t30762+t30759;
                double t30764 = 1.0/t30763;
                double t30765 = t30764*t30648*(1.0/2.0);
                double t30766 = t30765+1.0;
                double t30767 = 1.0/pow(rho_b,4.0/3.0);
                double t30769 = 1.0/pow(rho_b,5.0/3.0);
                double t30770 = 1.0/sqrt(t30589);
                double t30776 = b4f*t30592*t30769*(2.0/3.0);
                double t30777 = b2f*c*t30767*(1.0/3.0);
                double t30778 = b1f*c*t30770*t30767*(1.0/6.0);
                double t30779 = b3f*c*t30590*t30767*(1.0/2.0);
                double t30768 = t30776+t30777+t30778+t30779;
                double t30781 = b4p*t30592*t30769*(2.0/3.0);
                double t30782 = b2p*c*t30767*(1.0/3.0);
                double t30783 = b1p*c*t30770*t30767*(1.0/6.0);
                double t30784 = b3p*c*t30590*t30767*(1.0/2.0);
                double t30771 = t30781+t30782+t30783+t30784;
                double t30772 = 1.0/t30766;
                double t30773 = 1.0/pow(rho_b,7.0/3.0);
                double t30774 = 1.0/t30602;
                double t30775 = 1.0/pow(t30589,3.0/2.0);
                double t30780 = t30768*t30768;
                double t30785 = t30771*t30771;
                double t30786 = log(t30766);
                double t30787 = 1.0/(t30763*t30763);
                double t30788 = 1.0/(t30599*t30599);
                double t30789 = 1.0/(t30599*t30599*t30599);
                double t30790 = t30605*t30774*t30785*t30789*2.0;
                double t30791 = b4p*t30606*t30592*(1.0E1/9.0);
                double t30792 = b2p*c*t30773*(4.0/9.0);
                double t30793 = b3p*t30606*t30770*t30592*(1.0/1.2E1);
                double t30794 = b1p*c*t30770*t30773*(2.0/9.0);
                double t30795 = b3p*c*t30590*t30773*(2.0/3.0);
                double t30855 = b1p*t30606*t30592*t30775*(1.0/3.6E1);
                double t30796 = t30791+t30792-t30855+t30793+t30794+t30795;
                double t30797 = 1.0/(t30602*t30602);
                double t30798 = 1.0/(t30599*t30599*t30599*t30599);
                double t30799 = a1p*c*c0p*t30603*t30773*(8.0/9.0);
                double t30800 = gcab*t30617;
                double t30801 = t30800+1.0;
                double t30802 = 1.0/t30801;
                double t30803 = t30622*t30618;
                double t30804 = gcab*t30617*2.0;
                double t30805 = t30803+t30804+1.0;
                double t30806 = 1.0/t30805;
                double t30807 = t30752+t30753-t30696-t30697;
                double t30808 = t30605*t30771*t30774*t30788;
                double t30809 = a1f*c*c0f*t30767*t30786*(2.0/3.0);
                double t30811 = a1p*c*c0p*t30603*t30767*(2.0/3.0);
                double t30814 = t30772*t30758*t30768*t30787;
                double t30810 = -t30811-t30814+t30808+t30809;
                double t30812 = c0f*t30758*t30786*2.0;
                double t30813 = c0p*t30603*t30605*2.0;
                double t30815 = 1.0/t30611;
                double t30816 = 1.0/t30616;
                double t30817 = 1.0/pow(rho_a,1.0/3.0);
                double t30818 = c*t30817;
                double t30819 = sqrt(t30818);
                double t30820 = pow(t30818,3.0/2.0);
                double t30821 = 1.0/pow(rho_a,2.0/3.0);
                double t30822 = b1p*t30819;
                double t30823 = b3p*t30820;
                double t30824 = b4p*t30821*t30592;
                double t30825 = b2p*c*t30817;
                double t30826 = t30822+t30823+t30824+t30825;
                double t30827 = 1.0/t30826;
                double t30828 = t30827*t30594*(1.0/2.0);
                double t30829 = t30828+1.0;
                double t30830 = log(t30829);
                double t30831 = a1p*c*t30817;
                double t30832 = t30831+1.0;
                double t30833 = c0p*t30830*t30832*2.0;
                double t30834 = t30812-t30813;
                double t30835 = t30670*t30664*t30682*t30647*t30676;
                double t30836 = Aa*t30731*t30670*t30743*t30647*t30719*t30729*2.0;
                double t30837 = 1.0/(t30801*t30801);
                double t30838 = 1.0/pow(rho_b,2.2E1/3.0);
                double t30839 = gamma_bb*gcab*t30613*(8.0/3.0);
                double t30840 = gamma_bb*t30613*t30617*t30618*(8.0/3.0);
                double t30841 = t30840+t30839;
                double t30842 = 1.0/pow(rho_b,1.4E1/3.0);
                double t30843 = 1.0/(t30805*t30805);
                double t30844 = ccaa1*gamma_bb*gcaa*t30606*t30815;
                double t30845 = ccaa2*t30612*t30607*t30608*t30816;
                double t30846 = ccaa0+t30844+t30845;
                double t30847 = 1.0/(t30763*t30763*t30763);
                double t30848 = b4f*t30606*t30592*(1.0E1/9.0);
                double t30849 = b2f*c*t30773*(4.0/9.0);
                double t30850 = b3f*t30606*t30770*t30592*(1.0/1.2E1);
                double t30851 = b1f*c*t30770*t30773*(2.0/9.0);
                double t30852 = b3f*c*t30590*t30773*(2.0/3.0);
                double t30853 = t30850+t30851+t30852+t30848+t30849-b1f*t30606*t30592*t30775*(1.0/3.6E1);
                double t30854 = t30772*t30853*t30758*t30787;
                double t30856 = t30605*t30774*t30796*t30788;
                double t30857 = 1.0/(t30766*t30766);
                double t30858 = 1.0/(t30763*t30763*t30763*t30763);
                double t30859 = t30780*t30648*t30758*t30857*t30858*(1.0/2.0);
                double t30860 = t30605*t30594*t30785*t30797*t30798*(1.0/2.0);
                double t30861 = a1f*c*t30772*t30767*t30768*t30787*(2.0/3.0);
                double t30862 = a1p*c*t30771*t30774*t30767*t30788*(2.0/3.0);
                double t30863 = t30834*t30647*t30756;
                double t30864 = t30813+t30863;
                double t30865 = 1.0/(t30611*t30611);
                double t30866 = gamma_bb*gcaa*t30613*(1.6E1/3.0);
                double t30867 = t30607*t30608*t30609*(1.6E1/3.0);
                double t30868 = t30866+t30867;
                double t30869 = 1.0/(t30616*t30616);
                double t30870 = t30811+t30814-t30808-t30809;
                double t30871 = t30870*t30647*t30756;
                double t30872 = -t30811+t30808+t30871;
                double t30873 = ccaa1*gamma_bb*gcaa*t30613*t30815*(8.0/3.0);
                double t30874 = ccaa2*t30607*t30608*t30609*t30816*(1.6E1/3.0);
                double t30875 = t30873+t30874-ccaa1*t30607*t30608*t30609*t30865*(8.0/3.0)-ccaa2*t30612*t30607*t30608*t30868*t30869;
                v_rho_b_rho_b[Q] += scale * t30872*t30846*-2.0+t30875*(t30813+t30647*t30756*(t30812-c0p*t30603*t30605*2.0))*2.0+(ccab1*gamma_bb*gcab*t30613*t30802*(4.0/3.0)-ccab2*t30622*t30841*t30618*t30843+ccab2*gamma_bb*t30613*t30617*t30806*t30618*(8.0/3.0)-ccab1*gamma_bb*t30613*t30617*t30618*t30837*(4.0/3.0))*(-t30813+t30672+t30835+t30836+rho_b*(t30811-t30808+t30810*t30647*t30756)-t30623*(t30753-t30696+t30670*t30681*t30664*t30682*t30647*4.0-t30670*t30807*t30682*t30647*t30676+t30680*t30664*t30682*t30647*t30676+t30670*t30664*t30647*t30665*t30649*t30676*4.0+Aa*t30731*t30740*t30670*t30647*t30719*t30729*2.0+Aa*t30731*t30680*t30743*t30647*t30719*t30729*2.0-t30731*t30741*t30670*t30743*t30744*t30647*t30719*t30749+Aa*a1a*c*t30643*t30670*t30743*t30647*t30719*t30729*(2.0/3.0))-t30834*t30647*t30756)*2.0+(rho_b*t30864+rho_a*(t30833-t30647*t30756*(t30833-c0f*log((t30648*(1.0/2.0))/(b1f*t30819+b3f*t30820+b2f*c*t30817+b4f*t30821*t30592)+1.0)*(a1f*c*t30817+1.0)*2.0))-t30623*(t30672+t30835+t30836))*(-ccab2*t30622*t30618*t30843*(gamma_bb*gcab*t30842*(8.8E1/9.0)+t30607*t30618*t30838*(3.2E1/9.0)+gamma_bb*t30617*t30842*t30618*(8.8E1/9.0))+ccab2*t30622*1.0/(t30805*t30805*t30805)*(t30841*t30841)*t30618*2.0+ccab1*gamma_bb*gcab*t30802*t30842*(4.4E1/9.0)+ccab2*t30607*t30806*t30618*t30838*(3.2E1/9.0)-ccab1*t30607*t30618*t30837*t30838*(3.2E1/9.0)+ccab2*gamma_bb*t30617*t30806*t30842*t30618*(8.8E1/9.0)-ccab1*gamma_bb*t30617*t30842*t30618*t30837*(4.4E1/9.0)-ccab2*gamma_bb*t30613*t30841*t30617*t30618*t30843*(1.6E1/3.0)+ccab1*gcab*1.0/(t30801*t30801*t30801)*t30607*t30617*t30618*t30838*(3.2E1/9.0))+(ccab0+ccab1*gcab*t30802*t30617+ccab2*t30622*t30806*t30618)*(-rho_b*(t30860-t30790+t30862+t30856-t30799+t30647*t30756*(t30861+t30790+t30854+t30859+t30799-t30780*t30772*t30847*t30758*2.0-t30605*t30774*t30796*t30788-a1f*c*c0f*t30773*t30786*(8.0/9.0)-t30605*t30594*t30785*t30797*t30798*(1.0/2.0)-a1p*c*t30771*t30774*t30767*t30788*(2.0/3.0)))-t30623*(t30707+t30717-t30642*t30705*t30638*t30684-t30670*t30682*t30647*t30676*(t30707+t30717-t30642*t30705*t30638*t30684-t30662*t30708*1.0/(t30656*t30656*t30656)*t30689*2.0+t30662*t30690*t30689*(b2f*c*t30634*(4.0/9.0)+b4f*t30635*t30592*(1.0E1/9.0)+b1f*c*t30634*t30636*(2.0/9.0)+b3f*c*t30634*t30626*(2.0/3.0)-b1f*t30635*t30592*t30699*(1.0/3.6E1)+b3f*t30635*t30636*t30592*(1.0/1.2E1))+t30662*t30708*1.0/(t30656*t30656*t30656*t30656)*t30648*1.0/(t30659*t30659)*(1.0/2.0)-a1f*c*c0f*t30660*t30634*(8.0/9.0)-t30710*t30709*t30638*t30594*t30698*(1.0/2.0)+a1f*c*t30643*t30690*t30695*t30689*(2.0/3.0)-a1p*c*t30642*t30643*t30644*t30684*(2.0/3.0))+t30670*t30751*t30681*t30682*t30647*8.0+t30670*t30664*t30682*t30718*t30647*2.0E1+t30680*t30681*t30664*t30682*t30647*8.0+t30751*t30680*t30682*t30647*t30676*2.0-t30710*t30709*t30638*t30594*t30698*(1.0/2.0)+t30670*t30664*t30647*t30665*t30676*1.2E1+t30664*t30682*t30647*t30737*t30676+t30670*t30681*t30664*t30647*t30665*t30649*3.2E1+t30670*t30751*t30647*t30665*t30649*t30676*8.0+t30680*t30664*t30647*t30665*t30649*t30676*8.0-a1p*c*t30642*t30643*t30644*t30684*(2.0/3.0)+Aa*t30731*t30740*t30680*t30647*t30719*t30729*4.0+Aa*t30731*t30743*t30647*t30719*t30737*t30729*2.0+Aa*t30731*t30670*t30647*t30719*t30729*(t30682*t30718*2.0E1+t30665*t30676*1.2E1+t30681*t30665*t30649*3.2E1)*2.0-t30731*t30740*t30741*t30670*t30744*t30647*t30719*t30749*2.0-t30731*t30741*t30680*t30743*t30744*t30647*t30719*t30749*2.0+t30731*t30741*t30750*t30670*1.0/(t30725*t30725*t30725)*t30743*t30647*t30719*2.0-t30731*t30741*t30670*t30743*t30744*t30647*t30719*(b2a*c*t30634*(4.0/9.0)+b4a*t30635*t30592*(1.0E1/9.0)+b1a*c*t30634*t30636*(2.0/9.0)+b3a*c*t30634*t30626*(2.0/3.0)-b1a*t30635*t30592*t30699*(1.0/3.6E1)+b3a*t30635*t30636*t30592*(1.0/1.2E1))+Aa*a1a*c*t30740*t30643*t30670*t30647*t30719*t30729*(4.0/3.0)+Aa*a1a*c*t30634*t30670*t30743*t30647*t30719*t30729*(8.0/9.0)+Aa*a1a*c*t30643*t30680*t30743*t30647*t30719*t30729*(4.0/3.0)-t30720*t30731*t30750*t30670*1.0/(t30725*t30725*t30725*t30725)*t30743*t30647*t30719*1.0/(t30728*t30728)*(1.0/2.0)-a1a*c*t30741*t30643*t30670*t30743*t30744*t30647*t30719*t30749*(2.0/3.0))-t30810*t30647*t30756*2.0-t30642*t30644*t30638*t30684*2.0+t30605*t30771*t30774*t30788*2.0+a1p*c*c0p*t30643*t30663*(4.0/3.0)-a1p*c*c0p*t30603*t30767*(4.0/3.0)+t30670*t30681*t30664*t30682*t30647*8.0-t30670*t30807*t30682*t30647*t30676*2.0+t30680*t30664*t30682*t30647*t30676*2.0+t30670*t30664*t30647*t30665*t30649*t30676*8.0+Aa*t30731*t30740*t30670*t30647*t30719*t30729*4.0+Aa*t30731*t30680*t30743*t30647*t30719*t30729*4.0-t30731*t30741*t30670*t30743*t30744*t30647*t30719*t30749*2.0+Aa*a1a*c*t30643*t30670*t30743*t30647*t30719*t30729*(4.0/3.0))+rho_b*t30846*(t30860-t30790+t30862+t30856-t30799-t30647*t30756*(t30860-t30861-t30790+t30862-t30854+t30856-t30859-t30799+t30780*t30772*t30847*t30758*2.0+a1f*c*c0f*t30773*t30786*(8.0/9.0)))-rho_b*t30864*(ccaa1*gamma_bb*gcaa*t30815*t30842*(8.8E1/9.0)+ccaa2*t30607*t30608*t30816*t30838*(3.04E2/9.0)-ccaa1*t30607*t30608*t30838*t30865*2.4E1-ccaa2*t30607*t30608*t30609*t30868*t30869*(3.2E1/3.0)-ccaa2*t30612*t30607*t30608*t30869*(gamma_bb*gcaa*t30842*(1.76E2/9.0)+t30607*t30608*t30838*(3.04E2/9.0))+ccaa2*t30612*t30607*1.0/(t30616*t30616*t30616)*t30608*(t30868*t30868)*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*1.0/(t30611*t30611*t30611)*t30607*t30608*(1.28E2/9.0))+rho_b*t30872*t30875*2.0;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t31613 = 1.0/pow(rho_a,1.0/3.0);
                double t31614 = c*t31613;
                double t31615 = sqrt(t31614);
                double t31616 = pow(t31614,3.0/2.0);
                double t31617 = c*c;
                double t31618 = 1.0/pow(rho_a,2.0/3.0);
                double t31619 = 1.0/c0p;
                double t31620 = b1p*t31615;
                double t31621 = b3p*t31616;
                double t31622 = b4p*t31617*t31618;
                double t31623 = b2p*c*t31613;
                double t31624 = t31620+t31621+t31622+t31623;
                double t31625 = 1.0/t31624;
                double t31626 = t31625*t31619*(1.0/2.0);
                double t31627 = t31626+1.0;
                double t31628 = log(t31627);
                double t31629 = a1p*c*t31613;
                double t31630 = t31629+1.0;
                double t31631 = pow(2.0,1.0/3.0);
                double t31632 = t31631*2.0;
                double t31633 = t31632-2.0;
                double t31634 = two_13*2.0;
                double t31635 = t31634-2.0;
                double t31636 = 1.0/t31635;
                double t31637 = 1.0/c0f;
                double t31638 = 1.0/pow(rho_b,1.0/3.0);
                double t31639 = c*t31638;
                double t31640 = sqrt(t31639);
                double t31641 = pow(t31639,3.0/2.0);
                double t31642 = 1.0/pow(rho_b,2.0/3.0);
                double t31643 = b1p*t31640;
                double t31644 = b3p*t31641;
                double t31645 = b4p*t31642*t31617;
                double t31646 = b2p*c*t31638;
                double t31647 = t31643+t31644+t31645+t31646;
                double t31648 = 1.0/t31647;
                double t31649 = t31619*t31648*(1.0/2.0);
                double t31650 = t31649+1.0;
                double t31651 = log(t31650);
                double t31652 = a1p*c*t31638;
                double t31653 = t31652+1.0;
                double t31654 = c0p*t31651*t31653*2.0;
                double t31655 = rho_a+rho_b;
                double t31656 = 1.0/pow(t31655,1.0/3.0);
                double t31657 = c*t31656;
                double t31658 = sqrt(t31657);
                double t31659 = pow(t31657,3.0/2.0);
                double t31660 = 1.0/pow(t31655,2.0/3.0);
                double t31661 = b1p*t31658;
                double t31662 = b3p*t31659;
                double t31663 = b4p*t31660*t31617;
                double t31664 = b2p*c*t31656;
                double t31665 = t31661+t31662+t31663+t31664;
                double t31666 = 1.0/t31665;
                double t31667 = t31619*t31666*(1.0/2.0);
                double t31668 = t31667+1.0;
                double t31669 = log(t31668);
                double t31670 = a1p*c*t31656;
                double t31671 = t31670+1.0;
                double t31672 = c0p*t31671*t31669*2.0;
                double t31673 = rho_a-rho_b;
                double t31674 = t31673*t31673;
                double t31675 = 1.0/t31655;
                double t31676 = t31673*t31675;
                double t31677 = 1.0/(t31655*t31655*t31655*t31655);
                double t31678 = t31674*t31674;
                double t31679 = t31676+1.0;
                double t31680 = pow(t31679,4.0/3.0);
                double t31681 = -t31676+1.0;
                double t31682 = pow(t31681,4.0/3.0);
                double t31683 = t31680+t31682-2.0;
                double t31684 = gcab*gcab;
                double t31685 = 1.0/pow(rho_a,1.6E1/3.0);
                double t31686 = 1.0/pow(rho_a,8.0/3.0);
                double t31687 = gamma_aa*t31686*(1.0/2.0);
                double t31688 = 1.0/pow(rho_b,8.0/3.0);
                double t31689 = gamma_bb*t31688*(1.0/2.0);
                double t31690 = t31687+t31689;
                double t31691 = gcab*t31690;
                double t31692 = t31691+1.0;
                double t31693 = t31690*t31690;
                double t31694 = t31684*t31693;
                double t31695 = gcab*t31690*2.0;
                double t31696 = t31694+t31695+1.0;
                double t31698 = gcab*t31686;
                double t31699 = t31690*t31684*t31686;
                double t31697 = t31698+t31699;
                double t31700 = 1.0/(t31696*t31696);
                double t31701 = b1f*t31615;
                double t31702 = b3f*t31616;
                double t31703 = b4f*t31617*t31618;
                double t31704 = b2f*c*t31613;
                double t31705 = t31701+t31702+t31703+t31704;
                double t31706 = 1.0/t31705;
                double t31707 = t31706*t31637*(1.0/2.0);
                double t31708 = t31707+1.0;
                double t31709 = log(t31708);
                double t31710 = a1f*c*t31613;
                double t31711 = t31710+1.0;
                double t31712 = c0f*t31711*t31709*2.0;
                double t31713 = c0p*t31630*t31628*2.0;
                double t31714 = gcaa*gcaa;
                double t31715 = gamma_aa*gcaa*t31686;
                double t31716 = t31715+1.0;
                double t31717 = gamma_aa*gamma_aa;
                double t31718 = gamma_aa*gcaa*t31686*2.0;
                double t31719 = t31714*t31717*t31685;
                double t31720 = t31718+t31719+1.0;
                double t31722 = gcaa*t31686*2.0;
                double t31723 = gamma_aa*t31714*t31685*2.0;
                double t31721 = t31722+t31723;
                double t31724 = 1.0/(t31720*t31720);
                v_gamma_aa_gamma_aa[Q] += scale * -(rho_a*(t31713+t31633*t31636*(t31712-c0p*t31630*t31628*2.0))+rho_b*(t31654-t31633*t31636*(t31654-c0f*log((t31637*(1.0/2.0))/(b1f*t31640+b3f*t31641+b2f*c*t31638+b4f*t31642*t31617)+1.0)*(a1f*c*t31638+1.0)*2.0))-t31655*(t31672-t31636*t31683*t31677*t31678*(t31672-c0f*log((t31637*(1.0/2.0))/(b1f*t31658+b3f*t31659+b2f*c*t31656+b4f*t31660*t31617)+1.0)*(a1f*c*t31656+1.0)*2.0)+(Aa*t31636*t31683*log((1.0/2.0)/(Aa*(b1a*t31658+b3a*t31659+b2a*c*t31656+b4a*t31660*t31617))+1.0)*(t31677*t31678-1.0)*(a1a*c*t31656+1.0)*2.0)/d2fz0))*(ccab1*1.0/(t31692*t31692)*t31684*t31685*(1.0/2.0)-(ccab2*t31684*t31685*(1.0/2.0))/t31696-ccab2*t31684*t31693*1.0/(t31696*t31696*t31696)*(t31697*t31697)*2.0+ccab2*t31700*(t31684*t31684)*t31693*t31685*(1.0/2.0)+ccab2*t31700*t31690*t31684*t31686*t31697*2.0-ccab1*gcab*t31690*1.0/(t31692*t31692*t31692)*t31684*t31685*(1.0/2.0))-rho_a*(t31713+t31633*t31636*(t31712-t31713))*((ccaa2*t31714*t31685*2.0)/t31720-ccaa1*t31714*1.0/(t31716*t31716)*t31685*2.0-ccaa2*1.0/pow(rho_a,3.2E1/3.0)*(t31714*t31714)*t31724*t31717*2.0+ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t31714*1.0/(t31716*t31716*t31716)*2.0+ccaa2*1.0/(t31720*t31720*t31720)*(t31721*t31721)*t31714*t31717*t31685*2.0-ccaa2*gamma_aa*t31721*t31714*t31724*t31685*4.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t31727 = 1.0/pow(rho_a,1.0/3.0);
                double t31728 = c*t31727;
                double t31729 = sqrt(t31728);
                double t31730 = pow(t31728,3.0/2.0);
                double t31731 = c*c;
                double t31732 = 1.0/pow(rho_a,2.0/3.0);
                double t31733 = 1.0/c0p;
                double t31734 = b1p*t31729;
                double t31735 = b3p*t31730;
                double t31736 = b4p*t31731*t31732;
                double t31737 = b2p*c*t31727;
                double t31738 = t31734+t31735+t31736+t31737;
                double t31739 = 1.0/t31738;
                double t31740 = t31733*t31739*(1.0/2.0);
                double t31741 = t31740+1.0;
                double t31742 = log(t31741);
                double t31743 = a1p*c*t31727;
                double t31744 = t31743+1.0;
                double t31745 = pow(2.0,1.0/3.0);
                double t31746 = t31745*2.0;
                double t31747 = t31746-2.0;
                double t31748 = two_13*2.0;
                double t31749 = t31748-2.0;
                double t31750 = 1.0/t31749;
                double t31751 = 1.0/c0f;
                double t31752 = 1.0/pow(rho_b,1.0/3.0);
                double t31753 = c*t31752;
                double t31754 = sqrt(t31753);
                double t31755 = pow(t31753,3.0/2.0);
                double t31756 = 1.0/pow(rho_b,2.0/3.0);
                double t31757 = b1p*t31754;
                double t31758 = b3p*t31755;
                double t31759 = b4p*t31731*t31756;
                double t31760 = b2p*c*t31752;
                double t31761 = t31760+t31757+t31758+t31759;
                double t31762 = 1.0/t31761;
                double t31763 = t31733*t31762*(1.0/2.0);
                double t31764 = t31763+1.0;
                double t31765 = log(t31764);
                double t31766 = a1p*c*t31752;
                double t31767 = t31766+1.0;
                double t31768 = c0p*t31765*t31767*2.0;
                double t31769 = rho_a+rho_b;
                double t31770 = 1.0/pow(t31769,1.0/3.0);
                double t31771 = c*t31770;
                double t31772 = sqrt(t31771);
                double t31773 = pow(t31771,3.0/2.0);
                double t31774 = 1.0/pow(t31769,2.0/3.0);
                double t31775 = b1p*t31772;
                double t31776 = b3p*t31773;
                double t31777 = b4p*t31731*t31774;
                double t31778 = b2p*c*t31770;
                double t31779 = t31775+t31776+t31777+t31778;
                double t31780 = 1.0/t31779;
                double t31781 = t31733*t31780*(1.0/2.0);
                double t31782 = t31781+1.0;
                double t31783 = log(t31782);
                double t31784 = a1p*c*t31770;
                double t31785 = t31784+1.0;
                double t31786 = c0p*t31783*t31785*2.0;
                double t31787 = rho_a-rho_b;
                double t31788 = t31787*t31787;
                double t31789 = 1.0/t31769;
                double t31790 = t31787*t31789;
                double t31791 = 1.0/(t31769*t31769*t31769*t31769);
                double t31792 = t31788*t31788;
                double t31793 = t31790+1.0;
                double t31794 = pow(t31793,4.0/3.0);
                double t31795 = -t31790+1.0;
                double t31796 = pow(t31795,4.0/3.0);
                double t31797 = t31794+t31796-2.0;
                double t31798 = 1.0/pow(rho_a,8.0/3.0);
                double t31799 = 1.0/pow(rho_b,8.0/3.0);
                double t31800 = gcab*gcab;
                double t31801 = gamma_aa*t31798*(1.0/2.0);
                double t31802 = gamma_bb*t31799*(1.0/2.0);
                double t31803 = t31801+t31802;
                double t31804 = t31803*t31803;
                double t31805 = t31800*t31804;
                double t31806 = gcab*t31803*2.0;
                double t31807 = t31805+t31806+1.0;
                double t31808 = 1.0/(t31807*t31807);
                double t31809 = gcab*t31798;
                double t31810 = t31800*t31803*t31798;
                double t31811 = t31810+t31809;
                double t31812 = gcab*t31799;
                double t31813 = t31800*t31803*t31799;
                double t31814 = t31812+t31813;
                double t31815 = gcab*t31803;
                double t31816 = t31815+1.0;
                v_gamma_aa_gamma_bb[Q] += scale * (-rho_b*(t31768-t31750*t31747*(t31768-c0f*log((t31751*(1.0/2.0))/(b1f*t31754+b3f*t31755+b2f*c*t31752+b4f*t31731*t31756)+1.0)*(a1f*c*t31752+1.0)*2.0))+t31769*(t31786-t31750*t31791*t31792*t31797*(t31786-c0f*log((t31751*(1.0/2.0))/(b1f*t31772+b3f*t31773+b2f*c*t31770+b4f*t31731*t31774)+1.0)*(a1f*c*t31770+1.0)*2.0)+(Aa*t31750*t31797*log((1.0/2.0)/(Aa*(b1a*t31772+b3a*t31773+b2a*c*t31770+b4a*t31731*t31774))+1.0)*(t31791*t31792-1.0)*(a1a*c*t31770+1.0)*2.0)/d2fz0)+rho_a*(t31750*t31747*(c0p*t31742*t31744*2.0-c0f*log((t31751*(1.0/2.0))/(b1f*t31729+b3f*t31730+b2f*c*t31727+b4f*t31731*t31732)+1.0)*(a1f*c*t31727+1.0)*2.0)-c0p*t31742*t31744*2.0))*(ccab1*t31800*1.0/(t31816*t31816)*t31798*t31799*(1.0/2.0)-(ccab2*t31800*t31798*t31799*(1.0/2.0))/t31807+ccab2*t31800*t31811*t31803*t31808*t31799+ccab2*t31800*t31803*t31814*t31808*t31798-ccab2*t31800*t31811*t31804*t31814*1.0/(t31807*t31807*t31807)*2.0+ccab2*(t31800*t31800)*t31804*t31808*t31798*t31799*(1.0/2.0)-ccab1*gcab*t31800*t31803*1.0/(t31816*t31816*t31816)*t31798*t31799*(1.0/2.0));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t31820 = 1.0/pow(rho_a,1.0/3.0);
                double t31821 = c*t31820;
                double t31822 = sqrt(t31821);
                double t31823 = pow(t31821,3.0/2.0);
                double t31824 = c*c;
                double t31825 = 1.0/pow(rho_a,2.0/3.0);
                double t31826 = 1.0/c0p;
                double t31827 = b1p*t31822;
                double t31828 = b3p*t31823;
                double t31829 = b4p*t31824*t31825;
                double t31830 = b2p*c*t31820;
                double t31831 = t31830+t31827+t31828+t31829;
                double t31832 = 1.0/t31831;
                double t31833 = t31832*t31826*(1.0/2.0);
                double t31834 = t31833+1.0;
                double t31835 = log(t31834);
                double t31836 = a1p*c*t31820;
                double t31837 = t31836+1.0;
                double t31838 = pow(2.0,1.0/3.0);
                double t31839 = t31838*2.0;
                double t31840 = t31839-2.0;
                double t31841 = two_13*2.0;
                double t31842 = t31841-2.0;
                double t31843 = 1.0/t31842;
                double t31844 = 1.0/c0f;
                double t31845 = 1.0/pow(rho_b,1.0/3.0);
                double t31846 = c*t31845;
                double t31847 = sqrt(t31846);
                double t31848 = pow(t31846,3.0/2.0);
                double t31849 = 1.0/pow(rho_b,2.0/3.0);
                double t31850 = b1p*t31847;
                double t31851 = b3p*t31848;
                double t31852 = b4p*t31824*t31849;
                double t31853 = b2p*c*t31845;
                double t31854 = t31850+t31851+t31852+t31853;
                double t31855 = 1.0/t31854;
                double t31856 = t31826*t31855*(1.0/2.0);
                double t31857 = t31856+1.0;
                double t31858 = log(t31857);
                double t31859 = a1p*c*t31845;
                double t31860 = t31859+1.0;
                double t31861 = c0p*t31860*t31858*2.0;
                double t31862 = rho_a+rho_b;
                double t31863 = 1.0/pow(t31862,1.0/3.0);
                double t31864 = c*t31863;
                double t31865 = sqrt(t31864);
                double t31866 = pow(t31864,3.0/2.0);
                double t31867 = 1.0/pow(t31862,2.0/3.0);
                double t31868 = b1p*t31865;
                double t31869 = b3p*t31866;
                double t31870 = b4p*t31824*t31867;
                double t31871 = b2p*c*t31863;
                double t31872 = t31870+t31871+t31868+t31869;
                double t31873 = 1.0/t31872;
                double t31874 = t31826*t31873*(1.0/2.0);
                double t31875 = t31874+1.0;
                double t31876 = log(t31875);
                double t31877 = a1p*c*t31863;
                double t31878 = t31877+1.0;
                double t31879 = c0p*t31876*t31878*2.0;
                double t31880 = rho_a-rho_b;
                double t31881 = t31880*t31880;
                double t31882 = 1.0/t31862;
                double t31883 = t31880*t31882;
                double t31884 = 1.0/(t31862*t31862*t31862*t31862);
                double t31885 = t31881*t31881;
                double t31886 = t31883+1.0;
                double t31887 = pow(t31886,4.0/3.0);
                double t31888 = -t31883+1.0;
                double t31889 = pow(t31888,4.0/3.0);
                double t31890 = t31887+t31889-2.0;
                double t31891 = gcab*gcab;
                double t31892 = 1.0/pow(rho_b,1.6E1/3.0);
                double t31893 = 1.0/pow(rho_a,8.0/3.0);
                double t31894 = gamma_aa*t31893*(1.0/2.0);
                double t31895 = 1.0/pow(rho_b,8.0/3.0);
                double t31896 = gamma_bb*t31895*(1.0/2.0);
                double t31897 = t31894+t31896;
                double t31898 = gcab*t31897;
                double t31899 = t31898+1.0;
                double t31900 = t31897*t31897;
                double t31901 = t31900*t31891;
                double t31902 = gcab*t31897*2.0;
                double t31903 = t31901+t31902+1.0;
                double t31905 = gcab*t31895;
                double t31906 = t31891*t31895*t31897;
                double t31904 = t31905+t31906;
                double t31907 = 1.0/(t31903*t31903);
                double t31908 = c0p*t31835*t31837*2.0;
                double t31909 = b1f*t31847;
                double t31910 = b3f*t31848;
                double t31911 = b4f*t31824*t31849;
                double t31912 = b2f*c*t31845;
                double t31913 = t31910+t31911+t31912+t31909;
                double t31914 = 1.0/t31913;
                double t31915 = t31914*t31844*(1.0/2.0);
                double t31916 = t31915+1.0;
                double t31917 = log(t31916);
                double t31918 = a1f*c*t31845;
                double t31919 = t31918+1.0;
                double t31920 = t31861-c0f*t31917*t31919*2.0;
                double t31921 = t31861-t31920*t31840*t31843;
                double t31922 = gcaa*gcaa;
                double t31923 = gamma_bb*gcaa*t31895;
                double t31924 = t31923+1.0;
                double t31925 = gamma_bb*gamma_bb;
                double t31926 = gamma_bb*gcaa*t31895*2.0;
                double t31927 = t31922*t31925*t31892;
                double t31928 = t31926+t31927+1.0;
                double t31930 = gcaa*t31895*2.0;
                double t31931 = gamma_bb*t31922*t31892*2.0;
                double t31929 = t31930+t31931;
                double t31932 = 1.0/(t31928*t31928);
                v_gamma_bb_gamma_bb[Q] += scale * (rho_b*t31921+rho_a*(t31908-t31840*t31843*(t31908-c0f*log((t31844*(1.0/2.0))/(b1f*t31822+b3f*t31823+b2f*c*t31820+b4f*t31824*t31825)+1.0)*(a1f*c*t31820+1.0)*2.0))-t31862*(t31879-t31843*t31890*t31884*t31885*(t31879-c0f*log((t31844*(1.0/2.0))/(b1f*t31865+b3f*t31866+b2f*c*t31863+b4f*t31824*t31867)+1.0)*(a1f*c*t31863+1.0)*2.0)+(Aa*t31843*t31890*log((1.0/2.0)/(Aa*(b1a*t31865+b3a*t31866+b2a*c*t31863+b4a*t31824*t31867))+1.0)*(t31884*t31885-1.0)*(a1a*c*t31863+1.0)*2.0)/d2fz0))*((ccab2*t31891*t31892*(1.0/2.0))/t31903-ccab1*t31891*t31892*1.0/(t31899*t31899)*(1.0/2.0)+ccab2*t31900*1.0/(t31903*t31903*t31903)*(t31904*t31904)*t31891*2.0-ccab2*t31900*t31907*(t31891*t31891)*t31892*(1.0/2.0)-ccab2*t31904*t31907*t31891*t31895*t31897*2.0+ccab1*gcab*t31891*t31892*t31897*1.0/(t31899*t31899*t31899)*(1.0/2.0))+rho_b*t31921*(ccaa1*t31922*1.0/(t31924*t31924)*t31892*2.0-(ccaa2*t31922*t31892*2.0)/t31928+ccaa2*1.0/pow(rho_b,3.2E1/3.0)*(t31922*t31922)*t31932*t31925*2.0-ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t31922*1.0/(t31924*t31924*t31924)*2.0-ccaa2*t31922*t31925*t31892*1.0/(t31928*t31928*t31928)*(t31929*t31929)*2.0+ccaa2*gamma_bb*t31922*t31932*t31892*t31929*4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t30877 = 1.0/pow(rho_a,1.0/3.0);
                double t30878 = c*t30877;
                double t30879 = sqrt(t30878);
                double t30880 = pow(t30878,3.0/2.0);
                double t30881 = c*c;
                double t30882 = 1.0/pow(rho_a,2.0/3.0);
                double t30883 = 1.0/c0p;
                double t30884 = b1p*t30879;
                double t30885 = b3p*t30880;
                double t30886 = b4p*t30881*t30882;
                double t30887 = b2p*c*t30877;
                double t30888 = t30884+t30885+t30886+t30887;
                double t30889 = 1.0/t30888;
                double t30890 = t30883*t30889*(1.0/2.0);
                double t30891 = t30890+1.0;
                double t30892 = log(t30891);
                double t30893 = a1p*c*t30877;
                double t30894 = t30893+1.0;
                double t30895 = pow(2.0,1.0/3.0);
                double t30896 = t30895*2.0;
                double t30897 = t30896-2.0;
                double t30898 = two_13*2.0;
                double t30899 = t30898-2.0;
                double t30900 = 1.0/t30899;
                double t30901 = 1.0/c0f;
                double t30902 = 1.0/pow(rho_b,1.0/3.0);
                double t30903 = c*t30902;
                double t30904 = sqrt(t30903);
                double t30905 = pow(t30903,3.0/2.0);
                double t30906 = 1.0/pow(rho_b,2.0/3.0);
                double t30907 = b1p*t30904;
                double t30908 = b3p*t30905;
                double t30909 = b4p*t30906*t30881;
                double t30910 = b2p*c*t30902;
                double t30911 = t30910+t30907+t30908+t30909;
                double t30912 = 1.0/t30911;
                double t30913 = t30912*t30883*(1.0/2.0);
                double t30914 = t30913+1.0;
                double t30915 = log(t30914);
                double t30916 = a1p*c*t30902;
                double t30917 = t30916+1.0;
                double t30918 = c0p*t30915*t30917*2.0;
                double t30919 = rho_a+rho_b;
                double t30920 = 1.0/pow(t30919,1.0/3.0);
                double t30921 = c*t30920;
                double t30922 = sqrt(t30921);
                double t30923 = pow(t30921,3.0/2.0);
                double t30924 = 1.0/pow(t30919,2.0/3.0);
                double t30925 = b1p*t30922;
                double t30926 = b3p*t30923;
                double t30927 = b4p*t30924*t30881;
                double t30928 = b2p*c*t30920;
                double t30929 = t30925+t30926+t30927+t30928;
                double t30930 = 1.0/t30929;
                double t30931 = t30930*t30883*(1.0/2.0);
                double t30932 = t30931+1.0;
                double t30933 = log(t30932);
                double t30934 = a1p*c*t30920;
                double t30935 = t30934+1.0;
                double t30936 = c0p*t30933*t30935*2.0;
                double t30937 = rho_a-rho_b;
                double t30938 = t30937*t30937;
                double t30939 = 1.0/t30919;
                double t30940 = t30937*t30939;
                double t30941 = 1.0/(t30919*t30919*t30919*t30919);
                double t30942 = t30938*t30938;
                double t30943 = t30940+1.0;
                double t30944 = pow(t30943,4.0/3.0);
                double t30945 = -t30940+1.0;
                double t30946 = pow(t30945,4.0/3.0);
                double t30947 = t30944+t30946-2.0;
                double t30948 = 1.0/pow(rho_a,1.1E1/3.0);
                double t30949 = 1.0/pow(rho_a,8.0/3.0);
                double t30950 = gamma_aa*t30949*(1.0/2.0);
                double t30951 = 1.0/pow(rho_b,8.0/3.0);
                double t30952 = gamma_bb*t30951*(1.0/2.0);
                double t30953 = t30950+t30952;
                double t30954 = gcab*t30953;
                double t30955 = t30954+1.0;
                double t30956 = gcab*gcab;
                double t30957 = t30953*t30953;
                double t30958 = t30956*t30957;
                double t30959 = gcab*t30953*2.0;
                double t30960 = t30958+t30959+1.0;
                double t30961 = 1.0/pow(rho_a,1.9E1/3.0);
                double t30962 = 1.0/(t30955*t30955);
                double t30963 = 1.0/t30960;
                double t30964 = 1.0/(t30960*t30960);
                double t30965 = gamma_aa*gcab*t30948*(8.0/3.0);
                double t30966 = gamma_aa*t30953*t30956*t30948*(8.0/3.0);
                double t30967 = t30965+t30966;
                double t30968 = gcab*t30949;
                double t30969 = t30953*t30956*t30949;
                double t30970 = t30968+t30969;
                double t30971 = b1f*t30879;
                double t30972 = b3f*t30880;
                double t30973 = b4f*t30881*t30882;
                double t30974 = b2f*c*t30877;
                double t30975 = t30971+t30972+t30973+t30974;
                double t30976 = 1.0/t30975;
                double t30977 = t30901*t30976*(1.0/2.0);
                double t30978 = t30977+1.0;
                double t30979 = log(t30978);
                double t30980 = a1f*c*t30877;
                double t30981 = t30980+1.0;
                double t30982 = c0f*t30981*t30979*2.0;
                double t30983 = c0p*t30892*t30894*2.0;
                double t30984 = gcaa*gcaa;
                double t30985 = 1.0/pow(rho_a,1.6E1/3.0);
                double t30986 = gamma_aa*gcaa*t30949;
                double t30987 = t30986+1.0;
                double t30988 = gamma_aa*gamma_aa;
                double t30989 = gamma_aa*gcaa*t30949*2.0;
                double t30990 = t30984*t30985*t30988;
                double t30991 = t30990+t30989+1.0;
                double t30992 = 1.0/t30955;
                double t30993 = 1.0/pow(t30919,4.0/3.0);
                double t30994 = b1f*t30922;
                double t30995 = b3f*t30923;
                double t30996 = b4f*t30924*t30881;
                double t30997 = b2f*c*t30920;
                double t30998 = t30994+t30995+t30996+t30997;
                double t30999 = 1.0/t30998;
                double t31000 = t30901*t30999*(1.0/2.0);
                double t31001 = t31000+1.0;
                double t31002 = log(t31001);
                double t31003 = a1f*c*t30920;
                double t31004 = t31003+1.0;
                double t31006 = c0f*t31002*t31004*2.0;
                double t31005 = t30936-t31006;
                double t31007 = 1.0/(t30919*t30919);
                double t31034 = t30937*t31007;
                double t31008 = t30939-t31034;
                double t31009 = 1.0/pow(t30919,5.0/3.0);
                double t31010 = 1.0/sqrt(t30921);
                double t31011 = 1.0/t30932;
                double t31012 = 1.0/(t30929*t30929);
                double t31013 = b4p*t30881*t31009*(2.0/3.0);
                double t31014 = b2p*c*t30993*(1.0/3.0);
                double t31015 = b1p*c*t30993*t31010*(1.0/6.0);
                double t31016 = b3p*c*t30922*t30993*(1.0/2.0);
                double t31017 = t31013+t31014+t31015+t31016;
                double t31018 = t30935*t31011*t31012*t31017;
                double t31019 = 1.0/d2fz0;
                double t31020 = 1.0/Aa;
                double t31021 = b1a*t30922;
                double t31022 = b3a*t30923;
                double t31023 = b4a*t30924*t30881;
                double t31024 = b2a*c*t30920;
                double t31025 = t31021+t31022+t31023+t31024;
                double t31026 = 1.0/t31025;
                double t31027 = t31020*t31026*(1.0/2.0);
                double t31028 = t31027+1.0;
                double t31029 = log(t31028);
                double t31030 = a1a*c*t30920;
                double t31031 = t31030+1.0;
                double t31032 = 1.0/(t30919*t30919*t30919*t30919*t30919);
                double t31033 = pow(t30943,1.0/3.0);
                double t31035 = t31033*t31008*(4.0/3.0);
                double t31036 = pow(t30945,1.0/3.0);
                double t31037 = t31035-t31008*t31036*(4.0/3.0);
                double t31038 = t30941*t30942;
                double t31039 = t31038-1.0;
                double t31040 = 1.0/pow(rho_a,4.0/3.0);
                double t31041 = 1.0/pow(rho_a,5.0/3.0);
                double t31042 = 1.0/sqrt(t30878);
                double t31043 = 1.0/t30891;
                double t31044 = 1.0/(t30888*t30888);
                double t31045 = b4p*t30881*t31041*(2.0/3.0);
                double t31046 = b2p*c*t31040*(1.0/3.0);
                double t31047 = b1p*c*t31040*t31042*(1.0/6.0);
                double t31048 = b3p*c*t30879*t31040*(1.0/2.0);
                double t31049 = t31045+t31046+t31047+t31048;
                double t31050 = t30894*t31043*t31044*t31049;
                double t31051 = t30982-t30983;
                double t31052 = t30900*t30897*t31051;
                double t31053 = Aa*t30900*t30947*t31031*t31019*t31029*t31039*2.0;
                double t31054 = t30983+t31052;
                double t31055 = 1.0/t30987;
                double t31056 = 1.0/t30991;
                double t31057 = 1.0/(t30987*t30987);
                double t31058 = 1.0/(t30991*t30991);
                double t31059 = gcaa*t30949*2.0;
                double t31060 = gamma_aa*t30984*t30985*2.0;
                double t31061 = t31060+t31059;
                double t31062 = gamma_aa*gcaa*t30948*(1.6E1/3.0);
                double t31063 = t30961*t30984*t30988*(1.6E1/3.0);
                double t31064 = t31062+t31063;
                double t31065 = 1.0/t30978;
                double t31066 = 1.0/(t30975*t30975);
                double t31067 = b4f*t30881*t31041*(2.0/3.0);
                double t31068 = b2f*c*t31040*(1.0/3.0);
                double t31069 = b1f*c*t31040*t31042*(1.0/6.0);
                double t31070 = b3f*c*t30879*t31040*(1.0/2.0);
                double t31071 = t31070+t31067+t31068+t31069;
                double t31072 = a1f*c*c0f*t30979*t31040*(2.0/3.0);
                double t31073 = a1p*c*c0p*t30892*t31040*(2.0/3.0);
                double t31074 = ccaa1*gcaa*t30949*t31055;
                double t31075 = ccaa2*gamma_aa*t30984*t30985*t31056*2.0;
                double t31076 = t31074+t31075-ccaa1*gamma_aa*t30984*t30985*t31057-ccaa2*t30984*t30985*t30988*t31061*t31058;
                v_rho_a_gamma_aa[Q] += scale * -t31054*t31076+(ccab1*gcab*t30992*t30949*(1.0/2.0)-ccab1*t30953*t30962*t30956*t30949*(1.0/2.0)-ccab2*t30970*t30964*t30956*t30957+ccab2*t30953*t30963*t30956*t30949)*(-t30936+t30983+t31052-t31053-rho_a*(-t31050+t31073+t30900*t30897*(t31050+t31072-t30981*t31071*t31065*t31066-a1p*c*c0p*t30892*t31040*(2.0/3.0)))+t30919*(-t31018+t30900*t30941*t30942*t30947*(t31018-(1.0/(t30998*t30998)*t31004*(b2f*c*t30993*(1.0/3.0)+b4f*t30881*t31009*(2.0/3.0)+b1f*c*t30993*t31010*(1.0/6.0)+b3f*c*t30922*t30993*(1.0/2.0)))/t31001+a1f*c*c0f*t30993*t31002*(2.0/3.0)-a1p*c*c0p*t30933*t30993*(2.0/3.0))+a1p*c*c0p*t30933*t30993*(2.0/3.0)+t30900*t30941*t30942*t31005*t31037-t30900*t30942*t30947*t31005*t31032*4.0+t30900*t30941*t30937*t30938*t30947*t31005*4.0+Aa*t30900*t30947*t31031*t31019*t31029*(t30942*t31032*4.0-t30941*t30937*t30938*4.0)*2.0-Aa*t30900*t31031*t31019*t31037*t31029*t31039*2.0-(t30900*t30947*t31031*1.0/(t31025*t31025)*t31019*t31039*(b2a*c*t30993*(1.0/3.0)+b4a*t30881*t31009*(2.0/3.0)+b1a*c*t30993*t31010*(1.0/6.0)+b3a*c*t30922*t30993*(1.0/2.0)))/t31028+Aa*a1a*c*t30900*t30947*t30993*t31019*t31029*t31039*(2.0/3.0))+t30900*t30941*t30942*t30947*t31005)-(rho_a*(t30983+t30900*t30897*(t30982-c0p*t30892*t30894*2.0))+rho_b*(t30918-t30900*t30897*(t30918-c0f*log((t30901*(1.0/2.0))/(b1f*t30904+b3f*t30905+b2f*c*t30902+b4f*t30906*t30881)+1.0)*(a1f*c*t30902+1.0)*2.0))-t30919*(t30936+t31053-t30900*t30941*t30942*t30947*t31005))*(ccab1*gcab*t30992*t30948*(4.0/3.0)-ccab2*t30964*t30956*t30957*(gcab*t30948*(8.0/3.0)+gamma_aa*t30961*t30956*(4.0/3.0)+t30953*t30956*t30948*(8.0/3.0))-ccab1*gamma_aa*t30961*t30962*t30956*(4.0/3.0)+ccab2*gamma_aa*t30961*t30963*t30956*(4.0/3.0)-ccab1*t30953*t30962*t30956*t30948*(4.0/3.0)+ccab2*t30953*t30963*t30956*t30948*(8.0/3.0)-ccab2*t30953*t30964*t30956*t30949*t30967+ccab2*1.0/(t30960*t30960*t30960)*t30970*t30956*t30957*t30967*2.0-ccab2*gamma_aa*t30970*t30953*t30964*t30956*t30948*(8.0/3.0)+ccab1*gamma_aa*gcab*t30961*t30953*1.0/(t30955*t30955*t30955)*t30956*(4.0/3.0))+rho_a*t31054*(ccaa1*gcaa*t30948*t31055*(8.0/3.0)-ccaa1*gamma_aa*t30961*t30984*t31057*8.0+ccaa2*gamma_aa*t30961*t30984*t31056*(3.2E1/3.0)-ccaa2*t30961*t30984*t30988*t31061*t31058*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t30984*1.0/(t30987*t30987*t30987)*t30988*(1.6E1/3.0)-ccaa2*t30984*t30985*t30988*t31058*(gcaa*t30948*(1.6E1/3.0)+gamma_aa*t30961*t30984*(3.2E1/3.0))-ccaa2*gamma_aa*t30984*t30985*t31064*t31058*2.0+ccaa2*1.0/(t30991*t30991*t30991)*t30984*t30985*t30988*t31061*t31064*2.0)+rho_a*t31076*(-t31050+t31073+t30900*t30897*(t31050+t31072-t31073-t30981*t31071*t31065*t31066));
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t31079 = 1.0/pow(rho_a,1.0/3.0);
                double t31080 = c*t31079;
                double t31081 = sqrt(t31080);
                double t31082 = pow(t31080,3.0/2.0);
                double t31083 = c*c;
                double t31084 = 1.0/pow(rho_a,2.0/3.0);
                double t31085 = 1.0/c0p;
                double t31086 = b1p*t31081;
                double t31087 = b3p*t31082;
                double t31088 = b4p*t31083*t31084;
                double t31089 = b2p*c*t31079;
                double t31090 = t31086+t31087+t31088+t31089;
                double t31091 = 1.0/t31090;
                double t31092 = t31091*t31085*(1.0/2.0);
                double t31093 = t31092+1.0;
                double t31094 = log(t31093);
                double t31095 = a1p*c*t31079;
                double t31096 = t31095+1.0;
                double t31097 = pow(2.0,1.0/3.0);
                double t31098 = t31097*2.0;
                double t31099 = t31098-2.0;
                double t31100 = two_13*2.0;
                double t31101 = t31100-2.0;
                double t31102 = 1.0/t31101;
                double t31103 = 1.0/c0f;
                double t31104 = 1.0/pow(rho_b,1.0/3.0);
                double t31105 = c*t31104;
                double t31106 = sqrt(t31105);
                double t31107 = pow(t31105,3.0/2.0);
                double t31108 = 1.0/pow(rho_b,2.0/3.0);
                double t31109 = b1p*t31106;
                double t31110 = b3p*t31107;
                double t31111 = b4p*t31108*t31083;
                double t31112 = b2p*c*t31104;
                double t31113 = t31110+t31111+t31112+t31109;
                double t31114 = 1.0/t31113;
                double t31115 = t31114*t31085*(1.0/2.0);
                double t31116 = t31115+1.0;
                double t31117 = log(t31116);
                double t31118 = a1p*c*t31104;
                double t31119 = t31118+1.0;
                double t31120 = c0p*t31117*t31119*2.0;
                double t31121 = rho_a+rho_b;
                double t31122 = 1.0/pow(t31121,1.0/3.0);
                double t31123 = c*t31122;
                double t31124 = sqrt(t31123);
                double t31125 = pow(t31123,3.0/2.0);
                double t31126 = 1.0/pow(t31121,2.0/3.0);
                double t31127 = b1p*t31124;
                double t31128 = b3p*t31125;
                double t31129 = b4p*t31126*t31083;
                double t31130 = b2p*c*t31122;
                double t31131 = t31130+t31127+t31128+t31129;
                double t31132 = 1.0/t31131;
                double t31133 = t31132*t31085*(1.0/2.0);
                double t31134 = t31133+1.0;
                double t31135 = log(t31134);
                double t31136 = a1p*c*t31122;
                double t31137 = t31136+1.0;
                double t31138 = c0p*t31135*t31137*2.0;
                double t31139 = rho_a-rho_b;
                double t31140 = t31139*t31139;
                double t31141 = 1.0/t31121;
                double t31142 = t31141*t31139;
                double t31143 = 1.0/(t31121*t31121*t31121*t31121);
                double t31144 = t31140*t31140;
                double t31145 = t31142+1.0;
                double t31146 = pow(t31145,4.0/3.0);
                double t31147 = -t31142+1.0;
                double t31148 = pow(t31147,4.0/3.0);
                double t31149 = t31146+t31148-2.0;
                double t31150 = gcab*gcab;
                double t31151 = 1.0/pow(rho_a,1.1E1/3.0);
                double t31152 = 1.0/pow(rho_b,8.0/3.0);
                double t31153 = 1.0/pow(rho_a,8.0/3.0);
                double t31154 = gamma_aa*t31153*(1.0/2.0);
                double t31155 = gamma_bb*t31152*(1.0/2.0);
                double t31156 = t31154+t31155;
                double t31157 = gamma_aa*gcab*t31151*(8.0/3.0);
                double t31158 = gamma_aa*t31150*t31151*t31156*(8.0/3.0);
                double t31159 = t31157+t31158;
                double t31160 = t31156*t31156;
                double t31161 = t31150*t31160;
                double t31162 = gcab*t31156*2.0;
                double t31163 = t31161+t31162+1.0;
                double t31164 = gcab*t31152;
                double t31165 = t31150*t31152*t31156;
                double t31166 = t31164+t31165;
                double t31167 = 1.0/(t31163*t31163);
                double t31168 = gcab*t31156;
                double t31169 = t31168+1.0;
                double t31170 = c0p*t31094*t31096*2.0;
                double t31171 = 1.0/(t31169*t31169);
                double t31172 = 1.0/t31163;
                double t31173 = 1.0/pow(t31121,4.0/3.0);
                double t31174 = b1f*t31124;
                double t31175 = b3f*t31125;
                double t31176 = b4f*t31126*t31083;
                double t31177 = b2f*c*t31122;
                double t31178 = t31174+t31175+t31176+t31177;
                double t31179 = 1.0/t31178;
                double t31180 = t31103*t31179*(1.0/2.0);
                double t31181 = t31180+1.0;
                double t31182 = log(t31181);
                double t31183 = a1f*c*t31122;
                double t31184 = t31183+1.0;
                double t31186 = c0f*t31182*t31184*2.0;
                double t31185 = t31138-t31186;
                double t31187 = 1.0/(t31121*t31121);
                double t31214 = t31139*t31187;
                double t31188 = t31141-t31214;
                double t31189 = 1.0/pow(t31121,5.0/3.0);
                double t31190 = 1.0/sqrt(t31123);
                double t31191 = 1.0/t31134;
                double t31192 = 1.0/(t31131*t31131);
                double t31193 = b4p*t31083*t31189*(2.0/3.0);
                double t31194 = b2p*c*t31173*(1.0/3.0);
                double t31195 = b1p*c*t31190*t31173*(1.0/6.0);
                double t31196 = b3p*c*t31124*t31173*(1.0/2.0);
                double t31197 = t31193+t31194+t31195+t31196;
                double t31198 = t31137*t31191*t31192*t31197;
                double t31199 = 1.0/d2fz0;
                double t31200 = 1.0/Aa;
                double t31201 = b1a*t31124;
                double t31202 = b3a*t31125;
                double t31203 = b4a*t31126*t31083;
                double t31204 = b2a*c*t31122;
                double t31205 = t31201+t31202+t31203+t31204;
                double t31206 = 1.0/t31205;
                double t31207 = t31200*t31206*(1.0/2.0);
                double t31208 = t31207+1.0;
                double t31209 = log(t31208);
                double t31210 = a1a*c*t31122;
                double t31211 = t31210+1.0;
                double t31212 = 1.0/(t31121*t31121*t31121*t31121*t31121);
                double t31213 = pow(t31145,1.0/3.0);
                double t31215 = t31213*t31188*(4.0/3.0);
                double t31216 = pow(t31147,1.0/3.0);
                double t31217 = t31215-t31216*t31188*(4.0/3.0);
                double t31218 = t31143*t31144;
                double t31219 = t31218-1.0;
                double t31220 = a1f*c*t31079;
                double t31221 = t31220+1.0;
                double t31222 = b1f*t31081;
                double t31223 = b3f*t31082;
                double t31224 = b4f*t31083*t31084;
                double t31225 = b2f*c*t31079;
                double t31226 = t31222+t31223+t31224+t31225;
                double t31227 = 1.0/t31226;
                double t31228 = t31103*t31227*(1.0/2.0);
                double t31229 = t31228+1.0;
                double t31230 = 1.0/pow(rho_a,4.0/3.0);
                double t31231 = 1.0/pow(rho_a,5.0/3.0);
                double t31232 = 1.0/sqrt(t31080);
                double t31233 = log(t31229);
                double t31234 = 1.0/t31093;
                double t31235 = 1.0/(t31090*t31090);
                double t31236 = b4p*t31231*t31083*(2.0/3.0);
                double t31237 = b2p*c*t31230*(1.0/3.0);
                double t31238 = b1p*c*t31230*t31232*(1.0/6.0);
                double t31239 = b3p*c*t31230*t31081*(1.0/2.0);
                double t31240 = t31236+t31237+t31238+t31239;
                double t31241 = t31240*t31234*t31235*t31096;
                double t31242 = Aa*t31102*t31211*t31209*t31219*t31149*t31199*2.0;
                double t31243 = t31170-c0f*t31221*t31233*2.0;
                v_rho_a_gamma_bb[Q] += scale * (rho_a*(t31170-t31102*t31243*t31099)+rho_b*(t31120-t31102*t31099*(t31120-c0f*log((t31103*(1.0/2.0))/(b1f*t31106+b3f*t31107+b2f*c*t31104+b4f*t31108*t31083)+1.0)*(a1f*c*t31104+1.0)*2.0))-t31121*(t31242+t31138-t31102*t31143*t31144*t31149*t31185))*(ccab2*t31150*t31152*t31156*t31167*t31159-ccab2*t31150*t31160*1.0/(t31163*t31163*t31163)*t31166*t31159*2.0+ccab1*gamma_aa*t31150*t31151*t31152*t31171*(4.0/3.0)-ccab2*gamma_aa*t31150*t31151*t31152*t31172*(4.0/3.0)+ccab2*gamma_aa*t31150*t31151*t31156*t31166*t31167*(8.0/3.0)+ccab2*gamma_aa*(t31150*t31150)*t31151*t31160*t31152*t31167*(4.0/3.0)-ccab1*gamma_aa*gcab*t31150*t31151*t31152*t31156*1.0/(t31169*t31169*t31169)*(4.0/3.0))-((ccab1*gcab*t31152*(1.0/2.0))/t31169-ccab1*t31150*t31152*t31171*t31156*(1.0/2.0)+ccab2*t31150*t31152*t31172*t31156-ccab2*t31150*t31160*t31166*t31167)*(-t31170+t31242+t31138+rho_a*(-t31241+t31102*t31099*(t31241-(t31221*1.0/(t31226*t31226)*(b2f*c*t31230*(1.0/3.0)+b4f*t31231*t31083*(2.0/3.0)+b1f*c*t31230*t31232*(1.0/6.0)+b3f*c*t31230*t31081*(1.0/2.0)))/t31229+a1f*c*c0f*t31230*t31233*(2.0/3.0)-a1p*c*c0p*t31230*t31094*(2.0/3.0))+a1p*c*c0p*t31230*t31094*(2.0/3.0))-t31121*(-t31198+t31102*t31143*t31144*t31149*(t31198-(t31184*1.0/(t31178*t31178)*(b2f*c*t31173*(1.0/3.0)+b4f*t31083*t31189*(2.0/3.0)+b1f*c*t31190*t31173*(1.0/6.0)+b3f*c*t31124*t31173*(1.0/2.0)))/t31181+a1f*c*c0f*t31173*t31182*(2.0/3.0)-a1p*c*c0p*t31135*t31173*(2.0/3.0))+a1p*c*c0p*t31135*t31173*(2.0/3.0)+t31102*t31143*t31144*t31217*t31185-t31102*t31212*t31144*t31149*t31185*4.0+t31102*t31140*t31143*t31139*t31149*t31185*4.0+Aa*t31102*t31211*t31209*t31149*t31199*(t31212*t31144*4.0-t31140*t31143*t31139*4.0)*2.0-Aa*t31102*t31211*t31217*t31209*t31219*t31199*2.0-(t31102*t31211*1.0/(t31205*t31205)*t31219*t31149*t31199*(b2a*c*t31173*(1.0/3.0)+b4a*t31083*t31189*(2.0/3.0)+b1a*c*t31190*t31173*(1.0/6.0)+b3a*c*t31124*t31173*(1.0/2.0)))/t31208+Aa*a1a*c*t31102*t31173*t31209*t31219*t31149*t31199*(2.0/3.0))+t31102*t31243*t31099-t31102*t31143*t31144*t31149*t31185);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t31245 = 1.0/pow(rho_a,1.0/3.0);
                double t31246 = c*t31245;
                double t31247 = sqrt(t31246);
                double t31248 = pow(t31246,3.0/2.0);
                double t31249 = c*c;
                double t31250 = 1.0/pow(rho_a,2.0/3.0);
                double t31251 = 1.0/c0p;
                double t31252 = b1p*t31247;
                double t31253 = b3p*t31248;
                double t31254 = b4p*t31250*t31249;
                double t31255 = b2p*c*t31245;
                double t31256 = t31252+t31253+t31254+t31255;
                double t31257 = 1.0/t31256;
                double t31258 = t31251*t31257*(1.0/2.0);
                double t31259 = t31258+1.0;
                double t31260 = log(t31259);
                double t31261 = a1p*c*t31245;
                double t31262 = t31261+1.0;
                double t31263 = pow(2.0,1.0/3.0);
                double t31264 = t31263*2.0;
                double t31265 = t31264-2.0;
                double t31266 = two_13*2.0;
                double t31267 = t31266-2.0;
                double t31268 = 1.0/t31267;
                double t31269 = 1.0/c0f;
                double t31270 = 1.0/pow(rho_b,1.0/3.0);
                double t31271 = c*t31270;
                double t31272 = sqrt(t31271);
                double t31273 = pow(t31271,3.0/2.0);
                double t31274 = 1.0/pow(rho_b,2.0/3.0);
                double t31275 = b1p*t31272;
                double t31276 = b3p*t31273;
                double t31277 = b4p*t31274*t31249;
                double t31278 = b2p*c*t31270;
                double t31279 = t31275+t31276+t31277+t31278;
                double t31280 = 1.0/t31279;
                double t31281 = t31251*t31280*(1.0/2.0);
                double t31282 = t31281+1.0;
                double t31283 = log(t31282);
                double t31284 = a1p*c*t31270;
                double t31285 = t31284+1.0;
                double t31286 = c0p*t31283*t31285*2.0;
                double t31287 = rho_a+rho_b;
                double t31288 = 1.0/pow(t31287,1.0/3.0);
                double t31289 = c*t31288;
                double t31290 = sqrt(t31289);
                double t31291 = pow(t31289,3.0/2.0);
                double t31292 = 1.0/pow(t31287,2.0/3.0);
                double t31293 = b1p*t31290;
                double t31294 = b3p*t31291;
                double t31295 = b4p*t31292*t31249;
                double t31296 = b2p*c*t31288;
                double t31297 = t31293+t31294+t31295+t31296;
                double t31298 = 1.0/t31297;
                double t31299 = t31251*t31298*(1.0/2.0);
                double t31300 = t31299+1.0;
                double t31301 = log(t31300);
                double t31302 = a1p*c*t31288;
                double t31303 = t31302+1.0;
                double t31304 = c0p*t31301*t31303*2.0;
                double t31305 = rho_a-rho_b;
                double t31306 = t31305*t31305;
                double t31307 = 1.0/t31287;
                double t31308 = t31305*t31307;
                double t31309 = 1.0/(t31287*t31287*t31287*t31287);
                double t31310 = t31306*t31306;
                double t31311 = t31308+1.0;
                double t31312 = pow(t31311,4.0/3.0);
                double t31313 = -t31308+1.0;
                double t31314 = pow(t31313,4.0/3.0);
                double t31315 = t31312+t31314-2.0;
                double t31316 = gcab*gcab;
                double t31317 = 1.0/pow(rho_b,1.1E1/3.0);
                double t31318 = 1.0/pow(rho_a,8.0/3.0);
                double t31319 = gamma_aa*t31318*(1.0/2.0);
                double t31320 = 1.0/pow(rho_b,8.0/3.0);
                double t31321 = gamma_bb*t31320*(1.0/2.0);
                double t31322 = t31321+t31319;
                double t31323 = gamma_bb*gcab*t31317*(8.0/3.0);
                double t31324 = gamma_bb*t31322*t31316*t31317*(8.0/3.0);
                double t31325 = t31323+t31324;
                double t31326 = t31322*t31322;
                double t31327 = t31316*t31326;
                double t31328 = gcab*t31322*2.0;
                double t31329 = t31327+t31328+1.0;
                double t31330 = gcab*t31318;
                double t31331 = t31322*t31316*t31318;
                double t31332 = t31330+t31331;
                double t31333 = 1.0/(t31329*t31329);
                double t31334 = gcab*t31322;
                double t31335 = t31334+1.0;
                double t31336 = c0p*t31260*t31262*2.0;
                double t31337 = 1.0/(t31335*t31335);
                double t31338 = 1.0/t31329;
                double t31339 = 1.0/pow(t31287,4.0/3.0);
                double t31340 = b1f*t31290;
                double t31341 = b3f*t31291;
                double t31342 = b4f*t31292*t31249;
                double t31343 = b2f*c*t31288;
                double t31344 = t31340+t31341+t31342+t31343;
                double t31345 = 1.0/t31344;
                double t31346 = t31345*t31269*(1.0/2.0);
                double t31347 = t31346+1.0;
                double t31348 = log(t31347);
                double t31349 = a1f*c*t31288;
                double t31350 = t31349+1.0;
                double t31352 = c0f*t31350*t31348*2.0;
                double t31351 = t31304-t31352;
                double t31353 = 1.0/(t31287*t31287);
                double t31354 = t31305*t31353;
                double t31355 = t31307+t31354;
                double t31356 = 1.0/pow(t31287,5.0/3.0);
                double t31357 = 1.0/sqrt(t31289);
                double t31358 = 1.0/t31300;
                double t31359 = 1.0/(t31297*t31297);
                double t31360 = b4p*t31356*t31249*(2.0/3.0);
                double t31361 = b2p*c*t31339*(1.0/3.0);
                double t31362 = b1p*c*t31339*t31357*(1.0/6.0);
                double t31363 = b3p*c*t31290*t31339*(1.0/2.0);
                double t31364 = t31360+t31361+t31362+t31363;
                double t31365 = 1.0/d2fz0;
                double t31366 = 1.0/Aa;
                double t31367 = b1a*t31290;
                double t31368 = b3a*t31291;
                double t31369 = b4a*t31292*t31249;
                double t31370 = b2a*c*t31288;
                double t31371 = t31370+t31367+t31368+t31369;
                double t31372 = 1.0/t31371;
                double t31373 = t31372*t31366*(1.0/2.0);
                double t31374 = t31373+1.0;
                double t31375 = log(t31374);
                double t31376 = a1a*c*t31288;
                double t31377 = t31376+1.0;
                double t31378 = 1.0/(t31287*t31287*t31287*t31287*t31287);
                double t31379 = pow(t31311,1.0/3.0);
                double t31380 = t31355*t31379*(4.0/3.0);
                double t31381 = pow(t31313,1.0/3.0);
                double t31382 = t31380-t31381*t31355*(4.0/3.0);
                double t31383 = t31310*t31309;
                double t31384 = t31383-1.0;
                double t31385 = t31303*t31364*t31358*t31359;
                double t31386 = a1f*c*t31270;
                double t31387 = t31386+1.0;
                double t31388 = b1f*t31272;
                double t31389 = b3f*t31273;
                double t31390 = b4f*t31274*t31249;
                double t31391 = b2f*c*t31270;
                double t31392 = t31390+t31391+t31388+t31389;
                double t31393 = 1.0/t31392;
                double t31394 = t31393*t31269*(1.0/2.0);
                double t31395 = t31394+1.0;
                double t31396 = 1.0/pow(rho_b,4.0/3.0);
                double t31397 = 1.0/pow(rho_b,5.0/3.0);
                double t31398 = 1.0/sqrt(t31271);
                double t31399 = log(t31395);
                double t31400 = 1.0/t31282;
                double t31401 = 1.0/(t31279*t31279);
                double t31402 = b4p*t31249*t31397*(2.0/3.0);
                double t31403 = b2p*c*t31396*(1.0/3.0);
                double t31404 = b1p*c*t31396*t31398*(1.0/6.0);
                double t31405 = b3p*c*t31272*t31396*(1.0/2.0);
                double t31406 = t31402+t31403+t31404+t31405;
                double t31407 = t31400*t31401*t31406*t31285;
                double t31408 = t31286-c0f*t31387*t31399*2.0;
                double t31409 = Aa*t31315*t31365*t31375*t31384*t31268*t31377*2.0;
                v_rho_b_gamma_aa[Q] += scale * -((ccab1*gcab*t31318*(1.0/2.0))/t31335-ccab2*t31332*t31333*t31316*t31326-ccab1*t31322*t31316*t31318*t31337*(1.0/2.0)+ccab2*t31322*t31316*t31318*t31338)*(t31304+t31409-t31286+t31287*(t31385-t31310*t31315*t31309*t31268*(t31385-(t31350*1.0/(t31344*t31344)*(b2f*c*t31339*(1.0/3.0)+b4f*t31356*t31249*(2.0/3.0)+b1f*c*t31339*t31357*(1.0/6.0)+b3f*c*t31290*t31339*(1.0/2.0)))/t31347+a1f*c*c0f*t31339*t31348*(2.0/3.0)-a1p*c*c0p*t31301*t31339*(2.0/3.0))-a1p*c*c0p*t31301*t31339*(2.0/3.0)+t31310*t31351*t31309*t31382*t31268+t31310*t31315*t31351*t31268*t31378*4.0+t31305*t31306*t31315*t31351*t31309*t31268*4.0-Aa*t31315*t31365*t31375*t31268*t31377*(t31310*t31378*4.0+t31305*t31306*t31309*4.0)*2.0-Aa*t31382*t31365*t31375*t31384*t31268*t31377*2.0+(t31315*1.0/(t31371*t31371)*t31365*t31384*t31268*t31377*(b2a*c*t31339*(1.0/3.0)+b4a*t31356*t31249*(2.0/3.0)+b1a*c*t31339*t31357*(1.0/6.0)+b3a*c*t31290*t31339*(1.0/2.0)))/t31374-Aa*a1a*c*t31315*t31365*t31339*t31375*t31384*t31268*(2.0/3.0))+rho_b*(-t31407+t31265*t31268*(t31407-(1.0/(t31392*t31392)*t31387*(b2f*c*t31396*(1.0/3.0)+b4f*t31249*t31397*(2.0/3.0)+b1f*c*t31396*t31398*(1.0/6.0)+b3f*c*t31272*t31396*(1.0/2.0)))/t31395+a1f*c*c0f*t31396*t31399*(2.0/3.0)-a1p*c*c0p*t31283*t31396*(2.0/3.0))+a1p*c*c0p*t31283*t31396*(2.0/3.0))+t31408*t31265*t31268-t31310*t31315*t31351*t31309*t31268)+(rho_b*(t31286-t31408*t31265*t31268)+rho_a*(t31336-t31265*t31268*(t31336-c0f*log((t31269*(1.0/2.0))/(b1f*t31247+b3f*t31248+b2f*c*t31245+b4f*t31250*t31249)+1.0)*(a1f*c*t31245+1.0)*2.0))-t31287*(t31304+t31409-t31310*t31315*t31351*t31309*t31268))*(ccab2*t31322*t31333*t31316*t31325*t31318-ccab2*t31332*t31316*t31325*t31326*1.0/(t31329*t31329*t31329)*2.0+ccab1*gamma_bb*t31316*t31317*t31318*t31337*(4.0/3.0)-ccab2*gamma_bb*t31316*t31317*t31318*t31338*(4.0/3.0)+ccab2*gamma_bb*t31322*t31332*t31333*t31316*t31317*(8.0/3.0)+ccab2*gamma_bb*t31333*(t31316*t31316)*t31317*t31326*t31318*(4.0/3.0)-ccab1*gamma_bb*gcab*t31322*t31316*t31317*1.0/(t31335*t31335*t31335)*t31318*(4.0/3.0));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t31412 = 1.0/pow(rho_a,1.0/3.0);
                double t31413 = c*t31412;
                double t31414 = sqrt(t31413);
                double t31415 = pow(t31413,3.0/2.0);
                double t31416 = c*c;
                double t31417 = 1.0/pow(rho_a,2.0/3.0);
                double t31418 = 1.0/c0p;
                double t31419 = b1p*t31414;
                double t31420 = b3p*t31415;
                double t31421 = b4p*t31416*t31417;
                double t31422 = b2p*c*t31412;
                double t31423 = t31420+t31421+t31422+t31419;
                double t31424 = 1.0/t31423;
                double t31425 = t31424*t31418*(1.0/2.0);
                double t31426 = t31425+1.0;
                double t31427 = log(t31426);
                double t31428 = a1p*c*t31412;
                double t31429 = t31428+1.0;
                double t31430 = pow(2.0,1.0/3.0);
                double t31431 = t31430*2.0;
                double t31432 = t31431-2.0;
                double t31433 = two_13*2.0;
                double t31434 = t31433-2.0;
                double t31435 = 1.0/t31434;
                double t31436 = 1.0/c0f;
                double t31437 = 1.0/pow(rho_b,1.0/3.0);
                double t31438 = c*t31437;
                double t31439 = sqrt(t31438);
                double t31440 = pow(t31438,3.0/2.0);
                double t31441 = 1.0/pow(rho_b,2.0/3.0);
                double t31442 = b1p*t31439;
                double t31443 = b3p*t31440;
                double t31444 = b4p*t31441*t31416;
                double t31445 = b2p*c*t31437;
                double t31446 = t31442+t31443+t31444+t31445;
                double t31447 = 1.0/t31446;
                double t31448 = t31418*t31447*(1.0/2.0);
                double t31449 = t31448+1.0;
                double t31450 = log(t31449);
                double t31451 = a1p*c*t31437;
                double t31452 = t31451+1.0;
                double t31453 = c0p*t31450*t31452*2.0;
                double t31454 = rho_a+rho_b;
                double t31455 = 1.0/pow(t31454,1.0/3.0);
                double t31456 = c*t31455;
                double t31457 = sqrt(t31456);
                double t31458 = pow(t31456,3.0/2.0);
                double t31459 = 1.0/pow(t31454,2.0/3.0);
                double t31460 = b1p*t31457;
                double t31461 = b3p*t31458;
                double t31462 = b4p*t31416*t31459;
                double t31463 = b2p*c*t31455;
                double t31464 = t31460+t31461+t31462+t31463;
                double t31465 = 1.0/t31464;
                double t31466 = t31418*t31465*(1.0/2.0);
                double t31467 = t31466+1.0;
                double t31468 = log(t31467);
                double t31469 = a1p*c*t31455;
                double t31470 = t31469+1.0;
                double t31471 = c0p*t31470*t31468*2.0;
                double t31472 = rho_a-rho_b;
                double t31473 = t31472*t31472;
                double t31474 = 1.0/t31454;
                double t31475 = t31472*t31474;
                double t31476 = 1.0/(t31454*t31454*t31454*t31454);
                double t31477 = t31473*t31473;
                double t31478 = t31475+1.0;
                double t31479 = pow(t31478,4.0/3.0);
                double t31480 = -t31475+1.0;
                double t31481 = pow(t31480,4.0/3.0);
                double t31482 = t31481+t31479-2.0;
                double t31483 = 1.0/pow(rho_b,1.1E1/3.0);
                double t31484 = 1.0/pow(rho_a,8.0/3.0);
                double t31485 = gamma_aa*t31484*(1.0/2.0);
                double t31486 = 1.0/pow(rho_b,8.0/3.0);
                double t31487 = gamma_bb*t31486*(1.0/2.0);
                double t31488 = t31485+t31487;
                double t31489 = gcab*t31488;
                double t31490 = t31489+1.0;
                double t31491 = gcab*gcab;
                double t31492 = t31488*t31488;
                double t31493 = t31491*t31492;
                double t31494 = gcab*t31488*2.0;
                double t31495 = t31493+t31494+1.0;
                double t31496 = 1.0/pow(rho_b,1.9E1/3.0);
                double t31497 = 1.0/(t31490*t31490);
                double t31498 = 1.0/t31495;
                double t31499 = 1.0/(t31495*t31495);
                double t31500 = gamma_bb*gcab*t31483*(8.0/3.0);
                double t31501 = gamma_bb*t31491*t31483*t31488*(8.0/3.0);
                double t31502 = t31500+t31501;
                double t31503 = gcab*t31486;
                double t31504 = t31491*t31486*t31488;
                double t31505 = t31503+t31504;
                double t31506 = b1f*t31439;
                double t31507 = b3f*t31440;
                double t31508 = b4f*t31441*t31416;
                double t31509 = b2f*c*t31437;
                double t31510 = t31506+t31507+t31508+t31509;
                double t31511 = 1.0/t31510;
                double t31512 = t31511*t31436*(1.0/2.0);
                double t31513 = t31512+1.0;
                double t31514 = log(t31513);
                double t31515 = a1f*c*t31437;
                double t31516 = t31515+1.0;
                double t31586 = c0f*t31514*t31516*2.0;
                double t31517 = t31453-t31586;
                double t31587 = t31432*t31435*t31517;
                double t31518 = t31453-t31587;
                double t31519 = gcaa*gcaa;
                double t31520 = 1.0/pow(rho_b,1.6E1/3.0);
                double t31521 = gamma_bb*gcaa*t31486;
                double t31522 = t31521+1.0;
                double t31523 = gamma_bb*gamma_bb;
                double t31524 = gamma_bb*gcaa*t31486*2.0;
                double t31525 = t31520*t31523*t31519;
                double t31526 = t31524+t31525+1.0;
                double t31527 = 1.0/t31490;
                double t31528 = 1.0/pow(t31454,4.0/3.0);
                double t31529 = b1f*t31457;
                double t31530 = b3f*t31458;
                double t31531 = b4f*t31416*t31459;
                double t31532 = b2f*c*t31455;
                double t31533 = t31530+t31531+t31532+t31529;
                double t31534 = 1.0/t31533;
                double t31535 = t31534*t31436*(1.0/2.0);
                double t31536 = t31535+1.0;
                double t31537 = log(t31536);
                double t31538 = a1f*c*t31455;
                double t31539 = t31538+1.0;
                double t31541 = c0f*t31537*t31539*2.0;
                double t31540 = -t31541+t31471;
                double t31542 = 1.0/(t31454*t31454);
                double t31543 = t31542*t31472;
                double t31544 = t31543+t31474;
                double t31545 = t31541-t31471;
                double t31546 = 1.0/pow(t31454,5.0/3.0);
                double t31547 = 1.0/sqrt(t31456);
                double t31548 = 1.0/t31467;
                double t31549 = 1.0/(t31464*t31464);
                double t31550 = b4p*t31416*t31546*(2.0/3.0);
                double t31551 = b2p*c*t31528*(1.0/3.0);
                double t31552 = b1p*c*t31528*t31547*(1.0/6.0);
                double t31553 = b3p*c*t31528*t31457*(1.0/2.0);
                double t31554 = t31550+t31551+t31552+t31553;
                double t31555 = 1.0/d2fz0;
                double t31556 = 1.0/Aa;
                double t31557 = b1a*t31457;
                double t31558 = b3a*t31458;
                double t31559 = b4a*t31416*t31459;
                double t31560 = b2a*c*t31455;
                double t31561 = t31560+t31557+t31558+t31559;
                double t31562 = 1.0/t31561;
                double t31563 = t31562*t31556*(1.0/2.0);
                double t31564 = t31563+1.0;
                double t31565 = log(t31564);
                double t31566 = a1a*c*t31455;
                double t31567 = t31566+1.0;
                double t31568 = 1.0/(t31454*t31454*t31454*t31454*t31454);
                double t31569 = pow(t31478,1.0/3.0);
                double t31570 = t31544*t31569*(4.0/3.0);
                double t31571 = pow(t31480,1.0/3.0);
                double t31572 = t31570-t31544*t31571*(4.0/3.0);
                double t31573 = t31476*t31477;
                double t31574 = t31573-1.0;
                double t31575 = 1.0/pow(rho_b,4.0/3.0);
                double t31576 = 1.0/pow(rho_b,5.0/3.0);
                double t31577 = 1.0/sqrt(t31438);
                double t31578 = 1.0/t31449;
                double t31579 = 1.0/(t31446*t31446);
                double t31580 = b4p*t31416*t31576*(2.0/3.0);
                double t31581 = b2p*c*t31575*(1.0/3.0);
                double t31582 = b1p*c*t31575*t31577*(1.0/6.0);
                double t31583 = b3p*c*t31439*t31575*(1.0/2.0);
                double t31584 = t31580+t31581+t31582+t31583;
                double t31585 = t31452*t31584*t31578*t31579;
                double t31588 = Aa*t31435*t31482*t31555*t31565*t31574*t31567*2.0;
                double t31589 = a1p*c*c0p*t31528*t31468*(2.0/3.0);
                double t31590 = 1.0/t31522;
                double t31591 = 1.0/t31526;
                double t31592 = 1.0/(t31522*t31522);
                double t31593 = 1.0/(t31526*t31526);
                double t31594 = gcaa*t31486*2.0;
                double t31595 = gamma_bb*t31520*t31519*2.0;
                double t31596 = t31594+t31595;
                double t31597 = gamma_bb*gcaa*t31483*(1.6E1/3.0);
                double t31598 = t31523*t31519*t31496*(1.6E1/3.0);
                double t31599 = t31597+t31598;
                double t31600 = 1.0/t31513;
                double t31601 = 1.0/(t31510*t31510);
                double t31602 = b4f*t31416*t31576*(2.0/3.0);
                double t31603 = b2f*c*t31575*(1.0/3.0);
                double t31604 = b1f*c*t31575*t31577*(1.0/6.0);
                double t31605 = b3f*c*t31439*t31575*(1.0/2.0);
                double t31606 = t31602+t31603+t31604+t31605;
                double t31607 = a1f*c*c0f*t31514*t31575*(2.0/3.0);
                double t31608 = a1p*c*c0p*t31450*t31575*(2.0/3.0);
                double t31609 = ccaa1*gcaa*t31590*t31486;
                double t31610 = ccaa2*gamma_bb*t31520*t31519*t31591*2.0;
                double t31611 = t31610+t31609-ccaa1*gamma_bb*t31520*t31519*t31592-ccaa2*t31520*t31523*t31519*t31593*t31596;
                v_rho_b_gamma_bb[Q] += scale * (-rho_b*t31518+t31454*(t31471+t31588-t31540*t31435*t31482*t31476*t31477)+rho_a*(t31432*t31435*(c0p*t31427*t31429*2.0-c0f*log((t31436*(1.0/2.0))/(b1f*t31414+b3f*t31415+b2f*c*t31412+b4f*t31416*t31417)+1.0)*(a1f*c*t31412+1.0)*2.0)-c0p*t31427*t31429*2.0))*(ccab1*gcab*t31527*t31483*(4.0/3.0)-ccab2*t31491*t31492*t31499*(gcab*t31483*(8.0/3.0)+gamma_bb*t31491*t31496*(4.0/3.0)+t31491*t31483*t31488*(8.0/3.0))-ccab1*gamma_bb*t31491*t31496*t31497*(4.0/3.0)+ccab2*gamma_bb*t31491*t31496*t31498*(4.0/3.0)-ccab1*t31491*t31483*t31488*t31497*(4.0/3.0)+ccab2*t31491*t31483*t31488*t31498*(8.0/3.0)-ccab2*t31502*t31491*t31486*t31488*t31499+ccab2*t31502*t31505*t31491*t31492*1.0/(t31495*t31495*t31495)*2.0-ccab2*gamma_bb*t31505*t31491*t31483*t31488*t31499*(8.0/3.0)+ccab1*gamma_bb*gcab*1.0/(t31490*t31490*t31490)*t31491*t31496*t31488*(4.0/3.0))-(ccab1*gcab*t31527*t31486*(1.0/2.0)-ccab2*t31505*t31491*t31492*t31499-ccab1*t31491*t31486*t31488*t31497*(1.0/2.0)+ccab2*t31491*t31486*t31488*t31498)*(-t31453+t31471+t31587+t31588+rho_b*(t31608-t31585+t31432*t31435*(t31607+t31585-t31600*t31601*t31516*t31606-a1p*c*c0p*t31450*t31575*(2.0/3.0)))-t31454*(t31589-t31470*t31554*t31548*t31549+t31435*t31545*t31572*t31476*t31477+t31435*t31482*t31545*t31477*t31568*4.0-t31435*t31482*t31476*t31477*(t31589-t31470*t31554*t31548*t31549+(1.0/(t31533*t31533)*t31539*(b2f*c*t31528*(1.0/3.0)+b4f*t31416*t31546*(2.0/3.0)+b1f*c*t31528*t31547*(1.0/6.0)+b3f*c*t31528*t31457*(1.0/2.0)))/t31536-a1f*c*c0f*t31528*t31537*(2.0/3.0))-t31540*t31435*t31472*t31473*t31482*t31476*4.0+Aa*t31435*t31482*t31555*t31565*t31567*(t31477*t31568*4.0+t31472*t31473*t31476*4.0)*2.0+Aa*t31435*t31572*t31555*t31565*t31574*t31567*2.0-(t31435*1.0/(t31561*t31561)*t31482*t31555*t31574*t31567*(b2a*c*t31528*(1.0/3.0)+b4a*t31416*t31546*(2.0/3.0)+b1a*c*t31528*t31547*(1.0/6.0)+b3a*c*t31528*t31457*(1.0/2.0)))/t31564+Aa*a1a*c*t31435*t31482*t31528*t31555*t31565*t31574*(2.0/3.0))+t31435*t31482*t31545*t31476*t31477)-t31611*t31518+rho_b*t31518*(ccaa1*gcaa*t31590*t31483*(8.0/3.0)-ccaa1*gamma_bb*t31519*t31592*t31496*8.0+ccaa2*gamma_bb*t31519*t31591*t31496*(3.2E1/3.0)-ccaa2*t31523*t31519*t31593*t31496*t31596*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*1.0/(t31522*t31522*t31522)*t31523*t31519*(1.6E1/3.0)-ccaa2*t31520*t31523*t31519*t31593*(gcaa*t31483*(1.6E1/3.0)+gamma_bb*t31519*t31496*(3.2E1/3.0))-ccaa2*gamma_bb*t31520*t31519*t31593*t31599*2.0+ccaa2*t31520*t31523*1.0/(t31526*t31526*t31526)*t31519*t31596*t31599*2.0)+rho_b*t31611*(t31608-t31585+t31432*t31435*(t31607-t31608+t31585-t31600*t31601*t31516*t31606));
            }
            
        }
    }
}

}
