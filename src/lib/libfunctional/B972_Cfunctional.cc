#include <libmints/vector.h>
#include "B972_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

B972_CFunctional::B972_CFunctional()
{
    name_ = "B972_C";
    description_ = "    2nd-Order B97 Correlation Expansion\n";
    citation_ = "    F.A. Hamprecht et. al., J. Chem. Phys., 109(15), 6264-6271, 1998\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["d2fz0"] =   1.7099210000000000E+00;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["Aa"] =   1.6886999999999999E-02;
    parameters_["a1a"] =   1.1125000000000000E-01;
    parameters_["b1a"] =   1.0356999999999999E+01;
    parameters_["b2a"] =   3.6231000000000000E+00;
    parameters_["b3a"] =   8.8026000000000004E-01;
    parameters_["b4a"] =   4.9670999999999998E-01;
    parameters_["c0p"] =   3.1091000000000001E-02;
    parameters_["a1p"] =   2.1370000000000000E-01;
    parameters_["b1p"] =   7.5956999999999999E+00;
    parameters_["b2p"] =   3.5876000000000001E+00;
    parameters_["b3p"] =   1.6382000000000001E+00;
    parameters_["b4p"] =   4.9293999999999999E-01;
    parameters_["c0f"] =   1.5545000000000000E-02;
    parameters_["a1f"] =   2.0548000000000000E-01;
    parameters_["b1f"] =   1.4118900000000000E+01;
    parameters_["b2f"] =   6.1977000000000002E+00;
    parameters_["b3f"] =   3.3662000000000001E+00;
    parameters_["b4f"] =   6.2517000000000000E-01;
    parameters_["gcab"] =   6.0000000000000001E-03;
    parameters_["gcaa"] =   2.0000000000000001E-01;
    parameters_["ccab0"] =   9.5568900000000001E-01;
    parameters_["ccab1"] =   7.8855200000000003E-01;
    parameters_["ccab2"] =  -5.4786900000000003E+00;
    parameters_["ccaa0"] =   8.2001099999999993E-02;
    parameters_["ccaa1"] =   2.7168100000000002E+00;
    parameters_["ccaa2"] =  -2.8710300000000002E+00;
}
B972_CFunctional::~B972_CFunctional()
{
}
void B972_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double two_13 = parameters_["two_13"];
    double d2fz0 = parameters_["d2fz0"];
    double c = parameters_["c"];
    double Aa = parameters_["Aa"];
    double a1a = parameters_["a1a"];
    double b1a = parameters_["b1a"];
    double b2a = parameters_["b2a"];
    double b3a = parameters_["b3a"];
    double b4a = parameters_["b4a"];
    double c0p = parameters_["c0p"];
    double a1p = parameters_["a1p"];
    double b1p = parameters_["b1p"];
    double b2p = parameters_["b2p"];
    double b3p = parameters_["b3p"];
    double b4p = parameters_["b4p"];
    double c0f = parameters_["c0f"];
    double a1f = parameters_["a1f"];
    double b1f = parameters_["b1f"];
    double b2f = parameters_["b2f"];
    double b3f = parameters_["b3f"];
    double b4f = parameters_["b4f"];
    double gcab = parameters_["gcab"];
    double gcaa = parameters_["gcaa"];
    double ccab0 = parameters_["ccab0"];
    double ccab1 = parameters_["ccab1"];
    double ccab2 = parameters_["ccab2"];
    double ccaa0 = parameters_["ccaa0"];
    double ccaa1 = parameters_["ccaa1"];
    double ccaa2 = parameters_["ccaa2"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t58104 = 1.0/pow(rho_b,1.0/3.0);
                double t58105 = c*t58104;
                double t58106 = sqrt(t58105);
                double t58107 = pow(t58105,3.0/2.0);
                double t58108 = c*c;
                double t58109 = 1.0/pow(rho_b,2.0/3.0);
                double t58110 = 1.0/c0p;
                double t58111 = b1p*t58106;
                double t58112 = b3p*t58107;
                double t58113 = b4p*t58108*t58109;
                double t58114 = b2p*c*t58104;
                double t58115 = t58111+t58112+t58113+t58114;
                double t58116 = 1.0/t58115;
                double t58117 = t58110*t58116*(1.0/2.0);
                double t58118 = t58117+1.0;
                double t58119 = log(t58118);
                double t58120 = a1p*c*t58104;
                double t58121 = t58120+1.0;
                double t58122 = 1.0/pow(rho_b,8.0/3.0);
                double t58123 = gamma_bb*gamma_bb;
                double t58124 = gcaa*gcaa;
                double t58125 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58106+b3f*t58107+b2f*c*t58104+b4f*t58108*t58109))+1.0)*(a1f*c*t58104+1.0)*2.0-c0p*t58121*t58119*2.0))/(two_13*2.0-2.0)+c0p*t58121*t58119*2.0)*(ccaa0+(ccaa2*t58123*t58124*t58125)/(gamma_bb*gcaa*t58122*2.0+t58123*t58124*t58125+1.0)+(ccaa1*gamma_bb*gcaa*t58122)/(gamma_bb*gcaa*t58122+1.0));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t58128 = 1.0/pow(rho_b,1.0/3.0);
                double t58129 = c*t58128;
                double t58130 = sqrt(t58129);
                double t58131 = pow(t58129,3.0/2.0);
                double t58132 = c*c;
                double t58133 = 1.0/pow(rho_b,2.0/3.0);
                double t58134 = 1.0/c0p;
                double t58135 = b1p*t58130;
                double t58136 = b3p*t58131;
                double t58137 = b4p*t58132*t58133;
                double t58138 = b2p*c*t58128;
                double t58139 = t58135+t58136+t58137+t58138;
                double t58140 = 1.0/t58139;
                double t58141 = t58140*t58134*(1.0/2.0);
                double t58142 = t58141+1.0;
                double t58143 = log(t58142);
                double t58144 = a1p*c*t58128;
                double t58145 = t58144+1.0;
                double t58146 = 1.0/pow(rho_b,8.0/3.0);
                double t58147 = gamma_bb*gamma_bb;
                double t58148 = gcaa*gcaa;
                double t58149 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58150 = pow(2.0,1.0/3.0);
                double t58151 = t58150*2.0;
                double t58152 = t58151-2.0;
                double t58153 = two_13*2.0;
                double t58154 = t58153-2.0;
                double t58155 = 1.0/t58154;
                double t58156 = a1f*c*t58128;
                double t58157 = t58156+1.0;
                double t58158 = 1.0/c0f;
                double t58159 = b1f*t58130;
                double t58160 = b3f*t58131;
                double t58161 = b4f*t58132*t58133;
                double t58162 = b2f*c*t58128;
                double t58163 = t58160+t58161+t58162+t58159;
                double t58164 = 1.0/t58163;
                double t58165 = t58164*t58158*(1.0/2.0);
                double t58166 = t58165+1.0;
                double t58167 = 1.0/pow(rho_b,4.0/3.0);
                double t58168 = 1.0/pow(rho_b,5.0/3.0);
                double t58169 = 1.0/sqrt(t58129);
                double t58170 = log(t58166);
                double t58171 = 1.0/t58142;
                double t58172 = 1.0/(t58139*t58139);
                double t58173 = b4p*t58132*t58168*(2.0/3.0);
                double t58174 = b2p*c*t58167*(1.0/3.0);
                double t58175 = b1p*c*t58167*t58169*(1.0/6.0);
                double t58176 = b3p*c*t58130*t58167*(1.0/2.0);
                double t58177 = t58173+t58174+t58175+t58176;
                double t58178 = t58171*t58145*t58172*t58177;
                double t58179 = gamma_bb*gcaa*t58146;
                double t58180 = t58179+1.0;
                double t58181 = 1.0/t58180;
                double t58182 = ccaa1*gamma_bb*gcaa*t58181*t58146;
                double t58183 = gamma_bb*gcaa*t58146*2.0;
                double t58184 = t58147*t58148*t58149;
                double t58185 = t58183+t58184+1.0;
                double t58186 = 1.0/t58185;
                double t58187 = ccaa2*t58147*t58148*t58149*t58186;
                double t58188 = ccaa0+t58182+t58187;
                double t58189 = c0f*t58170*t58157*2.0;
                double t58190 = c0p*t58143*t58145*2.0;
                double t58191 = 1.0/pow(rho_b,1.9E1/3.0);
                double t58192 = 1.0/pow(rho_b,1.1E1/3.0);
                v_rho_b[Q] += scale * -t58188*(t58190+t58152*t58155*(t58189-c0p*t58143*t58145*2.0))+rho_b*t58188*(-t58178+t58152*t58155*(t58178-(1.0/(t58163*t58163)*t58157*(b2f*c*t58167*(1.0/3.0)+b4f*t58132*t58168*(2.0/3.0)+b1f*c*t58167*t58169*(1.0/6.0)+b3f*c*t58130*t58167*(1.0/2.0)))/t58166+a1f*c*c0f*t58170*t58167*(2.0/3.0)-a1p*c*c0p*t58143*t58167*(2.0/3.0))+a1p*c*c0p*t58143*t58167*(2.0/3.0))+rho_b*(t58190-t58152*t58155*(t58190-t58189))*(ccaa1*gamma_bb*gcaa*t58181*t58192*(8.0/3.0)+ccaa2*t58191*t58147*t58148*t58186*(1.6E1/3.0)-ccaa1*1.0/(t58180*t58180)*t58191*t58147*t58148*(8.0/3.0)-ccaa2*t58147*t58148*t58149*1.0/(t58185*t58185)*(gamma_bb*gcaa*t58192*(1.6E1/3.0)+t58191*t58147*t58148*(1.6E1/3.0)));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t58196 = 1.0/pow(rho_b,1.0/3.0);
                double t58197 = c*t58196;
                double t58198 = sqrt(t58197);
                double t58199 = pow(t58197,3.0/2.0);
                double t58200 = c*c;
                double t58201 = 1.0/pow(rho_b,2.0/3.0);
                double t58202 = 1.0/c0p;
                double t58203 = b1p*t58198;
                double t58204 = b3p*t58199;
                double t58205 = b4p*t58200*t58201;
                double t58206 = b2p*c*t58196;
                double t58207 = t58203+t58204+t58205+t58206;
                double t58208 = 1.0/t58207;
                double t58209 = t58202*t58208*(1.0/2.0);
                double t58210 = t58209+1.0;
                double t58211 = log(t58210);
                double t58212 = a1p*c*t58196;
                double t58213 = t58212+1.0;
                double t58214 = 1.0/pow(rho_b,8.0/3.0);
                double t58215 = gcaa*gcaa;
                double t58216 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58217 = gamma_bb*gcaa*t58214;
                double t58218 = t58217+1.0;
                double t58219 = gamma_bb*gamma_bb;
                double t58220 = gamma_bb*gcaa*t58214*2.0;
                double t58221 = t58215*t58216*t58219;
                double t58222 = t58220+t58221+1.0;
                v_gamma_bb[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58198+b3f*t58199+b2f*c*t58196+b4f*t58200*t58201))+1.0)*(a1f*c*t58196+1.0)*2.0-c0p*t58211*t58213*2.0))/(two_13*2.0-2.0)+c0p*t58211*t58213*2.0)*((ccaa1*gcaa*t58214)/t58218+(ccaa2*gamma_bb*t58215*t58216*2.0)/t58222-ccaa1*gamma_bb*t58215*t58216*1.0/(t58218*t58218)-ccaa2*1.0/(t58222*t58222)*t58215*t58216*t58219*(gcaa*t58214*2.0+gamma_bb*t58215*t58216*2.0));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t58228 = 1.0/pow(rho_b,1.0/3.0);
                double t58229 = c*t58228;
                double t58230 = sqrt(t58229);
                double t58231 = pow(t58229,3.0/2.0);
                double t58232 = c*c;
                double t58233 = 1.0/pow(rho_b,2.0/3.0);
                double t58234 = 1.0/c0p;
                double t58235 = b1p*t58230;
                double t58236 = b3p*t58231;
                double t58237 = b4p*t58232*t58233;
                double t58238 = b2p*c*t58228;
                double t58239 = t58235+t58236+t58237+t58238;
                double t58240 = 1.0/t58239;
                double t58241 = t58240*t58234*(1.0/2.0);
                double t58242 = t58241+1.0;
                double t58243 = log(t58242);
                double t58244 = a1p*c*t58228;
                double t58245 = t58244+1.0;
                double t58246 = 1.0/pow(rho_b,8.0/3.0);
                double t58247 = gamma_bb*gamma_bb;
                double t58248 = gcaa*gcaa;
                double t58249 = 1.0/pow(rho_b,1.9E1/3.0);
                double t58250 = gamma_bb*gcaa*t58246;
                double t58251 = t58250+1.0;
                double t58252 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58253 = 1.0/pow(rho_b,1.1E1/3.0);
                double t58254 = gamma_bb*gcaa*t58246*2.0;
                double t58255 = t58252*t58247*t58248;
                double t58256 = t58254+t58255+1.0;
                double t58257 = pow(2.0,1.0/3.0);
                double t58258 = t58257*2.0;
                double t58259 = t58258-2.0;
                double t58260 = two_13*2.0;
                double t58261 = t58260-2.0;
                double t58262 = 1.0/t58261;
                double t58263 = a1f*c*t58228;
                double t58264 = t58263+1.0;
                double t58265 = 1.0/c0f;
                double t58266 = b1f*t58230;
                double t58267 = b3f*t58231;
                double t58268 = b4f*t58232*t58233;
                double t58269 = b2f*c*t58228;
                double t58270 = t58266+t58267+t58268+t58269;
                double t58271 = 1.0/t58270;
                double t58272 = t58271*t58265*(1.0/2.0);
                double t58273 = t58272+1.0;
                double t58274 = 1.0/pow(rho_b,4.0/3.0);
                double t58275 = 1.0/pow(rho_b,5.0/3.0);
                double t58276 = 1.0/sqrt(t58229);
                double t58277 = log(t58273);
                double t58278 = 1.0/t58242;
                double t58279 = 1.0/(t58239*t58239);
                double t58280 = b4p*t58232*t58275*(2.0/3.0);
                double t58281 = b2p*c*t58274*(1.0/3.0);
                double t58282 = b1p*c*t58274*t58276*(1.0/6.0);
                double t58283 = b3p*c*t58230*t58274*(1.0/2.0);
                double t58284 = t58280+t58281+t58282+t58283;
                double t58285 = t58245*t58284*t58278*t58279;
                double t58286 = 1.0/t58251;
                double t58287 = 1.0/t58256;
                double t58288 = ccaa1*gamma_bb*gcaa*t58246*t58286;
                double t58289 = ccaa2*t58252*t58247*t58248*t58287;
                double t58290 = ccaa0+t58288+t58289;
                double t58291 = 1.0/t58273;
                double t58292 = b4f*t58232*t58275*(2.0/3.0);
                double t58293 = b2f*c*t58274*(1.0/3.0);
                double t58294 = b1f*c*t58274*t58276*(1.0/6.0);
                double t58295 = b3f*c*t58230*t58274*(1.0/2.0);
                double t58296 = t58292+t58293+t58294+t58295;
                double t58297 = 1.0/(t58270*t58270);
                double t58298 = 1.0/pow(rho_b,7.0/3.0);
                double t58299 = 1.0/pow(t58229,3.0/2.0);
                double t58300 = t58296*t58296;
                double t58301 = t58284*t58284;
                double t58302 = 1.0/(t58239*t58239*t58239);
                double t58303 = t58301*t58302*t58245*t58278*2.0;
                double t58304 = b4p*t58232*t58246*(1.0E1/9.0);
                double t58305 = b2p*c*t58298*(4.0/9.0);
                double t58306 = b3p*t58232*t58246*t58276*(1.0/1.2E1);
                double t58307 = b1p*c*t58276*t58298*(2.0/9.0);
                double t58308 = b3p*c*t58230*t58298*(2.0/3.0);
                double t58309 = t58304+t58305+t58306+t58307+t58308-b1p*t58232*t58246*t58299*(1.0/3.6E1);
                double t58310 = 1.0/(t58242*t58242);
                double t58311 = 1.0/(t58239*t58239*t58239*t58239);
                double t58312 = a1p*c*c0p*t58243*t58298*(8.0/9.0);
                double t58313 = c0f*t58264*t58277*2.0;
                double t58314 = c0p*t58243*t58245*2.0;
                double t58315 = 1.0/pow(rho_b,2.2E1/3.0);
                double t58316 = 1.0/(t58251*t58251);
                double t58317 = gamma_bb*gcaa*t58253*(1.6E1/3.0);
                double t58318 = t58247*t58248*t58249*(1.6E1/3.0);
                double t58319 = t58317+t58318;
                double t58320 = 1.0/(t58256*t58256);
                double t58321 = 1.0/pow(rho_b,1.4E1/3.0);
                double t58322 = a1f*c*c0f*t58274*t58277*(2.0/3.0);
                double t58323 = a1p*c*c0p*t58243*t58274*(2.0/3.0);
                double t58324 = ccaa1*gamma_bb*gcaa*t58253*t58286*(8.0/3.0);
                double t58325 = ccaa2*t58247*t58248*t58249*t58287*(1.6E1/3.0);
                double t58326 = t58324+t58325-ccaa1*t58316*t58247*t58248*t58249*(8.0/3.0)-ccaa2*t58320*t58252*t58247*t58319*t58248;
                v_rho_b_rho_b[Q] += scale * t58326*(t58314+t58262*t58259*(t58313-c0p*t58243*t58245*2.0))*2.0+t58290*(t58323-t58285+t58262*t58259*(t58322+t58285-t58264*t58291*t58296*t58297-a1p*c*c0p*t58243*t58274*(2.0/3.0)))*2.0+rho_b*t58290*(-t58303-t58312+t58262*t58259*(t58303+t58312-t58245*t58309*t58278*t58279-t58300*1.0/(t58270*t58270*t58270)*t58264*t58291*2.0+t58264*t58291*t58297*(b2f*c*t58298*(4.0/9.0)+b4f*t58232*t58246*(1.0E1/9.0)+b1f*c*t58276*t58298*(2.0/9.0)+b3f*c*t58230*t58298*(2.0/3.0)-b1f*t58232*t58246*t58299*(1.0/3.6E1)+b3f*t58232*t58246*t58276*(1.0/1.2E1))+t58300*1.0/(t58270*t58270*t58270*t58270)*t58264*1.0/(t58273*t58273)*t58265*(1.0/2.0)-a1f*c*c0f*t58277*t58298*(8.0/9.0)-t58301*t58310*t58311*t58234*t58245*(1.0/2.0)+a1f*c*t58291*t58274*t58296*t58297*(2.0/3.0)-a1p*c*t58274*t58284*t58278*t58279*(2.0/3.0))+t58245*t58309*t58278*t58279+t58301*t58310*t58311*t58234*t58245*(1.0/2.0)+a1p*c*t58274*t58284*t58278*t58279*(2.0/3.0))-rho_b*t58326*(t58323-t58285+t58262*t58259*(t58322-t58323+t58285-t58264*t58291*t58296*t58297))*2.0-rho_b*(t58314+t58262*t58259*(t58313-t58314))*(ccaa1*gamma_bb*gcaa*t58321*t58286*(8.8E1/9.0)-ccaa1*t58315*t58316*t58247*t58248*2.4E1+ccaa2*t58315*t58247*t58248*t58287*(3.04E2/9.0)-ccaa2*t58320*t58247*t58319*t58248*t58249*(3.2E1/3.0)-ccaa2*t58320*t58252*t58247*t58248*(gamma_bb*gcaa*t58321*(1.76E2/9.0)+t58315*t58247*t58248*(3.04E2/9.0))+ccaa2*t58252*t58247*1.0/(t58256*t58256*t58256)*(t58319*t58319)*t58248*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*1.0/(t58251*t58251*t58251)*t58247*t58248*(1.28E2/9.0));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t58412 = 1.0/pow(rho_b,1.0/3.0);
                double t58413 = c*t58412;
                double t58414 = sqrt(t58413);
                double t58415 = pow(t58413,3.0/2.0);
                double t58416 = c*c;
                double t58417 = 1.0/pow(rho_b,2.0/3.0);
                double t58418 = 1.0/c0p;
                double t58419 = b1p*t58414;
                double t58420 = b3p*t58415;
                double t58421 = b4p*t58416*t58417;
                double t58422 = b2p*c*t58412;
                double t58423 = t58420+t58421+t58422+t58419;
                double t58424 = 1.0/t58423;
                double t58425 = t58424*t58418*(1.0/2.0);
                double t58426 = t58425+1.0;
                double t58427 = log(t58426);
                double t58428 = a1p*c*t58412;
                double t58429 = t58428+1.0;
                double t58430 = gcaa*gcaa;
                double t58431 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58432 = 1.0/pow(rho_b,8.0/3.0);
                double t58433 = gamma_bb*gcaa*t58432;
                double t58434 = t58433+1.0;
                double t58435 = gamma_bb*gamma_bb;
                double t58436 = gamma_bb*gcaa*t58432*2.0;
                double t58437 = t58430*t58431*t58435;
                double t58438 = t58436+t58437+1.0;
                double t58440 = gcaa*t58432*2.0;
                double t58441 = gamma_bb*t58430*t58431*2.0;
                double t58439 = t58440+t58441;
                double t58442 = 1.0/(t58438*t58438);
                v_gamma_bb_gamma_bb[Q] += scale * rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58414+b3f*t58415+b2f*c*t58412+b4f*t58416*t58417))+1.0)*(a1f*c*t58412+1.0)*2.0-c0p*t58427*t58429*2.0))/(two_13*2.0-2.0)+c0p*t58427*t58429*2.0)*(ccaa1*t58430*t58431*1.0/(t58434*t58434)*2.0-(ccaa2*t58430*t58431*2.0)/t58438+ccaa2*1.0/pow(rho_b,3.2E1/3.0)*(t58430*t58430)*t58442*t58435*2.0-ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t58430*1.0/(t58434*t58434*t58434)*2.0-ccaa2*t58430*t58431*t58435*1.0/(t58438*t58438*t58438)*(t58439*t58439)*2.0+ccaa2*gamma_bb*t58430*t58431*t58442*t58439*4.0);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t58333 = 1.0/pow(rho_b,1.0/3.0);
                double t58334 = c*t58333;
                double t58335 = sqrt(t58334);
                double t58336 = pow(t58334,3.0/2.0);
                double t58337 = c*c;
                double t58338 = 1.0/pow(rho_b,2.0/3.0);
                double t58339 = 1.0/c0p;
                double t58340 = b1p*t58335;
                double t58341 = b3p*t58336;
                double t58342 = b4p*t58337*t58338;
                double t58343 = b2p*c*t58333;
                double t58344 = t58340+t58341+t58342+t58343;
                double t58345 = 1.0/t58344;
                double t58346 = t58345*t58339*(1.0/2.0);
                double t58347 = t58346+1.0;
                double t58348 = log(t58347);
                double t58349 = a1p*c*t58333;
                double t58350 = t58349+1.0;
                double t58351 = 1.0/pow(rho_b,8.0/3.0);
                double t58352 = gcaa*gcaa;
                double t58353 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58354 = gamma_bb*gcaa*t58351;
                double t58355 = t58354+1.0;
                double t58356 = gamma_bb*gamma_bb;
                double t58357 = gamma_bb*gcaa*t58351*2.0;
                double t58358 = t58352*t58353*t58356;
                double t58359 = t58357+t58358+1.0;
                double t58360 = pow(2.0,1.0/3.0);
                double t58361 = t58360*2.0;
                double t58362 = t58361-2.0;
                double t58363 = two_13*2.0;
                double t58364 = t58363-2.0;
                double t58365 = 1.0/t58364;
                double t58366 = 1.0/c0f;
                double t58367 = b1f*t58335;
                double t58368 = b3f*t58336;
                double t58369 = b4f*t58337*t58338;
                double t58370 = b2f*c*t58333;
                double t58371 = t58370+t58367+t58368+t58369;
                double t58372 = 1.0/t58371;
                double t58373 = t58372*t58366*(1.0/2.0);
                double t58374 = t58373+1.0;
                double t58375 = log(t58374);
                double t58376 = a1f*c*t58333;
                double t58377 = t58376+1.0;
                double t58378 = c0f*t58375*t58377*2.0;
                double t58379 = c0p*t58350*t58348*2.0;
                double t58380 = 1.0/t58355;
                double t58381 = 1.0/t58359;
                double t58382 = 1.0/pow(rho_b,1.9E1/3.0);
                double t58383 = 1.0/(t58355*t58355);
                double t58384 = 1.0/pow(rho_b,1.1E1/3.0);
                double t58385 = 1.0/(t58359*t58359);
                double t58386 = gcaa*t58351*2.0;
                double t58387 = gamma_bb*t58352*t58353*2.0;
                double t58388 = t58386+t58387;
                double t58389 = gamma_bb*gcaa*t58384*(1.6E1/3.0);
                double t58390 = t58352*t58382*t58356*(1.6E1/3.0);
                double t58391 = t58390+t58389;
                double t58392 = 1.0/pow(rho_b,4.0/3.0);
                double t58393 = 1.0/pow(rho_b,5.0/3.0);
                double t58394 = 1.0/sqrt(t58334);
                double t58395 = 1.0/t58347;
                double t58396 = 1.0/(t58344*t58344);
                double t58397 = b4p*t58337*t58393*(2.0/3.0);
                double t58398 = b2p*c*t58392*(1.0/3.0);
                double t58399 = b1p*c*t58392*t58394*(1.0/6.0);
                double t58400 = b3p*c*t58335*t58392*(1.0/2.0);
                double t58401 = t58400+t58397+t58398+t58399;
                double t58402 = t58401*t58350*t58395*t58396;
                double t58403 = ccaa1*gcaa*t58351*t58380;
                double t58404 = ccaa2*gamma_bb*t58352*t58353*t58381*2.0;
                double t58405 = t58403+t58404-ccaa1*gamma_bb*t58352*t58353*t58383-ccaa2*t58352*t58353*t58356*t58385*t58388;
                v_rho_b_gamma_bb[Q] += scale * -t58405*(t58379+t58362*t58365*(t58378-c0p*t58350*t58348*2.0))+rho_b*t58405*(-t58402+t58362*t58365*(t58402-(1.0/(t58371*t58371)*t58377*(b2f*c*t58392*(1.0/3.0)+b4f*t58337*t58393*(2.0/3.0)+b1f*c*t58392*t58394*(1.0/6.0)+b3f*c*t58335*t58392*(1.0/2.0)))/t58374+a1f*c*c0f*t58392*t58375*(2.0/3.0)-a1p*c*c0p*t58392*t58348*(2.0/3.0))+a1p*c*c0p*t58392*t58348*(2.0/3.0))+rho_b*(t58379+t58362*t58365*(t58378-t58379))*(ccaa1*gcaa*t58380*t58384*(8.0/3.0)+ccaa2*gamma_bb*t58352*t58381*t58382*(3.2E1/3.0)-ccaa1*gamma_bb*t58352*t58382*t58383*8.0-ccaa2*t58352*t58382*t58356*t58385*t58388*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t58352*1.0/(t58355*t58355*t58355)*t58356*(1.6E1/3.0)-ccaa2*t58352*t58353*t58356*t58385*(gcaa*t58384*(1.6E1/3.0)+gamma_bb*t58352*t58382*(3.2E1/3.0))-ccaa2*gamma_bb*t58352*t58353*t58391*t58385*2.0+ccaa2*t58352*t58353*t58391*t58356*1.0/(t58359*t58359*t58359)*t58388*2.0);
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t58457 = 1.0/pow(rho_a,1.0/3.0);
                double t58458 = c*t58457;
                double t58459 = sqrt(t58458);
                double t58460 = pow(t58458,3.0/2.0);
                double t58461 = c*c;
                double t58462 = 1.0/pow(rho_a,2.0/3.0);
                double t58463 = 1.0/c0p;
                double t58464 = b1p*t58459;
                double t58465 = b3p*t58460;
                double t58466 = b4p*t58461*t58462;
                double t58467 = b2p*c*t58457;
                double t58468 = t58464+t58465+t58466+t58467;
                double t58469 = 1.0/t58468;
                double t58470 = t58463*t58469*(1.0/2.0);
                double t58471 = t58470+1.0;
                double t58472 = log(t58471);
                double t58473 = a1p*c*t58457;
                double t58474 = t58473+1.0;
                double t58475 = 1.0/pow(rho_a,8.0/3.0);
                double t58476 = gamma_aa*gamma_aa;
                double t58477 = gcaa*gcaa;
                double t58478 = 1.0/pow(rho_a,1.6E1/3.0);
                v[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58459+b3f*t58460+b2f*c*t58457+b4f*t58461*t58462))+1.0)*(a1f*c*t58457+1.0)*2.0-c0p*t58472*t58474*2.0))/(two_13*2.0-2.0)+c0p*t58472*t58474*2.0)*(ccaa0+(ccaa2*t58476*t58477*t58478)/(gamma_aa*gcaa*t58475*2.0+t58476*t58477*t58478+1.0)+(ccaa1*gamma_aa*gcaa*t58475)/(gamma_aa*gcaa*t58475+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t58480 = 1.0/pow(rho_a,1.0/3.0);
                double t58481 = c*t58480;
                double t58482 = sqrt(t58481);
                double t58483 = pow(t58481,3.0/2.0);
                double t58484 = c*c;
                double t58485 = 1.0/pow(rho_a,2.0/3.0);
                double t58486 = 1.0/c0p;
                double t58487 = b1p*t58482;
                double t58488 = b3p*t58483;
                double t58489 = b4p*t58484*t58485;
                double t58490 = b2p*c*t58480;
                double t58491 = t58490+t58487+t58488+t58489;
                double t58492 = 1.0/t58491;
                double t58493 = t58492*t58486*(1.0/2.0);
                double t58494 = t58493+1.0;
                double t58495 = log(t58494);
                double t58496 = a1p*c*t58480;
                double t58497 = t58496+1.0;
                double t58498 = 1.0/pow(rho_a,8.0/3.0);
                double t58499 = gamma_aa*gamma_aa;
                double t58500 = gcaa*gcaa;
                double t58501 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58502 = pow(2.0,1.0/3.0);
                double t58503 = t58502*2.0;
                double t58504 = t58503-2.0;
                double t58505 = two_13*2.0;
                double t58506 = t58505-2.0;
                double t58507 = 1.0/t58506;
                double t58508 = a1f*c*t58480;
                double t58509 = t58508+1.0;
                double t58510 = 1.0/c0f;
                double t58511 = b1f*t58482;
                double t58512 = b3f*t58483;
                double t58513 = b4f*t58484*t58485;
                double t58514 = b2f*c*t58480;
                double t58515 = t58511+t58512+t58513+t58514;
                double t58516 = 1.0/t58515;
                double t58517 = t58510*t58516*(1.0/2.0);
                double t58518 = t58517+1.0;
                double t58519 = 1.0/pow(rho_a,4.0/3.0);
                double t58520 = 1.0/pow(rho_a,5.0/3.0);
                double t58521 = 1.0/sqrt(t58481);
                double t58522 = log(t58518);
                double t58523 = 1.0/t58494;
                double t58524 = 1.0/(t58491*t58491);
                double t58525 = b4p*t58520*t58484*(2.0/3.0);
                double t58526 = b2p*c*t58519*(1.0/3.0);
                double t58527 = b1p*c*t58521*t58519*(1.0/6.0);
                double t58528 = b3p*c*t58482*t58519*(1.0/2.0);
                double t58529 = t58525+t58526+t58527+t58528;
                double t58530 = t58523*t58524*t58529*t58497;
                double t58531 = gamma_aa*gcaa*t58498;
                double t58532 = t58531+1.0;
                double t58533 = 1.0/t58532;
                double t58534 = ccaa1*gamma_aa*gcaa*t58533*t58498;
                double t58535 = gamma_aa*gcaa*t58498*2.0;
                double t58536 = t58500*t58501*t58499;
                double t58537 = t58535+t58536+1.0;
                double t58538 = 1.0/t58537;
                double t58539 = ccaa2*t58500*t58501*t58538*t58499;
                double t58540 = ccaa0+t58534+t58539;
                double t58541 = c0f*t58522*t58509*2.0;
                double t58542 = c0p*t58495*t58497*2.0;
                double t58543 = 1.0/pow(rho_a,1.9E1/3.0);
                double t58544 = 1.0/pow(rho_a,1.1E1/3.0);
                v_rho_a[Q] += scale * -t58540*(t58542+t58504*t58507*(t58541-c0p*t58495*t58497*2.0))+rho_a*t58540*(-t58530+t58504*t58507*(t58530-(1.0/(t58515*t58515)*t58509*(b2f*c*t58519*(1.0/3.0)+b4f*t58520*t58484*(2.0/3.0)+b1f*c*t58521*t58519*(1.0/6.0)+b3f*c*t58482*t58519*(1.0/2.0)))/t58518+a1f*c*c0f*t58522*t58519*(2.0/3.0)-a1p*c*c0p*t58519*t58495*(2.0/3.0))+a1p*c*c0p*t58519*t58495*(2.0/3.0))+rho_a*(t58542+t58504*t58507*(t58541-t58542))*(ccaa1*gamma_aa*gcaa*t58533*t58544*(8.0/3.0)+ccaa2*t58500*t58543*t58538*t58499*(1.6E1/3.0)-ccaa1*t58500*1.0/(t58532*t58532)*t58543*t58499*(8.0/3.0)-ccaa2*t58500*t58501*1.0/(t58537*t58537)*t58499*(gamma_aa*gcaa*t58544*(1.6E1/3.0)+t58500*t58543*t58499*(1.6E1/3.0)));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t58547 = 1.0/pow(rho_a,1.0/3.0);
                double t58548 = c*t58547;
                double t58549 = sqrt(t58548);
                double t58550 = pow(t58548,3.0/2.0);
                double t58551 = c*c;
                double t58552 = 1.0/pow(rho_a,2.0/3.0);
                double t58553 = 1.0/c0p;
                double t58554 = b1p*t58549;
                double t58555 = b3p*t58550;
                double t58556 = b4p*t58551*t58552;
                double t58557 = b2p*c*t58547;
                double t58558 = t58554+t58555+t58556+t58557;
                double t58559 = 1.0/t58558;
                double t58560 = t58553*t58559*(1.0/2.0);
                double t58561 = t58560+1.0;
                double t58562 = log(t58561);
                double t58563 = a1p*c*t58547;
                double t58564 = t58563+1.0;
                double t58565 = 1.0/pow(rho_a,8.0/3.0);
                double t58566 = gcaa*gcaa;
                double t58567 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58568 = gamma_aa*gcaa*t58565;
                double t58569 = t58568+1.0;
                double t58570 = gamma_aa*gamma_aa;
                double t58571 = gamma_aa*gcaa*t58565*2.0;
                double t58572 = t58570*t58566*t58567;
                double t58573 = t58571+t58572+1.0;
                v_gamma_aa[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58549+b3f*t58550+b2f*c*t58547+b4f*t58551*t58552))+1.0)*(a1f*c*t58547+1.0)*2.0-c0p*t58562*t58564*2.0))/(two_13*2.0-2.0)+c0p*t58562*t58564*2.0)*((ccaa1*gcaa*t58565)/t58569+(ccaa2*gamma_aa*t58566*t58567*2.0)/t58573-ccaa1*gamma_aa*t58566*t58567*1.0/(t58569*t58569)-ccaa2*t58570*1.0/(t58573*t58573)*t58566*t58567*(gcaa*t58565*2.0+gamma_aa*t58566*t58567*2.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t58579 = 1.0/pow(rho_a,1.0/3.0);
                double t58580 = c*t58579;
                double t58581 = sqrt(t58580);
                double t58582 = pow(t58580,3.0/2.0);
                double t58583 = c*c;
                double t58584 = 1.0/pow(rho_a,2.0/3.0);
                double t58585 = 1.0/c0p;
                double t58586 = b1p*t58581;
                double t58587 = b3p*t58582;
                double t58588 = b4p*t58583*t58584;
                double t58589 = b2p*c*t58579;
                double t58590 = t58586+t58587+t58588+t58589;
                double t58591 = 1.0/t58590;
                double t58592 = t58591*t58585*(1.0/2.0);
                double t58593 = t58592+1.0;
                double t58594 = log(t58593);
                double t58595 = a1p*c*t58579;
                double t58596 = t58595+1.0;
                double t58597 = 1.0/pow(rho_a,8.0/3.0);
                double t58598 = gamma_aa*gamma_aa;
                double t58599 = gcaa*gcaa;
                double t58600 = 1.0/pow(rho_a,1.9E1/3.0);
                double t58601 = gamma_aa*gcaa*t58597;
                double t58602 = t58601+1.0;
                double t58603 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58604 = 1.0/pow(rho_a,1.1E1/3.0);
                double t58605 = gamma_aa*gcaa*t58597*2.0;
                double t58606 = t58603*t58598*t58599;
                double t58607 = t58605+t58606+1.0;
                double t58608 = pow(2.0,1.0/3.0);
                double t58609 = t58608*2.0;
                double t58610 = t58609-2.0;
                double t58611 = two_13*2.0;
                double t58612 = t58611-2.0;
                double t58613 = 1.0/t58612;
                double t58614 = a1f*c*t58579;
                double t58615 = t58614+1.0;
                double t58616 = 1.0/c0f;
                double t58617 = b1f*t58581;
                double t58618 = b3f*t58582;
                double t58619 = b4f*t58583*t58584;
                double t58620 = b2f*c*t58579;
                double t58621 = t58620+t58617+t58618+t58619;
                double t58622 = 1.0/t58621;
                double t58623 = t58622*t58616*(1.0/2.0);
                double t58624 = t58623+1.0;
                double t58625 = 1.0/pow(rho_a,4.0/3.0);
                double t58626 = 1.0/pow(rho_a,5.0/3.0);
                double t58627 = 1.0/sqrt(t58580);
                double t58628 = log(t58624);
                double t58629 = 1.0/t58593;
                double t58630 = 1.0/(t58590*t58590);
                double t58631 = b4p*t58626*t58583*(2.0/3.0);
                double t58632 = b2p*c*t58625*(1.0/3.0);
                double t58633 = b1p*c*t58625*t58627*(1.0/6.0);
                double t58634 = b3p*c*t58625*t58581*(1.0/2.0);
                double t58635 = t58631+t58632+t58633+t58634;
                double t58636 = t58630*t58635*t58629*t58596;
                double t58637 = 1.0/t58602;
                double t58638 = 1.0/t58607;
                double t58639 = ccaa1*gamma_aa*gcaa*t58637*t58597;
                double t58640 = ccaa2*t58603*t58638*t58598*t58599;
                double t58641 = ccaa0+t58640+t58639;
                double t58642 = 1.0/t58624;
                double t58643 = b4f*t58626*t58583*(2.0/3.0);
                double t58644 = b2f*c*t58625*(1.0/3.0);
                double t58645 = b1f*c*t58625*t58627*(1.0/6.0);
                double t58646 = b3f*c*t58625*t58581*(1.0/2.0);
                double t58647 = t58643+t58644+t58645+t58646;
                double t58648 = 1.0/(t58621*t58621);
                double t58649 = 1.0/pow(rho_a,7.0/3.0);
                double t58650 = 1.0/pow(t58580,3.0/2.0);
                double t58651 = t58647*t58647;
                double t58652 = t58635*t58635;
                double t58653 = 1.0/(t58590*t58590*t58590);
                double t58654 = t58652*t58653*t58629*t58596*2.0;
                double t58655 = b4p*t58583*t58597*(1.0E1/9.0);
                double t58656 = b2p*c*t58649*(4.0/9.0);
                double t58657 = b3p*t58627*t58583*t58597*(1.0/1.2E1);
                double t58658 = b1p*c*t58627*t58649*(2.0/9.0);
                double t58659 = b3p*c*t58581*t58649*(2.0/3.0);
                double t58660 = t58655+t58656+t58657+t58658+t58659-b1p*t58650*t58583*t58597*(1.0/3.6E1);
                double t58661 = 1.0/(t58593*t58593);
                double t58662 = 1.0/(t58590*t58590*t58590*t58590);
                double t58663 = a1p*c*c0p*t58594*t58649*(8.0/9.0);
                double t58664 = c0f*t58615*t58628*2.0;
                double t58665 = c0p*t58594*t58596*2.0;
                double t58666 = 1.0/pow(rho_a,2.2E1/3.0);
                double t58667 = 1.0/(t58602*t58602);
                double t58668 = gamma_aa*gcaa*t58604*(1.6E1/3.0);
                double t58669 = t58600*t58598*t58599*(1.6E1/3.0);
                double t58670 = t58668+t58669;
                double t58671 = 1.0/(t58607*t58607);
                double t58672 = 1.0/pow(rho_a,1.4E1/3.0);
                double t58673 = a1f*c*c0f*t58625*t58628*(2.0/3.0);
                double t58674 = a1p*c*c0p*t58625*t58594*(2.0/3.0);
                double t58675 = ccaa1*gamma_aa*gcaa*t58604*t58637*(8.0/3.0);
                double t58676 = ccaa2*t58600*t58638*t58598*t58599*(1.6E1/3.0);
                double t58677 = t58675+t58676-ccaa1*t58600*t58667*t58598*t58599*(8.0/3.0)-ccaa2*t58603*t58670*t58671*t58598*t58599;
                v_rho_a_rho_a[Q] += scale * t58677*(t58665+t58610*t58613*(t58664-c0p*t58594*t58596*2.0))*2.0+t58641*(-t58636+t58674+t58610*t58613*(t58636+t58673-t58615*t58642*t58647*t58648-a1p*c*c0p*t58625*t58594*(2.0/3.0)))*2.0+rho_a*t58641*(-t58654-t58663+t58610*t58613*(t58654+t58663-t58630*t58660*t58629*t58596-1.0/(t58621*t58621*t58621)*t58615*t58642*t58651*2.0+t58615*t58642*t58648*(b2f*c*t58649*(4.0/9.0)+b4f*t58583*t58597*(1.0E1/9.0)+b1f*c*t58627*t58649*(2.0/9.0)+b3f*c*t58581*t58649*(2.0/3.0)-b1f*t58650*t58583*t58597*(1.0/3.6E1)+b3f*t58627*t58583*t58597*(1.0/1.2E1))+1.0/(t58621*t58621*t58621*t58621)*t58615*1.0/(t58624*t58624)*t58651*t58616*(1.0/2.0)-a1f*c*c0f*t58628*t58649*(8.0/9.0)-t58652*t58661*t58662*t58585*t58596*(1.0/2.0)+a1f*c*t58642*t58625*t58647*t58648*(2.0/3.0)-a1p*c*t58630*t58625*t58635*t58629*(2.0/3.0))+t58630*t58660*t58629*t58596+t58652*t58661*t58662*t58585*t58596*(1.0/2.0)+a1p*c*t58630*t58625*t58635*t58629*(2.0/3.0))-rho_a*t58677*(-t58636+t58674+t58610*t58613*(t58636+t58673-t58674-t58615*t58642*t58647*t58648))*2.0-rho_a*(t58665+t58610*t58613*(t58664-t58665))*(ccaa1*gamma_aa*gcaa*t58672*t58637*(8.8E1/9.0)+ccaa2*t58638*t58666*t58598*t58599*(3.04E2/9.0)-ccaa1*t58666*t58667*t58598*t58599*2.4E1-ccaa2*t58600*t58670*t58671*t58598*t58599*(3.2E1/3.0)-ccaa2*t58603*t58671*t58598*t58599*(gamma_aa*gcaa*t58672*(1.76E2/9.0)+t58666*t58598*t58599*(3.04E2/9.0))+ccaa2*t58603*1.0/(t58607*t58607*t58607)*(t58670*t58670)*t58598*t58599*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*1.0/(t58602*t58602*t58602)*t58598*t58599*(1.28E2/9.0));
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t58760 = 1.0/pow(rho_a,1.0/3.0);
                double t58761 = c*t58760;
                double t58762 = sqrt(t58761);
                double t58763 = pow(t58761,3.0/2.0);
                double t58764 = c*c;
                double t58765 = 1.0/pow(rho_a,2.0/3.0);
                double t58766 = 1.0/c0p;
                double t58767 = b1p*t58762;
                double t58768 = b3p*t58763;
                double t58769 = b4p*t58764*t58765;
                double t58770 = b2p*c*t58760;
                double t58771 = t58770+t58767+t58768+t58769;
                double t58772 = 1.0/t58771;
                double t58773 = t58772*t58766*(1.0/2.0);
                double t58774 = t58773+1.0;
                double t58775 = log(t58774);
                double t58776 = a1p*c*t58760;
                double t58777 = t58776+1.0;
                double t58778 = gcaa*gcaa;
                double t58779 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58780 = 1.0/pow(rho_a,8.0/3.0);
                double t58781 = gamma_aa*gcaa*t58780;
                double t58782 = t58781+1.0;
                double t58783 = gamma_aa*gamma_aa;
                double t58784 = gamma_aa*gcaa*t58780*2.0;
                double t58785 = t58783*t58778*t58779;
                double t58786 = t58784+t58785+1.0;
                double t58788 = gcaa*t58780*2.0;
                double t58789 = gamma_aa*t58778*t58779*2.0;
                double t58787 = t58788+t58789;
                double t58790 = 1.0/(t58786*t58786);
                v_gamma_aa_gamma_aa[Q] += scale * rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t58762+b3f*t58763+b2f*c*t58760+b4f*t58764*t58765))+1.0)*(a1f*c*t58760+1.0)*2.0-c0p*t58775*t58777*2.0))/(two_13*2.0-2.0)+c0p*t58775*t58777*2.0)*(ccaa1*1.0/(t58782*t58782)*t58778*t58779*2.0-(ccaa2*t58778*t58779*2.0)/t58786+ccaa2*1.0/pow(rho_a,3.2E1/3.0)*t58790*t58783*(t58778*t58778)*2.0-ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*1.0/(t58782*t58782*t58782)*t58778*2.0-ccaa2*t58783*1.0/(t58786*t58786*t58786)*t58778*(t58787*t58787)*t58779*2.0+ccaa2*gamma_aa*t58790*t58778*t58787*t58779*4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t58681 = 1.0/pow(rho_a,1.0/3.0);
                double t58682 = c*t58681;
                double t58683 = sqrt(t58682);
                double t58684 = pow(t58682,3.0/2.0);
                double t58685 = c*c;
                double t58686 = 1.0/pow(rho_a,2.0/3.0);
                double t58687 = 1.0/c0p;
                double t58688 = b1p*t58683;
                double t58689 = b3p*t58684;
                double t58690 = b4p*t58685*t58686;
                double t58691 = b2p*c*t58681;
                double t58692 = t58690+t58691+t58688+t58689;
                double t58693 = 1.0/t58692;
                double t58694 = t58693*t58687*(1.0/2.0);
                double t58695 = t58694+1.0;
                double t58696 = log(t58695);
                double t58697 = a1p*c*t58681;
                double t58698 = t58697+1.0;
                double t58699 = 1.0/pow(rho_a,8.0/3.0);
                double t58700 = gcaa*gcaa;
                double t58701 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58702 = gamma_aa*gcaa*t58699;
                double t58703 = t58702+1.0;
                double t58704 = gamma_aa*gamma_aa;
                double t58705 = gamma_aa*gcaa*t58699*2.0;
                double t58706 = t58700*t58701*t58704;
                double t58707 = t58705+t58706+1.0;
                double t58708 = pow(2.0,1.0/3.0);
                double t58709 = t58708*2.0;
                double t58710 = t58709-2.0;
                double t58711 = two_13*2.0;
                double t58712 = t58711-2.0;
                double t58713 = 1.0/t58712;
                double t58714 = 1.0/c0f;
                double t58715 = b1f*t58683;
                double t58716 = b3f*t58684;
                double t58717 = b4f*t58685*t58686;
                double t58718 = b2f*c*t58681;
                double t58719 = t58715+t58716+t58717+t58718;
                double t58720 = 1.0/t58719;
                double t58721 = t58720*t58714*(1.0/2.0);
                double t58722 = t58721+1.0;
                double t58723 = log(t58722);
                double t58724 = a1f*c*t58681;
                double t58725 = t58724+1.0;
                double t58726 = c0f*t58723*t58725*2.0;
                double t58727 = c0p*t58696*t58698*2.0;
                double t58728 = 1.0/t58703;
                double t58729 = 1.0/t58707;
                double t58730 = 1.0/pow(rho_a,1.9E1/3.0);
                double t58731 = 1.0/(t58703*t58703);
                double t58732 = 1.0/pow(rho_a,1.1E1/3.0);
                double t58733 = 1.0/(t58707*t58707);
                double t58734 = gcaa*t58699*2.0;
                double t58735 = gamma_aa*t58700*t58701*2.0;
                double t58736 = t58734+t58735;
                double t58737 = gamma_aa*gcaa*t58732*(1.6E1/3.0);
                double t58738 = t58700*t58730*t58704*(1.6E1/3.0);
                double t58739 = t58737+t58738;
                double t58740 = 1.0/pow(rho_a,4.0/3.0);
                double t58741 = 1.0/pow(rho_a,5.0/3.0);
                double t58742 = 1.0/sqrt(t58682);
                double t58743 = 1.0/t58695;
                double t58744 = 1.0/(t58692*t58692);
                double t58745 = b4p*t58741*t58685*(2.0/3.0);
                double t58746 = b2p*c*t58740*(1.0/3.0);
                double t58747 = b1p*c*t58740*t58742*(1.0/6.0);
                double t58748 = b3p*c*t58740*t58683*(1.0/2.0);
                double t58749 = t58745+t58746+t58747+t58748;
                double t58750 = t58743*t58744*t58749*t58698;
                double t58751 = ccaa1*gcaa*t58728*t58699;
                double t58752 = ccaa2*gamma_aa*t58700*t58701*t58729*2.0;
                double t58753 = t58751+t58752-ccaa1*gamma_aa*t58700*t58701*t58731-ccaa2*t58700*t58701*t58704*t58733*t58736;
                v_rho_a_gamma_aa[Q] += scale * -t58753*(t58727+t58710*t58713*(t58726-c0p*t58696*t58698*2.0))+rho_a*t58753*(-t58750+t58710*t58713*(t58750-(t58725*1.0/(t58719*t58719)*(b2f*c*t58740*(1.0/3.0)+b4f*t58741*t58685*(2.0/3.0)+b1f*c*t58740*t58742*(1.0/6.0)+b3f*c*t58740*t58683*(1.0/2.0)))/t58722+a1f*c*c0f*t58740*t58723*(2.0/3.0)-a1p*c*c0p*t58740*t58696*(2.0/3.0))+a1p*c*c0p*t58740*t58696*(2.0/3.0))+rho_a*(t58727+t58710*t58713*(t58726-t58727))*(ccaa1*gcaa*t58732*t58728*(8.0/3.0)-ccaa1*gamma_aa*t58700*t58730*t58731*8.0+ccaa2*gamma_aa*t58700*t58730*t58729*(3.2E1/3.0)-ccaa2*t58700*t58730*t58704*t58733*t58736*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t58700*1.0/(t58703*t58703*t58703)*t58704*(1.6E1/3.0)-ccaa2*t58700*t58701*t58704*t58733*(gcaa*t58732*(1.6E1/3.0)+gamma_aa*t58700*t58730*(3.2E1/3.0))-ccaa2*gamma_aa*t58700*t58701*t58733*t58739*2.0+ccaa2*t58700*t58701*t58704*1.0/(t58707*t58707*t58707)*t58736*t58739*2.0);
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t55509 = 1.0/pow(rho_a,8.0/3.0);
                double t55510 = gamma_aa*t55509*(1.0/2.0);
                double t55511 = 1.0/pow(rho_b,8.0/3.0);
                double t55512 = gamma_bb*t55511*(1.0/2.0);
                double t55507 = t55510+t55512;
                double t55508 = gcab*gcab;
                double t55513 = t55507*t55507;
                double t55514 = 1.0/pow(rho_a,1.0/3.0);
                double t55515 = c*t55514;
                double t55516 = sqrt(t55515);
                double t55517 = pow(t55515,3.0/2.0);
                double t55518 = c*c;
                double t55519 = 1.0/pow(rho_a,2.0/3.0);
                double t55520 = 1.0/c0p;
                double t55521 = b1p*t55516;
                double t55522 = b3p*t55517;
                double t55523 = b4p*t55518*t55519;
                double t55524 = b2p*c*t55514;
                double t55525 = t55521+t55522+t55523+t55524;
                double t55526 = 1.0/t55525;
                double t55527 = t55520*t55526*(1.0/2.0);
                double t55528 = t55527+1.0;
                double t55529 = log(t55528);
                double t55530 = a1p*c*t55514;
                double t55531 = t55530+1.0;
                double t55532 = pow(2.0,1.0/3.0);
                double t55533 = t55532*2.0;
                double t55534 = t55533-2.0;
                double t55535 = two_13*2.0;
                double t55536 = t55535-2.0;
                double t55537 = 1.0/t55536;
                double t55538 = 1.0/c0f;
                double t55539 = 1.0/pow(rho_b,1.0/3.0);
                double t55540 = c*t55539;
                double t55541 = sqrt(t55540);
                double t55542 = pow(t55540,3.0/2.0);
                double t55543 = 1.0/pow(rho_b,2.0/3.0);
                double t55544 = b1p*t55541;
                double t55545 = b3p*t55542;
                double t55546 = b4p*t55543*t55518;
                double t55547 = b2p*c*t55539;
                double t55548 = t55544+t55545+t55546+t55547;
                double t55549 = 1.0/t55548;
                double t55550 = t55520*t55549*(1.0/2.0);
                double t55551 = t55550+1.0;
                double t55552 = log(t55551);
                double t55553 = a1p*c*t55539;
                double t55554 = t55553+1.0;
                double t55555 = c0p*t55552*t55554*2.0;
                double t55556 = rho_a+rho_b;
                double t55557 = 1.0/pow(t55556,1.0/3.0);
                double t55558 = c*t55557;
                double t55559 = sqrt(t55558);
                double t55560 = pow(t55558,3.0/2.0);
                double t55561 = 1.0/pow(t55556,2.0/3.0);
                double t55562 = b1p*t55559;
                double t55563 = b3p*t55560;
                double t55564 = b4p*t55561*t55518;
                double t55565 = b2p*c*t55557;
                double t55566 = t55562+t55563+t55564+t55565;
                double t55567 = 1.0/t55566;
                double t55568 = t55520*t55567*(1.0/2.0);
                double t55569 = t55568+1.0;
                double t55570 = log(t55569);
                double t55571 = a1p*c*t55557;
                double t55572 = t55571+1.0;
                double t55573 = c0p*t55570*t55572*2.0;
                double t55574 = rho_a-rho_b;
                double t55575 = t55574*t55574;
                double t55576 = 1.0/t55556;
                double t55577 = t55574*t55576;
                double t55578 = 1.0/(t55556*t55556*t55556*t55556);
                double t55579 = t55575*t55575;
                double t55580 = t55577+1.0;
                double t55581 = pow(t55580,4.0/3.0);
                double t55582 = -t55577+1.0;
                double t55583 = pow(t55582,4.0/3.0);
                double t55584 = t55581+t55583-2.0;
                double t55585 = c0p*t55531*t55529*2.0;
                double t55586 = b1f*t55516;
                double t55587 = b3f*t55517;
                double t55588 = b4f*t55518*t55519;
                double t55589 = b2f*c*t55514;
                double t55590 = t55586+t55587+t55588+t55589;
                double t55591 = 1.0/t55590;
                double t55592 = t55591*t55538*(1.0/2.0);
                double t55593 = t55592+1.0;
                double t55594 = log(t55593);
                double t55595 = a1f*c*t55514;
                double t55596 = t55595+1.0;
                double t55597 = t55585-c0f*t55594*t55596*2.0;
                double t55598 = t55585-t55534*t55537*t55597;
                double t55599 = gamma_aa*gamma_aa;
                double t55600 = gcaa*gcaa;
                double t55601 = 1.0/pow(rho_a,1.6E1/3.0);
                double t55602 = b1f*t55541;
                double t55603 = b3f*t55542;
                double t55604 = b4f*t55543*t55518;
                double t55605 = b2f*c*t55539;
                double t55606 = t55602+t55603+t55604+t55605;
                double t55607 = 1.0/t55606;
                double t55608 = t55607*t55538*(1.0/2.0);
                double t55609 = t55608+1.0;
                double t55610 = log(t55609);
                double t55611 = a1f*c*t55539;
                double t55612 = t55611+1.0;
                double t55613 = t55555-c0f*t55610*t55612*2.0;
                double t55614 = t55555-t55613*t55534*t55537;
                double t55615 = gamma_bb*gamma_bb;
                double t55616 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * (ccab0+(ccab1*gcab*t55507)/(gcab*t55507+1.0)+(ccab2*t55513*t55508)/(gcab*t55507*2.0+t55513*t55508+1.0))*(rho_b*t55614+rho_a*t55598-t55556*(t55573-t55537*t55584*t55578*t55579*(t55573-c0f*log((t55538*(1.0/2.0))/(b1f*t55559+b3f*t55560+b2f*c*t55557+b4f*t55561*t55518)+1.0)*(a1f*c*t55557+1.0)*2.0)+(Aa*t55537*t55584*log((1.0/2.0)/(Aa*(b1a*t55559+b3a*t55560+b2a*c*t55557+b4a*t55561*t55518))+1.0)*(t55578*t55579-1.0)*(a1a*c*t55557+1.0)*2.0)/d2fz0))-rho_b*t55614*(ccaa0+(ccaa2*t55600*t55615*t55616)/(gamma_bb*gcaa*t55511*2.0+t55600*t55615*t55616+1.0)+(ccaa1*gamma_bb*gcaa*t55511)/(gamma_bb*gcaa*t55511+1.0))-rho_a*t55598*(ccaa0+(ccaa2*t55600*t55601*t55599)/(gamma_aa*gcaa*t55509*2.0+t55600*t55601*t55599+1.0)+(ccaa1*gamma_aa*gcaa*t55509)/(gamma_aa*gcaa*t55509+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t55618 = 1.0/pow(rho_a,1.0/3.0);
                double t55619 = c*t55618;
                double t55620 = sqrt(t55619);
                double t55621 = pow(t55619,3.0/2.0);
                double t55622 = c*c;
                double t55623 = 1.0/pow(rho_a,2.0/3.0);
                double t55624 = 1.0/c0p;
                double t55625 = b1p*t55620;
                double t55626 = b3p*t55621;
                double t55627 = b4p*t55622*t55623;
                double t55628 = b2p*c*t55618;
                double t55629 = t55625+t55626+t55627+t55628;
                double t55630 = 1.0/t55629;
                double t55631 = t55630*t55624*(1.0/2.0);
                double t55632 = t55631+1.0;
                double t55633 = log(t55632);
                double t55634 = a1p*c*t55618;
                double t55635 = t55634+1.0;
                double t55636 = 1.0/pow(rho_a,8.0/3.0);
                double t55637 = gamma_aa*gamma_aa;
                double t55638 = gcaa*gcaa;
                double t55639 = 1.0/pow(rho_a,1.6E1/3.0);
                double t55642 = gamma_aa*t55636*(1.0/2.0);
                double t55643 = 1.0/pow(rho_b,8.0/3.0);
                double t55644 = gamma_bb*t55643*(1.0/2.0);
                double t55640 = t55642+t55644;
                double t55641 = gcab*gcab;
                double t55645 = t55640*t55640;
                double t55646 = rho_a+rho_b;
                double t55647 = 1.0/pow(t55646,1.0/3.0);
                double t55648 = c*t55647;
                double t55649 = sqrt(t55648);
                double t55650 = b1p*t55649;
                double t55651 = pow(t55648,3.0/2.0);
                double t55652 = b3p*t55651;
                double t55653 = 1.0/pow(t55646,2.0/3.0);
                double t55654 = b4p*t55622*t55653;
                double t55655 = b2p*c*t55647;
                double t55656 = t55650+t55652+t55654+t55655;
                double t55657 = 1.0/pow(t55646,4.0/3.0);
                double t55658 = two_13*2.0;
                double t55659 = t55658-2.0;
                double t55660 = 1.0/t55659;
                double t55661 = 1.0/c0f;
                double t55662 = 1.0/t55656;
                double t55663 = t55624*t55662*(1.0/2.0);
                double t55664 = t55663+1.0;
                double t55665 = a1p*c*t55647;
                double t55666 = t55665+1.0;
                double t55667 = rho_a-rho_b;
                double t55668 = t55667*t55667;
                double t55669 = 1.0/t55646;
                double t55670 = t55667*t55669;
                double t55671 = b1f*t55649;
                double t55672 = b3f*t55651;
                double t55673 = b4f*t55622*t55653;
                double t55674 = b2f*c*t55647;
                double t55675 = t55671+t55672+t55673+t55674;
                double t55676 = 1.0/t55675;
                double t55677 = t55661*t55676*(1.0/2.0);
                double t55678 = t55677+1.0;
                double t55679 = log(t55678);
                double t55680 = a1f*c*t55647;
                double t55681 = t55680+1.0;
                double t55682 = log(t55664);
                double t55692 = c0f*t55681*t55679*2.0;
                double t55693 = c0p*t55682*t55666*2.0;
                double t55683 = t55692-t55693;
                double t55684 = t55670+1.0;
                double t55685 = pow(t55684,4.0/3.0);
                double t55686 = -t55670+1.0;
                double t55687 = pow(t55686,4.0/3.0);
                double t55688 = t55685+t55687-2.0;
                double t55689 = 1.0/(t55646*t55646);
                double t55720 = t55667*t55689;
                double t55690 = -t55720+t55669;
                double t55691 = 1.0/(t55646*t55646*t55646*t55646);
                double t55694 = t55668*t55668;
                double t55695 = 1.0/pow(t55646,5.0/3.0);
                double t55696 = 1.0/sqrt(t55648);
                double t55697 = 1.0/t55664;
                double t55698 = 1.0/(t55656*t55656);
                double t55699 = b4p*t55622*t55695*(2.0/3.0);
                double t55700 = b2p*c*t55657*(1.0/3.0);
                double t55701 = b1p*c*t55657*t55696*(1.0/6.0);
                double t55702 = b3p*c*t55657*t55649*(1.0/2.0);
                double t55703 = t55700+t55701+t55702+t55699;
                double t55704 = t55703*t55666*t55697*t55698;
                double t55705 = 1.0/(t55646*t55646*t55646*t55646*t55646);
                double t55706 = 1.0/d2fz0;
                double t55707 = 1.0/Aa;
                double t55708 = b1a*t55649;
                double t55709 = b3a*t55651;
                double t55710 = b4a*t55622*t55653;
                double t55711 = b2a*c*t55647;
                double t55712 = t55710+t55711+t55708+t55709;
                double t55713 = 1.0/t55712;
                double t55714 = t55713*t55707*(1.0/2.0);
                double t55715 = t55714+1.0;
                double t55716 = log(t55715);
                double t55717 = a1a*c*t55647;
                double t55718 = t55717+1.0;
                double t55719 = pow(t55684,1.0/3.0);
                double t55721 = t55690*t55719*(4.0/3.0);
                double t55722 = pow(t55686,1.0/3.0);
                double t55723 = t55721-t55722*t55690*(4.0/3.0);
                double t55724 = t55691*t55694;
                double t55725 = t55724-1.0;
                double t55726 = pow(2.0,1.0/3.0);
                double t55727 = t55726*2.0;
                double t55728 = t55727-2.0;
                double t55729 = a1f*c*t55618;
                double t55730 = t55729+1.0;
                double t55731 = b1f*t55620;
                double t55732 = b3f*t55621;
                double t55733 = b4f*t55622*t55623;
                double t55734 = b2f*c*t55618;
                double t55735 = t55731+t55732+t55733+t55734;
                double t55736 = 1.0/t55735;
                double t55737 = t55661*t55736*(1.0/2.0);
                double t55738 = t55737+1.0;
                double t55739 = 1.0/pow(rho_a,4.0/3.0);
                double t55740 = 1.0/pow(rho_a,5.0/3.0);
                double t55741 = 1.0/sqrt(t55619);
                double t55742 = log(t55738);
                double t55743 = 1.0/t55632;
                double t55744 = 1.0/(t55629*t55629);
                double t55745 = b4p*t55622*t55740*(2.0/3.0);
                double t55746 = b2p*c*t55739*(1.0/3.0);
                double t55747 = b1p*c*t55741*t55739*(1.0/6.0);
                double t55748 = b3p*c*t55620*t55739*(1.0/2.0);
                double t55749 = t55745+t55746+t55747+t55748;
                double t55750 = t55635*t55743*t55744*t55749;
                double t55751 = c0f*t55730*t55742*2.0;
                double t55752 = c0p*t55633*t55635*2.0;
                double t55753 = t55751-t55752;
                double t55754 = 1.0/pow(rho_b,1.0/3.0);
                double t55755 = c*t55754;
                double t55756 = sqrt(t55755);
                double t55757 = pow(t55755,3.0/2.0);
                double t55758 = 1.0/pow(rho_b,2.0/3.0);
                double t55759 = b1p*t55756;
                double t55760 = b3p*t55757;
                double t55761 = b4p*t55622*t55758;
                double t55762 = b2p*c*t55754;
                double t55763 = t55760+t55761+t55762+t55759;
                double t55764 = 1.0/t55763;
                double t55765 = t55624*t55764*(1.0/2.0);
                double t55766 = t55765+1.0;
                double t55767 = log(t55766);
                double t55768 = a1p*c*t55754;
                double t55769 = t55768+1.0;
                double t55770 = c0p*t55767*t55769*2.0;
                double t55771 = t55660*t55691*t55683*t55694*t55688;
                double t55772 = Aa*t55660*t55706*t55716*t55725*t55718*t55688*2.0;
                double t55773 = gcab*t55640;
                double t55774 = t55773+1.0;
                double t55775 = 1.0/t55774;
                double t55776 = 1.0/pow(rho_a,1.1E1/3.0);
                double t55777 = t55641*t55645;
                double t55778 = gcab*t55640*2.0;
                double t55779 = t55777+t55778+1.0;
                double t55780 = 1.0/t55779;
                double t55781 = 1.0/t55738;
                double t55782 = 1.0/(t55735*t55735);
                double t55783 = b4f*t55622*t55740*(2.0/3.0);
                double t55784 = b2f*c*t55739*(1.0/3.0);
                double t55785 = b1f*c*t55741*t55739*(1.0/6.0);
                double t55786 = b3f*c*t55620*t55739*(1.0/2.0);
                double t55787 = t55783+t55784+t55785+t55786;
                double t55788 = a1f*c*c0f*t55742*t55739*(2.0/3.0);
                double t55789 = a1p*c*c0p*t55633*t55739*(2.0/3.0);
                double t55790 = gamma_aa*gcaa*t55636;
                double t55791 = t55790+1.0;
                double t55792 = 1.0/t55791;
                double t55793 = ccaa1*gamma_aa*gcaa*t55636*t55792;
                double t55794 = gamma_aa*gcaa*t55636*2.0;
                double t55795 = t55637*t55638*t55639;
                double t55796 = t55794+t55795+1.0;
                double t55797 = 1.0/t55796;
                double t55798 = ccaa2*t55637*t55638*t55639*t55797;
                double t55799 = ccaa0+t55793+t55798;
                double t55800 = t55660*t55753*t55728;
                double t55801 = t55800+t55752;
                double t55802 = 1.0/pow(rho_a,1.9E1/3.0);
                v_rho_a[Q] += scale * -t55799*(t55752+t55660*t55728*(t55751-c0p*t55633*t55635*2.0))-(ccab0+ccab1*gcab*t55640*t55775+ccab2*t55641*t55645*t55780)*(-t55752+t55771+t55772+t55693+t55646*(t55704-t55660*t55691*t55694*t55688*(t55704-(t55681*1.0/(t55675*t55675)*(b2f*c*t55657*(1.0/3.0)+b4f*t55622*t55695*(2.0/3.0)+b1f*c*t55657*t55696*(1.0/6.0)+b3f*c*t55657*t55649*(1.0/2.0)))/t55678+a1f*c*c0f*t55657*t55679*(2.0/3.0)-a1p*c*c0p*t55682*t55657*(2.0/3.0))-a1p*c*c0p*t55682*t55657*(2.0/3.0)+t55660*t55723*t55691*t55683*t55694-t55660*t55705*t55683*t55694*t55688*4.0+t55660*t55691*t55683*t55667*t55668*t55688*4.0-Aa*t55660*t55706*t55716*t55718*t55688*(t55705*t55694*4.0-t55691*t55667*t55668*4.0)*2.0+Aa*t55660*t55723*t55706*t55716*t55725*t55718*2.0+(1.0/(t55712*t55712)*t55660*t55706*t55725*t55718*t55688*(b2a*c*t55657*(1.0/3.0)+b4a*t55622*t55695*(2.0/3.0)+b1a*c*t55657*t55696*(1.0/6.0)+b3a*c*t55657*t55649*(1.0/2.0)))/t55715-Aa*a1a*c*t55660*t55706*t55716*t55725*t55657*t55688*(2.0/3.0))+rho_a*(-t55750+t55789+t55660*t55728*(t55750+t55788-t55730*t55781*t55782*t55787-a1p*c*c0p*t55633*t55739*(2.0/3.0)))-t55660*t55753*t55728)-(rho_a*t55801+rho_b*(t55770-t55660*t55728*(t55770-c0f*log((t55661*(1.0/2.0))/(b1f*t55756+b3f*t55757+b2f*c*t55754+b4f*t55622*t55758)+1.0)*(a1f*c*t55754+1.0)*2.0))-t55646*(t55771+t55772+t55693))*(ccab1*gamma_aa*gcab*t55775*t55776*(4.0/3.0)-ccab2*t55641*t55645*1.0/(t55779*t55779)*(gamma_aa*gcab*t55776*(8.0/3.0)+gamma_aa*t55640*t55641*t55776*(8.0/3.0))-ccab1*gamma_aa*t55640*t55641*1.0/(t55774*t55774)*t55776*(4.0/3.0)+ccab2*gamma_aa*t55640*t55641*t55780*t55776*(8.0/3.0))+rho_a*t55801*(ccaa1*gamma_aa*gcaa*t55792*t55776*(8.0/3.0)+ccaa2*t55802*t55637*t55638*t55797*(1.6E1/3.0)-ccaa1*t55802*t55637*t55638*1.0/(t55791*t55791)*(8.0/3.0)-ccaa2*t55637*t55638*t55639*1.0/(t55796*t55796)*(gamma_aa*gcaa*t55776*(1.6E1/3.0)+t55802*t55637*t55638*(1.6E1/3.0)))+rho_a*t55799*(-t55750+t55789+t55660*t55728*(t55750+t55788-t55789-t55730*t55781*t55782*t55787));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t55804 = 1.0/pow(rho_b,1.0/3.0);
                double t55805 = c*t55804;
                double t55806 = sqrt(t55805);
                double t55807 = pow(t55805,3.0/2.0);
                double t55808 = c*c;
                double t55809 = 1.0/pow(rho_b,2.0/3.0);
                double t55810 = 1.0/c0p;
                double t55811 = b1p*t55806;
                double t55812 = b3p*t55807;
                double t55813 = b4p*t55808*t55809;
                double t55814 = b2p*c*t55804;
                double t55815 = t55811+t55812+t55813+t55814;
                double t55816 = 1.0/t55815;
                double t55817 = t55810*t55816*(1.0/2.0);
                double t55818 = t55817+1.0;
                double t55819 = log(t55818);
                double t55820 = a1p*c*t55804;
                double t55821 = t55820+1.0;
                double t55822 = 1.0/pow(rho_b,8.0/3.0);
                double t55823 = gamma_bb*gamma_bb;
                double t55824 = gcaa*gcaa;
                double t55825 = 1.0/pow(rho_b,1.6E1/3.0);
                double t55828 = 1.0/pow(rho_a,8.0/3.0);
                double t55829 = gamma_aa*t55828*(1.0/2.0);
                double t55830 = gamma_bb*t55822*(1.0/2.0);
                double t55826 = t55830+t55829;
                double t55827 = gcab*gcab;
                double t55831 = t55826*t55826;
                double t55832 = rho_a+rho_b;
                double t55833 = 1.0/pow(t55832,1.0/3.0);
                double t55834 = c*t55833;
                double t55835 = sqrt(t55834);
                double t55836 = b1p*t55835;
                double t55837 = pow(t55834,3.0/2.0);
                double t55838 = b3p*t55837;
                double t55839 = 1.0/pow(t55832,2.0/3.0);
                double t55840 = b4p*t55808*t55839;
                double t55841 = b2p*c*t55833;
                double t55842 = t55840+t55841+t55836+t55838;
                double t55843 = 1.0/pow(t55832,4.0/3.0);
                double t55844 = two_13*2.0;
                double t55845 = t55844-2.0;
                double t55846 = 1.0/t55845;
                double t55847 = 1.0/c0f;
                double t55848 = 1.0/t55842;
                double t55849 = t55810*t55848*(1.0/2.0);
                double t55850 = t55849+1.0;
                double t55851 = a1p*c*t55833;
                double t55852 = t55851+1.0;
                double t55853 = rho_a-rho_b;
                double t55854 = t55853*t55853;
                double t55855 = 1.0/t55832;
                double t55856 = t55853*t55855;
                double t55857 = b1f*t55835;
                double t55858 = b3f*t55837;
                double t55859 = b4f*t55808*t55839;
                double t55860 = b2f*c*t55833;
                double t55861 = t55860+t55857+t55858+t55859;
                double t55862 = 1.0/t55861;
                double t55863 = t55862*t55847*(1.0/2.0);
                double t55864 = t55863+1.0;
                double t55865 = log(t55864);
                double t55866 = a1f*c*t55833;
                double t55867 = t55866+1.0;
                double t55868 = log(t55850);
                double t55879 = c0f*t55865*t55867*2.0;
                double t55880 = c0p*t55852*t55868*2.0;
                double t55869 = -t55880+t55879;
                double t55870 = t55856+1.0;
                double t55871 = pow(t55870,4.0/3.0);
                double t55872 = -t55856+1.0;
                double t55873 = pow(t55872,4.0/3.0);
                double t55874 = t55871+t55873-2.0;
                double t55875 = 1.0/(t55832*t55832);
                double t55876 = t55853*t55875;
                double t55877 = t55855+t55876;
                double t55878 = 1.0/(t55832*t55832*t55832*t55832);
                double t55881 = t55854*t55854;
                double t55882 = 1.0/pow(t55832,5.0/3.0);
                double t55883 = 1.0/sqrt(t55834);
                double t55884 = 1.0/t55850;
                double t55885 = 1.0/(t55842*t55842);
                double t55886 = b4p*t55808*t55882*(2.0/3.0);
                double t55887 = b2p*c*t55843*(1.0/3.0);
                double t55888 = b1p*c*t55843*t55883*(1.0/6.0);
                double t55889 = b3p*c*t55843*t55835*(1.0/2.0);
                double t55890 = t55886+t55887+t55888+t55889;
                double t55891 = 1.0/(t55832*t55832*t55832*t55832*t55832);
                double t55892 = 1.0/d2fz0;
                double t55893 = 1.0/Aa;
                double t55894 = b1a*t55835;
                double t55895 = b3a*t55837;
                double t55896 = b4a*t55808*t55839;
                double t55897 = b2a*c*t55833;
                double t55898 = t55894+t55895+t55896+t55897;
                double t55899 = 1.0/t55898;
                double t55900 = t55893*t55899*(1.0/2.0);
                double t55901 = t55900+1.0;
                double t55902 = log(t55901);
                double t55903 = a1a*c*t55833;
                double t55904 = t55903+1.0;
                double t55905 = pow(t55870,1.0/3.0);
                double t55906 = t55905*t55877*(4.0/3.0);
                double t55907 = pow(t55872,1.0/3.0);
                double t55908 = t55906-t55907*t55877*(4.0/3.0);
                double t55909 = t55881*t55878;
                double t55910 = t55909-1.0;
                double t55911 = pow(2.0,1.0/3.0);
                double t55912 = t55911*2.0;
                double t55913 = t55912-2.0;
                double t55914 = a1f*c*t55804;
                double t55915 = t55914+1.0;
                double t55916 = b1f*t55806;
                double t55917 = b3f*t55807;
                double t55918 = b4f*t55808*t55809;
                double t55919 = b2f*c*t55804;
                double t55920 = t55916+t55917+t55918+t55919;
                double t55921 = 1.0/t55920;
                double t55922 = t55921*t55847*(1.0/2.0);
                double t55923 = t55922+1.0;
                double t55924 = 1.0/pow(rho_b,4.0/3.0);
                double t55925 = 1.0/pow(rho_b,5.0/3.0);
                double t55926 = 1.0/sqrt(t55805);
                double t55927 = log(t55923);
                double t55928 = 1.0/t55818;
                double t55929 = 1.0/(t55815*t55815);
                double t55930 = b4p*t55808*t55925*(2.0/3.0);
                double t55931 = b2p*c*t55924*(1.0/3.0);
                double t55932 = b1p*c*t55924*t55926*(1.0/6.0);
                double t55933 = b3p*c*t55806*t55924*(1.0/2.0);
                double t55934 = t55930+t55931+t55932+t55933;
                double t55935 = t55821*t55934*t55928*t55929;
                double t55936 = c0f*t55915*t55927*2.0;
                double t55937 = c0p*t55821*t55819*2.0;
                double t55938 = a1p*c*c0p*t55843*t55868*(2.0/3.0);
                double t55939 = 1.0/pow(rho_a,1.0/3.0);
                double t55940 = c*t55939;
                double t55941 = sqrt(t55940);
                double t55942 = pow(t55940,3.0/2.0);
                double t55943 = 1.0/pow(rho_a,2.0/3.0);
                double t55944 = b1p*t55941;
                double t55945 = b3p*t55942;
                double t55946 = b4p*t55808*t55943;
                double t55947 = b2p*c*t55939;
                double t55948 = t55944+t55945+t55946+t55947;
                double t55949 = 1.0/t55948;
                double t55950 = t55810*t55949*(1.0/2.0);
                double t55951 = t55950+1.0;
                double t55952 = log(t55951);
                double t55953 = a1p*c*t55939;
                double t55954 = t55953+1.0;
                double t55955 = c0p*t55952*t55954*2.0;
                double t55956 = t55936-t55937;
                double t55957 = t55881*t55846*t55874*t55869*t55878;
                double t55958 = Aa*t55910*t55902*t55904*t55846*t55874*t55892*2.0;
                double t55959 = gcab*t55826;
                double t55960 = t55959+1.0;
                double t55961 = 1.0/t55960;
                double t55962 = 1.0/pow(rho_b,1.1E1/3.0);
                double t55963 = t55831*t55827;
                double t55964 = gcab*t55826*2.0;
                double t55965 = t55963+t55964+1.0;
                double t55966 = 1.0/t55965;
                double t55967 = 1.0/t55923;
                double t55968 = 1.0/(t55920*t55920);
                double t55969 = b4f*t55808*t55925*(2.0/3.0);
                double t55970 = b2f*c*t55924*(1.0/3.0);
                double t55971 = b1f*c*t55924*t55926*(1.0/6.0);
                double t55972 = b3f*c*t55806*t55924*(1.0/2.0);
                double t55973 = t55970+t55971+t55972+t55969;
                double t55974 = a1f*c*c0f*t55924*t55927*(2.0/3.0);
                double t55975 = a1p*c*c0p*t55924*t55819*(2.0/3.0);
                double t55976 = gamma_bb*gcaa*t55822;
                double t55977 = t55976+1.0;
                double t55978 = 1.0/t55977;
                double t55979 = ccaa1*gamma_bb*gcaa*t55822*t55978;
                double t55980 = gamma_bb*gcaa*t55822*2.0;
                double t55981 = t55823*t55824*t55825;
                double t55982 = t55980+t55981+1.0;
                double t55983 = 1.0/t55982;
                double t55984 = ccaa2*t55823*t55824*t55825*t55983;
                double t55985 = ccaa0+t55984+t55979;
                double t55986 = t55913*t55846*t55956;
                double t55987 = t55937+t55986;
                double t55988 = 1.0/pow(rho_b,1.9E1/3.0);
                v_rho_b[Q] += scale * -(ccab0+ccab1*gcab*t55826*t55961+ccab2*t55831*t55827*t55966)*(t55880-t55937+t55957+t55958+rho_b*(-t55935+t55975+t55913*t55846*(t55935+t55974-t55915*t55973*t55967*t55968-a1p*c*c0p*t55924*t55819*(2.0/3.0)))-t55832*(t55938-t55852*t55890*t55884*t55885+t55881*t55846*t55891*t55874*t55869*4.0+t55881*t55908*t55846*t55869*t55878-t55881*t55846*t55874*t55878*(t55938-t55852*t55890*t55884*t55885+(1.0/(t55861*t55861)*t55867*(b2f*c*t55843*(1.0/3.0)+b4f*t55808*t55882*(2.0/3.0)+b1f*c*t55843*t55883*(1.0/6.0)+b3f*c*t55843*t55835*(1.0/2.0)))/t55864-a1f*c*c0f*t55843*t55865*(2.0/3.0))+t55853*t55854*t55846*t55874*t55869*t55878*4.0+Aa*t55902*t55904*t55846*t55874*t55892*(t55881*t55891*4.0+t55853*t55854*t55878*4.0)*2.0+Aa*t55910*t55902*t55904*t55908*t55846*t55892*2.0-(t55910*t55904*t55846*t55874*t55892*1.0/(t55898*t55898)*(b2a*c*t55843*(1.0/3.0)+b4a*t55808*t55882*(2.0/3.0)+b1a*c*t55843*t55883*(1.0/6.0)+b3a*c*t55843*t55835*(1.0/2.0)))/t55901+Aa*a1a*c*t55910*t55902*t55843*t55846*t55874*t55892*(2.0/3.0))-t55913*t55846*t55956)-t55985*(t55937+t55913*t55846*(t55936-c0p*t55821*t55819*2.0))-(rho_b*t55987+rho_a*(t55955-t55913*t55846*(t55955-c0f*log((t55847*(1.0/2.0))/(b1f*t55941+b3f*t55942+b2f*c*t55939+b4f*t55808*t55943)+1.0)*(a1f*c*t55939+1.0)*2.0))-t55832*(t55880+t55957+t55958))*(ccab1*gamma_bb*gcab*t55961*t55962*(4.0/3.0)-ccab2*t55831*t55827*1.0/(t55965*t55965)*(gamma_bb*gcab*t55962*(8.0/3.0)+gamma_bb*t55826*t55827*t55962*(8.0/3.0))-ccab1*gamma_bb*1.0/(t55960*t55960)*t55826*t55827*t55962*(4.0/3.0)+ccab2*gamma_bb*t55826*t55827*t55962*t55966*(8.0/3.0))+rho_b*t55987*(ccaa1*gamma_bb*gcaa*t55962*t55978*(8.0/3.0)+ccaa2*t55823*t55824*t55983*t55988*(1.6E1/3.0)-ccaa1*t55823*t55824*1.0/(t55977*t55977)*t55988*(8.0/3.0)-ccaa2*t55823*t55824*t55825*1.0/(t55982*t55982)*(gamma_bb*gcaa*t55962*(1.6E1/3.0)+t55823*t55824*t55988*(1.6E1/3.0)))+rho_b*t55985*(-t55935+t55975+t55913*t55846*(t55935+t55974-t55975-t55915*t55973*t55967*t55968));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t55990 = 1.0/pow(rho_a,1.0/3.0);
                double t55991 = c*t55990;
                double t55992 = sqrt(t55991);
                double t55993 = pow(t55991,3.0/2.0);
                double t55994 = c*c;
                double t55995 = 1.0/pow(rho_a,2.0/3.0);
                double t55996 = 1.0/c0p;
                double t55997 = b1p*t55992;
                double t55998 = b3p*t55993;
                double t55999 = b4p*t55994*t55995;
                double t56000 = b2p*c*t55990;
                double t56001 = t55997+t55998+t55999+t56000;
                double t56002 = 1.0/t56001;
                double t56003 = t55996*t56002*(1.0/2.0);
                double t56004 = t56003+1.0;
                double t56005 = log(t56004);
                double t56006 = a1p*c*t55990;
                double t56007 = t56006+1.0;
                double t56008 = pow(2.0,1.0/3.0);
                double t56009 = t56008*2.0;
                double t56010 = t56009-2.0;
                double t56011 = two_13*2.0;
                double t56012 = t56011-2.0;
                double t56013 = 1.0/t56012;
                double t56014 = 1.0/c0f;
                double t56015 = 1.0/pow(rho_b,1.0/3.0);
                double t56016 = c*t56015;
                double t56017 = sqrt(t56016);
                double t56018 = pow(t56016,3.0/2.0);
                double t56019 = 1.0/pow(rho_b,2.0/3.0);
                double t56020 = b1p*t56017;
                double t56021 = b3p*t56018;
                double t56022 = b4p*t55994*t56019;
                double t56023 = b2p*c*t56015;
                double t56024 = t56020+t56021+t56022+t56023;
                double t56025 = 1.0/t56024;
                double t56026 = t55996*t56025*(1.0/2.0);
                double t56027 = t56026+1.0;
                double t56028 = log(t56027);
                double t56029 = a1p*c*t56015;
                double t56030 = t56029+1.0;
                double t56031 = c0p*t56030*t56028*2.0;
                double t56032 = rho_a+rho_b;
                double t56033 = 1.0/pow(t56032,1.0/3.0);
                double t56034 = c*t56033;
                double t56035 = sqrt(t56034);
                double t56036 = pow(t56034,3.0/2.0);
                double t56037 = 1.0/pow(t56032,2.0/3.0);
                double t56038 = b1p*t56035;
                double t56039 = b3p*t56036;
                double t56040 = b4p*t55994*t56037;
                double t56041 = b2p*c*t56033;
                double t56042 = t56040+t56041+t56038+t56039;
                double t56043 = 1.0/t56042;
                double t56044 = t55996*t56043*(1.0/2.0);
                double t56045 = t56044+1.0;
                double t56046 = log(t56045);
                double t56047 = a1p*c*t56033;
                double t56048 = t56047+1.0;
                double t56049 = c0p*t56046*t56048*2.0;
                double t56050 = rho_a-rho_b;
                double t56051 = t56050*t56050;
                double t56052 = 1.0/t56032;
                double t56053 = t56050*t56052;
                double t56054 = 1.0/(t56032*t56032*t56032*t56032);
                double t56055 = t56051*t56051;
                double t56056 = t56053+1.0;
                double t56057 = pow(t56056,4.0/3.0);
                double t56058 = -t56053+1.0;
                double t56059 = pow(t56058,4.0/3.0);
                double t56060 = t56057+t56059-2.0;
                double t56061 = 1.0/pow(rho_a,8.0/3.0);
                double t56062 = gamma_aa*t56061*(1.0/2.0);
                double t56063 = 1.0/pow(rho_b,8.0/3.0);
                double t56064 = gamma_bb*t56063*(1.0/2.0);
                double t56065 = t56062+t56064;
                double t56066 = gcab*t56065;
                double t56067 = t56066+1.0;
                double t56068 = gcab*gcab;
                double t56069 = t56065*t56065;
                double t56070 = t56068*t56069;
                double t56071 = gcab*t56065*2.0;
                double t56072 = t56070+t56071+1.0;
                double t56073 = c0p*t56005*t56007*2.0;
                double t56074 = b1f*t55992;
                double t56075 = b3f*t55993;
                double t56076 = b4f*t55994*t55995;
                double t56077 = b2f*c*t55990;
                double t56078 = t56074+t56075+t56076+t56077;
                double t56079 = 1.0/t56078;
                double t56080 = t56014*t56079*(1.0/2.0);
                double t56081 = t56080+1.0;
                double t56082 = log(t56081);
                double t56083 = a1f*c*t55990;
                double t56084 = t56083+1.0;
                double t56085 = t56073-c0f*t56082*t56084*2.0;
                double t56086 = t56073-t56010*t56013*t56085;
                double t56087 = gcaa*gcaa;
                double t56088 = 1.0/pow(rho_a,1.6E1/3.0);
                double t56089 = gamma_aa*gcaa*t56061;
                double t56090 = t56089+1.0;
                double t56091 = gamma_aa*gamma_aa;
                double t56092 = gamma_aa*gcaa*t56061*2.0;
                double t56093 = t56091*t56087*t56088;
                double t56094 = t56092+t56093+1.0;
                v_gamma_aa[Q] += scale * (rho_a*t56086+rho_b*(t56031-t56010*t56013*(t56031-c0f*log((t56014*(1.0/2.0))/(b1f*t56017+b3f*t56018+b2f*c*t56015+b4f*t55994*t56019)+1.0)*(a1f*c*t56015+1.0)*2.0))-t56032*(t56049-t56013*t56060*t56054*t56055*(t56049-c0f*log((t56014*(1.0/2.0))/(b1f*t56035+b3f*t56036+b2f*c*t56033+b4f*t55994*t56037)+1.0)*(a1f*c*t56033+1.0)*2.0)+(Aa*t56013*t56060*log((1.0/2.0)/(Aa*(b1a*t56035+b3a*t56036+b2a*c*t56033+b4a*t55994*t56037))+1.0)*(t56054*t56055-1.0)*(a1a*c*t56033+1.0)*2.0)/d2fz0))*((ccab1*gcab*t56061*(1.0/2.0))/t56067-ccab2*1.0/(t56072*t56072)*t56068*t56069*(gcab*t56061+t56061*t56065*t56068)+(ccab2*t56061*t56065*t56068)/t56072-ccab1*t56061*t56065*1.0/(t56067*t56067)*t56068*(1.0/2.0))-rho_a*t56086*((ccaa1*gcaa*t56061)/t56090-ccaa1*gamma_aa*1.0/(t56090*t56090)*t56087*t56088+(ccaa2*gamma_aa*t56087*t56088*2.0)/t56094-ccaa2*t56091*1.0/(t56094*t56094)*t56087*t56088*(gcaa*t56061*2.0+gamma_aa*t56087*t56088*2.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t56097 = 1.0/pow(rho_a,1.0/3.0);
                double t56098 = c*t56097;
                double t56099 = sqrt(t56098);
                double t56100 = pow(t56098,3.0/2.0);
                double t56101 = c*c;
                double t56102 = 1.0/pow(rho_a,2.0/3.0);
                double t56103 = 1.0/c0p;
                double t56104 = b1p*t56099;
                double t56105 = b3p*t56100;
                double t56106 = b4p*t56101*t56102;
                double t56107 = b2p*c*t56097;
                double t56108 = t56104+t56105+t56106+t56107;
                double t56109 = 1.0/t56108;
                double t56110 = t56103*t56109*(1.0/2.0);
                double t56111 = t56110+1.0;
                double t56112 = log(t56111);
                double t56113 = a1p*c*t56097;
                double t56114 = t56113+1.0;
                double t56115 = pow(2.0,1.0/3.0);
                double t56116 = t56115*2.0;
                double t56117 = t56116-2.0;
                double t56118 = two_13*2.0;
                double t56119 = t56118-2.0;
                double t56120 = 1.0/t56119;
                double t56121 = 1.0/c0f;
                double t56122 = 1.0/pow(rho_b,1.0/3.0);
                double t56123 = c*t56122;
                double t56124 = sqrt(t56123);
                double t56125 = pow(t56123,3.0/2.0);
                double t56126 = 1.0/pow(rho_b,2.0/3.0);
                double t56127 = b1p*t56124;
                double t56128 = b3p*t56125;
                double t56129 = b4p*t56101*t56126;
                double t56130 = b2p*c*t56122;
                double t56131 = t56130+t56127+t56128+t56129;
                double t56132 = 1.0/t56131;
                double t56133 = t56103*t56132*(1.0/2.0);
                double t56134 = t56133+1.0;
                double t56135 = log(t56134);
                double t56136 = a1p*c*t56122;
                double t56137 = t56136+1.0;
                double t56138 = c0p*t56135*t56137*2.0;
                double t56139 = rho_a+rho_b;
                double t56140 = 1.0/pow(t56139,1.0/3.0);
                double t56141 = c*t56140;
                double t56142 = sqrt(t56141);
                double t56143 = pow(t56141,3.0/2.0);
                double t56144 = 1.0/pow(t56139,2.0/3.0);
                double t56145 = b1p*t56142;
                double t56146 = b3p*t56143;
                double t56147 = b4p*t56101*t56144;
                double t56148 = b2p*c*t56140;
                double t56149 = t56145+t56146+t56147+t56148;
                double t56150 = 1.0/t56149;
                double t56151 = t56103*t56150*(1.0/2.0);
                double t56152 = t56151+1.0;
                double t56153 = log(t56152);
                double t56154 = a1p*c*t56140;
                double t56155 = t56154+1.0;
                double t56156 = c0p*t56153*t56155*2.0;
                double t56157 = rho_a-rho_b;
                double t56158 = t56157*t56157;
                double t56159 = 1.0/t56139;
                double t56160 = t56157*t56159;
                double t56161 = 1.0/(t56139*t56139*t56139*t56139);
                double t56162 = t56158*t56158;
                double t56163 = t56160+1.0;
                double t56164 = pow(t56163,4.0/3.0);
                double t56165 = -t56160+1.0;
                double t56166 = pow(t56165,4.0/3.0);
                double t56167 = t56164+t56166-2.0;
                double t56168 = 1.0/pow(rho_b,8.0/3.0);
                double t56169 = 1.0/pow(rho_a,8.0/3.0);
                double t56170 = gamma_aa*t56169*(1.0/2.0);
                double t56171 = gamma_bb*t56168*(1.0/2.0);
                double t56172 = t56170+t56171;
                double t56173 = gcab*t56172;
                double t56174 = t56173+1.0;
                double t56175 = gcab*gcab;
                double t56176 = t56172*t56172;
                double t56177 = t56175*t56176;
                double t56178 = gcab*t56172*2.0;
                double t56179 = t56177+t56178+1.0;
                double t56180 = c0p*t56112*t56114*2.0;
                double t56181 = b1f*t56124;
                double t56182 = b3f*t56125;
                double t56183 = b4f*t56101*t56126;
                double t56184 = b2f*c*t56122;
                double t56185 = t56181+t56182+t56183+t56184;
                double t56186 = 1.0/t56185;
                double t56187 = t56121*t56186*(1.0/2.0);
                double t56188 = t56187+1.0;
                double t56189 = log(t56188);
                double t56190 = a1f*c*t56122;
                double t56191 = t56190+1.0;
                double t56192 = t56138-c0f*t56191*t56189*2.0;
                double t56193 = t56138-t56120*t56117*t56192;
                double t56194 = gcaa*gcaa;
                double t56195 = 1.0/pow(rho_b,1.6E1/3.0);
                double t56196 = gamma_bb*gcaa*t56168;
                double t56197 = t56196+1.0;
                double t56198 = gamma_bb*gamma_bb;
                double t56199 = gamma_bb*gcaa*t56168*2.0;
                double t56200 = t56194*t56195*t56198;
                double t56201 = t56200+t56199+1.0;
                v_gamma_bb[Q] += scale * (rho_b*t56193+rho_a*(t56180-t56120*t56117*(t56180-c0f*log((t56121*(1.0/2.0))/(b1f*t56099+b3f*t56100+b2f*c*t56097+b4f*t56101*t56102)+1.0)*(a1f*c*t56097+1.0)*2.0))-t56139*(t56156-t56120*t56161*t56162*t56167*(t56156-c0f*log((t56121*(1.0/2.0))/(b1f*t56142+b3f*t56143+b2f*c*t56140+b4f*t56101*t56144)+1.0)*(a1f*c*t56140+1.0)*2.0)+(Aa*t56120*t56167*log((1.0/2.0)/(Aa*(b1a*t56142+b3a*t56143+b2a*c*t56140+b4a*t56101*t56144))+1.0)*(t56161*t56162-1.0)*(a1a*c*t56140+1.0)*2.0)/d2fz0))*((ccab1*gcab*t56168*(1.0/2.0))/t56174-ccab2*t56175*t56176*1.0/(t56179*t56179)*(gcab*t56168+t56172*t56175*t56168)-ccab1*t56172*1.0/(t56174*t56174)*t56175*t56168*(1.0/2.0)+(ccab2*t56172*t56175*t56168)/t56179)-rho_b*t56193*((ccaa1*gcaa*t56168)/t56197+(ccaa2*gamma_bb*t56194*t56195*2.0)/t56201-ccaa1*gamma_bb*t56194*t56195*1.0/(t56197*t56197)-ccaa2*1.0/(t56201*t56201)*t56194*t56195*t56198*(gcaa*t56168*2.0+gamma_bb*t56194*t56195*2.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t56205 = 1.0/pow(rho_a,1.0/3.0);
                double t56206 = c*t56205;
                double t56207 = sqrt(t56206);
                double t56208 = pow(t56206,3.0/2.0);
                double t56209 = c*c;
                double t56210 = 1.0/pow(rho_a,2.0/3.0);
                double t56211 = 1.0/c0p;
                double t56212 = b1p*t56207;
                double t56213 = b3p*t56208;
                double t56214 = b4p*t56210*t56209;
                double t56215 = b2p*c*t56205;
                double t56216 = t56212+t56213+t56214+t56215;
                double t56217 = 1.0/t56216;
                double t56218 = t56211*t56217*(1.0/2.0);
                double t56219 = t56218+1.0;
                double t56220 = log(t56219);
                double t56221 = a1p*c*t56205;
                double t56222 = t56221+1.0;
                double t56223 = 1.0/pow(rho_a,8.0/3.0);
                double t56224 = gamma_aa*gamma_aa;
                double t56225 = gcaa*gcaa;
                double t56226 = 1.0/pow(rho_a,1.9E1/3.0);
                double t56227 = gamma_aa*gcaa*t56223;
                double t56228 = t56227+1.0;
                double t56229 = 1.0/pow(rho_a,1.6E1/3.0);
                double t56230 = 1.0/pow(rho_a,1.1E1/3.0);
                double t56231 = gamma_aa*gcaa*t56223*2.0;
                double t56232 = t56224*t56225*t56229;
                double t56233 = t56231+t56232+1.0;
                double t56236 = gamma_aa*t56223*(1.0/2.0);
                double t56237 = 1.0/pow(rho_b,8.0/3.0);
                double t56238 = gamma_bb*t56237*(1.0/2.0);
                double t56234 = t56236+t56238;
                double t56235 = gcab*gcab;
                double t56239 = t56234*t56234;
                double t56240 = rho_a+rho_b;
                double t56241 = 1.0/pow(t56240,1.0/3.0);
                double t56242 = c*t56241;
                double t56243 = sqrt(t56242);
                double t56244 = b1p*t56243;
                double t56245 = pow(t56242,3.0/2.0);
                double t56246 = b3p*t56245;
                double t56247 = 1.0/pow(t56240,2.0/3.0);
                double t56248 = b4p*t56209*t56247;
                double t56249 = b2p*c*t56241;
                double t56250 = t56244+t56246+t56248+t56249;
                double t56251 = 1.0/pow(t56240,7.0/3.0);
                double t56252 = 1.0/pow(t56240,8.0/3.0);
                double t56253 = 1.0/sqrt(t56242);
                double t56254 = a1p*c*t56241;
                double t56255 = t56254+1.0;
                double t56256 = 1.0/t56250;
                double t56257 = t56211*t56256*(1.0/2.0);
                double t56258 = t56257+1.0;
                double t56259 = 1.0/t56258;
                double t56260 = 1.0/pow(t56240,4.0/3.0);
                double t56300 = 1.0/pow(t56240,5.0/3.0);
                double t56302 = b4p*t56300*t56209*(2.0/3.0);
                double t56303 = b2p*c*t56260*(1.0/3.0);
                double t56304 = b1p*c*t56260*t56253*(1.0/6.0);
                double t56305 = b3p*c*t56260*t56243*(1.0/2.0);
                double t56261 = t56302+t56303+t56304+t56305;
                double t56262 = two_13*2.0;
                double t56263 = t56262-2.0;
                double t56264 = 1.0/t56263;
                double t56265 = 1.0/c0f;
                double t56266 = rho_a-rho_b;
                double t56267 = 1.0/t56240;
                double t56268 = t56266*t56267;
                double t56269 = b1f*t56243;
                double t56270 = b3f*t56245;
                double t56271 = b4f*t56209*t56247;
                double t56272 = b2f*c*t56241;
                double t56273 = t56270+t56271+t56272+t56269;
                double t56274 = 1.0/t56273;
                double t56275 = t56265*t56274*(1.0/2.0);
                double t56276 = t56275+1.0;
                double t56277 = log(t56276);
                double t56278 = a1f*c*t56241;
                double t56279 = t56278+1.0;
                double t56280 = log(t56258);
                double t56288 = c0f*t56277*t56279*2.0;
                double t56289 = c0p*t56280*t56255*2.0;
                double t56281 = t56288-t56289;
                double t56282 = t56266*t56266;
                double t56283 = t56268+1.0;
                double t56284 = pow(t56283,4.0/3.0);
                double t56285 = -t56268+1.0;
                double t56286 = pow(t56285,4.0/3.0);
                double t56287 = t56284+t56286-2.0;
                double t56290 = 1.0/(t56240*t56240);
                double t56294 = t56290*t56266;
                double t56291 = t56267-t56294;
                double t56292 = 1.0/(t56240*t56240*t56240*t56240);
                double t56293 = pow(t56283,1.0/3.0);
                double t56295 = t56291*t56293*(4.0/3.0);
                double t56296 = pow(t56285,1.0/3.0);
                double t56328 = t56291*t56296*(4.0/3.0);
                double t56297 = -t56328+t56295;
                double t56298 = 1.0/(t56240*t56240*t56240*t56240*t56240);
                double t56299 = t56282*t56282;
                double t56301 = 1.0/(t56250*t56250);
                double t56306 = 1.0/t56276;
                double t56307 = 1.0/(t56273*t56273);
                double t56308 = b4f*t56300*t56209*(2.0/3.0);
                double t56309 = b2f*c*t56260*(1.0/3.0);
                double t56310 = b1f*c*t56260*t56253*(1.0/6.0);
                double t56311 = b3f*c*t56260*t56243*(1.0/2.0);
                double t56312 = t56310+t56311+t56308+t56309;
                double t56313 = t56301*t56261*t56255*t56259;
                double t56314 = a1f*c*c0f*t56260*t56277*(2.0/3.0);
                double t56315 = t56261*t56261;
                double t56316 = 1.0/pow(t56242,3.0/2.0);
                double t56317 = b4p*t56252*t56209*(1.0E1/9.0);
                double t56318 = b2p*c*t56251*(4.0/9.0);
                double t56319 = b1p*c*t56251*t56253*(2.0/9.0);
                double t56320 = b3p*c*t56251*t56243*(2.0/3.0);
                double t56321 = b3p*t56252*t56253*t56209*(1.0/1.2E1);
                double t56322 = t56320+t56321+t56317+t56318+t56319-b1p*t56252*t56316*t56209*(1.0/3.6E1);
                double t56323 = 1.0/(t56250*t56250*t56250);
                double t56324 = t56323*t56315*t56255*t56259*2.0;
                double t56325 = t56312*t56312;
                double t56326 = 1.0/(t56258*t56258);
                double t56327 = 1.0/(t56250*t56250*t56250*t56250);
                double t56416 = t56312*t56306*t56307*t56279;
                double t56417 = a1p*c*c0p*t56260*t56280*(2.0/3.0);
                double t56329 = t56313+t56314-t56416-t56417;
                double t56330 = t56290*2.0;
                double t56331 = 1.0/(t56240*t56240*t56240);
                double t56349 = t56331*t56266*2.0;
                double t56332 = t56330-t56349;
                double t56333 = t56291*t56291;
                double t56334 = a1p*c*c0p*t56251*t56280*(8.0/9.0);
                double t56335 = 1.0/(t56240*t56240*t56240*t56240*t56240*t56240);
                double t56336 = 1.0/d2fz0;
                double t56337 = 1.0/Aa;
                double t56338 = b1a*t56243;
                double t56339 = b3a*t56245;
                double t56340 = b4a*t56209*t56247;
                double t56341 = b2a*c*t56241;
                double t56342 = t56340+t56341+t56338+t56339;
                double t56343 = 1.0/t56342;
                double t56344 = t56343*t56337*(1.0/2.0);
                double t56345 = t56344+1.0;
                double t56346 = log(t56345);
                double t56347 = a1a*c*t56241;
                double t56348 = t56347+1.0;
                double t56350 = t56332*t56296*(4.0/3.0);
                double t56351 = 1.0/pow(t56283,2.0/3.0);
                double t56352 = t56333*t56351*(4.0/9.0);
                double t56353 = 1.0/pow(t56285,2.0/3.0);
                double t56354 = t56333*t56353*(4.0/9.0);
                double t56355 = t56350+t56352+t56354-t56332*t56293*(4.0/3.0);
                double t56356 = t56298*t56299*4.0;
                double t56368 = t56282*t56292*t56266*4.0;
                double t56357 = t56356-t56368;
                double t56358 = 1.0/t56345;
                double t56359 = t56292*t56299;
                double t56360 = t56359-1.0;
                double t56361 = 1.0/(t56342*t56342);
                double t56362 = b4a*t56300*t56209*(2.0/3.0);
                double t56363 = b2a*c*t56260*(1.0/3.0);
                double t56364 = b1a*c*t56260*t56253*(1.0/6.0);
                double t56365 = b3a*c*t56260*t56243*(1.0/2.0);
                double t56366 = t56362+t56363+t56364+t56365;
                double t56367 = t56366*t56366;
                double t56369 = t56301*t56322*t56255*t56259;
                double t56370 = pow(2.0,1.0/3.0);
                double t56371 = t56370*2.0;
                double t56372 = t56371-2.0;
                double t56373 = a1f*c*t56205;
                double t56374 = t56373+1.0;
                double t56375 = b1f*t56207;
                double t56376 = b3f*t56208;
                double t56377 = b4f*t56210*t56209;
                double t56378 = b2f*c*t56205;
                double t56379 = t56375+t56376+t56377+t56378;
                double t56380 = 1.0/t56379;
                double t56381 = t56380*t56265*(1.0/2.0);
                double t56382 = t56381+1.0;
                double t56383 = 1.0/pow(rho_a,4.0/3.0);
                double t56385 = 1.0/pow(rho_a,5.0/3.0);
                double t56386 = 1.0/sqrt(t56206);
                double t56392 = b4f*t56209*t56385*(2.0/3.0);
                double t56393 = b2f*c*t56383*(1.0/3.0);
                double t56394 = b1f*c*t56383*t56386*(1.0/6.0);
                double t56395 = b3f*c*t56207*t56383*(1.0/2.0);
                double t56384 = t56392+t56393+t56394+t56395;
                double t56397 = b4p*t56209*t56385*(2.0/3.0);
                double t56398 = b2p*c*t56383*(1.0/3.0);
                double t56399 = b1p*c*t56383*t56386*(1.0/6.0);
                double t56400 = b3p*c*t56207*t56383*(1.0/2.0);
                double t56387 = t56400+t56397+t56398+t56399;
                double t56388 = 1.0/t56382;
                double t56389 = 1.0/pow(rho_a,7.0/3.0);
                double t56390 = 1.0/t56219;
                double t56391 = 1.0/pow(t56206,3.0/2.0);
                double t56396 = t56384*t56384;
                double t56401 = t56387*t56387;
                double t56402 = log(t56382);
                double t56403 = 1.0/(t56379*t56379);
                double t56404 = 1.0/(t56216*t56216);
                double t56405 = 1.0/(t56216*t56216*t56216);
                double t56406 = t56401*t56222*t56405*t56390*2.0;
                double t56407 = b4p*t56223*t56209*(1.0E1/9.0);
                double t56408 = b2p*c*t56389*(4.0/9.0);
                double t56409 = b3p*t56223*t56209*t56386*(1.0/1.2E1);
                double t56410 = b1p*c*t56386*t56389*(2.0/9.0);
                double t56411 = b3p*c*t56207*t56389*(2.0/3.0);
                double t56473 = b1p*t56223*t56209*t56391*(1.0/3.6E1);
                double t56412 = t56410+t56411+t56407+t56408+t56409-t56473;
                double t56413 = 1.0/(t56219*t56219);
                double t56414 = 1.0/(t56216*t56216*t56216*t56216);
                double t56415 = a1p*c*c0p*t56220*t56389*(8.0/9.0);
                double t56418 = t56211*t56315*t56326*t56255*t56327*(1.0/2.0);
                double t56419 = gcab*t56234;
                double t56420 = t56419+1.0;
                double t56421 = 1.0/t56420;
                double t56422 = t56235*t56239;
                double t56423 = gcab*t56234*2.0;
                double t56424 = t56422+t56423+1.0;
                double t56425 = 1.0/t56424;
                double t56426 = t56222*t56404*t56390*t56387;
                double t56427 = a1f*c*c0f*t56402*t56383*(2.0/3.0);
                double t56429 = a1p*c*c0p*t56220*t56383*(2.0/3.0);
                double t56432 = t56403*t56374*t56384*t56388;
                double t56428 = -t56432+t56426+t56427-t56429;
                double t56430 = c0f*t56402*t56374*2.0;
                double t56431 = c0p*t56220*t56222*2.0;
                double t56433 = 1.0/t56228;
                double t56434 = 1.0/t56233;
                double t56435 = t56430-t56431;
                double t56436 = 1.0/pow(rho_b,1.0/3.0);
                double t56437 = c*t56436;
                double t56438 = sqrt(t56437);
                double t56439 = pow(t56437,3.0/2.0);
                double t56440 = 1.0/pow(rho_b,2.0/3.0);
                double t56441 = b1p*t56438;
                double t56442 = b3p*t56439;
                double t56443 = b4p*t56440*t56209;
                double t56444 = b2p*c*t56436;
                double t56445 = t56441+t56442+t56443+t56444;
                double t56446 = 1.0/t56445;
                double t56447 = t56211*t56446*(1.0/2.0);
                double t56448 = t56447+1.0;
                double t56449 = log(t56448);
                double t56450 = a1p*c*t56436;
                double t56451 = t56450+1.0;
                double t56452 = c0p*t56451*t56449*2.0;
                double t56453 = t56281*t56264*t56292*t56287*t56299;
                double t56454 = Aa*t56360*t56264*t56336*t56346*t56348*t56287*2.0;
                double t56455 = 1.0/(t56420*t56420);
                double t56456 = 1.0/pow(rho_a,2.2E1/3.0);
                double t56457 = gamma_aa*gcab*t56230*(8.0/3.0);
                double t56458 = gamma_aa*t56230*t56234*t56235*(8.0/3.0);
                double t56459 = t56457+t56458;
                double t56460 = 1.0/pow(rho_a,1.4E1/3.0);
                double t56461 = 1.0/(t56424*t56424);
                double t56462 = ccaa1*gamma_aa*gcaa*t56223*t56433;
                double t56463 = ccaa2*t56224*t56225*t56434*t56229;
                double t56464 = ccaa0+t56462+t56463;
                double t56465 = 1.0/(t56379*t56379*t56379);
                double t56466 = b4f*t56223*t56209*(1.0E1/9.0);
                double t56467 = b2f*c*t56389*(4.0/9.0);
                double t56468 = b3f*t56223*t56209*t56386*(1.0/1.2E1);
                double t56469 = b1f*c*t56386*t56389*(2.0/9.0);
                double t56470 = b3f*c*t56207*t56389*(2.0/3.0);
                double t56471 = t56470+t56466+t56467+t56468+t56469-b1f*t56223*t56209*t56391*(1.0/3.6E1);
                double t56472 = t56403*t56471*t56374*t56388;
                double t56474 = t56222*t56412*t56404*t56390;
                double t56475 = 1.0/(t56382*t56382);
                double t56476 = 1.0/(t56379*t56379*t56379*t56379);
                double t56477 = t56265*t56374*t56475*t56476*t56396*(1.0/2.0);
                double t56478 = t56211*t56401*t56222*t56413*t56414*(1.0/2.0);
                double t56479 = a1f*c*t56403*t56383*t56384*t56388*(2.0/3.0);
                double t56480 = a1p*c*t56404*t56390*t56383*t56387*(2.0/3.0);
                double t56481 = t56264*t56372*t56435;
                double t56482 = t56431+t56481;
                double t56483 = 1.0/(t56228*t56228);
                double t56484 = gamma_aa*gcaa*t56230*(1.6E1/3.0);
                double t56485 = t56224*t56225*t56226*(1.6E1/3.0);
                double t56486 = t56484+t56485;
                double t56487 = 1.0/(t56233*t56233);
                double t56488 = t56432-t56426-t56427+t56429;
                double t56489 = t56264*t56372*t56488;
                double t56490 = t56426-t56429+t56489;
                double t56491 = ccaa1*gamma_aa*gcaa*t56230*t56433*(8.0/3.0);
                double t56492 = ccaa2*t56224*t56225*t56226*t56434*(1.6E1/3.0);
                double t56493 = t56491+t56492-ccaa1*t56224*t56225*t56226*t56483*(8.0/3.0)-ccaa2*t56224*t56225*t56229*t56486*t56487;
                v_rho_a_rho_a[Q] += scale * t56490*t56464*-2.0+t56493*(t56431+t56264*t56372*(t56430-c0p*t56220*t56222*2.0))*2.0-(ccab0+ccab1*gcab*t56421*t56234+ccab2*t56235*t56425*t56239)*(-t56240*(-t56324-t56334+t56418+t56369+t56264*t56292*t56287*t56299*(t56324+t56334-t56418-t56369-t56306*t56325*1.0/(t56273*t56273*t56273)*t56279*2.0+t56306*t56307*t56279*(b2f*c*t56251*(4.0/9.0)+b4f*t56252*t56209*(1.0E1/9.0)+b1f*c*t56251*t56253*(2.0/9.0)+b3f*c*t56251*t56243*(2.0/3.0)-b1f*t56252*t56316*t56209*(1.0/3.6E1)+b3f*t56252*t56253*t56209*(1.0/1.2E1))+t56325*1.0/(t56273*t56273*t56273*t56273)*t56265*1.0/(t56276*t56276)*t56279*(1.0/2.0)-a1f*c*c0f*t56251*t56277*(8.0/9.0)+a1f*c*t56312*t56260*t56306*t56307*(2.0/3.0)-a1p*c*t56301*t56260*t56261*t56259*(2.0/3.0))-t56281*t56264*t56282*t56292*t56287*1.2E1-t56281*t56264*t56292*t56355*t56299-t56281*t56335*t56264*t56287*t56299*2.0E1+t56264*t56292*t56329*t56297*t56299*2.0+t56281*t56264*t56297*t56298*t56299*8.0-t56264*t56329*t56287*t56298*t56299*8.0-t56281*t56264*t56282*t56292*t56266*t56297*8.0+t56264*t56282*t56292*t56266*t56329*t56287*8.0+t56281*t56264*t56282*t56266*t56287*t56298*3.2E1+a1p*c*t56301*t56260*t56261*t56259*(2.0/3.0)-Aa*t56360*t56264*t56336*t56346*t56355*t56348*2.0+Aa*t56264*t56336*t56346*t56348*t56357*t56297*4.0-Aa*t56264*t56336*t56346*t56348*t56287*(t56282*t56292*1.2E1+t56335*t56299*2.0E1-t56282*t56266*t56298*3.2E1)*2.0-t56360*t56361*t56264*t56336*t56348*t56366*t56358*t56297*2.0+t56361*t56264*t56336*t56348*t56357*t56366*t56358*t56287*2.0-1.0/(t56342*t56342*t56342)*t56360*t56264*t56336*t56348*t56358*t56367*t56287*2.0+t56360*t56361*t56264*t56336*t56348*t56358*t56287*(b2a*c*t56251*(4.0/9.0)+b4a*t56252*t56209*(1.0E1/9.0)+b1a*c*t56251*t56253*(2.0/9.0)+b3a*c*t56251*t56243*(2.0/3.0)-b1a*t56252*t56316*t56209*(1.0/3.6E1)+b3a*t56252*t56253*t56209*(1.0/1.2E1))-Aa*a1a*c*t56251*t56360*t56264*t56336*t56346*t56287*(8.0/9.0)+Aa*a1a*c*t56260*t56360*t56264*t56336*t56346*t56297*(4.0/3.0)-Aa*a1a*c*t56260*t56264*t56336*t56346*t56357*t56287*(4.0/3.0)+1.0/(t56342*t56342*t56342*t56342)*t56360*t56264*t56336*1.0/(t56345*t56345)*t56337*t56348*t56367*t56287*(1.0/2.0)+a1a*c*t56260*t56360*t56361*t56264*t56336*t56366*t56358*t56287*(2.0/3.0))+rho_a*(-t56406-t56415+t56480+t56474+t56478+t56264*t56372*(t56406+t56415+t56472+t56477+t56479-t56222*t56412*t56404*t56390-t56374*t56465*t56396*t56388*2.0-a1f*c*c0f*t56402*t56389*(8.0/9.0)-t56211*t56401*t56222*t56413*t56414*(1.0/2.0)-a1p*c*t56404*t56390*t56383*t56387*(2.0/3.0)))+t56264*t56372*t56428*2.0+t56301*t56261*t56255*t56259*2.0-t56222*t56404*t56390*t56387*2.0+a1p*c*c0p*t56220*t56383*(4.0/3.0)-a1p*c*c0p*t56260*t56280*(4.0/3.0)+t56281*t56264*t56292*t56297*t56299*2.0-t56264*t56292*t56329*t56287*t56299*2.0-t56281*t56264*t56287*t56298*t56299*8.0+t56281*t56264*t56282*t56292*t56266*t56287*8.0+Aa*t56360*t56264*t56336*t56346*t56348*t56297*4.0-Aa*t56264*t56336*t56346*t56348*t56357*t56287*4.0+t56360*t56361*t56264*t56336*t56348*t56366*t56358*t56287*2.0-Aa*a1a*c*t56260*t56360*t56264*t56336*t56346*t56287*(4.0/3.0))+(ccab1*gamma_aa*gcab*t56230*t56421*(4.0/3.0)-ccab2*t56235*t56461*t56239*t56459+ccab2*gamma_aa*t56230*t56234*t56235*t56425*(8.0/3.0)-ccab1*gamma_aa*t56230*t56234*t56235*t56455*(4.0/3.0))*(-t56431+t56453+t56454+t56289+rho_a*(-t56426+t56429+t56264*t56372*t56428)+t56240*(t56313-t56417+t56281*t56264*t56292*t56297*t56299-t56264*t56292*t56329*t56287*t56299-t56281*t56264*t56287*t56298*t56299*4.0+t56281*t56264*t56282*t56292*t56266*t56287*4.0+Aa*t56360*t56264*t56336*t56346*t56348*t56297*2.0-Aa*t56264*t56336*t56346*t56348*t56357*t56287*2.0+t56360*t56361*t56264*t56336*t56348*t56366*t56358*t56287-Aa*a1a*c*t56260*t56360*t56264*t56336*t56346*t56287*(2.0/3.0))-t56264*t56372*t56435)*2.0+(rho_a*t56482+rho_b*(t56452-t56264*t56372*(t56452-c0f*log((t56265*(1.0/2.0))/(b1f*t56438+b3f*t56439+b2f*c*t56436+b4f*t56440*t56209)+1.0)*(a1f*c*t56436+1.0)*2.0))-t56240*(t56453+t56454+t56289))*(-ccab2*t56235*t56461*t56239*(gamma_aa*gcab*t56460*(8.8E1/9.0)+t56224*t56235*t56456*(3.2E1/9.0)+gamma_aa*t56234*t56235*t56460*(8.8E1/9.0))+ccab2*t56235*1.0/(t56424*t56424*t56424)*t56239*(t56459*t56459)*2.0+ccab1*gamma_aa*gcab*t56421*t56460*(4.4E1/9.0)+ccab2*t56224*t56235*t56425*t56456*(3.2E1/9.0)-ccab1*t56224*t56235*t56455*t56456*(3.2E1/9.0)+ccab2*gamma_aa*t56234*t56235*t56460*t56425*(8.8E1/9.0)-ccab1*gamma_aa*t56234*t56235*t56460*t56455*(4.4E1/9.0)-ccab2*gamma_aa*t56230*t56234*t56235*t56461*t56459*(1.6E1/3.0)+ccab1*gcab*1.0/(t56420*t56420*t56420)*t56224*t56234*t56235*t56456*(3.2E1/9.0))-rho_a*t56482*(ccaa1*gamma_aa*gcaa*t56433*t56460*(8.8E1/9.0)+ccaa2*t56224*t56225*t56434*t56456*(3.04E2/9.0)-ccaa1*t56224*t56225*t56456*t56483*2.4E1-ccaa2*t56224*t56225*t56226*t56486*t56487*(3.2E1/3.0)-ccaa2*t56224*t56225*t56229*t56487*(gamma_aa*gcaa*t56460*(1.76E2/9.0)+t56224*t56225*t56456*(3.04E2/9.0))+ccaa2*t56224*1.0/(t56233*t56233*t56233)*t56225*t56229*(t56486*t56486)*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*t56224*t56225*1.0/(t56228*t56228*t56228)*(1.28E2/9.0))+rho_a*t56464*(-t56406-t56415+t56480+t56474+t56478+t56264*t56372*(t56406+t56415-t56480+t56472-t56474+t56477-t56478+t56479-t56374*t56465*t56396*t56388*2.0-a1f*c*c0f*t56402*t56389*(8.0/9.0)))+rho_a*t56490*t56493*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t56495 = 1.0/pow(rho_a,1.0/3.0);
                double t56496 = c*t56495;
                double t56497 = sqrt(t56496);
                double t56498 = pow(t56496,3.0/2.0);
                double t56499 = c*c;
                double t56500 = 1.0/pow(rho_a,2.0/3.0);
                double t56501 = 1.0/c0p;
                double t56502 = b1p*t56497;
                double t56503 = b3p*t56498;
                double t56504 = b4p*t56500*t56499;
                double t56505 = b2p*c*t56495;
                double t56506 = t56502+t56503+t56504+t56505;
                double t56507 = 1.0/t56506;
                double t56508 = t56501*t56507*(1.0/2.0);
                double t56509 = t56508+1.0;
                double t56510 = log(t56509);
                double t56511 = a1p*c*t56495;
                double t56512 = t56511+1.0;
                double t56513 = pow(2.0,1.0/3.0);
                double t56514 = t56513*2.0;
                double t56515 = t56514-2.0;
                double t56516 = two_13*2.0;
                double t56517 = t56516-2.0;
                double t56518 = 1.0/t56517;
                double t56519 = 1.0/c0f;
                double t56520 = 1.0/pow(rho_b,1.0/3.0);
                double t56521 = c*t56520;
                double t56522 = sqrt(t56521);
                double t56523 = pow(t56521,3.0/2.0);
                double t56524 = 1.0/pow(rho_b,2.0/3.0);
                double t56525 = b1p*t56522;
                double t56526 = b3p*t56523;
                double t56527 = b4p*t56524*t56499;
                double t56528 = b2p*c*t56520;
                double t56529 = t56525+t56526+t56527+t56528;
                double t56530 = 1.0/t56529;
                double t56531 = t56501*t56530*(1.0/2.0);
                double t56532 = t56531+1.0;
                double t56533 = log(t56532);
                double t56534 = a1p*c*t56520;
                double t56535 = t56534+1.0;
                double t56536 = c0p*t56533*t56535*2.0;
                double t56537 = rho_a+rho_b;
                double t56538 = 1.0/pow(t56537,1.0/3.0);
                double t56539 = c*t56538;
                double t56540 = sqrt(t56539);
                double t56541 = pow(t56539,3.0/2.0);
                double t56542 = 1.0/pow(t56537,2.0/3.0);
                double t56543 = b1p*t56540;
                double t56544 = b3p*t56541;
                double t56545 = b4p*t56542*t56499;
                double t56546 = b2p*c*t56538;
                double t56547 = t56543+t56544+t56545+t56546;
                double t56548 = 1.0/t56547;
                double t56549 = t56501*t56548*(1.0/2.0);
                double t56550 = t56549+1.0;
                double t56551 = log(t56550);
                double t56552 = a1p*c*t56538;
                double t56553 = t56552+1.0;
                double t56554 = c0p*t56551*t56553*2.0;
                double t56555 = rho_a-rho_b;
                double t56556 = t56555*t56555;
                double t56557 = 1.0/t56537;
                double t56558 = t56555*t56557;
                double t56559 = 1.0/(t56537*t56537*t56537*t56537);
                double t56560 = t56556*t56556;
                double t56561 = t56558+1.0;
                double t56562 = pow(t56561,4.0/3.0);
                double t56563 = -t56558+1.0;
                double t56564 = pow(t56563,4.0/3.0);
                double t56565 = t56562+t56564-2.0;
                double t56566 = gcab*gcab;
                double t56567 = 1.0/pow(rho_a,1.1E1/3.0);
                double t56568 = 1.0/pow(rho_b,1.1E1/3.0);
                double t56569 = 1.0/pow(rho_a,8.0/3.0);
                double t56570 = gamma_aa*t56569*(1.0/2.0);
                double t56571 = 1.0/pow(rho_b,8.0/3.0);
                double t56572 = gamma_bb*t56571*(1.0/2.0);
                double t56573 = t56570+t56572;
                double t56574 = t56573*t56573;
                double t56575 = t56574*t56566;
                double t56576 = gcab*t56573*2.0;
                double t56577 = t56575+t56576+1.0;
                double t56578 = gamma_aa*gcab*t56567*(8.0/3.0);
                double t56579 = gamma_aa*t56573*t56566*t56567*(8.0/3.0);
                double t56580 = t56578+t56579;
                double t56581 = gamma_bb*gcab*t56568*(8.0/3.0);
                double t56582 = gamma_bb*t56573*t56566*t56568*(8.0/3.0);
                double t56583 = t56581+t56582;
                double t56584 = 1.0/(t56577*t56577);
                double t56585 = gcab*t56573;
                double t56586 = t56585+1.0;
                double t56587 = 1.0/(t56586*t56586);
                double t56588 = 1.0/t56577;
                double t56589 = 1.0/pow(t56537,4.0/3.0);
                double t56590 = b1f*t56540;
                double t56591 = b3f*t56541;
                double t56592 = b4f*t56542*t56499;
                double t56593 = b2f*c*t56538;
                double t56594 = t56590+t56591+t56592+t56593;
                double t56595 = 1.0/t56594;
                double t56596 = t56519*t56595*(1.0/2.0);
                double t56597 = t56596+1.0;
                double t56598 = log(t56597);
                double t56599 = a1f*c*t56538;
                double t56600 = t56599+1.0;
                double t56602 = c0f*t56600*t56598*2.0;
                double t56601 = -t56602+t56554;
                double t56603 = 1.0/(t56537*t56537);
                double t56631 = t56603*t56555;
                double t56604 = -t56631+t56557;
                double t56605 = t56602-t56554;
                double t56606 = 1.0/pow(t56537,5.0/3.0);
                double t56607 = 1.0/sqrt(t56539);
                double t56608 = 1.0/t56550;
                double t56609 = 1.0/(t56547*t56547);
                double t56610 = b4p*t56606*t56499*(2.0/3.0);
                double t56611 = b2p*c*t56589*(1.0/3.0);
                double t56612 = b1p*c*t56607*t56589*(1.0/6.0);
                double t56613 = b3p*c*t56540*t56589*(1.0/2.0);
                double t56614 = t56610+t56611+t56612+t56613;
                double t56615 = t56614*t56553*t56608*t56609;
                double t56616 = 1.0/d2fz0;
                double t56617 = 1.0/Aa;
                double t56618 = b1a*t56540;
                double t56619 = b3a*t56541;
                double t56620 = b4a*t56542*t56499;
                double t56621 = b2a*c*t56538;
                double t56622 = t56620+t56621+t56618+t56619;
                double t56623 = 1.0/t56622;
                double t56624 = t56623*t56617*(1.0/2.0);
                double t56625 = t56624+1.0;
                double t56626 = log(t56625);
                double t56627 = a1a*c*t56538;
                double t56628 = t56627+1.0;
                double t56629 = 1.0/(t56537*t56537*t56537*t56537*t56537);
                double t56630 = pow(t56561,1.0/3.0);
                double t56632 = t56630*t56604*(4.0/3.0);
                double t56633 = pow(t56563,1.0/3.0);
                double t56712 = t56604*t56633*(4.0/3.0);
                double t56634 = -t56712+t56632;
                double t56635 = t56560*t56559;
                double t56636 = t56635-1.0;
                double t56637 = a1f*c*t56495;
                double t56638 = t56637+1.0;
                double t56639 = b1f*t56497;
                double t56640 = b3f*t56498;
                double t56641 = b4f*t56500*t56499;
                double t56642 = b2f*c*t56495;
                double t56643 = t56640+t56641+t56642+t56639;
                double t56644 = 1.0/t56643;
                double t56645 = t56644*t56519*(1.0/2.0);
                double t56646 = t56645+1.0;
                double t56647 = 1.0/pow(rho_a,4.0/3.0);
                double t56648 = 1.0/pow(rho_a,5.0/3.0);
                double t56649 = 1.0/sqrt(t56496);
                double t56650 = log(t56646);
                double t56651 = 1.0/t56509;
                double t56652 = 1.0/(t56506*t56506);
                double t56653 = b4p*t56648*t56499*(2.0/3.0);
                double t56654 = b2p*c*t56647*(1.0/3.0);
                double t56655 = b1p*c*t56647*t56649*(1.0/6.0);
                double t56656 = b3p*c*t56647*t56497*(1.0/2.0);
                double t56657 = t56653+t56654+t56655+t56656;
                double t56658 = t56512*t56651*t56652*t56657;
                double t56659 = c0f*t56650*t56638*2.0;
                double t56660 = c0p*t56510*t56512*2.0;
                double t56661 = Aa*t56616*t56518*t56626*t56636*t56565*t56628*2.0;
                double t56662 = 1.0/t56586;
                double t56663 = t56560*t56605*t56518*t56565*t56629*4.0;
                double t56664 = t56631+t56557;
                double t56665 = 1.0/t56597;
                double t56666 = 1.0/(t56594*t56594);
                double t56667 = b4f*t56606*t56499*(2.0/3.0);
                double t56668 = b2f*c*t56589*(1.0/3.0);
                double t56669 = b1f*c*t56607*t56589*(1.0/6.0);
                double t56670 = b3f*c*t56540*t56589*(1.0/2.0);
                double t56671 = t56670+t56667+t56668+t56669;
                double t56672 = a1f*c*c0f*t56589*t56598*(2.0/3.0);
                double t56673 = a1p*c*c0p*t56551*t56589*(2.0/3.0);
                double t56674 = t56560*t56629*4.0;
                double t56675 = t56630*t56664*(4.0/3.0);
                double t56711 = t56633*t56664*(4.0/3.0);
                double t56676 = -t56711+t56675;
                double t56677 = 1.0/t56625;
                double t56678 = 1.0/(t56622*t56622);
                double t56679 = b4a*t56606*t56499*(2.0/3.0);
                double t56680 = b2a*c*t56589*(1.0/3.0);
                double t56681 = b1a*c*t56607*t56589*(1.0/6.0);
                double t56682 = b3a*c*t56540*t56589*(1.0/2.0);
                double t56683 = t56680+t56681+t56682+t56679;
                double t56684 = Aa*a1a*c*t56616*t56518*t56626*t56636*t56565*t56589*(2.0/3.0);
                double t56685 = a1f*c*t56520;
                double t56686 = t56685+1.0;
                double t56687 = b1f*t56522;
                double t56688 = b3f*t56523;
                double t56689 = b4f*t56524*t56499;
                double t56690 = b2f*c*t56520;
                double t56691 = t56690+t56687+t56688+t56689;
                double t56692 = 1.0/t56691;
                double t56693 = t56519*t56692*(1.0/2.0);
                double t56694 = t56693+1.0;
                double t56695 = 1.0/pow(rho_b,4.0/3.0);
                double t56696 = 1.0/pow(rho_b,5.0/3.0);
                double t56697 = 1.0/sqrt(t56521);
                double t56698 = log(t56694);
                double t56699 = 1.0/t56532;
                double t56700 = 1.0/(t56529*t56529);
                double t56701 = b4p*t56696*t56499*(2.0/3.0);
                double t56702 = b2p*c*t56695*(1.0/3.0);
                double t56703 = b1p*c*t56695*t56697*(1.0/6.0);
                double t56704 = b3p*c*t56522*t56695*(1.0/2.0);
                double t56705 = t56701+t56702+t56703+t56704;
                double t56706 = t56700*t56705*t56535*t56699;
                double t56707 = t56536-c0f*t56686*t56698*2.0;
                double t56708 = t56560*t56605*t56518*t56565*t56559;
                double t56709 = 1.0/pow(t56537,7.0/3.0);
                double t56710 = 1.0/pow(t56537,8.0/3.0);
                double t56728 = t56600*t56671*t56665*t56666;
                double t56713 = t56615+t56672-t56673-t56728;
                double t56714 = t56614*t56614;
                double t56715 = 1.0/pow(t56539,3.0/2.0);
                double t56716 = b4p*t56710*t56499*(1.0E1/9.0);
                double t56717 = b2p*c*t56709*(4.0/9.0);
                double t56718 = b1p*c*t56607*t56709*(2.0/9.0);
                double t56719 = b3p*c*t56540*t56709*(2.0/3.0);
                double t56720 = b3p*t56710*t56607*t56499*(1.0/1.2E1);
                double t56721 = t56720+t56716+t56717+t56718+t56719-b1p*t56710*t56715*t56499*(1.0/3.6E1);
                double t56722 = t56721*t56553*t56608*t56609;
                double t56723 = 1.0/(t56547*t56547*t56547);
                double t56724 = t56671*t56671;
                double t56725 = 1.0/(t56550*t56550);
                double t56726 = 1.0/(t56547*t56547*t56547*t56547);
                double t56727 = t56501*t56714*t56553*t56725*t56726*(1.0/2.0);
                double t56729 = 1.0/(t56537*t56537*t56537);
                double t56730 = a1p*c*t56614*t56608*t56609*t56589*(2.0/3.0);
                double t56731 = 1.0/(t56537*t56537*t56537*t56537*t56537*t56537);
                double t56732 = t56555*t56556*t56559*4.0;
                double t56733 = t56732+t56674;
                double t56734 = t56633*t56555*t56729*(8.0/3.0);
                double t56735 = 1.0/pow(t56561,2.0/3.0);
                double t56736 = t56604*t56735*t56664*(4.0/9.0);
                double t56737 = 1.0/pow(t56563,2.0/3.0);
                double t56738 = t56604*t56664*t56737*(4.0/9.0);
                double t56739 = t56734+t56736+t56738-t56630*t56555*t56729*(8.0/3.0);
                double t56740 = t56732-t56674;
                double t56741 = t56683*t56683;
                double t56742 = t56560*t56605*t56518*t56559*t56676;
                double t56743 = Aa*t56616*t56733*t56518*t56626*t56565*t56628*2.0;
                double t56744 = Aa*t56616*t56518*t56626*t56636*t56628*t56676*2.0;
                v_rho_a_rho_b[Q] += scale * (ccab1*gamma_aa*gcab*t56662*t56567*(4.0/3.0)-ccab2*t56580*t56574*t56566*t56584-ccab1*gamma_aa*t56573*t56566*t56567*t56587*(4.0/3.0)+ccab2*gamma_aa*t56573*t56566*t56567*t56588*(8.0/3.0))*(t56661-t56536+t56554+t56708-t56537*(-t56615+t56742+t56743+t56663+t56744+t56673+t56684+t56560*t56713*t56518*t56565*t56559+t56605*t56518*t56555*t56556*t56565*t56559*4.0-t56616*t56518*t56636*t56565*t56628*t56683*t56677*t56678)+rho_b*(-t56706+t56515*t56518*(t56706-(1.0/(t56691*t56691)*t56686*(b2f*c*t56695*(1.0/3.0)+b4f*t56696*t56499*(2.0/3.0)+b1f*c*t56695*t56697*(1.0/6.0)+b3f*c*t56522*t56695*(1.0/2.0)))/t56694+a1f*c*c0f*t56695*t56698*(2.0/3.0)-a1p*c*c0p*t56533*t56695*(2.0/3.0))+a1p*c*c0p*t56533*t56695*(2.0/3.0))+t56515*t56518*t56707)-(rho_b*(t56536-t56515*t56518*t56707)+rho_a*(t56660+t56515*t56518*(t56659-c0p*t56510*t56512*2.0))-t56537*(t56661+t56554-t56601*t56560*t56518*t56565*t56559))*(ccab2*t56580*t56574*t56583*t56566*1.0/(t56577*t56577*t56577)*-2.0+ccab1*gamma_aa*gamma_bb*t56566*t56567*t56568*t56587*(3.2E1/9.0)-ccab2*gamma_aa*gamma_bb*t56566*t56567*t56568*t56588*(3.2E1/9.0)+ccab2*gamma_aa*t56573*t56583*t56566*t56584*t56567*(8.0/3.0)+ccab2*gamma_bb*t56580*t56573*t56566*t56584*t56568*(8.0/3.0)+ccab2*gamma_aa*gamma_bb*t56574*(t56566*t56566)*t56584*t56567*t56568*(3.2E1/9.0)-ccab1*gamma_aa*gamma_bb*gcab*t56573*t56566*t56567*t56568*1.0/(t56586*t56586*t56586)*(3.2E1/9.0))+(ccab0+ccab1*gcab*t56662*t56573+ccab2*t56574*t56566*t56588)*(t56742+t56743+t56744+t56537*(t56730+t56722+t56727-t56714*t56723*t56553*t56608*2.0+t56560*t56634*t56518*t56559*(t56615+t56672-t56673-t56728)-a1p*c*c0p*t56551*t56709*(8.0/9.0)-t56560*t56518*t56565*t56559*(t56730+t56722+t56727-t56714*t56723*t56553*t56608*2.0+t56600*t56724*t56665*1.0/(t56594*t56594*t56594)*2.0-t56600*t56665*t56666*(b2f*c*t56709*(4.0/9.0)+b4f*t56710*t56499*(1.0E1/9.0)+b1f*c*t56607*t56709*(2.0/9.0)+b3f*c*t56540*t56709*(2.0/3.0)-b1f*t56710*t56715*t56499*(1.0/3.6E1)+b3f*t56710*t56607*t56499*(1.0/1.2E1))-t56600*t56724*t56519*1.0/(t56594*t56594*t56594*t56594)*1.0/(t56597*t56597)*(1.0/2.0)+a1f*c*c0f*t56709*t56598*(8.0/9.0)-a1p*c*c0p*t56551*t56709*(8.0/9.0)-a1f*c*t56671*t56665*t56666*t56589*(2.0/3.0))-t56560*t56605*t56731*t56518*t56565*2.0E1+t56560*t56605*t56634*t56518*t56629*4.0-t56560*t56713*t56518*t56565*t56629*8.0-t56560*t56605*t56518*t56629*t56676*4.0+t56560*t56605*t56518*t56559*t56739-t56560*t56713*t56518*t56559*t56676+t56605*t56518*t56556*t56565*t56559*1.2E1+t56605*t56634*t56518*t56555*t56556*t56559*4.0+t56605*t56518*t56555*t56556*t56559*t56676*4.0+Aa*t56616*t56634*t56733*t56518*t56626*t56628*2.0+Aa*t56740*t56616*t56518*t56626*t56628*t56676*2.0+Aa*t56616*t56518*t56626*t56636*t56628*t56739*2.0-Aa*t56616*t56518*t56626*t56565*t56628*(t56560*t56731*2.0E1-t56556*t56559*1.2E1)*2.0-t56740*t56616*t56518*t56565*t56628*t56683*t56677*t56678-t56616*t56634*t56518*t56636*t56628*t56683*t56677*t56678+t56616*t56733*t56518*t56565*t56628*t56683*t56677*t56678+t56616*t56518*t56636*t56628*t56683*t56676*t56677*t56678-1.0/(t56622*t56622*t56622)*t56741*t56616*t56518*t56636*t56565*t56628*t56677*2.0+t56616*t56518*t56636*t56565*t56628*t56677*t56678*(b2a*c*t56709*(4.0/9.0)+b4a*t56710*t56499*(1.0E1/9.0)+b1a*c*t56607*t56709*(2.0/9.0)+b3a*c*t56540*t56709*(2.0/3.0)-b1a*t56710*t56715*t56499*(1.0/3.6E1)+b3a*t56710*t56607*t56499*(1.0/1.2E1))-Aa*a1a*c*t56616*t56518*t56626*t56636*t56565*t56709*(8.0/9.0)+Aa*a1a*c*t56740*t56616*t56518*t56626*t56565*t56589*(2.0/3.0)+Aa*a1a*c*t56616*t56634*t56518*t56626*t56636*t56589*(2.0/3.0)-Aa*a1a*c*t56616*t56733*t56518*t56626*t56565*t56589*(2.0/3.0)-Aa*a1a*c*t56616*t56518*t56626*t56636*t56676*t56589*(2.0/3.0)+1.0/(t56622*t56622*t56622*t56622)*t56741*t56616*1.0/(t56625*t56625)*t56518*t56617*t56636*t56565*t56628*(1.0/2.0)+a1a*c*t56616*t56518*t56636*t56565*t56683*t56677*t56678*t56589*(2.0/3.0))-t56614*t56553*t56608*t56609*2.0+t56560*t56518*t56565*t56559*(t56615+t56672-t56673-t56728)*2.0+a1p*c*c0p*t56551*t56589*(4.0/3.0)-t56560*t56605*t56634*t56518*t56559+t56560*t56605*t56518*t56565*t56629*8.0-Aa*t56740*t56616*t56518*t56626*t56565*t56628*2.0-Aa*t56616*t56634*t56518*t56626*t56636*t56628*2.0-t56616*t56518*t56636*t56565*t56628*t56683*t56677*t56678*2.0+Aa*a1a*c*t56616*t56518*t56626*t56636*t56565*t56589*(4.0/3.0))+(ccab1*gamma_bb*gcab*t56662*t56568*(4.0/3.0)-ccab2*t56574*t56583*t56566*t56584-ccab1*gamma_bb*t56573*t56566*t56568*t56587*(4.0/3.0)+ccab2*gamma_bb*t56573*t56566*t56568*t56588*(8.0/3.0))*(-t56660+t56661+t56554+t56708-t56537*(-t56615+t56663+t56673+t56684+t56560*t56518*t56565*t56559*(t56615+t56672-t56600*t56671*t56665*t56666-a1p*c*c0p*t56551*t56589*(2.0/3.0))-t56560*t56605*t56634*t56518*t56559+t56601*t56518*t56555*t56556*t56565*t56559*4.0-Aa*t56616*t56634*t56518*t56626*t56636*t56628*2.0+Aa*t56616*t56518*t56626*t56565*t56628*(t56674-t56555*t56556*t56559*4.0)*2.0-t56616*t56518*t56636*t56565*t56628*t56683*t56677*t56678)+rho_a*(-t56658+t56515*t56518*(t56658-(1.0/(t56643*t56643)*t56638*(b2f*c*t56647*(1.0/3.0)+b4f*t56648*t56499*(2.0/3.0)+b1f*c*t56647*t56649*(1.0/6.0)+b3f*c*t56647*t56497*(1.0/2.0)))/t56646+a1f*c*c0f*t56650*t56647*(2.0/3.0)-a1p*c*c0p*t56510*t56647*(2.0/3.0))+a1p*c*c0p*t56510*t56647*(2.0/3.0))+t56515*t56518*(t56660-t56659));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t56746 = 1.0/pow(rho_b,1.0/3.0);
                double t56747 = c*t56746;
                double t56748 = sqrt(t56747);
                double t56749 = pow(t56747,3.0/2.0);
                double t56750 = c*c;
                double t56751 = 1.0/pow(rho_b,2.0/3.0);
                double t56752 = 1.0/c0p;
                double t56753 = b1p*t56748;
                double t56754 = b3p*t56749;
                double t56755 = b4p*t56750*t56751;
                double t56756 = b2p*c*t56746;
                double t56757 = t56753+t56754+t56755+t56756;
                double t56758 = 1.0/t56757;
                double t56759 = t56752*t56758*(1.0/2.0);
                double t56760 = t56759+1.0;
                double t56761 = log(t56760);
                double t56762 = a1p*c*t56746;
                double t56763 = t56762+1.0;
                double t56764 = 1.0/pow(rho_b,8.0/3.0);
                double t56765 = gamma_bb*gamma_bb;
                double t56766 = gcaa*gcaa;
                double t56767 = 1.0/pow(rho_b,1.9E1/3.0);
                double t56768 = gamma_bb*gcaa*t56764;
                double t56769 = t56768+1.0;
                double t56770 = 1.0/pow(rho_b,1.6E1/3.0);
                double t56771 = 1.0/pow(rho_b,1.1E1/3.0);
                double t56772 = gamma_bb*gcaa*t56764*2.0;
                double t56773 = t56770*t56765*t56766;
                double t56774 = t56772+t56773+1.0;
                double t56777 = 1.0/pow(rho_a,8.0/3.0);
                double t56778 = gamma_aa*t56777*(1.0/2.0);
                double t56779 = gamma_bb*t56764*(1.0/2.0);
                double t56775 = t56778+t56779;
                double t56776 = gcab*gcab;
                double t56780 = t56775*t56775;
                double t56781 = rho_a+rho_b;
                double t56782 = 1.0/pow(t56781,1.0/3.0);
                double t56783 = c*t56782;
                double t56784 = sqrt(t56783);
                double t56785 = b1p*t56784;
                double t56786 = pow(t56783,3.0/2.0);
                double t56787 = b3p*t56786;
                double t56788 = 1.0/pow(t56781,2.0/3.0);
                double t56789 = b4p*t56750*t56788;
                double t56790 = b2p*c*t56782;
                double t56791 = t56790+t56785+t56787+t56789;
                double t56792 = 1.0/pow(t56781,7.0/3.0);
                double t56793 = 1.0/pow(t56781,8.0/3.0);
                double t56794 = 1.0/sqrt(t56783);
                double t56795 = a1p*c*t56782;
                double t56796 = t56795+1.0;
                double t56797 = 1.0/t56791;
                double t56798 = t56752*t56797*(1.0/2.0);
                double t56799 = t56798+1.0;
                double t56800 = 1.0/t56799;
                double t56801 = 1.0/pow(t56781,4.0/3.0);
                double t56841 = 1.0/pow(t56781,5.0/3.0);
                double t56843 = b4p*t56750*t56841*(2.0/3.0);
                double t56844 = b2p*c*t56801*(1.0/3.0);
                double t56845 = b1p*c*t56801*t56794*(1.0/6.0);
                double t56846 = b3p*c*t56801*t56784*(1.0/2.0);
                double t56802 = t56843+t56844+t56845+t56846;
                double t56803 = two_13*2.0;
                double t56804 = t56803-2.0;
                double t56805 = 1.0/t56804;
                double t56806 = 1.0/c0f;
                double t56807 = rho_a-rho_b;
                double t56808 = 1.0/t56781;
                double t56809 = t56807*t56808;
                double t56810 = b1f*t56784;
                double t56811 = b3f*t56786;
                double t56812 = b4f*t56750*t56788;
                double t56813 = b2f*c*t56782;
                double t56814 = t56810+t56811+t56812+t56813;
                double t56815 = 1.0/t56814;
                double t56816 = t56806*t56815*(1.0/2.0);
                double t56817 = t56816+1.0;
                double t56818 = log(t56817);
                double t56819 = a1f*c*t56782;
                double t56820 = t56819+1.0;
                double t56821 = log(t56799);
                double t56829 = c0f*t56820*t56818*2.0;
                double t56830 = c0p*t56821*t56796*2.0;
                double t56822 = -t56830+t56829;
                double t56823 = t56807*t56807;
                double t56824 = t56809+1.0;
                double t56825 = pow(t56824,4.0/3.0);
                double t56826 = -t56809+1.0;
                double t56827 = pow(t56826,4.0/3.0);
                double t56828 = t56825+t56827-2.0;
                double t56831 = 1.0/(t56781*t56781);
                double t56832 = t56831*t56807;
                double t56833 = t56832+t56808;
                double t56834 = 1.0/(t56781*t56781*t56781*t56781);
                double t56835 = pow(t56824,1.0/3.0);
                double t56836 = t56833*t56835*(4.0/3.0);
                double t56837 = pow(t56826,1.0/3.0);
                double t56869 = t56833*t56837*(4.0/3.0);
                double t56838 = t56836-t56869;
                double t56839 = 1.0/(t56781*t56781*t56781*t56781*t56781);
                double t56840 = t56823*t56823;
                double t56842 = 1.0/(t56791*t56791);
                double t56847 = 1.0/t56817;
                double t56848 = 1.0/(t56814*t56814);
                double t56849 = b4f*t56750*t56841*(2.0/3.0);
                double t56850 = b2f*c*t56801*(1.0/3.0);
                double t56851 = b1f*c*t56801*t56794*(1.0/6.0);
                double t56852 = b3f*c*t56801*t56784*(1.0/2.0);
                double t56853 = t56850+t56851+t56852+t56849;
                double t56854 = t56800*t56802*t56842*t56796;
                double t56855 = a1f*c*c0f*t56801*t56818*(2.0/3.0);
                double t56856 = t56802*t56802;
                double t56857 = 1.0/pow(t56783,3.0/2.0);
                double t56858 = b4p*t56750*t56793*(1.0E1/9.0);
                double t56859 = b2p*c*t56792*(4.0/9.0);
                double t56860 = b1p*c*t56792*t56794*(2.0/9.0);
                double t56861 = b3p*c*t56792*t56784*(2.0/3.0);
                double t56862 = b3p*t56750*t56793*t56794*(1.0/1.2E1);
                double t56863 = t56860+t56861+t56862+t56858+t56859-b1p*t56750*t56793*t56857*(1.0/3.6E1);
                double t56864 = 1.0/(t56791*t56791*t56791);
                double t56865 = t56800*t56864*t56856*t56796*2.0;
                double t56866 = t56853*t56853;
                double t56867 = 1.0/(t56799*t56799);
                double t56868 = 1.0/(t56791*t56791*t56791*t56791);
                double t56870 = t56831*2.0;
                double t56871 = 1.0/(t56781*t56781*t56781);
                double t56872 = t56807*t56871*2.0;
                double t56873 = t56870+t56872;
                double t56874 = t56833*t56833;
                double t56875 = a1p*c*c0p*t56821*t56792*(8.0/9.0);
                double t56876 = 1.0/(t56781*t56781*t56781*t56781*t56781*t56781);
                double t56877 = 1.0/d2fz0;
                double t56878 = 1.0/Aa;
                double t56879 = b1a*t56784;
                double t56880 = b3a*t56786;
                double t56881 = b4a*t56750*t56788;
                double t56882 = b2a*c*t56782;
                double t56883 = t56880+t56881+t56882+t56879;
                double t56884 = 1.0/t56883;
                double t56885 = t56884*t56878*(1.0/2.0);
                double t56886 = t56885+1.0;
                double t56887 = log(t56886);
                double t56888 = a1a*c*t56782;
                double t56889 = t56888+1.0;
                double t56890 = t56835*t56873*(4.0/3.0);
                double t56891 = 1.0/pow(t56824,2.0/3.0);
                double t56892 = t56891*t56874*(4.0/9.0);
                double t56893 = 1.0/pow(t56826,2.0/3.0);
                double t56894 = t56874*t56893*(4.0/9.0);
                double t56895 = t56890+t56892+t56894-t56837*t56873*(4.0/3.0);
                double t56896 = t56823*t56807*t56834*4.0;
                double t56897 = t56840*t56839*4.0;
                double t56898 = t56896+t56897;
                double t56899 = 1.0/t56886;
                double t56900 = t56840*t56834;
                double t56901 = t56900-1.0;
                double t56902 = 1.0/(t56883*t56883);
                double t56903 = b4a*t56750*t56841*(2.0/3.0);
                double t56904 = b2a*c*t56801*(1.0/3.0);
                double t56905 = b1a*c*t56801*t56794*(1.0/6.0);
                double t56906 = b3a*c*t56801*t56784*(1.0/2.0);
                double t56907 = t56903+t56904+t56905+t56906;
                double t56908 = t56907*t56907;
                double t56910 = t56820*t56853*t56847*t56848;
                double t56911 = a1p*c*c0p*t56801*t56821*(2.0/3.0);
                double t56909 = -t56910-t56911+t56854+t56855;
                double t56912 = pow(2.0,1.0/3.0);
                double t56913 = t56912*2.0;
                double t56914 = t56913-2.0;
                double t56915 = a1f*c*t56746;
                double t56916 = t56915+1.0;
                double t56917 = b1f*t56748;
                double t56918 = b3f*t56749;
                double t56919 = b4f*t56750*t56751;
                double t56920 = b2f*c*t56746;
                double t56921 = t56920+t56917+t56918+t56919;
                double t56922 = 1.0/t56921;
                double t56923 = t56922*t56806*(1.0/2.0);
                double t56924 = t56923+1.0;
                double t56925 = 1.0/pow(rho_b,4.0/3.0);
                double t56927 = 1.0/pow(rho_b,5.0/3.0);
                double t56928 = 1.0/sqrt(t56747);
                double t56934 = b4f*t56750*t56927*(2.0/3.0);
                double t56935 = b2f*c*t56925*(1.0/3.0);
                double t56936 = b1f*c*t56925*t56928*(1.0/6.0);
                double t56937 = b3f*c*t56925*t56748*(1.0/2.0);
                double t56926 = t56934+t56935+t56936+t56937;
                double t56939 = b4p*t56750*t56927*(2.0/3.0);
                double t56940 = b2p*c*t56925*(1.0/3.0);
                double t56941 = b1p*c*t56925*t56928*(1.0/6.0);
                double t56942 = b3p*c*t56925*t56748*(1.0/2.0);
                double t56929 = t56940+t56941+t56942+t56939;
                double t56930 = 1.0/t56924;
                double t56931 = 1.0/pow(rho_b,7.0/3.0);
                double t56932 = 1.0/t56760;
                double t56933 = 1.0/pow(t56747,3.0/2.0);
                double t56938 = t56926*t56926;
                double t56943 = t56929*t56929;
                double t56944 = log(t56924);
                double t56945 = 1.0/(t56921*t56921);
                double t56946 = 1.0/(t56757*t56757);
                double t56947 = 1.0/(t56757*t56757*t56757);
                double t56948 = t56932*t56763*t56943*t56947*2.0;
                double t56949 = b4p*t56750*t56764*(1.0E1/9.0);
                double t56950 = b2p*c*t56931*(4.0/9.0);
                double t56951 = b3p*t56750*t56764*t56928*(1.0/1.2E1);
                double t56952 = b1p*c*t56931*t56928*(2.0/9.0);
                double t56953 = b3p*c*t56931*t56748*(2.0/3.0);
                double t57014 = b1p*t56750*t56933*t56764*(1.0/3.6E1);
                double t56954 = t56950+t56951+t56952+t56953+t56949-t57014;
                double t56955 = 1.0/(t56760*t56760);
                double t56956 = 1.0/(t56757*t56757*t56757*t56757);
                double t56957 = a1p*c*c0p*t56931*t56761*(8.0/9.0);
                double t56958 = gcab*t56775;
                double t56959 = t56958+1.0;
                double t56960 = 1.0/t56959;
                double t56961 = t56780*t56776;
                double t56962 = gcab*t56775*2.0;
                double t56963 = t56961+t56962+1.0;
                double t56964 = 1.0/t56963;
                double t56965 = t56910+t56911-t56854-t56855;
                double t56966 = t56930*t56916*t56926*t56945;
                double t56967 = a1p*c*c0p*t56761*t56925*(2.0/3.0);
                double t56969 = t56932*t56763*t56946*t56929;
                double t56972 = a1f*c*c0f*t56925*t56944*(2.0/3.0);
                double t56968 = -t56972+t56966+t56967-t56969;
                double t56970 = c0f*t56916*t56944*2.0;
                double t56971 = c0p*t56761*t56763*2.0;
                double t56973 = t56805*t56914*t56968;
                double t56974 = t56973-t56967+t56969;
                double t56975 = 1.0/t56769;
                double t56976 = 1.0/t56774;
                double t56977 = 1.0/pow(rho_a,1.0/3.0);
                double t56978 = c*t56977;
                double t56979 = sqrt(t56978);
                double t56980 = pow(t56978,3.0/2.0);
                double t56981 = 1.0/pow(rho_a,2.0/3.0);
                double t56982 = b1p*t56979;
                double t56983 = b3p*t56980;
                double t56984 = b4p*t56750*t56981;
                double t56985 = b2p*c*t56977;
                double t56986 = t56982+t56983+t56984+t56985;
                double t56987 = 1.0/t56986;
                double t56988 = t56752*t56987*(1.0/2.0);
                double t56989 = t56988+1.0;
                double t56990 = log(t56989);
                double t56991 = a1p*c*t56977;
                double t56992 = t56991+1.0;
                double t56993 = c0p*t56990*t56992*2.0;
                double t56994 = t56970-t56971;
                double t56995 = t56805*t56914*t56994;
                double t56996 = 1.0/(t56959*t56959);
                double t56997 = 1.0/pow(rho_b,2.2E1/3.0);
                double t56998 = gamma_bb*gcab*t56771*(8.0/3.0);
                double t56999 = gamma_bb*t56771*t56775*t56776*(8.0/3.0);
                double t57000 = t56998+t56999;
                double t57001 = 1.0/pow(rho_b,1.4E1/3.0);
                double t57002 = 1.0/(t56963*t56963);
                double t57003 = ccaa1*gamma_bb*gcaa*t56764*t56975;
                double t57004 = ccaa2*t56770*t56765*t56766*t56976;
                double t57005 = ccaa0+t57003+t57004;
                double t57006 = 1.0/(t56921*t56921*t56921);
                double t57007 = b4f*t56750*t56764*(1.0E1/9.0);
                double t57008 = b2f*c*t56931*(4.0/9.0);
                double t57009 = b3f*t56750*t56764*t56928*(1.0/1.2E1);
                double t57010 = b1f*c*t56931*t56928*(2.0/9.0);
                double t57011 = b3f*c*t56931*t56748*(2.0/3.0);
                double t57012 = t57010+t57011+t57007+t57008+t57009-b1f*t56750*t56933*t56764*(1.0/3.6E1);
                double t57013 = t56930*t56916*t56945*t57012;
                double t57015 = t56932*t56763*t56954*t56946;
                double t57016 = 1.0/(t56924*t56924);
                double t57017 = 1.0/(t56921*t56921*t56921*t56921);
                double t57018 = t56806*t56916*t56938*t57016*t57017*(1.0/2.0);
                double t57019 = t56752*t56763*t56943*t56955*t56956*(1.0/2.0);
                double t57020 = a1f*c*t56930*t56925*t56926*t56945*(2.0/3.0);
                double t57021 = a1p*c*t56932*t56925*t56946*t56929*(2.0/3.0);
                double t57022 = t56971+t56995;
                double t57023 = 1.0/(t56769*t56769);
                double t57024 = gamma_bb*gcaa*t56771*(1.6E1/3.0);
                double t57025 = t56765*t56766*t56767*(1.6E1/3.0);
                double t57026 = t57024+t57025;
                double t57027 = 1.0/(t56774*t56774);
                double t57028 = ccaa1*gamma_bb*gcaa*t56771*t56975*(8.0/3.0);
                double t57029 = ccaa2*t56765*t56766*t56767*t56976*(1.6E1/3.0);
                double t57030 = t57028+t57029-ccaa1*t56765*t56766*t56767*t57023*(8.0/3.0)-ccaa2*t56770*t56765*t56766*t57026*t57027;
                v_rho_b_rho_b[Q] += scale * t56974*t57005*-2.0+t57030*(t56971+t56805*t56914*(t56970-c0p*t56761*t56763*2.0))*2.0-(ccab1*gamma_bb*gcab*t56771*t56960*(4.0/3.0)-ccab2*t56780*t56776*t57000*t57002+ccab2*gamma_bb*t56771*t56775*t56964*t56776*(8.0/3.0)-ccab1*gamma_bb*t56771*t56775*t56776*t56996*(4.0/3.0))*(-t56830+t56971+t56995+rho_b*t56974+t56781*(t56911-t56854+t56822*t56840*t56805*t56834*t56838+t56822*t56840*t56805*t56828*t56839*4.0-t56840*t56805*t56834*t56828*t56965+t56822*t56805*t56823*t56807*t56834*t56828*4.0+Aa*t56901*t56805*t56838*t56877*t56887*t56889*2.0+Aa*t56805*t56828*t56877*t56887*t56889*t56898*2.0-t56901*t56902*t56805*t56907*t56828*t56877*t56889*t56899+Aa*a1a*c*t56801*t56901*t56805*t56828*t56877*t56887*(2.0/3.0))-t56822*t56840*t56805*t56834*t56828-Aa*t56901*t56805*t56828*t56877*t56887*t56889*2.0)*2.0+(rho_b*t57022+rho_a*(t56993-t56805*t56914*(t56993-c0f*log((t56806*(1.0/2.0))/(b1f*t56979+b3f*t56980+b2f*c*t56977+b4f*t56750*t56981)+1.0)*(a1f*c*t56977+1.0)*2.0))-t56781*(t56830+t56822*t56840*t56805*t56834*t56828+Aa*t56901*t56805*t56828*t56877*t56887*t56889*2.0))*(-ccab2*t56780*t56776*t57002*(gamma_bb*gcab*t57001*(8.8E1/9.0)+t56765*t56776*t56997*(3.2E1/9.0)+gamma_bb*t56775*t56776*t57001*(8.8E1/9.0))+ccab2*t56780*1.0/(t56963*t56963*t56963)*t56776*(t57000*t57000)*2.0+ccab1*gamma_bb*gcab*t56960*t57001*(4.4E1/9.0)+ccab2*t56765*t56964*t56776*t56997*(3.2E1/9.0)-ccab1*t56765*t56776*t56996*t56997*(3.2E1/9.0)+ccab2*gamma_bb*t56775*t56964*t56776*t57001*(8.8E1/9.0)-ccab1*gamma_bb*t56775*t56776*t56996*t57001*(4.4E1/9.0)-ccab2*gamma_bb*t56771*t56775*t56776*t57000*t57002*(1.6E1/3.0)+ccab1*gcab*t56765*t56775*t56776*1.0/(t56959*t56959*t56959)*t56997*(3.2E1/9.0))+(ccab0+ccab1*gcab*t56960*t56775+ccab2*t56780*t56964*t56776)*(-rho_b*(-t56948-t56957+t57021+t57015+t57019+t56805*t56914*(t56948+t56957+t57020+t57013+t57018-t56932*t56763*t56954*t56946-t56930*t56916*t56938*t57006*2.0-a1f*c*c0f*t56931*t56944*(8.0/9.0)-t56752*t56763*t56943*t56955*t56956*(1.0/2.0)-a1p*c*t56932*t56925*t56946*t56929*(2.0/3.0)))-t56781*(t56865+t56875-t56800*t56842*t56863*t56796-t56840*t56805*t56834*t56828*(t56865+t56875-t56800*t56842*t56863*t56796-t56820*1.0/(t56814*t56814*t56814)*t56847*t56866*2.0+t56820*t56847*t56848*(b2f*c*t56792*(4.0/9.0)+b4f*t56750*t56793*(1.0E1/9.0)+b1f*c*t56792*t56794*(2.0/9.0)+b3f*c*t56792*t56784*(2.0/3.0)-b1f*t56750*t56793*t56857*(1.0/3.6E1)+b3f*t56750*t56793*t56794*(1.0/1.2E1))+t56820*1.0/(t56814*t56814*t56814*t56814)*t56806*1.0/(t56817*t56817)*t56866*(1.0/2.0)-a1f*c*c0f*t56818*t56792*(8.0/9.0)-t56752*t56856*t56867*t56796*t56868*(1.0/2.0)+a1f*c*t56801*t56853*t56847*t56848*(2.0/3.0)-a1p*c*t56800*t56801*t56802*t56842*(2.0/3.0))+t56822*t56805*t56823*t56834*t56828*1.2E1+t56822*t56840*t56805*t56834*t56895+t56822*t56840*t56805*t56828*t56876*2.0E1+t56822*t56840*t56805*t56838*t56839*8.0+t56840*t56805*t56834*t56909*t56838*2.0+t56840*t56805*t56828*t56909*t56839*8.0-t56752*t56856*t56867*t56796*t56868*(1.0/2.0)+t56822*t56805*t56823*t56807*t56834*t56838*8.0+t56822*t56805*t56823*t56807*t56828*t56839*3.2E1+t56805*t56823*t56807*t56834*t56828*t56909*8.0-a1p*c*t56800*t56801*t56802*t56842*(2.0/3.0)+Aa*t56901*t56805*t56877*t56895*t56887*t56889*2.0+Aa*t56805*t56838*t56877*t56887*t56889*t56898*4.0+Aa*t56805*t56828*t56877*t56887*t56889*(t56823*t56834*1.2E1+t56840*t56876*2.0E1+t56823*t56807*t56839*3.2E1)*2.0-t56901*t56902*t56805*t56907*t56838*t56877*t56889*t56899*2.0-t56902*t56805*t56907*t56828*t56877*t56889*t56898*t56899*2.0+t56901*t56805*t56908*t56828*1.0/(t56883*t56883*t56883)*t56877*t56889*t56899*2.0-t56901*t56902*t56805*t56828*t56877*t56889*t56899*(b2a*c*t56792*(4.0/9.0)+b4a*t56750*t56793*(1.0E1/9.0)+b1a*c*t56792*t56794*(2.0/9.0)+b3a*c*t56792*t56784*(2.0/3.0)-b1a*t56750*t56793*t56857*(1.0/3.6E1)+b3a*t56750*t56793*t56794*(1.0/1.2E1))+Aa*a1a*c*t56801*t56901*t56805*t56838*t56877*t56887*(4.0/3.0)+Aa*a1a*c*t56901*t56805*t56792*t56828*t56877*t56887*(8.0/9.0)+Aa*a1a*c*t56801*t56805*t56828*t56877*t56887*t56898*(4.0/3.0)-t56901*t56805*t56908*t56828*1.0/(t56883*t56883*t56883*t56883)*t56877*1.0/(t56886*t56886)*t56878*t56889*(1.0/2.0)-a1a*c*t56801*t56901*t56902*t56805*t56907*t56828*t56877*t56899*(2.0/3.0))+t56805*t56914*t56968*2.0-t56800*t56802*t56842*t56796*2.0+t56932*t56763*t56946*t56929*2.0+a1p*c*c0p*t56801*t56821*(4.0/3.0)-a1p*c*c0p*t56761*t56925*(4.0/3.0)+t56822*t56840*t56805*t56834*t56838*2.0+t56822*t56840*t56805*t56828*t56839*8.0-t56840*t56805*t56834*t56828*t56965*2.0+t56822*t56805*t56823*t56807*t56834*t56828*8.0+Aa*t56901*t56805*t56838*t56877*t56887*t56889*4.0+Aa*t56805*t56828*t56877*t56887*t56889*t56898*4.0-t56901*t56902*t56805*t56907*t56828*t56877*t56889*t56899*2.0+Aa*a1a*c*t56801*t56901*t56805*t56828*t56877*t56887*(4.0/3.0))-rho_b*t57022*(ccaa1*gamma_bb*gcaa*t56975*t57001*(8.8E1/9.0)+ccaa2*t56765*t56766*t56976*t56997*(3.04E2/9.0)-ccaa1*t56765*t56766*t56997*t57023*2.4E1-ccaa2*t56765*t56766*t56767*t57026*t57027*(3.2E1/3.0)-ccaa2*t56770*t56765*t56766*t57027*(gamma_bb*gcaa*t57001*(1.76E2/9.0)+t56765*t56766*t56997*(3.04E2/9.0))+ccaa2*t56770*t56765*1.0/(t56774*t56774*t56774)*t56766*(t57026*t57026)*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*t56765*t56766*1.0/(t56769*t56769*t56769)*(1.28E2/9.0))+rho_b*t57005*(-t56948-t56957+t57021+t57015+t57019+t56805*t56914*(t56948+t56957+t57020-t57021+t57013-t57015+t57018-t57019-t56930*t56916*t56938*t57006*2.0-a1f*c*c0f*t56931*t56944*(8.0/9.0)))+rho_b*t56974*t57030*2.0;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t57769 = 1.0/pow(rho_a,1.0/3.0);
                double t57770 = c*t57769;
                double t57771 = sqrt(t57770);
                double t57772 = pow(t57770,3.0/2.0);
                double t57773 = c*c;
                double t57774 = 1.0/pow(rho_a,2.0/3.0);
                double t57775 = 1.0/c0p;
                double t57776 = b1p*t57771;
                double t57777 = b3p*t57772;
                double t57778 = b4p*t57773*t57774;
                double t57779 = b2p*c*t57769;
                double t57780 = t57776+t57777+t57778+t57779;
                double t57781 = 1.0/t57780;
                double t57782 = t57781*t57775*(1.0/2.0);
                double t57783 = t57782+1.0;
                double t57784 = log(t57783);
                double t57785 = a1p*c*t57769;
                double t57786 = t57785+1.0;
                double t57787 = pow(2.0,1.0/3.0);
                double t57788 = t57787*2.0;
                double t57789 = t57788-2.0;
                double t57790 = two_13*2.0;
                double t57791 = t57790-2.0;
                double t57792 = 1.0/t57791;
                double t57793 = 1.0/c0f;
                double t57794 = 1.0/pow(rho_b,1.0/3.0);
                double t57795 = c*t57794;
                double t57796 = sqrt(t57795);
                double t57797 = pow(t57795,3.0/2.0);
                double t57798 = 1.0/pow(rho_b,2.0/3.0);
                double t57799 = b1p*t57796;
                double t57800 = b3p*t57797;
                double t57801 = b4p*t57773*t57798;
                double t57802 = b2p*c*t57794;
                double t57803 = t57800+t57801+t57802+t57799;
                double t57804 = 1.0/t57803;
                double t57805 = t57804*t57775*(1.0/2.0);
                double t57806 = t57805+1.0;
                double t57807 = log(t57806);
                double t57808 = a1p*c*t57794;
                double t57809 = t57808+1.0;
                double t57810 = c0p*t57807*t57809*2.0;
                double t57811 = rho_a+rho_b;
                double t57812 = 1.0/pow(t57811,1.0/3.0);
                double t57813 = c*t57812;
                double t57814 = sqrt(t57813);
                double t57815 = pow(t57813,3.0/2.0);
                double t57816 = 1.0/pow(t57811,2.0/3.0);
                double t57817 = b1p*t57814;
                double t57818 = b3p*t57815;
                double t57819 = b4p*t57816*t57773;
                double t57820 = b2p*c*t57812;
                double t57821 = t57820+t57817+t57818+t57819;
                double t57822 = 1.0/t57821;
                double t57823 = t57822*t57775*(1.0/2.0);
                double t57824 = t57823+1.0;
                double t57825 = log(t57824);
                double t57826 = a1p*c*t57812;
                double t57827 = t57826+1.0;
                double t57828 = c0p*t57825*t57827*2.0;
                double t57829 = rho_a-rho_b;
                double t57830 = t57829*t57829;
                double t57831 = 1.0/t57811;
                double t57832 = t57831*t57829;
                double t57833 = 1.0/(t57811*t57811*t57811*t57811);
                double t57834 = t57830*t57830;
                double t57835 = t57832+1.0;
                double t57836 = pow(t57835,4.0/3.0);
                double t57837 = -t57832+1.0;
                double t57838 = pow(t57837,4.0/3.0);
                double t57839 = t57836+t57838-2.0;
                double t57840 = gcab*gcab;
                double t57841 = 1.0/pow(rho_a,1.6E1/3.0);
                double t57842 = 1.0/pow(rho_a,8.0/3.0);
                double t57843 = gamma_aa*t57842*(1.0/2.0);
                double t57844 = 1.0/pow(rho_b,8.0/3.0);
                double t57845 = gamma_bb*t57844*(1.0/2.0);
                double t57846 = t57843+t57845;
                double t57847 = gcab*t57846;
                double t57848 = t57847+1.0;
                double t57849 = t57846*t57846;
                double t57850 = t57840*t57849;
                double t57851 = gcab*t57846*2.0;
                double t57852 = t57850+t57851+1.0;
                double t57854 = gcab*t57842;
                double t57855 = t57840*t57842*t57846;
                double t57853 = t57854+t57855;
                double t57856 = 1.0/(t57852*t57852);
                double t57857 = c0p*t57784*t57786*2.0;
                double t57858 = b1f*t57771;
                double t57859 = b3f*t57772;
                double t57860 = b4f*t57773*t57774;
                double t57861 = b2f*c*t57769;
                double t57862 = t57860+t57861+t57858+t57859;
                double t57863 = 1.0/t57862;
                double t57864 = t57863*t57793*(1.0/2.0);
                double t57865 = t57864+1.0;
                double t57866 = log(t57865);
                double t57867 = a1f*c*t57769;
                double t57868 = t57867+1.0;
                double t57869 = t57857-c0f*t57866*t57868*2.0;
                double t57870 = t57857-t57792*t57869*t57789;
                double t57871 = gcaa*gcaa;
                double t57872 = gamma_aa*gcaa*t57842;
                double t57873 = t57872+1.0;
                double t57874 = gamma_aa*gamma_aa;
                double t57875 = gamma_aa*gcaa*t57842*2.0;
                double t57876 = t57841*t57871*t57874;
                double t57877 = t57875+t57876+1.0;
                double t57879 = gcaa*t57842*2.0;
                double t57880 = gamma_aa*t57841*t57871*2.0;
                double t57878 = t57880+t57879;
                double t57881 = 1.0/(t57877*t57877);
                v_gamma_aa_gamma_aa[Q] += scale * (rho_a*t57870+rho_b*(t57810-t57792*t57789*(t57810-c0f*log((t57793*(1.0/2.0))/(b1f*t57796+b3f*t57797+b2f*c*t57794+b4f*t57773*t57798)+1.0)*(a1f*c*t57794+1.0)*2.0))-t57811*(t57828-t57833*t57834*t57792*t57839*(t57828-c0f*log((t57793*(1.0/2.0))/(b1f*t57814+b3f*t57815+b2f*c*t57812+b4f*t57816*t57773)+1.0)*(a1f*c*t57812+1.0)*2.0)+(Aa*t57792*t57839*log((1.0/2.0)/(Aa*(b1a*t57814+b3a*t57815+b2a*c*t57812+b4a*t57816*t57773))+1.0)*(t57833*t57834-1.0)*(a1a*c*t57812+1.0)*2.0)/d2fz0))*((ccab2*t57840*t57841*(1.0/2.0))/t57852-ccab1*t57840*t57841*1.0/(t57848*t57848)*(1.0/2.0)+ccab2*t57840*1.0/(t57852*t57852*t57852)*(t57853*t57853)*t57849*2.0-ccab2*(t57840*t57840)*t57841*t57856*t57849*(1.0/2.0)-ccab2*t57840*t57842*t57853*t57846*t57856*2.0+ccab1*gcab*t57840*t57841*t57846*1.0/(t57848*t57848*t57848)*(1.0/2.0))+rho_a*t57870*(ccaa1*t57841*t57871*1.0/(t57873*t57873)*2.0-(ccaa2*t57841*t57871*2.0)/t57877+ccaa2*1.0/pow(rho_a,3.2E1/3.0)*(t57871*t57871)*t57881*t57874*2.0-ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t57871*1.0/(t57873*t57873*t57873)*2.0-ccaa2*t57841*t57871*t57874*1.0/(t57877*t57877*t57877)*(t57878*t57878)*2.0+ccaa2*gamma_aa*t57841*t57871*t57881*t57878*4.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t57884 = 1.0/pow(rho_a,1.0/3.0);
                double t57885 = c*t57884;
                double t57886 = sqrt(t57885);
                double t57887 = pow(t57885,3.0/2.0);
                double t57888 = c*c;
                double t57889 = 1.0/pow(rho_a,2.0/3.0);
                double t57890 = 1.0/c0p;
                double t57891 = b1p*t57886;
                double t57892 = b3p*t57887;
                double t57893 = b4p*t57888*t57889;
                double t57894 = b2p*c*t57884;
                double t57895 = t57891+t57892+t57893+t57894;
                double t57896 = 1.0/t57895;
                double t57897 = t57890*t57896*(1.0/2.0);
                double t57898 = t57897+1.0;
                double t57899 = log(t57898);
                double t57900 = a1p*c*t57884;
                double t57901 = t57900+1.0;
                double t57902 = pow(2.0,1.0/3.0);
                double t57903 = t57902*2.0;
                double t57904 = t57903-2.0;
                double t57905 = two_13*2.0;
                double t57906 = t57905-2.0;
                double t57907 = 1.0/t57906;
                double t57908 = 1.0/c0f;
                double t57909 = 1.0/pow(rho_b,1.0/3.0);
                double t57910 = c*t57909;
                double t57911 = sqrt(t57910);
                double t57912 = pow(t57910,3.0/2.0);
                double t57913 = 1.0/pow(rho_b,2.0/3.0);
                double t57914 = b1p*t57911;
                double t57915 = b3p*t57912;
                double t57916 = b4p*t57913*t57888;
                double t57917 = b2p*c*t57909;
                double t57918 = t57914+t57915+t57916+t57917;
                double t57919 = 1.0/t57918;
                double t57920 = t57890*t57919*(1.0/2.0);
                double t57921 = t57920+1.0;
                double t57922 = log(t57921);
                double t57923 = a1p*c*t57909;
                double t57924 = t57923+1.0;
                double t57925 = c0p*t57922*t57924*2.0;
                double t57926 = rho_a+rho_b;
                double t57927 = 1.0/pow(t57926,1.0/3.0);
                double t57928 = c*t57927;
                double t57929 = sqrt(t57928);
                double t57930 = pow(t57928,3.0/2.0);
                double t57931 = 1.0/pow(t57926,2.0/3.0);
                double t57932 = b1p*t57929;
                double t57933 = b3p*t57930;
                double t57934 = b4p*t57931*t57888;
                double t57935 = b2p*c*t57927;
                double t57936 = t57932+t57933+t57934+t57935;
                double t57937 = 1.0/t57936;
                double t57938 = t57890*t57937*(1.0/2.0);
                double t57939 = t57938+1.0;
                double t57940 = log(t57939);
                double t57941 = a1p*c*t57927;
                double t57942 = t57941+1.0;
                double t57943 = c0p*t57940*t57942*2.0;
                double t57944 = rho_a-rho_b;
                double t57945 = t57944*t57944;
                double t57946 = 1.0/t57926;
                double t57947 = t57944*t57946;
                double t57948 = 1.0/(t57926*t57926*t57926*t57926);
                double t57949 = t57945*t57945;
                double t57950 = t57947+1.0;
                double t57951 = pow(t57950,4.0/3.0);
                double t57952 = -t57947+1.0;
                double t57953 = pow(t57952,4.0/3.0);
                double t57954 = t57951+t57953-2.0;
                double t57955 = 1.0/pow(rho_a,8.0/3.0);
                double t57956 = 1.0/pow(rho_b,8.0/3.0);
                double t57957 = gcab*gcab;
                double t57958 = gamma_aa*t57955*(1.0/2.0);
                double t57959 = gamma_bb*t57956*(1.0/2.0);
                double t57960 = t57958+t57959;
                double t57961 = t57960*t57960;
                double t57962 = t57961*t57957;
                double t57963 = gcab*t57960*2.0;
                double t57964 = t57962+t57963+1.0;
                double t57965 = 1.0/(t57964*t57964);
                double t57966 = gcab*t57955;
                double t57967 = t57960*t57955*t57957;
                double t57968 = t57966+t57967;
                double t57969 = gcab*t57956;
                double t57970 = t57960*t57956*t57957;
                double t57971 = t57970+t57969;
                double t57972 = gcab*t57960;
                double t57973 = t57972+1.0;
                v_gamma_aa_gamma_bb[Q] += scale * (-rho_b*(t57925-t57904*t57907*(t57925-c0f*log((t57908*(1.0/2.0))/(b1f*t57911+b3f*t57912+b2f*c*t57909+b4f*t57913*t57888)+1.0)*(a1f*c*t57909+1.0)*2.0))+t57926*(t57943-t57907*t57954*t57948*t57949*(t57943-c0f*log((t57908*(1.0/2.0))/(b1f*t57929+b3f*t57930+b2f*c*t57927+b4f*t57931*t57888)+1.0)*(a1f*c*t57927+1.0)*2.0)+(Aa*t57907*t57954*log((1.0/2.0)/(Aa*(b1a*t57929+b3a*t57930+b2a*c*t57927+b4a*t57931*t57888))+1.0)*(t57948*t57949-1.0)*(a1a*c*t57927+1.0)*2.0)/d2fz0)+rho_a*(t57904*t57907*(c0p*t57901*t57899*2.0-c0f*log((t57908*(1.0/2.0))/(b1f*t57886+b3f*t57887+b2f*c*t57884+b4f*t57888*t57889)+1.0)*(a1f*c*t57884+1.0)*2.0)-c0p*t57901*t57899*2.0))*(ccab1*t57955*1.0/(t57973*t57973)*t57956*t57957*(1.0/2.0)-(ccab2*t57955*t57956*t57957*(1.0/2.0))/t57964+ccab2*t57960*t57971*t57955*t57965*t57957+ccab2*t57960*t57956*t57965*t57957*t57968+ccab2*t57961*t57955*t57956*t57965*(t57957*t57957)*(1.0/2.0)-ccab2*t57961*t57971*1.0/(t57964*t57964*t57964)*t57957*t57968*2.0-ccab1*gcab*t57960*t57955*1.0/(t57973*t57973*t57973)*t57956*t57957*(1.0/2.0));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t57977 = 1.0/pow(rho_a,1.0/3.0);
                double t57978 = c*t57977;
                double t57979 = sqrt(t57978);
                double t57980 = pow(t57978,3.0/2.0);
                double t57981 = c*c;
                double t57982 = 1.0/pow(rho_a,2.0/3.0);
                double t57983 = 1.0/c0p;
                double t57984 = b1p*t57979;
                double t57985 = b3p*t57980;
                double t57986 = b4p*t57981*t57982;
                double t57987 = b2p*c*t57977;
                double t57988 = t57984+t57985+t57986+t57987;
                double t57989 = 1.0/t57988;
                double t57990 = t57983*t57989*(1.0/2.0);
                double t57991 = t57990+1.0;
                double t57992 = log(t57991);
                double t57993 = a1p*c*t57977;
                double t57994 = t57993+1.0;
                double t57995 = pow(2.0,1.0/3.0);
                double t57996 = t57995*2.0;
                double t57997 = t57996-2.0;
                double t57998 = two_13*2.0;
                double t57999 = t57998-2.0;
                double t58000 = 1.0/t57999;
                double t58001 = 1.0/c0f;
                double t58002 = 1.0/pow(rho_b,1.0/3.0);
                double t58003 = c*t58002;
                double t58004 = sqrt(t58003);
                double t58005 = pow(t58003,3.0/2.0);
                double t58006 = 1.0/pow(rho_b,2.0/3.0);
                double t58007 = b1p*t58004;
                double t58008 = b3p*t58005;
                double t58009 = b4p*t57981*t58006;
                double t58010 = b2p*c*t58002;
                double t58011 = t58010+t58007+t58008+t58009;
                double t58012 = 1.0/t58011;
                double t58013 = t57983*t58012*(1.0/2.0);
                double t58014 = t58013+1.0;
                double t58015 = log(t58014);
                double t58016 = a1p*c*t58002;
                double t58017 = t58016+1.0;
                double t58018 = c0p*t58015*t58017*2.0;
                double t58019 = rho_a+rho_b;
                double t58020 = 1.0/pow(t58019,1.0/3.0);
                double t58021 = c*t58020;
                double t58022 = sqrt(t58021);
                double t58023 = pow(t58021,3.0/2.0);
                double t58024 = 1.0/pow(t58019,2.0/3.0);
                double t58025 = b1p*t58022;
                double t58026 = b3p*t58023;
                double t58027 = b4p*t57981*t58024;
                double t58028 = b2p*c*t58020;
                double t58029 = t58025+t58026+t58027+t58028;
                double t58030 = 1.0/t58029;
                double t58031 = t57983*t58030*(1.0/2.0);
                double t58032 = t58031+1.0;
                double t58033 = log(t58032);
                double t58034 = a1p*c*t58020;
                double t58035 = t58034+1.0;
                double t58036 = c0p*t58033*t58035*2.0;
                double t58037 = rho_a-rho_b;
                double t58038 = t58037*t58037;
                double t58039 = 1.0/t58019;
                double t58040 = t58037*t58039;
                double t58041 = 1.0/(t58019*t58019*t58019*t58019);
                double t58042 = t58038*t58038;
                double t58043 = t58040+1.0;
                double t58044 = pow(t58043,4.0/3.0);
                double t58045 = -t58040+1.0;
                double t58046 = pow(t58045,4.0/3.0);
                double t58047 = t58044+t58046-2.0;
                double t58048 = gcab*gcab;
                double t58049 = 1.0/pow(rho_b,1.6E1/3.0);
                double t58050 = 1.0/pow(rho_a,8.0/3.0);
                double t58051 = gamma_aa*t58050*(1.0/2.0);
                double t58052 = 1.0/pow(rho_b,8.0/3.0);
                double t58053 = gamma_bb*t58052*(1.0/2.0);
                double t58054 = t58051+t58053;
                double t58055 = gcab*t58054;
                double t58056 = t58055+1.0;
                double t58057 = t58054*t58054;
                double t58058 = t58048*t58057;
                double t58059 = gcab*t58054*2.0;
                double t58060 = t58058+t58059+1.0;
                double t58062 = gcab*t58052;
                double t58063 = t58052*t58054*t58048;
                double t58061 = t58062+t58063;
                double t58064 = 1.0/(t58060*t58060);
                double t58065 = c0p*t57992*t57994*2.0;
                double t58066 = b1f*t58004;
                double t58067 = b3f*t58005;
                double t58068 = b4f*t57981*t58006;
                double t58069 = b2f*c*t58002;
                double t58070 = t58066+t58067+t58068+t58069;
                double t58071 = 1.0/t58070;
                double t58072 = t58001*t58071*(1.0/2.0);
                double t58073 = t58072+1.0;
                double t58074 = log(t58073);
                double t58075 = a1f*c*t58002;
                double t58076 = t58075+1.0;
                double t58077 = t58018-c0f*t58074*t58076*2.0;
                double t58078 = t58018-t57997*t58000*t58077;
                double t58079 = gcaa*gcaa;
                double t58080 = gamma_bb*gcaa*t58052;
                double t58081 = t58080+1.0;
                double t58082 = gamma_bb*gamma_bb;
                double t58083 = gamma_bb*gcaa*t58052*2.0;
                double t58084 = t58082*t58049*t58079;
                double t58085 = t58083+t58084+1.0;
                double t58087 = gcaa*t58052*2.0;
                double t58088 = gamma_bb*t58049*t58079*2.0;
                double t58086 = t58087+t58088;
                double t58089 = 1.0/(t58085*t58085);
                v_gamma_bb_gamma_bb[Q] += scale * (rho_b*t58078+rho_a*(t58065-t57997*t58000*(t58065-c0f*log((t58001*(1.0/2.0))/(b1f*t57979+b3f*t57980+b2f*c*t57977+b4f*t57981*t57982)+1.0)*(a1f*c*t57977+1.0)*2.0))-t58019*(t58036-t58000*t58041*t58042*t58047*(t58036-c0f*log((t58001*(1.0/2.0))/(b1f*t58022+b3f*t58023+b2f*c*t58020+b4f*t57981*t58024)+1.0)*(a1f*c*t58020+1.0)*2.0)+(Aa*t58000*t58047*log((1.0/2.0)/(Aa*(b1a*t58022+b3a*t58023+b2a*c*t58020+b4a*t57981*t58024))+1.0)*(t58041*t58042-1.0)*(a1a*c*t58020+1.0)*2.0)/d2fz0))*((ccab2*t58048*t58049*(1.0/2.0))/t58060-ccab1*1.0/(t58056*t58056)*t58048*t58049*(1.0/2.0)+ccab2*1.0/(t58060*t58060*t58060)*(t58061*t58061)*t58048*t58057*2.0-ccab2*t58064*(t58048*t58048)*t58057*t58049*(1.0/2.0)-ccab2*t58052*t58061*t58054*t58064*t58048*2.0+ccab1*gcab*t58054*1.0/(t58056*t58056*t58056)*t58048*t58049*(1.0/2.0))+rho_b*t58078*(ccaa1*1.0/(t58081*t58081)*t58049*t58079*2.0-(ccaa2*t58049*t58079*2.0)/t58085+ccaa2*1.0/pow(rho_b,3.2E1/3.0)*t58082*(t58079*t58079)*t58089*2.0-ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*1.0/(t58081*t58081*t58081)*t58079*2.0-ccaa2*t58082*t58049*1.0/(t58085*t58085*t58085)*(t58086*t58086)*t58079*2.0+ccaa2*gamma_bb*t58049*t58086*t58079*t58089*4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t57032 = 1.0/pow(rho_a,1.0/3.0);
                double t57033 = c*t57032;
                double t57034 = sqrt(t57033);
                double t57035 = pow(t57033,3.0/2.0);
                double t57036 = c*c;
                double t57037 = 1.0/pow(rho_a,2.0/3.0);
                double t57038 = 1.0/c0p;
                double t57039 = b1p*t57034;
                double t57040 = b3p*t57035;
                double t57041 = b4p*t57036*t57037;
                double t57042 = b2p*c*t57032;
                double t57043 = t57040+t57041+t57042+t57039;
                double t57044 = 1.0/t57043;
                double t57045 = t57044*t57038*(1.0/2.0);
                double t57046 = t57045+1.0;
                double t57047 = log(t57046);
                double t57048 = a1p*c*t57032;
                double t57049 = t57048+1.0;
                double t57050 = pow(2.0,1.0/3.0);
                double t57051 = t57050*2.0;
                double t57052 = t57051-2.0;
                double t57053 = two_13*2.0;
                double t57054 = t57053-2.0;
                double t57055 = 1.0/t57054;
                double t57056 = 1.0/c0f;
                double t57057 = 1.0/pow(rho_b,1.0/3.0);
                double t57058 = c*t57057;
                double t57059 = sqrt(t57058);
                double t57060 = pow(t57058,3.0/2.0);
                double t57061 = 1.0/pow(rho_b,2.0/3.0);
                double t57062 = b1p*t57059;
                double t57063 = b3p*t57060;
                double t57064 = b4p*t57061*t57036;
                double t57065 = b2p*c*t57057;
                double t57066 = t57062+t57063+t57064+t57065;
                double t57067 = 1.0/t57066;
                double t57068 = t57038*t57067*(1.0/2.0);
                double t57069 = t57068+1.0;
                double t57070 = log(t57069);
                double t57071 = a1p*c*t57057;
                double t57072 = t57071+1.0;
                double t57073 = c0p*t57070*t57072*2.0;
                double t57074 = rho_a+rho_b;
                double t57075 = 1.0/pow(t57074,1.0/3.0);
                double t57076 = c*t57075;
                double t57077 = sqrt(t57076);
                double t57078 = pow(t57076,3.0/2.0);
                double t57079 = 1.0/pow(t57074,2.0/3.0);
                double t57080 = b1p*t57077;
                double t57081 = b3p*t57078;
                double t57082 = b4p*t57036*t57079;
                double t57083 = b2p*c*t57075;
                double t57084 = t57080+t57081+t57082+t57083;
                double t57085 = 1.0/t57084;
                double t57086 = t57038*t57085*(1.0/2.0);
                double t57087 = t57086+1.0;
                double t57088 = log(t57087);
                double t57089 = a1p*c*t57075;
                double t57090 = t57089+1.0;
                double t57091 = c0p*t57090*t57088*2.0;
                double t57092 = rho_a-rho_b;
                double t57093 = t57092*t57092;
                double t57094 = 1.0/t57074;
                double t57095 = t57092*t57094;
                double t57096 = 1.0/(t57074*t57074*t57074*t57074);
                double t57097 = t57093*t57093;
                double t57098 = t57095+1.0;
                double t57099 = pow(t57098,4.0/3.0);
                double t57100 = -t57095+1.0;
                double t57101 = pow(t57100,4.0/3.0);
                double t57102 = t57101+t57099-2.0;
                double t57103 = 1.0/pow(rho_a,1.1E1/3.0);
                double t57104 = 1.0/pow(rho_a,8.0/3.0);
                double t57105 = gamma_aa*t57104*(1.0/2.0);
                double t57106 = 1.0/pow(rho_b,8.0/3.0);
                double t57107 = gamma_bb*t57106*(1.0/2.0);
                double t57108 = t57105+t57107;
                double t57109 = gcab*t57108;
                double t57110 = t57109+1.0;
                double t57111 = gcab*gcab;
                double t57112 = t57108*t57108;
                double t57113 = t57111*t57112;
                double t57114 = gcab*t57108*2.0;
                double t57115 = t57113+t57114+1.0;
                double t57116 = 1.0/pow(rho_a,1.9E1/3.0);
                double t57117 = 1.0/(t57110*t57110);
                double t57118 = 1.0/t57115;
                double t57119 = 1.0/(t57115*t57115);
                double t57120 = gamma_aa*gcab*t57103*(8.0/3.0);
                double t57121 = gamma_aa*t57111*t57103*t57108*(8.0/3.0);
                double t57122 = t57120+t57121;
                double t57123 = gcab*t57104;
                double t57124 = t57111*t57104*t57108;
                double t57125 = t57123+t57124;
                double t57126 = b1f*t57034;
                double t57127 = b3f*t57035;
                double t57128 = b4f*t57036*t57037;
                double t57129 = b2f*c*t57032;
                double t57130 = t57126+t57127+t57128+t57129;
                double t57131 = 1.0/t57130;
                double t57132 = t57131*t57056*(1.0/2.0);
                double t57133 = t57132+1.0;
                double t57134 = log(t57133);
                double t57135 = a1f*c*t57032;
                double t57136 = t57135+1.0;
                double t57137 = c0f*t57134*t57136*2.0;
                double t57138 = c0p*t57047*t57049*2.0;
                double t57139 = gcaa*gcaa;
                double t57140 = 1.0/pow(rho_a,1.6E1/3.0);
                double t57141 = gamma_aa*gcaa*t57104;
                double t57142 = t57141+1.0;
                double t57143 = gamma_aa*gamma_aa;
                double t57144 = gamma_aa*gcaa*t57104*2.0;
                double t57145 = t57140*t57143*t57139;
                double t57146 = t57144+t57145+1.0;
                double t57147 = 1.0/t57110;
                double t57148 = 1.0/pow(t57074,4.0/3.0);
                double t57149 = b1f*t57077;
                double t57150 = b3f*t57078;
                double t57151 = b4f*t57036*t57079;
                double t57152 = b2f*c*t57075;
                double t57153 = t57150+t57151+t57152+t57149;
                double t57154 = 1.0/t57153;
                double t57155 = t57154*t57056*(1.0/2.0);
                double t57156 = t57155+1.0;
                double t57157 = log(t57156);
                double t57158 = a1f*c*t57075;
                double t57159 = t57158+1.0;
                double t57161 = c0f*t57157*t57159*2.0;
                double t57160 = -t57161+t57091;
                double t57162 = 1.0/(t57074*t57074);
                double t57190 = t57162*t57092;
                double t57163 = -t57190+t57094;
                double t57164 = t57161-t57091;
                double t57165 = 1.0/pow(t57074,5.0/3.0);
                double t57166 = 1.0/sqrt(t57076);
                double t57167 = 1.0/t57087;
                double t57168 = 1.0/(t57084*t57084);
                double t57169 = b4p*t57036*t57165*(2.0/3.0);
                double t57170 = b2p*c*t57148*(1.0/3.0);
                double t57171 = b1p*c*t57148*t57166*(1.0/6.0);
                double t57172 = b3p*c*t57148*t57077*(1.0/2.0);
                double t57173 = t57170+t57171+t57172+t57169;
                double t57174 = t57090*t57173*t57167*t57168;
                double t57175 = 1.0/d2fz0;
                double t57176 = 1.0/Aa;
                double t57177 = b1a*t57077;
                double t57178 = b3a*t57078;
                double t57179 = b4a*t57036*t57079;
                double t57180 = b2a*c*t57075;
                double t57181 = t57180+t57177+t57178+t57179;
                double t57182 = 1.0/t57181;
                double t57183 = t57182*t57176*(1.0/2.0);
                double t57184 = t57183+1.0;
                double t57185 = log(t57184);
                double t57186 = a1a*c*t57075;
                double t57187 = t57186+1.0;
                double t57188 = 1.0/(t57074*t57074*t57074*t57074*t57074);
                double t57189 = pow(t57098,1.0/3.0);
                double t57191 = t57163*t57189*(4.0/3.0);
                double t57192 = pow(t57100,1.0/3.0);
                double t57193 = t57191-t57163*t57192*(4.0/3.0);
                double t57194 = t57096*t57097;
                double t57195 = t57194-1.0;
                double t57196 = 1.0/pow(rho_a,4.0/3.0);
                double t57197 = 1.0/pow(rho_a,5.0/3.0);
                double t57198 = 1.0/sqrt(t57033);
                double t57199 = 1.0/t57046;
                double t57200 = 1.0/(t57043*t57043);
                double t57201 = b4p*t57036*t57197*(2.0/3.0);
                double t57202 = b2p*c*t57196*(1.0/3.0);
                double t57203 = b1p*c*t57196*t57198*(1.0/6.0);
                double t57204 = b3p*c*t57034*t57196*(1.0/2.0);
                double t57205 = t57201+t57202+t57203+t57204;
                double t57206 = t57200*t57205*t57049*t57199;
                double t57207 = t57137-t57138;
                double t57208 = t57052*t57207*t57055;
                double t57209 = Aa*t57102*t57055*t57175*t57185*t57195*t57187*2.0;
                double t57210 = t57208+t57138;
                double t57211 = 1.0/t57142;
                double t57212 = 1.0/t57146;
                double t57213 = 1.0/(t57142*t57142);
                double t57214 = 1.0/(t57146*t57146);
                double t57215 = gcaa*t57104*2.0;
                double t57216 = gamma_aa*t57140*t57139*2.0;
                double t57217 = t57215+t57216;
                double t57218 = gamma_aa*gcaa*t57103*(1.6E1/3.0);
                double t57219 = t57116*t57143*t57139*(1.6E1/3.0);
                double t57220 = t57218+t57219;
                double t57221 = 1.0/t57133;
                double t57222 = 1.0/(t57130*t57130);
                double t57223 = b4f*t57036*t57197*(2.0/3.0);
                double t57224 = b2f*c*t57196*(1.0/3.0);
                double t57225 = b1f*c*t57196*t57198*(1.0/6.0);
                double t57226 = b3f*c*t57034*t57196*(1.0/2.0);
                double t57227 = t57223+t57224+t57225+t57226;
                double t57228 = a1f*c*c0f*t57134*t57196*(2.0/3.0);
                double t57229 = a1p*c*c0p*t57047*t57196*(2.0/3.0);
                double t57230 = ccaa1*gcaa*t57211*t57104;
                double t57231 = ccaa2*gamma_aa*t57140*t57212*t57139*2.0;
                double t57232 = t57230+t57231-ccaa1*gamma_aa*t57140*t57213*t57139-ccaa2*t57140*t57214*t57143*t57217*t57139;
                v_rho_a_gamma_aa[Q] += scale * -t57210*t57232-(ccab1*gcab*t57104*t57147*(1.0/2.0)-ccab1*t57111*t57104*t57108*t57117*(1.0/2.0)-ccab2*t57111*t57112*t57125*t57119+ccab2*t57111*t57104*t57108*t57118)*(t57091-t57208+t57209-t57138+rho_a*(-t57206+t57229+t57052*t57055*(t57206+t57228-t57221*t57222*t57136*t57227-a1p*c*c0p*t57047*t57196*(2.0/3.0)))-t57074*(-t57174+t57102*t57055*t57096*t57097*(t57174-(1.0/(t57153*t57153)*t57159*(b2f*c*t57148*(1.0/3.0)+b4f*t57036*t57165*(2.0/3.0)+b1f*c*t57148*t57166*(1.0/6.0)+b3f*c*t57148*t57077*(1.0/2.0)))/t57156+a1f*c*c0f*t57148*t57157*(2.0/3.0)-a1p*c*c0p*t57148*t57088*(2.0/3.0))+a1p*c*c0p*t57148*t57088*(2.0/3.0)+t57102*t57055*t57164*t57097*t57188*4.0-t57055*t57164*t57193*t57096*t57097+t57102*t57160*t57055*t57092*t57093*t57096*4.0+Aa*t57102*t57055*t57175*t57185*t57187*(t57097*t57188*4.0-t57092*t57093*t57096*4.0)*2.0-Aa*t57055*t57175*t57193*t57185*t57195*t57187*2.0-(t57102*t57055*1.0/(t57181*t57181)*t57175*t57195*t57187*(b2a*c*t57148*(1.0/3.0)+b4a*t57036*t57165*(2.0/3.0)+b1a*c*t57148*t57166*(1.0/6.0)+b3a*c*t57148*t57077*(1.0/2.0)))/t57184+Aa*a1a*c*t57102*t57055*t57148*t57175*t57185*t57195*(2.0/3.0))+t57102*t57055*t57164*t57096*t57097)-(rho_a*(t57138+t57052*t57055*(t57137-c0p*t57047*t57049*2.0))+rho_b*(t57073-t57052*t57055*(t57073-c0f*log((t57056*(1.0/2.0))/(b1f*t57059+b3f*t57060+b2f*c*t57057+b4f*t57061*t57036)+1.0)*(a1f*c*t57057+1.0)*2.0))-t57074*(t57091+t57209-t57102*t57160*t57055*t57096*t57097))*(ccab1*gcab*t57103*t57147*(4.0/3.0)-ccab2*t57111*t57112*t57119*(gcab*t57103*(8.0/3.0)+gamma_aa*t57111*t57116*(4.0/3.0)+t57111*t57103*t57108*(8.0/3.0))-ccab1*gamma_aa*t57111*t57116*t57117*(4.0/3.0)+ccab2*gamma_aa*t57111*t57116*t57118*(4.0/3.0)-ccab1*t57111*t57103*t57108*t57117*(4.0/3.0)+ccab2*t57111*t57103*t57108*t57118*(8.0/3.0)-ccab2*t57111*t57104*t57122*t57108*t57119+ccab2*t57111*t57112*t57122*1.0/(t57115*t57115*t57115)*t57125*2.0-ccab2*gamma_aa*t57111*t57103*t57125*t57108*t57119*(8.0/3.0)+ccab1*gamma_aa*gcab*1.0/(t57110*t57110*t57110)*t57111*t57116*t57108*(4.0/3.0))+rho_a*t57210*(ccaa1*gcaa*t57103*t57211*(8.0/3.0)-ccaa1*gamma_aa*t57213*t57116*t57139*8.0+ccaa2*gamma_aa*t57212*t57116*t57139*(3.2E1/3.0)-ccaa2*t57214*t57116*t57143*t57217*t57139*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*1.0/(t57142*t57142*t57142)*t57143*t57139*(1.6E1/3.0)-ccaa2*t57140*t57214*t57143*t57139*(gcaa*t57103*(1.6E1/3.0)+gamma_aa*t57116*t57139*(3.2E1/3.0))-ccaa2*gamma_aa*t57220*t57140*t57214*t57139*2.0+ccaa2*t57220*t57140*t57143*t57217*1.0/(t57146*t57146*t57146)*t57139*2.0)+rho_a*t57232*(-t57206+t57229+t57052*t57055*(t57206+t57228-t57229-t57221*t57222*t57136*t57227));
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t57235 = 1.0/pow(rho_a,1.0/3.0);
                double t57236 = c*t57235;
                double t57237 = sqrt(t57236);
                double t57238 = pow(t57236,3.0/2.0);
                double t57239 = c*c;
                double t57240 = 1.0/pow(rho_a,2.0/3.0);
                double t57241 = 1.0/c0p;
                double t57242 = b1p*t57237;
                double t57243 = b3p*t57238;
                double t57244 = b4p*t57240*t57239;
                double t57245 = b2p*c*t57235;
                double t57246 = t57242+t57243+t57244+t57245;
                double t57247 = 1.0/t57246;
                double t57248 = t57241*t57247*(1.0/2.0);
                double t57249 = t57248+1.0;
                double t57250 = log(t57249);
                double t57251 = a1p*c*t57235;
                double t57252 = t57251+1.0;
                double t57253 = pow(2.0,1.0/3.0);
                double t57254 = t57253*2.0;
                double t57255 = t57254-2.0;
                double t57256 = two_13*2.0;
                double t57257 = t57256-2.0;
                double t57258 = 1.0/t57257;
                double t57259 = 1.0/c0f;
                double t57260 = 1.0/pow(rho_b,1.0/3.0);
                double t57261 = c*t57260;
                double t57262 = sqrt(t57261);
                double t57263 = pow(t57261,3.0/2.0);
                double t57264 = 1.0/pow(rho_b,2.0/3.0);
                double t57265 = b1p*t57262;
                double t57266 = b3p*t57263;
                double t57267 = b4p*t57264*t57239;
                double t57268 = b2p*c*t57260;
                double t57269 = t57265+t57266+t57267+t57268;
                double t57270 = 1.0/t57269;
                double t57271 = t57241*t57270*(1.0/2.0);
                double t57272 = t57271+1.0;
                double t57273 = log(t57272);
                double t57274 = a1p*c*t57260;
                double t57275 = t57274+1.0;
                double t57276 = c0p*t57273*t57275*2.0;
                double t57277 = rho_a+rho_b;
                double t57278 = 1.0/pow(t57277,1.0/3.0);
                double t57279 = c*t57278;
                double t57280 = sqrt(t57279);
                double t57281 = pow(t57279,3.0/2.0);
                double t57282 = 1.0/pow(t57277,2.0/3.0);
                double t57283 = b1p*t57280;
                double t57284 = b3p*t57281;
                double t57285 = b4p*t57282*t57239;
                double t57286 = b2p*c*t57278;
                double t57287 = t57283+t57284+t57285+t57286;
                double t57288 = 1.0/t57287;
                double t57289 = t57241*t57288*(1.0/2.0);
                double t57290 = t57289+1.0;
                double t57291 = log(t57290);
                double t57292 = a1p*c*t57278;
                double t57293 = t57292+1.0;
                double t57294 = c0p*t57291*t57293*2.0;
                double t57295 = rho_a-rho_b;
                double t57296 = t57295*t57295;
                double t57297 = 1.0/t57277;
                double t57298 = t57295*t57297;
                double t57299 = 1.0/(t57277*t57277*t57277*t57277);
                double t57300 = t57296*t57296;
                double t57301 = t57298+1.0;
                double t57302 = pow(t57301,4.0/3.0);
                double t57303 = -t57298+1.0;
                double t57304 = pow(t57303,4.0/3.0);
                double t57305 = t57302+t57304-2.0;
                double t57306 = gcab*gcab;
                double t57307 = 1.0/pow(rho_a,1.1E1/3.0);
                double t57308 = 1.0/pow(rho_b,8.0/3.0);
                double t57309 = 1.0/pow(rho_a,8.0/3.0);
                double t57310 = gamma_aa*t57309*(1.0/2.0);
                double t57311 = gamma_bb*t57308*(1.0/2.0);
                double t57312 = t57310+t57311;
                double t57313 = gamma_aa*gcab*t57307*(8.0/3.0);
                double t57314 = gamma_aa*t57312*t57306*t57307*(8.0/3.0);
                double t57315 = t57313+t57314;
                double t57316 = t57312*t57312;
                double t57317 = t57306*t57316;
                double t57318 = gcab*t57312*2.0;
                double t57319 = t57317+t57318+1.0;
                double t57320 = gcab*t57308;
                double t57321 = t57312*t57306*t57308;
                double t57322 = t57320+t57321;
                double t57323 = 1.0/(t57319*t57319);
                double t57324 = gcab*t57312;
                double t57325 = t57324+1.0;
                double t57326 = c0p*t57250*t57252*2.0;
                double t57327 = 1.0/(t57325*t57325);
                double t57328 = 1.0/t57319;
                double t57329 = 1.0/pow(t57277,4.0/3.0);
                double t57330 = b1f*t57280;
                double t57331 = b3f*t57281;
                double t57332 = b4f*t57282*t57239;
                double t57333 = b2f*c*t57278;
                double t57334 = t57330+t57331+t57332+t57333;
                double t57335 = 1.0/t57334;
                double t57336 = t57335*t57259*(1.0/2.0);
                double t57337 = t57336+1.0;
                double t57338 = log(t57337);
                double t57339 = a1f*c*t57278;
                double t57340 = t57339+1.0;
                double t57342 = c0f*t57340*t57338*2.0;
                double t57341 = -t57342+t57294;
                double t57343 = 1.0/(t57277*t57277);
                double t57371 = t57343*t57295;
                double t57344 = -t57371+t57297;
                double t57345 = t57342-t57294;
                double t57346 = 1.0/pow(t57277,5.0/3.0);
                double t57347 = 1.0/sqrt(t57279);
                double t57348 = 1.0/t57290;
                double t57349 = 1.0/(t57287*t57287);
                double t57350 = b4p*t57346*t57239*(2.0/3.0);
                double t57351 = b2p*c*t57329*(1.0/3.0);
                double t57352 = b1p*c*t57329*t57347*(1.0/6.0);
                double t57353 = b3p*c*t57280*t57329*(1.0/2.0);
                double t57354 = t57350+t57351+t57352+t57353;
                double t57355 = t57354*t57293*t57348*t57349;
                double t57356 = 1.0/d2fz0;
                double t57357 = 1.0/Aa;
                double t57358 = b1a*t57280;
                double t57359 = b3a*t57281;
                double t57360 = b4a*t57282*t57239;
                double t57361 = b2a*c*t57278;
                double t57362 = t57360+t57361+t57358+t57359;
                double t57363 = 1.0/t57362;
                double t57364 = t57363*t57357*(1.0/2.0);
                double t57365 = t57364+1.0;
                double t57366 = log(t57365);
                double t57367 = a1a*c*t57278;
                double t57368 = t57367+1.0;
                double t57369 = 1.0/(t57277*t57277*t57277*t57277*t57277);
                double t57370 = pow(t57301,1.0/3.0);
                double t57372 = t57370*t57344*(4.0/3.0);
                double t57373 = pow(t57303,1.0/3.0);
                double t57374 = t57372-t57344*t57373*(4.0/3.0);
                double t57375 = t57300*t57299;
                double t57376 = t57375-1.0;
                double t57377 = a1f*c*t57235;
                double t57378 = t57377+1.0;
                double t57379 = b1f*t57237;
                double t57380 = b3f*t57238;
                double t57381 = b4f*t57240*t57239;
                double t57382 = b2f*c*t57235;
                double t57383 = t57380+t57381+t57382+t57379;
                double t57384 = 1.0/t57383;
                double t57385 = t57384*t57259*(1.0/2.0);
                double t57386 = t57385+1.0;
                double t57387 = 1.0/pow(rho_a,4.0/3.0);
                double t57388 = 1.0/pow(rho_a,5.0/3.0);
                double t57389 = 1.0/sqrt(t57236);
                double t57390 = log(t57386);
                double t57391 = 1.0/t57249;
                double t57392 = 1.0/(t57246*t57246);
                double t57393 = b4p*t57239*t57388*(2.0/3.0);
                double t57394 = b2p*c*t57387*(1.0/3.0);
                double t57395 = b1p*c*t57387*t57389*(1.0/6.0);
                double t57396 = b3p*c*t57237*t57387*(1.0/2.0);
                double t57397 = t57393+t57394+t57395+t57396;
                double t57398 = t57252*t57391*t57392*t57397;
                double t57399 = Aa*t57305*t57356*t57258*t57366*t57376*t57368*2.0;
                double t57400 = t57326-c0f*t57390*t57378*2.0;
                v_rho_a_gamma_bb[Q] += scale * (rho_a*(t57326-t57400*t57255*t57258)+rho_b*(t57276-t57255*t57258*(t57276-c0f*log((t57259*(1.0/2.0))/(b1f*t57262+b3f*t57263+b2f*c*t57260+b4f*t57264*t57239)+1.0)*(a1f*c*t57260+1.0)*2.0))-t57277*(t57294+t57399-t57300*t57305*t57341*t57258*t57299))*(ccab2*t57312*t57323*t57306*t57315*t57308-ccab2*t57322*t57306*t57315*t57316*1.0/(t57319*t57319*t57319)*2.0+ccab1*gamma_aa*t57306*t57307*t57308*t57327*(4.0/3.0)-ccab2*gamma_aa*t57306*t57307*t57308*t57328*(4.0/3.0)+ccab2*gamma_aa*t57312*t57322*t57323*t57306*t57307*(8.0/3.0)+ccab2*gamma_aa*t57323*(t57306*t57306)*t57307*t57316*t57308*(4.0/3.0)-ccab1*gamma_aa*gcab*t57312*t57306*t57307*1.0/(t57325*t57325*t57325)*t57308*(4.0/3.0))-((ccab1*gcab*t57308*(1.0/2.0))/t57325-ccab2*t57322*t57323*t57306*t57316-ccab1*t57312*t57306*t57308*t57327*(1.0/2.0)+ccab2*t57312*t57306*t57308*t57328)*(-t57326+t57294+t57399+rho_a*(-t57398+t57255*t57258*(t57398-(1.0/(t57383*t57383)*t57378*(b2f*c*t57387*(1.0/3.0)+b4f*t57239*t57388*(2.0/3.0)+b1f*c*t57387*t57389*(1.0/6.0)+b3f*c*t57237*t57387*(1.0/2.0)))/t57386+a1f*c*c0f*t57390*t57387*(2.0/3.0)-a1p*c*c0p*t57250*t57387*(2.0/3.0))+a1p*c*c0p*t57250*t57387*(2.0/3.0))-t57277*(-t57355+t57300*t57305*t57258*t57299*(t57355-(t57340*1.0/(t57334*t57334)*(b2f*c*t57329*(1.0/3.0)+b4f*t57346*t57239*(2.0/3.0)+b1f*c*t57329*t57347*(1.0/6.0)+b3f*c*t57280*t57329*(1.0/2.0)))/t57337+a1f*c*c0f*t57329*t57338*(2.0/3.0)-a1p*c*c0p*t57291*t57329*(2.0/3.0))+a1p*c*c0p*t57291*t57329*(2.0/3.0)+t57300*t57305*t57345*t57258*t57369*4.0-t57300*t57345*t57374*t57258*t57299+t57305*t57341*t57258*t57295*t57296*t57299*4.0+Aa*t57305*t57356*t57258*t57366*t57368*(t57300*t57369*4.0-t57295*t57296*t57299*4.0)*2.0-Aa*t57356*t57374*t57258*t57366*t57376*t57368*2.0-(t57305*1.0/(t57362*t57362)*t57356*t57258*t57376*t57368*(b2a*c*t57329*(1.0/3.0)+b4a*t57346*t57239*(2.0/3.0)+b1a*c*t57329*t57347*(1.0/6.0)+b3a*c*t57280*t57329*(1.0/2.0)))/t57365+Aa*a1a*c*t57305*t57329*t57356*t57258*t57366*t57376*(2.0/3.0))+t57400*t57255*t57258+t57300*t57305*t57345*t57258*t57299);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t57402 = 1.0/pow(rho_a,1.0/3.0);
                double t57403 = c*t57402;
                double t57404 = sqrt(t57403);
                double t57405 = pow(t57403,3.0/2.0);
                double t57406 = c*c;
                double t57407 = 1.0/pow(rho_a,2.0/3.0);
                double t57408 = 1.0/c0p;
                double t57409 = b1p*t57404;
                double t57410 = b3p*t57405;
                double t57411 = b4p*t57406*t57407;
                double t57412 = b2p*c*t57402;
                double t57413 = t57410+t57411+t57412+t57409;
                double t57414 = 1.0/t57413;
                double t57415 = t57414*t57408*(1.0/2.0);
                double t57416 = t57415+1.0;
                double t57417 = log(t57416);
                double t57418 = a1p*c*t57402;
                double t57419 = t57418+1.0;
                double t57420 = pow(2.0,1.0/3.0);
                double t57421 = t57420*2.0;
                double t57422 = t57421-2.0;
                double t57423 = two_13*2.0;
                double t57424 = t57423-2.0;
                double t57425 = 1.0/t57424;
                double t57426 = 1.0/c0f;
                double t57427 = 1.0/pow(rho_b,1.0/3.0);
                double t57428 = c*t57427;
                double t57429 = sqrt(t57428);
                double t57430 = pow(t57428,3.0/2.0);
                double t57431 = 1.0/pow(rho_b,2.0/3.0);
                double t57432 = b1p*t57429;
                double t57433 = b3p*t57430;
                double t57434 = b4p*t57431*t57406;
                double t57435 = b2p*c*t57427;
                double t57436 = t57432+t57433+t57434+t57435;
                double t57437 = 1.0/t57436;
                double t57438 = t57408*t57437*(1.0/2.0);
                double t57439 = t57438+1.0;
                double t57440 = log(t57439);
                double t57441 = a1p*c*t57427;
                double t57442 = t57441+1.0;
                double t57443 = c0p*t57440*t57442*2.0;
                double t57444 = rho_a+rho_b;
                double t57445 = 1.0/pow(t57444,1.0/3.0);
                double t57446 = c*t57445;
                double t57447 = sqrt(t57446);
                double t57448 = pow(t57446,3.0/2.0);
                double t57449 = 1.0/pow(t57444,2.0/3.0);
                double t57450 = b1p*t57447;
                double t57451 = b3p*t57448;
                double t57452 = b4p*t57406*t57449;
                double t57453 = b2p*c*t57445;
                double t57454 = t57450+t57451+t57452+t57453;
                double t57455 = 1.0/t57454;
                double t57456 = t57408*t57455*(1.0/2.0);
                double t57457 = t57456+1.0;
                double t57458 = log(t57457);
                double t57459 = a1p*c*t57445;
                double t57460 = t57459+1.0;
                double t57461 = c0p*t57460*t57458*2.0;
                double t57462 = rho_a-rho_b;
                double t57463 = t57462*t57462;
                double t57464 = 1.0/t57444;
                double t57465 = t57462*t57464;
                double t57466 = 1.0/(t57444*t57444*t57444*t57444);
                double t57467 = t57463*t57463;
                double t57468 = t57465+1.0;
                double t57469 = pow(t57468,4.0/3.0);
                double t57470 = -t57465+1.0;
                double t57471 = pow(t57470,4.0/3.0);
                double t57472 = t57471+t57469-2.0;
                double t57473 = gcab*gcab;
                double t57474 = 1.0/pow(rho_b,1.1E1/3.0);
                double t57475 = 1.0/pow(rho_a,8.0/3.0);
                double t57476 = gamma_aa*t57475*(1.0/2.0);
                double t57477 = 1.0/pow(rho_b,8.0/3.0);
                double t57478 = gamma_bb*t57477*(1.0/2.0);
                double t57479 = t57476+t57478;
                double t57480 = gamma_bb*gcab*t57474*(8.0/3.0);
                double t57481 = gamma_bb*t57473*t57474*t57479*(8.0/3.0);
                double t57482 = t57480+t57481;
                double t57483 = t57479*t57479;
                double t57484 = t57473*t57483;
                double t57485 = gcab*t57479*2.0;
                double t57486 = t57484+t57485+1.0;
                double t57487 = gcab*t57475;
                double t57488 = t57473*t57475*t57479;
                double t57489 = t57487+t57488;
                double t57490 = 1.0/(t57486*t57486);
                double t57491 = gcab*t57479;
                double t57492 = t57491+1.0;
                double t57493 = c0p*t57417*t57419*2.0;
                double t57494 = 1.0/(t57492*t57492);
                double t57495 = 1.0/t57486;
                double t57496 = 1.0/pow(t57444,4.0/3.0);
                double t57497 = b1f*t57447;
                double t57498 = b3f*t57448;
                double t57499 = b4f*t57406*t57449;
                double t57500 = b2f*c*t57445;
                double t57501 = t57500+t57497+t57498+t57499;
                double t57502 = 1.0/t57501;
                double t57503 = t57502*t57426*(1.0/2.0);
                double t57504 = t57503+1.0;
                double t57505 = log(t57504);
                double t57506 = a1f*c*t57445;
                double t57507 = t57506+1.0;
                double t57509 = c0f*t57505*t57507*2.0;
                double t57508 = t57461-t57509;
                double t57510 = 1.0/(t57444*t57444);
                double t57511 = t57510*t57462;
                double t57512 = t57511+t57464;
                double t57513 = 1.0/pow(t57444,5.0/3.0);
                double t57514 = 1.0/sqrt(t57446);
                double t57515 = 1.0/t57457;
                double t57516 = 1.0/(t57454*t57454);
                double t57517 = b4p*t57513*t57406*(2.0/3.0);
                double t57518 = b2p*c*t57496*(1.0/3.0);
                double t57519 = b1p*c*t57514*t57496*(1.0/6.0);
                double t57520 = b3p*c*t57447*t57496*(1.0/2.0);
                double t57521 = t57520+t57517+t57518+t57519;
                double t57522 = 1.0/d2fz0;
                double t57523 = 1.0/Aa;
                double t57524 = b1a*t57447;
                double t57525 = b3a*t57448;
                double t57526 = b4a*t57406*t57449;
                double t57527 = b2a*c*t57445;
                double t57528 = t57524+t57525+t57526+t57527;
                double t57529 = 1.0/t57528;
                double t57530 = t57523*t57529*(1.0/2.0);
                double t57531 = t57530+1.0;
                double t57532 = log(t57531);
                double t57533 = a1a*c*t57445;
                double t57534 = t57533+1.0;
                double t57535 = 1.0/(t57444*t57444*t57444*t57444*t57444);
                double t57536 = pow(t57468,1.0/3.0);
                double t57537 = t57512*t57536*(4.0/3.0);
                double t57538 = pow(t57470,1.0/3.0);
                double t57539 = t57537-t57512*t57538*(4.0/3.0);
                double t57540 = t57466*t57467;
                double t57541 = t57540-1.0;
                double t57542 = t57521*t57460*t57515*t57516;
                double t57543 = a1f*c*t57427;
                double t57544 = t57543+1.0;
                double t57545 = b1f*t57429;
                double t57546 = b3f*t57430;
                double t57547 = b4f*t57431*t57406;
                double t57548 = b2f*c*t57427;
                double t57549 = t57545+t57546+t57547+t57548;
                double t57550 = 1.0/t57549;
                double t57551 = t57550*t57426*(1.0/2.0);
                double t57552 = t57551+1.0;
                double t57553 = 1.0/pow(rho_b,4.0/3.0);
                double t57554 = 1.0/pow(rho_b,5.0/3.0);
                double t57555 = 1.0/sqrt(t57428);
                double t57556 = log(t57552);
                double t57557 = 1.0/t57439;
                double t57558 = 1.0/(t57436*t57436);
                double t57559 = b4p*t57406*t57554*(2.0/3.0);
                double t57560 = b2p*c*t57553*(1.0/3.0);
                double t57561 = b1p*c*t57553*t57555*(1.0/6.0);
                double t57562 = b3p*c*t57553*t57429*(1.0/2.0);
                double t57563 = t57560+t57561+t57562+t57559;
                double t57564 = t57442*t57563*t57557*t57558;
                double t57565 = t57443-c0f*t57544*t57556*2.0;
                double t57566 = Aa*t57522*t57532*t57541*t57425*t57534*t57472*2.0;
                v_rho_b_gamma_aa[Q] += scale * -((ccab1*gcab*t57475*(1.0/2.0))/t57492-ccab2*t57490*t57473*t57483*t57489-ccab1*t57473*t57475*t57494*t57479*(1.0/2.0)+ccab2*t57473*t57475*t57495*t57479)*(-t57443+t57461+t57566+t57444*(t57542-t57425*t57472*t57466*t57467*(t57542-(1.0/(t57501*t57501)*t57507*(b2f*c*t57496*(1.0/3.0)+b4f*t57513*t57406*(2.0/3.0)+b1f*c*t57514*t57496*(1.0/6.0)+b3f*c*t57447*t57496*(1.0/2.0)))/t57504+a1f*c*c0f*t57505*t57496*(2.0/3.0)-a1p*c*c0p*t57458*t57496*(2.0/3.0))-a1p*c*c0p*t57458*t57496*(2.0/3.0)+t57425*t57472*t57508*t57535*t57467*4.0+t57425*t57508*t57466*t57467*t57539+t57425*t57462*t57463*t57472*t57508*t57466*4.0-Aa*t57522*t57532*t57425*t57534*t57472*(t57535*t57467*4.0+t57462*t57463*t57466*4.0)*2.0-Aa*t57522*t57532*t57541*t57425*t57534*t57539*2.0+(t57522*t57541*t57425*t57534*t57472*1.0/(t57528*t57528)*(b2a*c*t57496*(1.0/3.0)+b4a*t57513*t57406*(2.0/3.0)+b1a*c*t57514*t57496*(1.0/6.0)+b3a*c*t57447*t57496*(1.0/2.0)))/t57531-Aa*a1a*c*t57522*t57532*t57541*t57425*t57472*t57496*(2.0/3.0))+rho_b*(-t57564+t57422*t57425*(t57564-(t57544*1.0/(t57549*t57549)*(b2f*c*t57553*(1.0/3.0)+b4f*t57406*t57554*(2.0/3.0)+b1f*c*t57553*t57555*(1.0/6.0)+b3f*c*t57553*t57429*(1.0/2.0)))/t57552+a1f*c*c0f*t57553*t57556*(2.0/3.0)-a1p*c*c0p*t57440*t57553*(2.0/3.0))+a1p*c*c0p*t57440*t57553*(2.0/3.0))+t57422*t57425*t57565-t57425*t57472*t57508*t57466*t57467)+(rho_b*(t57443-t57422*t57425*t57565)+rho_a*(t57493-t57422*t57425*(t57493-c0f*log((t57426*(1.0/2.0))/(b1f*t57404+b3f*t57405+b2f*c*t57402+b4f*t57406*t57407)+1.0)*(a1f*c*t57402+1.0)*2.0))-t57444*(t57461+t57566-t57425*t57472*t57508*t57466*t57467))*(ccab2*t57490*t57473*t57482*t57475*t57479-ccab2*t57473*t57482*t57483*1.0/(t57486*t57486*t57486)*t57489*2.0+ccab1*gamma_bb*t57473*t57474*t57475*t57494*(4.0/3.0)-ccab2*gamma_bb*t57473*t57474*t57475*t57495*(4.0/3.0)+ccab2*gamma_bb*t57490*t57473*t57474*t57479*t57489*(8.0/3.0)+ccab2*gamma_bb*t57490*(t57473*t57473)*t57474*t57483*t57475*(4.0/3.0)-ccab1*gamma_bb*gcab*t57473*t57474*1.0/(t57492*t57492*t57492)*t57475*t57479*(4.0/3.0));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t57569 = 1.0/pow(rho_a,1.0/3.0);
                double t57570 = c*t57569;
                double t57571 = sqrt(t57570);
                double t57572 = pow(t57570,3.0/2.0);
                double t57573 = c*c;
                double t57574 = 1.0/pow(rho_a,2.0/3.0);
                double t57575 = 1.0/c0p;
                double t57576 = b1p*t57571;
                double t57577 = b3p*t57572;
                double t57578 = b4p*t57573*t57574;
                double t57579 = b2p*c*t57569;
                double t57580 = t57576+t57577+t57578+t57579;
                double t57581 = 1.0/t57580;
                double t57582 = t57581*t57575*(1.0/2.0);
                double t57583 = t57582+1.0;
                double t57584 = log(t57583);
                double t57585 = a1p*c*t57569;
                double t57586 = t57585+1.0;
                double t57587 = pow(2.0,1.0/3.0);
                double t57588 = t57587*2.0;
                double t57589 = t57588-2.0;
                double t57590 = two_13*2.0;
                double t57591 = t57590-2.0;
                double t57592 = 1.0/t57591;
                double t57593 = 1.0/c0f;
                double t57594 = 1.0/pow(rho_b,1.0/3.0);
                double t57595 = c*t57594;
                double t57596 = sqrt(t57595);
                double t57597 = pow(t57595,3.0/2.0);
                double t57598 = 1.0/pow(rho_b,2.0/3.0);
                double t57599 = b1p*t57596;
                double t57600 = b3p*t57597;
                double t57601 = b4p*t57573*t57598;
                double t57602 = b2p*c*t57594;
                double t57603 = t57600+t57601+t57602+t57599;
                double t57604 = 1.0/t57603;
                double t57605 = t57604*t57575*(1.0/2.0);
                double t57606 = t57605+1.0;
                double t57607 = log(t57606);
                double t57608 = a1p*c*t57594;
                double t57609 = t57608+1.0;
                double t57610 = c0p*t57607*t57609*2.0;
                double t57611 = rho_a+rho_b;
                double t57612 = 1.0/pow(t57611,1.0/3.0);
                double t57613 = c*t57612;
                double t57614 = sqrt(t57613);
                double t57615 = pow(t57613,3.0/2.0);
                double t57616 = 1.0/pow(t57611,2.0/3.0);
                double t57617 = b1p*t57614;
                double t57618 = b3p*t57615;
                double t57619 = b4p*t57616*t57573;
                double t57620 = b2p*c*t57612;
                double t57621 = t57620+t57617+t57618+t57619;
                double t57622 = 1.0/t57621;
                double t57623 = t57622*t57575*(1.0/2.0);
                double t57624 = t57623+1.0;
                double t57625 = log(t57624);
                double t57626 = a1p*c*t57612;
                double t57627 = t57626+1.0;
                double t57628 = c0p*t57625*t57627*2.0;
                double t57629 = rho_a-rho_b;
                double t57630 = t57629*t57629;
                double t57631 = 1.0/t57611;
                double t57632 = t57631*t57629;
                double t57633 = 1.0/(t57611*t57611*t57611*t57611);
                double t57634 = t57630*t57630;
                double t57635 = t57632+1.0;
                double t57636 = pow(t57635,4.0/3.0);
                double t57637 = -t57632+1.0;
                double t57638 = pow(t57637,4.0/3.0);
                double t57639 = t57636+t57638-2.0;
                double t57640 = 1.0/pow(rho_b,1.1E1/3.0);
                double t57641 = 1.0/pow(rho_a,8.0/3.0);
                double t57642 = gamma_aa*t57641*(1.0/2.0);
                double t57643 = 1.0/pow(rho_b,8.0/3.0);
                double t57644 = gamma_bb*t57643*(1.0/2.0);
                double t57645 = t57642+t57644;
                double t57646 = gcab*t57645;
                double t57647 = t57646+1.0;
                double t57648 = gcab*gcab;
                double t57649 = t57645*t57645;
                double t57650 = t57648*t57649;
                double t57651 = gcab*t57645*2.0;
                double t57652 = t57650+t57651+1.0;
                double t57653 = 1.0/pow(rho_b,1.9E1/3.0);
                double t57654 = 1.0/(t57647*t57647);
                double t57655 = 1.0/t57652;
                double t57656 = 1.0/(t57652*t57652);
                double t57657 = gamma_bb*gcab*t57640*(8.0/3.0);
                double t57658 = gamma_bb*t57640*t57645*t57648*(8.0/3.0);
                double t57659 = t57657+t57658;
                double t57660 = gcab*t57643;
                double t57661 = t57643*t57645*t57648;
                double t57662 = t57660+t57661;
                double t57663 = b1f*t57596;
                double t57664 = b3f*t57597;
                double t57665 = b4f*t57573*t57598;
                double t57666 = b2f*c*t57594;
                double t57667 = t57663+t57664+t57665+t57666;
                double t57668 = 1.0/t57667;
                double t57669 = t57593*t57668*(1.0/2.0);
                double t57670 = t57669+1.0;
                double t57671 = log(t57670);
                double t57672 = a1f*c*t57594;
                double t57673 = t57672+1.0;
                double t57743 = c0f*t57671*t57673*2.0;
                double t57674 = t57610-t57743;
                double t57744 = t57592*t57674*t57589;
                double t57675 = t57610-t57744;
                double t57676 = gcaa*gcaa;
                double t57677 = 1.0/pow(rho_b,1.6E1/3.0);
                double t57678 = gamma_bb*gcaa*t57643;
                double t57679 = t57678+1.0;
                double t57680 = gamma_bb*gamma_bb;
                double t57681 = gamma_bb*gcaa*t57643*2.0;
                double t57682 = t57680*t57676*t57677;
                double t57683 = t57681+t57682+1.0;
                double t57684 = 1.0/t57647;
                double t57685 = 1.0/pow(t57611,4.0/3.0);
                double t57686 = b1f*t57614;
                double t57687 = b3f*t57615;
                double t57688 = b4f*t57616*t57573;
                double t57689 = b2f*c*t57612;
                double t57690 = t57686+t57687+t57688+t57689;
                double t57691 = 1.0/t57690;
                double t57692 = t57691*t57593*(1.0/2.0);
                double t57693 = t57692+1.0;
                double t57694 = log(t57693);
                double t57695 = a1f*c*t57612;
                double t57696 = t57695+1.0;
                double t57698 = c0f*t57694*t57696*2.0;
                double t57697 = t57628-t57698;
                double t57699 = 1.0/(t57611*t57611);
                double t57700 = t57629*t57699;
                double t57701 = t57700+t57631;
                double t57702 = 1.0/pow(t57611,5.0/3.0);
                double t57703 = 1.0/sqrt(t57613);
                double t57704 = 1.0/t57624;
                double t57705 = 1.0/(t57621*t57621);
                double t57706 = b4p*t57702*t57573*(2.0/3.0);
                double t57707 = b2p*c*t57685*(1.0/3.0);
                double t57708 = b1p*c*t57703*t57685*(1.0/6.0);
                double t57709 = b3p*c*t57614*t57685*(1.0/2.0);
                double t57710 = t57706+t57707+t57708+t57709;
                double t57711 = 1.0/d2fz0;
                double t57712 = 1.0/Aa;
                double t57713 = b1a*t57614;
                double t57714 = b3a*t57615;
                double t57715 = b4a*t57616*t57573;
                double t57716 = b2a*c*t57612;
                double t57717 = t57713+t57714+t57715+t57716;
                double t57718 = 1.0/t57717;
                double t57719 = t57712*t57718*(1.0/2.0);
                double t57720 = t57719+1.0;
                double t57721 = log(t57720);
                double t57722 = a1a*c*t57612;
                double t57723 = t57722+1.0;
                double t57724 = 1.0/(t57611*t57611*t57611*t57611*t57611);
                double t57725 = pow(t57635,1.0/3.0);
                double t57726 = t57701*t57725*(4.0/3.0);
                double t57727 = pow(t57637,1.0/3.0);
                double t57728 = t57726-t57701*t57727*(4.0/3.0);
                double t57729 = t57633*t57634;
                double t57730 = t57729-1.0;
                double t57731 = t57710*t57704*t57705*t57627;
                double t57732 = 1.0/pow(rho_b,4.0/3.0);
                double t57733 = 1.0/pow(rho_b,5.0/3.0);
                double t57734 = 1.0/sqrt(t57595);
                double t57735 = 1.0/t57606;
                double t57736 = 1.0/(t57603*t57603);
                double t57737 = b4p*t57733*t57573*(2.0/3.0);
                double t57738 = b2p*c*t57732*(1.0/3.0);
                double t57739 = b1p*c*t57732*t57734*(1.0/6.0);
                double t57740 = b3p*c*t57732*t57596*(1.0/2.0);
                double t57741 = t57740+t57737+t57738+t57739;
                double t57742 = t57741*t57609*t57735*t57736;
                double t57745 = Aa*t57711*t57721*t57730*t57723*t57592*t57639*2.0;
                double t57746 = 1.0/t57679;
                double t57747 = 1.0/t57683;
                double t57748 = 1.0/(t57679*t57679);
                double t57749 = 1.0/(t57683*t57683);
                double t57750 = gcaa*t57643*2.0;
                double t57751 = gamma_bb*t57676*t57677*2.0;
                double t57752 = t57750+t57751;
                double t57753 = gamma_bb*gcaa*t57640*(1.6E1/3.0);
                double t57754 = t57653*t57680*t57676*(1.6E1/3.0);
                double t57755 = t57753+t57754;
                double t57756 = 1.0/t57670;
                double t57757 = 1.0/(t57667*t57667);
                double t57758 = b4f*t57733*t57573*(2.0/3.0);
                double t57759 = b2f*c*t57732*(1.0/3.0);
                double t57760 = b1f*c*t57732*t57734*(1.0/6.0);
                double t57761 = b3f*c*t57732*t57596*(1.0/2.0);
                double t57762 = t57760+t57761+t57758+t57759;
                double t57763 = a1f*c*c0f*t57732*t57671*(2.0/3.0);
                double t57764 = a1p*c*c0p*t57732*t57607*(2.0/3.0);
                double t57765 = ccaa1*gcaa*t57643*t57746;
                double t57766 = ccaa2*gamma_bb*t57747*t57676*t57677*2.0;
                double t57767 = t57765+t57766-ccaa1*gamma_bb*t57676*t57748*t57677-ccaa2*t57680*t57752*t57676*t57677*t57749;
                v_rho_b_gamma_bb[Q] += scale * (-rho_b*t57675+t57611*(t57628+t57745-t57633*t57634*t57592*t57639*t57697)+rho_a*(t57592*t57589*(c0p*t57584*t57586*2.0-c0f*log((t57593*(1.0/2.0))/(b1f*t57571+b3f*t57572+b2f*c*t57569+b4f*t57573*t57574)+1.0)*(a1f*c*t57569+1.0)*2.0)-c0p*t57584*t57586*2.0))*(ccab1*gcab*t57640*t57684*(4.0/3.0)-ccab2*t57656*t57648*t57649*(gcab*t57640*(8.0/3.0)+gamma_bb*t57653*t57648*(4.0/3.0)+t57640*t57645*t57648*(8.0/3.0))-ccab1*gamma_bb*t57653*t57654*t57648*(4.0/3.0)+ccab2*gamma_bb*t57653*t57655*t57648*(4.0/3.0)-ccab1*t57640*t57645*t57654*t57648*(4.0/3.0)+ccab2*t57640*t57645*t57655*t57648*(8.0/3.0)-ccab2*t57643*t57645*t57656*t57648*t57659+ccab2*1.0/(t57652*t57652*t57652)*t57662*t57648*t57649*t57659*2.0-ccab2*gamma_bb*t57640*t57662*t57645*t57656*t57648*(8.0/3.0)+ccab1*gamma_bb*gcab*t57653*t57645*1.0/(t57647*t57647*t57647)*t57648*(4.0/3.0))-t57675*t57767-(ccab1*gcab*t57643*t57684*(1.0/2.0)-ccab1*t57643*t57645*t57654*t57648*(1.0/2.0)+ccab2*t57643*t57645*t57655*t57648-ccab2*t57662*t57656*t57648*t57649)*(-t57610+t57744+t57628+t57745+t57611*(t57731-t57633*t57634*t57592*t57639*(t57731-(1.0/(t57690*t57690)*t57696*(b2f*c*t57685*(1.0/3.0)+b4f*t57702*t57573*(2.0/3.0)+b1f*c*t57703*t57685*(1.0/6.0)+b3f*c*t57614*t57685*(1.0/2.0)))/t57693+a1f*c*c0f*t57685*t57694*(2.0/3.0)-a1p*c*c0p*t57625*t57685*(2.0/3.0))-a1p*c*c0p*t57625*t57685*(2.0/3.0)+t57633*t57634*t57592*t57728*t57697+t57634*t57724*t57592*t57639*t57697*4.0+t57630*t57633*t57592*t57629*t57639*t57697*4.0-Aa*t57711*t57721*t57723*t57592*t57639*(t57634*t57724*4.0+t57630*t57633*t57629*4.0)*2.0-Aa*t57711*t57721*t57730*t57723*t57592*t57728*2.0+(t57711*t57730*t57723*1.0/(t57717*t57717)*t57592*t57639*(b2a*c*t57685*(1.0/3.0)+b4a*t57702*t57573*(2.0/3.0)+b1a*c*t57703*t57685*(1.0/6.0)+b3a*c*t57614*t57685*(1.0/2.0)))/t57720-Aa*a1a*c*t57711*t57721*t57730*t57592*t57639*t57685*(2.0/3.0))+rho_b*(-t57742+t57764+t57592*t57589*(t57742+t57763-t57762*t57673*t57756*t57757-a1p*c*c0p*t57732*t57607*(2.0/3.0)))-t57633*t57634*t57592*t57639*t57697)+rho_b*t57675*(ccaa1*gcaa*t57640*t57746*(8.0/3.0)-ccaa1*gamma_bb*t57653*t57676*t57748*8.0+ccaa2*gamma_bb*t57653*t57747*t57676*(3.2E1/3.0)-ccaa2*t57653*t57680*t57752*t57676*t57749*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t57680*t57676*1.0/(t57679*t57679*t57679)*(1.6E1/3.0)-ccaa2*t57680*t57676*t57677*t57749*(gcaa*t57640*(1.6E1/3.0)+gamma_bb*t57653*t57676*(3.2E1/3.0))-ccaa2*gamma_bb*t57755*t57676*t57677*t57749*2.0+ccaa2*t57680*t57752*1.0/(t57683*t57683*t57683)*t57755*t57676*t57677*2.0)+rho_b*t57767*(-t57742+t57764+t57592*t57589*(t57742+t57763-t57764-t57762*t57673*t57756*t57757));
            }
            
        }
    }
}

}
