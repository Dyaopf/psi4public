#include <libmints/vector.h>
#include "B972_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

B972_CFunctional::B972_CFunctional()
{
    name_ = "B972_C";
    description_ = "    2nd-Order B97 Correlation Expansion\n";
    citation_ = "    F.A. Hamprecht et. al., J. Chem. Phys., 109(15), 6264-6271, 1998\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["d2fz0"] =   1.7099210000000000E+00;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["Aa"] =   1.6886999999999999E-02;
    parameters_["a1a"] =   1.1125000000000000E-01;
    parameters_["b1a"] =   1.0356999999999999E+01;
    parameters_["b2a"] =   3.6231000000000000E+00;
    parameters_["b3a"] =   8.8026000000000004E-01;
    parameters_["b4a"] =   4.9670999999999998E-01;
    parameters_["c0p"] =   3.1091000000000001E-02;
    parameters_["a1p"] =   2.1370000000000000E-01;
    parameters_["b1p"] =   7.5956999999999999E+00;
    parameters_["b2p"] =   3.5876000000000001E+00;
    parameters_["b3p"] =   1.6382000000000001E+00;
    parameters_["b4p"] =   4.9293999999999999E-01;
    parameters_["c0f"] =   1.5545000000000000E-02;
    parameters_["a1f"] =   2.0548000000000000E-01;
    parameters_["b1f"] =   1.4118900000000000E+01;
    parameters_["b2f"] =   6.1977000000000002E+00;
    parameters_["b3f"] =   3.3662000000000001E+00;
    parameters_["b4f"] =   6.2517000000000000E-01;
    parameters_["gcab"] =   6.0000000000000001E-03;
    parameters_["gcaa"] =   2.0000000000000001E-01;
    parameters_["ccab0"] =   9.5568900000000001E-01;
    parameters_["ccab1"] =   7.8855200000000003E-01;
    parameters_["ccab2"] =  -5.4786900000000003E+00;
    parameters_["ccaa0"] =   8.2001099999999993E-02;
    parameters_["ccaa1"] =   2.7168100000000002E+00;
    parameters_["ccaa2"] =  -2.8710300000000002E+00;
}
B972_CFunctional::~B972_CFunctional()
{
}
void B972_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double two_13 = parameters_["two_13"];
    double d2fz0 = parameters_["d2fz0"];
    double c = parameters_["c"];
    double Aa = parameters_["Aa"];
    double a1a = parameters_["a1a"];
    double b1a = parameters_["b1a"];
    double b2a = parameters_["b2a"];
    double b3a = parameters_["b3a"];
    double b4a = parameters_["b4a"];
    double c0p = parameters_["c0p"];
    double a1p = parameters_["a1p"];
    double b1p = parameters_["b1p"];
    double b2p = parameters_["b2p"];
    double b3p = parameters_["b3p"];
    double b4p = parameters_["b4p"];
    double c0f = parameters_["c0f"];
    double a1f = parameters_["a1f"];
    double b1f = parameters_["b1f"];
    double b2f = parameters_["b2f"];
    double b3f = parameters_["b3f"];
    double b4f = parameters_["b4f"];
    double gcab = parameters_["gcab"];
    double gcaa = parameters_["gcaa"];
    double ccab0 = parameters_["ccab0"];
    double ccab1 = parameters_["ccab1"];
    double ccab2 = parameters_["ccab2"];
    double ccaa0 = parameters_["ccaa0"];
    double ccaa1 = parameters_["ccaa1"];
    double ccaa2 = parameters_["ccaa2"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t23786 = 1.0/pow(rho_b,1.0/3.0);
                double t23787 = c*t23786;
                double t23788 = sqrt(t23787);
                double t23789 = pow(t23787,3.0/2.0);
                double t23790 = c*c;
                double t23791 = 1.0/pow(rho_b,2.0/3.0);
                double t23792 = 1.0/c0p;
                double t23793 = b1p*t23788;
                double t23794 = b3p*t23789;
                double t23795 = b4p*t23790*t23791;
                double t23796 = b2p*c*t23786;
                double t23797 = t23793+t23794+t23795+t23796;
                double t23798 = 1.0/t23797;
                double t23799 = t23792*t23798*(1.0/2.0);
                double t23800 = t23799+1.0;
                double t23801 = log(t23800);
                double t23802 = a1p*c*t23786;
                double t23803 = t23802+1.0;
                double t23804 = 1.0/pow(rho_b,8.0/3.0);
                double t23805 = gamma_bb*gamma_bb;
                double t23806 = gcaa*gcaa;
                double t23807 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t23788+b3f*t23789+b2f*c*t23786+b4f*t23790*t23791))+1.0)*(a1f*c*t23786+1.0)*2.0-c0p*t23801*t23803*2.0))/(two_13*2.0-2.0)+c0p*t23801*t23803*2.0)*(ccaa0+(ccaa2*t23805*t23806*t23807)/(gamma_bb*gcaa*t23804*2.0+t23805*t23806*t23807+1.0)+(ccaa1*gamma_bb*gcaa*t23804)/(gamma_bb*gcaa*t23804+1.0)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t23810 = 1.0/pow(rho_b,1.0/3.0);
                double t23811 = c*t23810;
                double t23812 = sqrt(t23811);
                double t23813 = pow(t23811,3.0/2.0);
                double t23814 = c*c;
                double t23815 = 1.0/pow(rho_b,2.0/3.0);
                double t23816 = 1.0/c0p;
                double t23817 = b1p*t23812;
                double t23818 = b3p*t23813;
                double t23819 = b4p*t23814*t23815;
                double t23820 = b2p*c*t23810;
                double t23821 = t23820+t23817+t23818+t23819;
                double t23822 = 1.0/t23821;
                double t23823 = t23822*t23816*(1.0/2.0);
                double t23824 = t23823+1.0;
                double t23825 = log(t23824);
                double t23826 = a1p*c*t23810;
                double t23827 = t23826+1.0;
                double t23828 = 1.0/pow(rho_b,8.0/3.0);
                double t23829 = gamma_bb*gamma_bb;
                double t23830 = gcaa*gcaa;
                double t23831 = 1.0/pow(rho_b,1.6E1/3.0);
                double t23832 = pow(2.0,1.0/3.0);
                double t23833 = t23832*2.0;
                double t23834 = t23833-2.0;
                double t23835 = two_13*2.0;
                double t23836 = t23835-2.0;
                double t23837 = 1.0/t23836;
                double t23838 = a1f*c*t23810;
                double t23839 = t23838+1.0;
                double t23840 = 1.0/c0f;
                double t23841 = b1f*t23812;
                double t23842 = b3f*t23813;
                double t23843 = b4f*t23814*t23815;
                double t23844 = b2f*c*t23810;
                double t23845 = t23841+t23842+t23843+t23844;
                double t23846 = 1.0/t23845;
                double t23847 = t23840*t23846*(1.0/2.0);
                double t23848 = t23847+1.0;
                double t23849 = 1.0/pow(rho_b,4.0/3.0);
                double t23850 = 1.0/pow(rho_b,5.0/3.0);
                double t23851 = 1.0/sqrt(t23811);
                double t23852 = log(t23848);
                double t23853 = 1.0/t23824;
                double t23854 = 1.0/(t23821*t23821);
                double t23855 = b4p*t23814*t23850*(2.0/3.0);
                double t23856 = b2p*c*t23849*(1.0/3.0);
                double t23857 = b1p*c*t23851*t23849*(1.0/6.0);
                double t23858 = b3p*c*t23812*t23849*(1.0/2.0);
                double t23859 = t23855+t23856+t23857+t23858;
                double t23860 = t23853*t23827*t23854*t23859;
                double t23861 = gamma_bb*gcaa*t23828;
                double t23862 = t23861+1.0;
                double t23863 = 1.0/t23862;
                double t23864 = ccaa1*gamma_bb*gcaa*t23863*t23828;
                double t23865 = gamma_bb*gcaa*t23828*2.0;
                double t23866 = t23830*t23831*t23829;
                double t23867 = t23865+t23866+1.0;
                double t23868 = 1.0/t23867;
                double t23869 = ccaa2*t23830*t23831*t23829*t23868;
                double t23870 = ccaa0+t23864+t23869;
                double t23871 = c0f*t23852*t23839*2.0;
                double t23872 = c0p*t23825*t23827*2.0;
                double t23873 = 1.0/pow(rho_b,1.9E1/3.0);
                double t23874 = 1.0/pow(rho_b,1.1E1/3.0);
                v_rho_b[Q] += scale * (-t23870*(t23872+t23834*t23837*(t23871-c0p*t23825*t23827*2.0))+rho_b*t23870*(-t23860+t23834*t23837*(t23860-(1.0/(t23845*t23845)*t23839*(b2f*c*t23849*(1.0/3.0)+b4f*t23814*t23850*(2.0/3.0)+b1f*c*t23851*t23849*(1.0/6.0)+b3f*c*t23812*t23849*(1.0/2.0)))/t23848+a1f*c*c0f*t23852*t23849*(2.0/3.0)-a1p*c*c0p*t23825*t23849*(2.0/3.0))+a1p*c*c0p*t23825*t23849*(2.0/3.0))+rho_b*(t23872+t23834*t23837*(t23871-t23872))*(ccaa1*gamma_bb*gcaa*t23863*t23874*(8.0/3.0)+ccaa2*t23830*t23873*t23829*t23868*(1.6E1/3.0)-ccaa1*t23830*1.0/(t23862*t23862)*t23873*t23829*(8.0/3.0)-ccaa2*t23830*t23831*t23829*1.0/(t23867*t23867)*(gamma_bb*gcaa*t23874*(1.6E1/3.0)+t23830*t23873*t23829*(1.6E1/3.0))));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t23878 = 1.0/pow(rho_b,1.0/3.0);
                double t23879 = c*t23878;
                double t23880 = sqrt(t23879);
                double t23881 = pow(t23879,3.0/2.0);
                double t23882 = c*c;
                double t23883 = 1.0/pow(rho_b,2.0/3.0);
                double t23884 = 1.0/c0p;
                double t23885 = b1p*t23880;
                double t23886 = b3p*t23881;
                double t23887 = b4p*t23882*t23883;
                double t23888 = b2p*c*t23878;
                double t23889 = t23885+t23886+t23887+t23888;
                double t23890 = 1.0/t23889;
                double t23891 = t23890*t23884*(1.0/2.0);
                double t23892 = t23891+1.0;
                double t23893 = log(t23892);
                double t23894 = a1p*c*t23878;
                double t23895 = t23894+1.0;
                double t23896 = 1.0/pow(rho_b,8.0/3.0);
                double t23897 = gcaa*gcaa;
                double t23898 = 1.0/pow(rho_b,1.6E1/3.0);
                double t23899 = gamma_bb*gcaa*t23896;
                double t23900 = t23899+1.0;
                double t23901 = gamma_bb*gamma_bb;
                double t23902 = gamma_bb*gcaa*t23896*2.0;
                double t23903 = t23901*t23897*t23898;
                double t23904 = t23902+t23903+1.0;
                v_gamma_bb[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t23880+b3f*t23881+b2f*c*t23878+b4f*t23882*t23883))+1.0)*(a1f*c*t23878+1.0)*2.0-c0p*t23893*t23895*2.0))/(two_13*2.0-2.0)+c0p*t23893*t23895*2.0)*((ccaa1*gcaa*t23896)/t23900-ccaa1*gamma_bb*1.0/(t23900*t23900)*t23897*t23898+(ccaa2*gamma_bb*t23897*t23898*2.0)/t23904-ccaa2*t23901*1.0/(t23904*t23904)*t23897*t23898*(gcaa*t23896*2.0+gamma_bb*t23897*t23898*2.0)));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t23910 = 1.0/pow(rho_b,1.0/3.0);
                double t23911 = c*t23910;
                double t23912 = sqrt(t23911);
                double t23913 = pow(t23911,3.0/2.0);
                double t23914 = c*c;
                double t23915 = 1.0/pow(rho_b,2.0/3.0);
                double t23916 = 1.0/c0p;
                double t23917 = b1p*t23912;
                double t23918 = b3p*t23913;
                double t23919 = b4p*t23914*t23915;
                double t23920 = b2p*c*t23910;
                double t23921 = t23920+t23917+t23918+t23919;
                double t23922 = 1.0/t23921;
                double t23923 = t23922*t23916*(1.0/2.0);
                double t23924 = t23923+1.0;
                double t23925 = log(t23924);
                double t23926 = a1p*c*t23910;
                double t23927 = t23926+1.0;
                double t23928 = 1.0/pow(rho_b,8.0/3.0);
                double t23929 = gamma_bb*gamma_bb;
                double t23930 = gcaa*gcaa;
                double t23931 = 1.0/pow(rho_b,1.9E1/3.0);
                double t23932 = gamma_bb*gcaa*t23928;
                double t23933 = t23932+1.0;
                double t23934 = 1.0/pow(rho_b,1.6E1/3.0);
                double t23935 = 1.0/pow(rho_b,1.1E1/3.0);
                double t23936 = gamma_bb*gcaa*t23928*2.0;
                double t23937 = t23930*t23934*t23929;
                double t23938 = t23936+t23937+1.0;
                double t23939 = pow(2.0,1.0/3.0);
                double t23940 = t23939*2.0;
                double t23941 = t23940-2.0;
                double t23942 = two_13*2.0;
                double t23943 = t23942-2.0;
                double t23944 = 1.0/t23943;
                double t23945 = a1f*c*t23910;
                double t23946 = t23945+1.0;
                double t23947 = 1.0/c0f;
                double t23948 = b1f*t23912;
                double t23949 = b3f*t23913;
                double t23950 = b4f*t23914*t23915;
                double t23951 = b2f*c*t23910;
                double t23952 = t23950+t23951+t23948+t23949;
                double t23953 = 1.0/t23952;
                double t23954 = t23953*t23947*(1.0/2.0);
                double t23955 = t23954+1.0;
                double t23956 = 1.0/pow(rho_b,4.0/3.0);
                double t23957 = 1.0/pow(rho_b,5.0/3.0);
                double t23958 = 1.0/sqrt(t23911);
                double t23959 = log(t23955);
                double t23960 = 1.0/t23924;
                double t23961 = 1.0/(t23921*t23921);
                double t23962 = b4p*t23914*t23957*(2.0/3.0);
                double t23963 = b2p*c*t23956*(1.0/3.0);
                double t23964 = b1p*c*t23956*t23958*(1.0/6.0);
                double t23965 = b3p*c*t23912*t23956*(1.0/2.0);
                double t23966 = t23962+t23963+t23964+t23965;
                double t23967 = t23960*t23961*t23927*t23966;
                double t23968 = 1.0/t23933;
                double t23969 = 1.0/t23938;
                double t23970 = ccaa1*gamma_bb*gcaa*t23928*t23968;
                double t23971 = ccaa2*t23930*t23934*t23929*t23969;
                double t23972 = ccaa0+t23970+t23971;
                double t23973 = 1.0/t23955;
                double t23974 = b4f*t23914*t23957*(2.0/3.0);
                double t23975 = b2f*c*t23956*(1.0/3.0);
                double t23976 = b1f*c*t23956*t23958*(1.0/6.0);
                double t23977 = b3f*c*t23912*t23956*(1.0/2.0);
                double t23978 = t23974+t23975+t23976+t23977;
                double t23979 = 1.0/(t23952*t23952);
                double t23980 = 1.0/pow(rho_b,7.0/3.0);
                double t23981 = 1.0/pow(t23911,3.0/2.0);
                double t23982 = t23978*t23978;
                double t23983 = t23966*t23966;
                double t23984 = 1.0/(t23921*t23921*t23921);
                double t23985 = t23960*t23927*t23983*t23984*2.0;
                double t23986 = b4p*t23914*t23928*(1.0E1/9.0);
                double t23987 = b2p*c*t23980*(4.0/9.0);
                double t23988 = b3p*t23914*t23928*t23958*(1.0/1.2E1);
                double t23989 = b1p*c*t23980*t23958*(2.0/9.0);
                double t23990 = b3p*c*t23912*t23980*(2.0/3.0);
                double t23991 = t23990+t23986+t23987+t23988+t23989-b1p*t23914*t23981*t23928*(1.0/3.6E1);
                double t23992 = 1.0/(t23924*t23924);
                double t23993 = 1.0/(t23921*t23921*t23921*t23921);
                double t23994 = a1p*c*c0p*t23925*t23980*(8.0/9.0);
                double t23995 = c0f*t23946*t23959*2.0;
                double t23996 = c0p*t23925*t23927*2.0;
                double t23997 = 1.0/pow(rho_b,2.2E1/3.0);
                double t23998 = 1.0/(t23933*t23933);
                double t23999 = gamma_bb*gcaa*t23935*(1.6E1/3.0);
                double t24000 = t23930*t23931*t23929*(1.6E1/3.0);
                double t24001 = t23999+t24000;
                double t24002 = 1.0/(t23938*t23938);
                double t24003 = 1.0/pow(rho_b,1.4E1/3.0);
                double t24004 = a1f*c*c0f*t23956*t23959*(2.0/3.0);
                double t24005 = a1p*c*c0p*t23925*t23956*(2.0/3.0);
                double t24006 = ccaa1*gamma_bb*gcaa*t23935*t23968*(8.0/3.0);
                double t24007 = ccaa2*t23930*t23931*t23929*t23969*(1.6E1/3.0);
                double t24008 = t24006+t24007-ccaa1*t23930*t23931*t23929*t23998*(8.0/3.0)-ccaa2*t23930*t23934*t23929*t24001*t24002;
                v_rho_b_rho_b[Q] += scale * (t24008*(t23996+t23941*t23944*(t23995-c0p*t23925*t23927*2.0))*2.0+t23972*(-t23967+t24005+t23941*t23944*(t23967+t24004-t23946*t23973*t23978*t23979-a1p*c*c0p*t23925*t23956*(2.0/3.0)))*2.0+rho_b*t23972*(-t23985-t23994+t23941*t23944*(t23985+t23994-t23960*t23961*t23927*t23991-1.0/(t23952*t23952*t23952)*t23946*t23973*t23982*2.0+t23946*t23973*t23979*(b2f*c*t23980*(4.0/9.0)+b4f*t23914*t23928*(1.0E1/9.0)+b1f*c*t23980*t23958*(2.0/9.0)+b3f*c*t23912*t23980*(2.0/3.0)-b1f*t23914*t23981*t23928*(1.0/3.6E1)+b3f*t23914*t23928*t23958*(1.0/1.2E1))+1.0/(t23952*t23952*t23952*t23952)*t23946*1.0/(t23955*t23955)*t23982*t23947*(1.0/2.0)-a1f*c*c0f*t23980*t23959*(8.0/9.0)-t23916*t23927*t23983*t23992*t23993*(1.0/2.0)+a1f*c*t23973*t23956*t23978*t23979*(2.0/3.0)-a1p*c*t23960*t23961*t23956*t23966*(2.0/3.0))+t23960*t23961*t23927*t23991+t23916*t23927*t23983*t23992*t23993*(1.0/2.0)+a1p*c*t23960*t23961*t23956*t23966*(2.0/3.0))-rho_b*t24008*(-t23967+t24005+t23941*t23944*(t23967+t24004-t24005-t23946*t23973*t23978*t23979))*2.0-rho_b*(t23996+t23941*t23944*(t23995-t23996))*(ccaa1*gamma_bb*gcaa*t23968*t24003*(8.8E1/9.0)+ccaa2*t23930*t23929*t23969*t23997*(3.04E2/9.0)-ccaa1*t23930*t23929*t23997*t23998*2.4E1-ccaa2*t23930*t23931*t23929*t24001*t24002*(3.2E1/3.0)-ccaa2*t23930*t23934*t23929*t24002*(gamma_bb*gcaa*t24003*(1.76E2/9.0)+t23930*t23929*t23997*(3.04E2/9.0))+ccaa2*t23930*t23934*t23929*1.0/(t23938*t23938*t23938)*(t24001*t24001)*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*t23930*1.0/(t23933*t23933*t23933)*t23929*(1.28E2/9.0)));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t24094 = 1.0/pow(rho_b,1.0/3.0);
                double t24095 = c*t24094;
                double t24096 = sqrt(t24095);
                double t24097 = pow(t24095,3.0/2.0);
                double t24098 = c*c;
                double t24099 = 1.0/pow(rho_b,2.0/3.0);
                double t24100 = 1.0/c0p;
                double t24101 = b1p*t24096;
                double t24102 = b3p*t24097;
                double t24103 = b4p*t24098*t24099;
                double t24104 = b2p*c*t24094;
                double t24105 = t24101+t24102+t24103+t24104;
                double t24106 = 1.0/t24105;
                double t24107 = t24100*t24106*(1.0/2.0);
                double t24108 = t24107+1.0;
                double t24109 = log(t24108);
                double t24110 = a1p*c*t24094;
                double t24111 = t24110+1.0;
                double t24112 = gcaa*gcaa;
                double t24113 = 1.0/pow(rho_b,1.6E1/3.0);
                double t24114 = 1.0/pow(rho_b,8.0/3.0);
                double t24115 = gamma_bb*gcaa*t24114;
                double t24116 = t24115+1.0;
                double t24117 = gamma_bb*gamma_bb;
                double t24118 = gamma_bb*gcaa*t24114*2.0;
                double t24119 = t24112*t24113*t24117;
                double t24120 = t24118+t24119+1.0;
                double t24122 = gcaa*t24114*2.0;
                double t24123 = gamma_bb*t24112*t24113*2.0;
                double t24121 = t24122+t24123;
                double t24124 = 1.0/(t24120*t24120);
                v_gamma_bb_gamma_bb[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t24096+b3f*t24097+b2f*c*t24094+b4f*t24098*t24099))+1.0)*(a1f*c*t24094+1.0)*2.0-c0p*t24111*t24109*2.0))/(two_13*2.0-2.0)+c0p*t24111*t24109*2.0)*((ccaa2*t24112*t24113*2.0)/t24120-ccaa1*t24112*t24113*1.0/(t24116*t24116)*2.0-ccaa2*1.0/pow(rho_b,3.2E1/3.0)*(t24112*t24112)*t24124*t24117*2.0+ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t24112*1.0/(t24116*t24116*t24116)*2.0+ccaa2*1.0/(t24120*t24120*t24120)*t24112*(t24121*t24121)*t24113*t24117*2.0-ccaa2*gamma_bb*t24112*t24121*t24113*t24124*4.0));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t24015 = 1.0/pow(rho_b,1.0/3.0);
                double t24016 = c*t24015;
                double t24017 = sqrt(t24016);
                double t24018 = pow(t24016,3.0/2.0);
                double t24019 = c*c;
                double t24020 = 1.0/pow(rho_b,2.0/3.0);
                double t24021 = 1.0/c0p;
                double t24022 = b1p*t24017;
                double t24023 = b3p*t24018;
                double t24024 = b4p*t24020*t24019;
                double t24025 = b2p*c*t24015;
                double t24026 = t24022+t24023+t24024+t24025;
                double t24027 = 1.0/t24026;
                double t24028 = t24021*t24027*(1.0/2.0);
                double t24029 = t24028+1.0;
                double t24030 = log(t24029);
                double t24031 = a1p*c*t24015;
                double t24032 = t24031+1.0;
                double t24033 = 1.0/pow(rho_b,8.0/3.0);
                double t24034 = gcaa*gcaa;
                double t24035 = 1.0/pow(rho_b,1.6E1/3.0);
                double t24036 = gamma_bb*gcaa*t24033;
                double t24037 = t24036+1.0;
                double t24038 = gamma_bb*gamma_bb;
                double t24039 = gamma_bb*gcaa*t24033*2.0;
                double t24040 = t24034*t24035*t24038;
                double t24041 = t24040+t24039+1.0;
                double t24042 = pow(2.0,1.0/3.0);
                double t24043 = t24042*2.0;
                double t24044 = t24043-2.0;
                double t24045 = two_13*2.0;
                double t24046 = t24045-2.0;
                double t24047 = 1.0/t24046;
                double t24048 = 1.0/c0f;
                double t24049 = b1f*t24017;
                double t24050 = b3f*t24018;
                double t24051 = b4f*t24020*t24019;
                double t24052 = b2f*c*t24015;
                double t24053 = t24050+t24051+t24052+t24049;
                double t24054 = 1.0/t24053;
                double t24055 = t24054*t24048*(1.0/2.0);
                double t24056 = t24055+1.0;
                double t24057 = log(t24056);
                double t24058 = a1f*c*t24015;
                double t24059 = t24058+1.0;
                double t24060 = c0f*t24057*t24059*2.0;
                double t24061 = c0p*t24030*t24032*2.0;
                double t24062 = 1.0/t24037;
                double t24063 = 1.0/t24041;
                double t24064 = 1.0/pow(rho_b,1.9E1/3.0);
                double t24065 = 1.0/(t24037*t24037);
                double t24066 = 1.0/pow(rho_b,1.1E1/3.0);
                double t24067 = 1.0/(t24041*t24041);
                double t24068 = gcaa*t24033*2.0;
                double t24069 = gamma_bb*t24034*t24035*2.0;
                double t24070 = t24068+t24069;
                double t24071 = gamma_bb*gcaa*t24066*(1.6E1/3.0);
                double t24072 = t24034*t24064*t24038*(1.6E1/3.0);
                double t24073 = t24071+t24072;
                double t24074 = 1.0/pow(rho_b,4.0/3.0);
                double t24075 = 1.0/pow(rho_b,5.0/3.0);
                double t24076 = 1.0/sqrt(t24016);
                double t24077 = 1.0/t24029;
                double t24078 = 1.0/(t24026*t24026);
                double t24079 = b4p*t24019*t24075*(2.0/3.0);
                double t24080 = b2p*c*t24074*(1.0/3.0);
                double t24081 = b1p*c*t24074*t24076*(1.0/6.0);
                double t24082 = b3p*c*t24017*t24074*(1.0/2.0);
                double t24083 = t24080+t24081+t24082+t24079;
                double t24084 = t24032*t24083*t24077*t24078;
                double t24085 = ccaa1*gcaa*t24033*t24062;
                double t24086 = ccaa2*gamma_bb*t24034*t24035*t24063*2.0;
                double t24087 = t24085+t24086-ccaa1*gamma_bb*t24034*t24035*t24065-ccaa2*t24034*t24070*t24035*t24038*t24067;
                v_rho_b_gamma_bb[Q] += scale * (-t24087*(t24061+t24044*t24047*(t24060-c0p*t24030*t24032*2.0))+rho_b*t24087*(-t24084+t24044*t24047*(t24084-(1.0/(t24053*t24053)*t24059*(b2f*c*t24074*(1.0/3.0)+b4f*t24019*t24075*(2.0/3.0)+b1f*c*t24074*t24076*(1.0/6.0)+b3f*c*t24017*t24074*(1.0/2.0)))/t24056+a1f*c*c0f*t24074*t24057*(2.0/3.0)-a1p*c*c0p*t24030*t24074*(2.0/3.0))+a1p*c*c0p*t24030*t24074*(2.0/3.0))+rho_b*(t24061+t24044*t24047*(t24060-t24061))*(ccaa1*gcaa*t24062*t24066*(8.0/3.0)+ccaa2*gamma_bb*t24034*t24063*t24064*(3.2E1/3.0)-ccaa1*gamma_bb*t24034*t24064*t24065*8.0-ccaa2*t24034*t24070*t24064*t24038*t24067*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t24034*1.0/(t24037*t24037*t24037)*t24038*(1.6E1/3.0)-ccaa2*t24034*t24035*t24038*t24067*(gcaa*t24066*(1.6E1/3.0)+gamma_bb*t24034*t24064*(3.2E1/3.0))-ccaa2*gamma_bb*t24034*t24035*t24073*t24067*2.0+ccaa2*1.0/(t24041*t24041*t24041)*t24034*t24070*t24035*t24073*t24038*2.0));
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t24139 = 1.0/pow(rho_a,1.0/3.0);
                double t24140 = c*t24139;
                double t24141 = sqrt(t24140);
                double t24142 = pow(t24140,3.0/2.0);
                double t24143 = c*c;
                double t24144 = 1.0/pow(rho_a,2.0/3.0);
                double t24145 = 1.0/c0p;
                double t24146 = b1p*t24141;
                double t24147 = b3p*t24142;
                double t24148 = b4p*t24143*t24144;
                double t24149 = b2p*c*t24139;
                double t24150 = t24146+t24147+t24148+t24149;
                double t24151 = 1.0/t24150;
                double t24152 = t24151*t24145*(1.0/2.0);
                double t24153 = t24152+1.0;
                double t24154 = log(t24153);
                double t24155 = a1p*c*t24139;
                double t24156 = t24155+1.0;
                double t24157 = 1.0/pow(rho_a,8.0/3.0);
                double t24158 = gamma_aa*gamma_aa;
                double t24159 = gcaa*gcaa;
                double t24160 = 1.0/pow(rho_a,1.6E1/3.0);
                v[Q] += scale * (-rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t24141+b3f*t24142+b2f*c*t24139+b4f*t24143*t24144))+1.0)*(a1f*c*t24139+1.0)*2.0-c0p*t24154*t24156*2.0))/(two_13*2.0-2.0)+c0p*t24154*t24156*2.0)*(ccaa0+(ccaa2*t24160*t24158*t24159)/(gamma_aa*gcaa*t24157*2.0+t24160*t24158*t24159+1.0)+(ccaa1*gamma_aa*gcaa*t24157)/(gamma_aa*gcaa*t24157+1.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t24162 = 1.0/pow(rho_a,1.0/3.0);
                double t24163 = c*t24162;
                double t24164 = sqrt(t24163);
                double t24165 = pow(t24163,3.0/2.0);
                double t24166 = c*c;
                double t24167 = 1.0/pow(rho_a,2.0/3.0);
                double t24168 = 1.0/c0p;
                double t24169 = b1p*t24164;
                double t24170 = b3p*t24165;
                double t24171 = b4p*t24166*t24167;
                double t24172 = b2p*c*t24162;
                double t24173 = t24170+t24171+t24172+t24169;
                double t24174 = 1.0/t24173;
                double t24175 = t24174*t24168*(1.0/2.0);
                double t24176 = t24175+1.0;
                double t24177 = log(t24176);
                double t24178 = a1p*c*t24162;
                double t24179 = t24178+1.0;
                double t24180 = 1.0/pow(rho_a,8.0/3.0);
                double t24181 = gamma_aa*gamma_aa;
                double t24182 = gcaa*gcaa;
                double t24183 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24184 = pow(2.0,1.0/3.0);
                double t24185 = t24184*2.0;
                double t24186 = t24185-2.0;
                double t24187 = two_13*2.0;
                double t24188 = t24187-2.0;
                double t24189 = 1.0/t24188;
                double t24190 = a1f*c*t24162;
                double t24191 = t24190+1.0;
                double t24192 = 1.0/c0f;
                double t24193 = b1f*t24164;
                double t24194 = b3f*t24165;
                double t24195 = b4f*t24166*t24167;
                double t24196 = b2f*c*t24162;
                double t24197 = t24193+t24194+t24195+t24196;
                double t24198 = 1.0/t24197;
                double t24199 = t24192*t24198*(1.0/2.0);
                double t24200 = t24199+1.0;
                double t24201 = 1.0/pow(rho_a,4.0/3.0);
                double t24202 = 1.0/pow(rho_a,5.0/3.0);
                double t24203 = 1.0/sqrt(t24163);
                double t24204 = log(t24200);
                double t24205 = 1.0/t24176;
                double t24206 = 1.0/(t24173*t24173);
                double t24207 = b4p*t24202*t24166*(2.0/3.0);
                double t24208 = b2p*c*t24201*(1.0/3.0);
                double t24209 = b1p*c*t24201*t24203*(1.0/6.0);
                double t24210 = b3p*c*t24201*t24164*(1.0/2.0);
                double t24211 = t24210+t24207+t24208+t24209;
                double t24212 = t24211*t24205*t24206*t24179;
                double t24213 = gamma_aa*gcaa*t24180;
                double t24214 = t24213+1.0;
                double t24215 = 1.0/t24214;
                double t24216 = ccaa1*gamma_aa*gcaa*t24215*t24180;
                double t24217 = gamma_aa*gcaa*t24180*2.0;
                double t24218 = t24181*t24182*t24183;
                double t24219 = t24217+t24218+1.0;
                double t24220 = 1.0/t24219;
                double t24221 = ccaa2*t24220*t24181*t24182*t24183;
                double t24222 = ccaa0+t24221+t24216;
                double t24223 = c0f*t24204*t24191*2.0;
                double t24224 = c0p*t24177*t24179*2.0;
                double t24225 = 1.0/pow(rho_a,1.9E1/3.0);
                double t24226 = 1.0/pow(rho_a,1.1E1/3.0);
                v_rho_a[Q] += scale * (-t24222*(t24224+t24186*t24189*(t24223-c0p*t24177*t24179*2.0))+rho_a*t24222*(-t24212+t24186*t24189*(t24212-(t24191*1.0/(t24197*t24197)*(b2f*c*t24201*(1.0/3.0)+b4f*t24202*t24166*(2.0/3.0)+b1f*c*t24201*t24203*(1.0/6.0)+b3f*c*t24201*t24164*(1.0/2.0)))/t24200+a1f*c*c0f*t24201*t24204*(2.0/3.0)-a1p*c*c0p*t24201*t24177*(2.0/3.0))+a1p*c*c0p*t24201*t24177*(2.0/3.0))+rho_a*(t24224+t24186*t24189*(t24223-t24224))*(ccaa1*gamma_aa*gcaa*t24215*t24226*(8.0/3.0)+ccaa2*t24220*t24225*t24181*t24182*(1.6E1/3.0)-ccaa1*1.0/(t24214*t24214)*t24225*t24181*t24182*(8.0/3.0)-ccaa2*t24181*t24182*t24183*1.0/(t24219*t24219)*(gamma_aa*gcaa*t24226*(1.6E1/3.0)+t24225*t24181*t24182*(1.6E1/3.0))));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t24229 = 1.0/pow(rho_a,1.0/3.0);
                double t24230 = c*t24229;
                double t24231 = sqrt(t24230);
                double t24232 = pow(t24230,3.0/2.0);
                double t24233 = c*c;
                double t24234 = 1.0/pow(rho_a,2.0/3.0);
                double t24235 = 1.0/c0p;
                double t24236 = b1p*t24231;
                double t24237 = b3p*t24232;
                double t24238 = b4p*t24233*t24234;
                double t24239 = b2p*c*t24229;
                double t24240 = t24236+t24237+t24238+t24239;
                double t24241 = 1.0/t24240;
                double t24242 = t24241*t24235*(1.0/2.0);
                double t24243 = t24242+1.0;
                double t24244 = log(t24243);
                double t24245 = a1p*c*t24229;
                double t24246 = t24245+1.0;
                double t24247 = 1.0/pow(rho_a,8.0/3.0);
                double t24248 = gcaa*gcaa;
                double t24249 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24250 = gamma_aa*gcaa*t24247;
                double t24251 = t24250+1.0;
                double t24252 = gamma_aa*gamma_aa;
                double t24253 = gamma_aa*gcaa*t24247*2.0;
                double t24254 = t24252*t24248*t24249;
                double t24255 = t24253+t24254+1.0;
                v_gamma_aa[Q] += scale * (-rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t24231+b3f*t24232+b2f*c*t24229+b4f*t24233*t24234))+1.0)*(a1f*c*t24229+1.0)*2.0-c0p*t24244*t24246*2.0))/(two_13*2.0-2.0)+c0p*t24244*t24246*2.0)*((ccaa1*gcaa*t24247)/t24251-ccaa1*gamma_aa*1.0/(t24251*t24251)*t24248*t24249+(ccaa2*gamma_aa*t24248*t24249*2.0)/t24255-ccaa2*t24252*1.0/(t24255*t24255)*t24248*t24249*(gcaa*t24247*2.0+gamma_aa*t24248*t24249*2.0)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t24261 = 1.0/pow(rho_a,1.0/3.0);
                double t24262 = c*t24261;
                double t24263 = sqrt(t24262);
                double t24264 = pow(t24262,3.0/2.0);
                double t24265 = c*c;
                double t24266 = 1.0/pow(rho_a,2.0/3.0);
                double t24267 = 1.0/c0p;
                double t24268 = b1p*t24263;
                double t24269 = b3p*t24264;
                double t24270 = b4p*t24265*t24266;
                double t24271 = b2p*c*t24261;
                double t24272 = t24270+t24271+t24268+t24269;
                double t24273 = 1.0/t24272;
                double t24274 = t24273*t24267*(1.0/2.0);
                double t24275 = t24274+1.0;
                double t24276 = log(t24275);
                double t24277 = a1p*c*t24261;
                double t24278 = t24277+1.0;
                double t24279 = 1.0/pow(rho_a,8.0/3.0);
                double t24280 = gamma_aa*gamma_aa;
                double t24281 = gcaa*gcaa;
                double t24282 = 1.0/pow(rho_a,1.9E1/3.0);
                double t24283 = gamma_aa*gcaa*t24279;
                double t24284 = t24283+1.0;
                double t24285 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24286 = 1.0/pow(rho_a,1.1E1/3.0);
                double t24287 = gamma_aa*gcaa*t24279*2.0;
                double t24288 = t24280*t24281*t24285;
                double t24289 = t24287+t24288+1.0;
                double t24290 = pow(2.0,1.0/3.0);
                double t24291 = t24290*2.0;
                double t24292 = t24291-2.0;
                double t24293 = two_13*2.0;
                double t24294 = t24293-2.0;
                double t24295 = 1.0/t24294;
                double t24296 = a1f*c*t24261;
                double t24297 = t24296+1.0;
                double t24298 = 1.0/c0f;
                double t24299 = b1f*t24263;
                double t24300 = b3f*t24264;
                double t24301 = b4f*t24265*t24266;
                double t24302 = b2f*c*t24261;
                double t24303 = t24300+t24301+t24302+t24299;
                double t24304 = 1.0/t24303;
                double t24305 = t24304*t24298*(1.0/2.0);
                double t24306 = t24305+1.0;
                double t24307 = 1.0/pow(rho_a,4.0/3.0);
                double t24308 = 1.0/pow(rho_a,5.0/3.0);
                double t24309 = 1.0/sqrt(t24262);
                double t24310 = log(t24306);
                double t24311 = 1.0/t24275;
                double t24312 = 1.0/(t24272*t24272);
                double t24313 = b4p*t24308*t24265*(2.0/3.0);
                double t24314 = b2p*c*t24307*(1.0/3.0);
                double t24315 = b1p*c*t24307*t24309*(1.0/6.0);
                double t24316 = b3p*c*t24307*t24263*(1.0/2.0);
                double t24317 = t24313+t24314+t24315+t24316;
                double t24318 = t24311*t24312*t24317*t24278;
                double t24319 = 1.0/t24284;
                double t24320 = 1.0/t24289;
                double t24321 = ccaa1*gamma_aa*gcaa*t24319*t24279;
                double t24322 = ccaa2*t24320*t24280*t24281*t24285;
                double t24323 = ccaa0+t24321+t24322;
                double t24324 = 1.0/t24306;
                double t24325 = b4f*t24308*t24265*(2.0/3.0);
                double t24326 = b2f*c*t24307*(1.0/3.0);
                double t24327 = b1f*c*t24307*t24309*(1.0/6.0);
                double t24328 = b3f*c*t24307*t24263*(1.0/2.0);
                double t24329 = t24325+t24326+t24327+t24328;
                double t24330 = 1.0/(t24303*t24303);
                double t24331 = 1.0/pow(rho_a,7.0/3.0);
                double t24332 = 1.0/pow(t24262,3.0/2.0);
                double t24333 = t24329*t24329;
                double t24334 = t24317*t24317;
                double t24335 = 1.0/(t24272*t24272*t24272);
                double t24336 = t24311*t24334*t24335*t24278*2.0;
                double t24337 = b4p*t24265*t24279*(1.0E1/9.0);
                double t24338 = b2p*c*t24331*(4.0/9.0);
                double t24339 = b3p*t24309*t24265*t24279*(1.0/1.2E1);
                double t24340 = b1p*c*t24331*t24309*(2.0/9.0);
                double t24341 = b3p*c*t24331*t24263*(2.0/3.0);
                double t24342 = t24340+t24341+t24337+t24338+t24339-b1p*t24332*t24265*t24279*(1.0/3.6E1);
                double t24343 = 1.0/(t24275*t24275);
                double t24344 = 1.0/(t24272*t24272*t24272*t24272);
                double t24345 = a1p*c*c0p*t24331*t24276*(8.0/9.0);
                double t24346 = c0f*t24310*t24297*2.0;
                double t24347 = c0p*t24276*t24278*2.0;
                double t24348 = 1.0/pow(rho_a,2.2E1/3.0);
                double t24349 = 1.0/(t24284*t24284);
                double t24350 = gamma_aa*gcaa*t24286*(1.6E1/3.0);
                double t24351 = t24280*t24281*t24282*(1.6E1/3.0);
                double t24352 = t24350+t24351;
                double t24353 = 1.0/(t24289*t24289);
                double t24354 = 1.0/pow(rho_a,1.4E1/3.0);
                double t24355 = a1f*c*c0f*t24310*t24307*(2.0/3.0);
                double t24356 = a1p*c*c0p*t24307*t24276*(2.0/3.0);
                double t24357 = ccaa1*gamma_aa*gcaa*t24319*t24286*(8.0/3.0);
                double t24358 = ccaa2*t24320*t24280*t24281*t24282*(1.6E1/3.0);
                double t24359 = t24357+t24358-ccaa1*t24280*t24281*t24282*t24349*(8.0/3.0)-ccaa2*t24280*t24352*t24281*t24353*t24285;
                v_rho_a_rho_a[Q] += scale * (t24359*(t24347+t24292*t24295*(t24346-c0p*t24276*t24278*2.0))*2.0+t24323*(-t24318+t24356+t24292*t24295*(t24318+t24355-t24330*t24324*t24329*t24297-a1p*c*c0p*t24307*t24276*(2.0/3.0)))*2.0+rho_a*t24323*(-t24336-t24345+t24292*t24295*(t24336+t24345-t24311*t24312*t24342*t24278-1.0/(t24303*t24303*t24303)*t24324*t24333*t24297*2.0+t24330*t24324*t24297*(b2f*c*t24331*(4.0/9.0)+b4f*t24265*t24279*(1.0E1/9.0)+b1f*c*t24331*t24309*(2.0/9.0)+b3f*c*t24331*t24263*(2.0/3.0)-b1f*t24332*t24265*t24279*(1.0/3.6E1)+b3f*t24309*t24265*t24279*(1.0/1.2E1))+1.0/(t24303*t24303*t24303*t24303)*1.0/(t24306*t24306)*t24333*t24297*t24298*(1.0/2.0)-a1f*c*c0f*t24310*t24331*(8.0/9.0)-t24334*t24343*t24344*t24267*t24278*(1.0/2.0)+a1f*c*t24330*t24324*t24307*t24329*(2.0/3.0)-a1p*c*t24311*t24312*t24307*t24317*(2.0/3.0))+t24311*t24312*t24342*t24278+t24334*t24343*t24344*t24267*t24278*(1.0/2.0)+a1p*c*t24311*t24312*t24307*t24317*(2.0/3.0))-rho_a*t24359*(-t24318+t24356+t24292*t24295*(t24318+t24355-t24356-t24330*t24324*t24329*t24297))*2.0-rho_a*(t24347+t24292*t24295*(t24346-t24347))*(ccaa1*gamma_aa*gcaa*t24354*t24319*(8.8E1/9.0)+ccaa2*t24320*t24280*t24281*t24348*(3.04E2/9.0)-ccaa1*t24280*t24281*t24348*t24349*2.4E1-ccaa2*t24280*t24352*t24281*t24353*t24282*(3.2E1/3.0)-ccaa2*t24280*t24281*t24353*t24285*(gamma_aa*gcaa*t24354*(1.76E2/9.0)+t24280*t24281*t24348*(3.04E2/9.0))+ccaa2*t24280*(t24352*t24352)*t24281*t24285*1.0/(t24289*t24289*t24289)*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*t24280*t24281*1.0/(t24284*t24284*t24284)*(1.28E2/9.0)));
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t24442 = 1.0/pow(rho_a,1.0/3.0);
                double t24443 = c*t24442;
                double t24444 = sqrt(t24443);
                double t24445 = pow(t24443,3.0/2.0);
                double t24446 = c*c;
                double t24447 = 1.0/pow(rho_a,2.0/3.0);
                double t24448 = 1.0/c0p;
                double t24449 = b1p*t24444;
                double t24450 = b3p*t24445;
                double t24451 = b4p*t24446*t24447;
                double t24452 = b2p*c*t24442;
                double t24453 = t24450+t24451+t24452+t24449;
                double t24454 = 1.0/t24453;
                double t24455 = t24454*t24448*(1.0/2.0);
                double t24456 = t24455+1.0;
                double t24457 = log(t24456);
                double t24458 = a1p*c*t24442;
                double t24459 = t24458+1.0;
                double t24460 = gcaa*gcaa;
                double t24461 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24462 = 1.0/pow(rho_a,8.0/3.0);
                double t24463 = gamma_aa*gcaa*t24462;
                double t24464 = t24463+1.0;
                double t24465 = gamma_aa*gamma_aa;
                double t24466 = gamma_aa*gcaa*t24462*2.0;
                double t24467 = t24460*t24461*t24465;
                double t24468 = t24466+t24467+1.0;
                double t24470 = gcaa*t24462*2.0;
                double t24471 = gamma_aa*t24460*t24461*2.0;
                double t24469 = t24470+t24471;
                double t24472 = 1.0/(t24468*t24468);
                v_gamma_aa_gamma_aa[Q] += scale * (rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t24444+b3f*t24445+b2f*c*t24442+b4f*t24446*t24447))+1.0)*(a1f*c*t24442+1.0)*2.0-c0p*t24457*t24459*2.0))/(two_13*2.0-2.0)+c0p*t24457*t24459*2.0)*(ccaa1*t24460*t24461*1.0/(t24464*t24464)*2.0-(ccaa2*t24460*t24461*2.0)/t24468+ccaa2*1.0/pow(rho_a,3.2E1/3.0)*(t24460*t24460)*t24472*t24465*2.0-ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t24460*1.0/(t24464*t24464*t24464)*2.0-ccaa2*t24460*t24461*t24465*1.0/(t24468*t24468*t24468)*(t24469*t24469)*2.0+ccaa2*gamma_aa*t24460*t24461*t24472*t24469*4.0));
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t24363 = 1.0/pow(rho_a,1.0/3.0);
                double t24364 = c*t24363;
                double t24365 = sqrt(t24364);
                double t24366 = pow(t24364,3.0/2.0);
                double t24367 = c*c;
                double t24368 = 1.0/pow(rho_a,2.0/3.0);
                double t24369 = 1.0/c0p;
                double t24370 = b1p*t24365;
                double t24371 = b3p*t24366;
                double t24372 = b4p*t24367*t24368;
                double t24373 = b2p*c*t24363;
                double t24374 = t24370+t24371+t24372+t24373;
                double t24375 = 1.0/t24374;
                double t24376 = t24375*t24369*(1.0/2.0);
                double t24377 = t24376+1.0;
                double t24378 = log(t24377);
                double t24379 = a1p*c*t24363;
                double t24380 = t24379+1.0;
                double t24381 = 1.0/pow(rho_a,8.0/3.0);
                double t24382 = gcaa*gcaa;
                double t24383 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24384 = gamma_aa*gcaa*t24381;
                double t24385 = t24384+1.0;
                double t24386 = gamma_aa*gamma_aa;
                double t24387 = gamma_aa*gcaa*t24381*2.0;
                double t24388 = t24382*t24383*t24386;
                double t24389 = t24387+t24388+1.0;
                double t24390 = pow(2.0,1.0/3.0);
                double t24391 = t24390*2.0;
                double t24392 = t24391-2.0;
                double t24393 = two_13*2.0;
                double t24394 = t24393-2.0;
                double t24395 = 1.0/t24394;
                double t24396 = 1.0/c0f;
                double t24397 = b1f*t24365;
                double t24398 = b3f*t24366;
                double t24399 = b4f*t24367*t24368;
                double t24400 = b2f*c*t24363;
                double t24401 = t24400+t24397+t24398+t24399;
                double t24402 = 1.0/t24401;
                double t24403 = t24402*t24396*(1.0/2.0);
                double t24404 = t24403+1.0;
                double t24405 = log(t24404);
                double t24406 = a1f*c*t24363;
                double t24407 = t24406+1.0;
                double t24408 = c0f*t24405*t24407*2.0;
                double t24409 = c0p*t24380*t24378*2.0;
                double t24410 = 1.0/t24385;
                double t24411 = 1.0/t24389;
                double t24412 = 1.0/pow(rho_a,1.9E1/3.0);
                double t24413 = 1.0/(t24385*t24385);
                double t24414 = 1.0/pow(rho_a,1.1E1/3.0);
                double t24415 = 1.0/(t24389*t24389);
                double t24416 = gcaa*t24381*2.0;
                double t24417 = gamma_aa*t24382*t24383*2.0;
                double t24418 = t24416+t24417;
                double t24419 = gamma_aa*gcaa*t24414*(1.6E1/3.0);
                double t24420 = t24412*t24382*t24386*(1.6E1/3.0);
                double t24421 = t24420+t24419;
                double t24422 = 1.0/pow(rho_a,4.0/3.0);
                double t24423 = 1.0/pow(rho_a,5.0/3.0);
                double t24424 = 1.0/sqrt(t24364);
                double t24425 = 1.0/t24377;
                double t24426 = 1.0/(t24374*t24374);
                double t24427 = b4p*t24423*t24367*(2.0/3.0);
                double t24428 = b2p*c*t24422*(1.0/3.0);
                double t24429 = b1p*c*t24422*t24424*(1.0/6.0);
                double t24430 = b3p*c*t24422*t24365*(1.0/2.0);
                double t24431 = t24430+t24427+t24428+t24429;
                double t24432 = t24431*t24380*t24425*t24426;
                double t24433 = ccaa1*gcaa*t24410*t24381;
                double t24434 = ccaa2*gamma_aa*t24411*t24382*t24383*2.0;
                double t24435 = t24433+t24434-ccaa1*gamma_aa*t24413*t24382*t24383-ccaa2*t24415*t24382*t24418*t24383*t24386;
                v_rho_a_gamma_aa[Q] += scale * (-t24435*(t24409+t24392*t24395*(t24408-c0p*t24380*t24378*2.0))+rho_a*t24435*(-t24432+t24392*t24395*(t24432-(1.0/(t24401*t24401)*t24407*(b2f*c*t24422*(1.0/3.0)+b4f*t24423*t24367*(2.0/3.0)+b1f*c*t24422*t24424*(1.0/6.0)+b3f*c*t24422*t24365*(1.0/2.0)))/t24404+a1f*c*c0f*t24422*t24405*(2.0/3.0)-a1p*c*c0p*t24422*t24378*(2.0/3.0))+a1p*c*c0p*t24422*t24378*(2.0/3.0))+rho_a*(t24409+t24392*t24395*(t24408-t24409))*(ccaa1*gcaa*t24410*t24414*(8.0/3.0)+ccaa2*gamma_aa*t24411*t24412*t24382*(3.2E1/3.0)-ccaa1*gamma_aa*t24412*t24413*t24382*8.0-ccaa2*t24412*t24415*t24382*t24418*t24386*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t24382*1.0/(t24385*t24385*t24385)*t24386*(1.6E1/3.0)-ccaa2*t24415*t24382*t24383*t24386*(gcaa*t24414*(1.6E1/3.0)+gamma_aa*t24412*t24382*(3.2E1/3.0))-ccaa2*gamma_aa*t24421*t24415*t24382*t24383*2.0+ccaa2*t24421*t24382*t24418*t24383*t24386*1.0/(t24389*t24389*t24389)*2.0));
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t21193 = 1.0/pow(rho_a,8.0/3.0);
                double t21194 = gamma_aa*t21193*(1.0/2.0);
                double t21195 = 1.0/pow(rho_b,8.0/3.0);
                double t21196 = gamma_bb*t21195*(1.0/2.0);
                double t21191 = t21194+t21196;
                double t21192 = gcab*gcab;
                double t21197 = t21191*t21191;
                double t21198 = 1.0/pow(rho_a,1.0/3.0);
                double t21199 = c*t21198;
                double t21200 = sqrt(t21199);
                double t21201 = pow(t21199,3.0/2.0);
                double t21202 = c*c;
                double t21203 = 1.0/pow(rho_a,2.0/3.0);
                double t21204 = 1.0/c0p;
                double t21205 = b1p*t21200;
                double t21206 = b3p*t21201;
                double t21207 = b4p*t21202*t21203;
                double t21208 = b2p*c*t21198;
                double t21209 = t21205+t21206+t21207+t21208;
                double t21210 = 1.0/t21209;
                double t21211 = t21210*t21204*(1.0/2.0);
                double t21212 = t21211+1.0;
                double t21213 = log(t21212);
                double t21214 = a1p*c*t21198;
                double t21215 = t21214+1.0;
                double t21216 = pow(2.0,1.0/3.0);
                double t21217 = t21216*2.0;
                double t21218 = t21217-2.0;
                double t21219 = two_13*2.0;
                double t21220 = t21219-2.0;
                double t21221 = 1.0/t21220;
                double t21222 = 1.0/c0f;
                double t21223 = 1.0/pow(rho_b,1.0/3.0);
                double t21224 = c*t21223;
                double t21225 = sqrt(t21224);
                double t21226 = pow(t21224,3.0/2.0);
                double t21227 = 1.0/pow(rho_b,2.0/3.0);
                double t21228 = b1p*t21225;
                double t21229 = b3p*t21226;
                double t21230 = b4p*t21202*t21227;
                double t21231 = b2p*c*t21223;
                double t21232 = t21230+t21231+t21228+t21229;
                double t21233 = 1.0/t21232;
                double t21234 = t21204*t21233*(1.0/2.0);
                double t21235 = t21234+1.0;
                double t21236 = log(t21235);
                double t21237 = a1p*c*t21223;
                double t21238 = t21237+1.0;
                double t21239 = c0p*t21236*t21238*2.0;
                double t21240 = rho_a+rho_b;
                double t21241 = 1.0/pow(t21240,1.0/3.0);
                double t21242 = c*t21241;
                double t21243 = sqrt(t21242);
                double t21244 = pow(t21242,3.0/2.0);
                double t21245 = 1.0/pow(t21240,2.0/3.0);
                double t21246 = b1p*t21243;
                double t21247 = b3p*t21244;
                double t21248 = b4p*t21202*t21245;
                double t21249 = b2p*c*t21241;
                double t21250 = t21246+t21247+t21248+t21249;
                double t21251 = 1.0/t21250;
                double t21252 = t21204*t21251*(1.0/2.0);
                double t21253 = t21252+1.0;
                double t21254 = log(t21253);
                double t21255 = a1p*c*t21241;
                double t21256 = t21255+1.0;
                double t21257 = c0p*t21254*t21256*2.0;
                double t21258 = rho_a-rho_b;
                double t21259 = t21258*t21258;
                double t21260 = 1.0/t21240;
                double t21261 = t21260*t21258;
                double t21262 = 1.0/(t21240*t21240*t21240*t21240);
                double t21263 = t21259*t21259;
                double t21264 = t21261+1.0;
                double t21265 = pow(t21264,4.0/3.0);
                double t21266 = -t21261+1.0;
                double t21267 = pow(t21266,4.0/3.0);
                double t21268 = t21265+t21267-2.0;
                double t21269 = c0p*t21213*t21215*2.0;
                double t21270 = b1f*t21200;
                double t21271 = b3f*t21201;
                double t21272 = b4f*t21202*t21203;
                double t21273 = b2f*c*t21198;
                double t21274 = t21270+t21271+t21272+t21273;
                double t21275 = 1.0/t21274;
                double t21276 = t21222*t21275*(1.0/2.0);
                double t21277 = t21276+1.0;
                double t21278 = log(t21277);
                double t21279 = a1f*c*t21198;
                double t21280 = t21279+1.0;
                double t21281 = t21269-c0f*t21280*t21278*2.0;
                double t21282 = t21269-t21221*t21218*t21281;
                double t21283 = gamma_aa*gamma_aa;
                double t21284 = gcaa*gcaa;
                double t21285 = 1.0/pow(rho_a,1.6E1/3.0);
                double t21286 = b1f*t21225;
                double t21287 = b3f*t21226;
                double t21288 = b4f*t21202*t21227;
                double t21289 = b2f*c*t21223;
                double t21290 = t21286+t21287+t21288+t21289;
                double t21291 = 1.0/t21290;
                double t21292 = t21222*t21291*(1.0/2.0);
                double t21293 = t21292+1.0;
                double t21294 = log(t21293);
                double t21295 = a1f*c*t21223;
                double t21296 = t21295+1.0;
                double t21297 = t21239-c0f*t21294*t21296*2.0;
                double t21298 = t21239-t21221*t21218*t21297;
                double t21299 = gamma_bb*gamma_bb;
                double t21300 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * ((ccab0+(ccab1*gcab*t21191)/(gcab*t21191+1.0)+(ccab2*t21192*t21197)/(gcab*t21191*2.0+t21192*t21197+1.0))*(rho_a*t21282+rho_b*t21298-t21240*(t21257-t21221*t21262*t21263*t21268*(t21257-c0f*log((t21222*(1.0/2.0))/(b1f*t21243+b3f*t21244+b2f*c*t21241+b4f*t21202*t21245)+1.0)*(a1f*c*t21241+1.0)*2.0)+(Aa*t21221*t21268*log((1.0/2.0)/(Aa*(b1a*t21243+b3a*t21244+b2a*c*t21241+b4a*t21202*t21245))+1.0)*(t21262*t21263-1.0)*(a1a*c*t21241+1.0)*2.0)/d2fz0))-rho_a*t21282*(ccaa0+(ccaa2*t21283*t21284*t21285)/(gamma_aa*gcaa*t21193*2.0+t21283*t21284*t21285+1.0)+(ccaa1*gamma_aa*gcaa*t21193)/(gamma_aa*gcaa*t21193+1.0))-rho_b*t21298*(ccaa0+(ccaa2*t21300*t21284*t21299)/(gamma_bb*gcaa*t21195*2.0+t21300*t21284*t21299+1.0)+(ccaa1*gamma_bb*gcaa*t21195)/(gamma_bb*gcaa*t21195+1.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t21302 = 1.0/pow(rho_a,1.0/3.0);
                double t21303 = c*t21302;
                double t21304 = sqrt(t21303);
                double t21305 = pow(t21303,3.0/2.0);
                double t21306 = c*c;
                double t21307 = 1.0/pow(rho_a,2.0/3.0);
                double t21308 = 1.0/c0p;
                double t21309 = b1p*t21304;
                double t21310 = b3p*t21305;
                double t21311 = b4p*t21306*t21307;
                double t21312 = b2p*c*t21302;
                double t21313 = t21310+t21311+t21312+t21309;
                double t21314 = 1.0/t21313;
                double t21315 = t21314*t21308*(1.0/2.0);
                double t21316 = t21315+1.0;
                double t21317 = log(t21316);
                double t21318 = a1p*c*t21302;
                double t21319 = t21318+1.0;
                double t21320 = 1.0/pow(rho_a,8.0/3.0);
                double t21321 = gamma_aa*gamma_aa;
                double t21322 = gcaa*gcaa;
                double t21323 = 1.0/pow(rho_a,1.6E1/3.0);
                double t21326 = gamma_aa*t21320*(1.0/2.0);
                double t21327 = 1.0/pow(rho_b,8.0/3.0);
                double t21328 = gamma_bb*t21327*(1.0/2.0);
                double t21324 = t21326+t21328;
                double t21325 = gcab*gcab;
                double t21329 = t21324*t21324;
                double t21330 = rho_a+rho_b;
                double t21331 = 1.0/pow(t21330,1.0/3.0);
                double t21332 = c*t21331;
                double t21333 = sqrt(t21332);
                double t21334 = b1p*t21333;
                double t21335 = pow(t21332,3.0/2.0);
                double t21336 = b3p*t21335;
                double t21337 = 1.0/pow(t21330,2.0/3.0);
                double t21338 = b4p*t21306*t21337;
                double t21339 = b2p*c*t21331;
                double t21340 = t21334+t21336+t21338+t21339;
                double t21341 = 1.0/pow(t21330,4.0/3.0);
                double t21342 = two_13*2.0;
                double t21343 = t21342-2.0;
                double t21344 = 1.0/t21343;
                double t21345 = 1.0/c0f;
                double t21346 = 1.0/t21340;
                double t21347 = t21308*t21346*(1.0/2.0);
                double t21348 = t21347+1.0;
                double t21349 = a1p*c*t21331;
                double t21350 = t21349+1.0;
                double t21351 = rho_a-rho_b;
                double t21352 = t21351*t21351;
                double t21353 = 1.0/t21330;
                double t21354 = t21351*t21353;
                double t21355 = b1f*t21333;
                double t21356 = b3f*t21335;
                double t21357 = b4f*t21306*t21337;
                double t21358 = b2f*c*t21331;
                double t21359 = t21355+t21356+t21357+t21358;
                double t21360 = 1.0/t21359;
                double t21361 = t21360*t21345*(1.0/2.0);
                double t21362 = t21361+1.0;
                double t21363 = log(t21362);
                double t21364 = a1f*c*t21331;
                double t21365 = t21364+1.0;
                double t21366 = log(t21348);
                double t21376 = c0f*t21363*t21365*2.0;
                double t21377 = c0p*t21350*t21366*2.0;
                double t21367 = t21376-t21377;
                double t21368 = t21354+1.0;
                double t21369 = pow(t21368,4.0/3.0);
                double t21370 = -t21354+1.0;
                double t21371 = pow(t21370,4.0/3.0);
                double t21372 = t21371+t21369-2.0;
                double t21373 = 1.0/(t21330*t21330);
                double t21404 = t21351*t21373;
                double t21374 = -t21404+t21353;
                double t21375 = 1.0/(t21330*t21330*t21330*t21330);
                double t21378 = t21352*t21352;
                double t21379 = 1.0/pow(t21330,5.0/3.0);
                double t21380 = 1.0/sqrt(t21332);
                double t21381 = 1.0/t21348;
                double t21382 = 1.0/(t21340*t21340);
                double t21383 = b4p*t21306*t21379*(2.0/3.0);
                double t21384 = b2p*c*t21341*(1.0/3.0);
                double t21385 = b1p*c*t21341*t21380*(1.0/6.0);
                double t21386 = b3p*c*t21341*t21333*(1.0/2.0);
                double t21387 = t21383+t21384+t21385+t21386;
                double t21388 = t21350*t21381*t21382*t21387;
                double t21389 = 1.0/(t21330*t21330*t21330*t21330*t21330);
                double t21390 = 1.0/d2fz0;
                double t21391 = 1.0/Aa;
                double t21392 = b1a*t21333;
                double t21393 = b3a*t21335;
                double t21394 = b4a*t21306*t21337;
                double t21395 = b2a*c*t21331;
                double t21396 = t21392+t21393+t21394+t21395;
                double t21397 = 1.0/t21396;
                double t21398 = t21391*t21397*(1.0/2.0);
                double t21399 = t21398+1.0;
                double t21400 = log(t21399);
                double t21401 = a1a*c*t21331;
                double t21402 = t21401+1.0;
                double t21403 = pow(t21368,1.0/3.0);
                double t21405 = t21403*t21374*(4.0/3.0);
                double t21406 = pow(t21370,1.0/3.0);
                double t21407 = t21405-t21406*t21374*(4.0/3.0);
                double t21408 = t21375*t21378;
                double t21409 = t21408-1.0;
                double t21410 = pow(2.0,1.0/3.0);
                double t21411 = t21410*2.0;
                double t21412 = t21411-2.0;
                double t21413 = a1f*c*t21302;
                double t21414 = t21413+1.0;
                double t21415 = b1f*t21304;
                double t21416 = b3f*t21305;
                double t21417 = b4f*t21306*t21307;
                double t21418 = b2f*c*t21302;
                double t21419 = t21415+t21416+t21417+t21418;
                double t21420 = 1.0/t21419;
                double t21421 = t21420*t21345*(1.0/2.0);
                double t21422 = t21421+1.0;
                double t21423 = 1.0/pow(rho_a,4.0/3.0);
                double t21424 = 1.0/pow(rho_a,5.0/3.0);
                double t21425 = 1.0/sqrt(t21303);
                double t21426 = log(t21422);
                double t21427 = 1.0/t21316;
                double t21428 = 1.0/(t21313*t21313);
                double t21429 = b4p*t21306*t21424*(2.0/3.0);
                double t21430 = b2p*c*t21423*(1.0/3.0);
                double t21431 = b1p*c*t21423*t21425*(1.0/6.0);
                double t21432 = b3p*c*t21304*t21423*(1.0/2.0);
                double t21433 = t21430+t21431+t21432+t21429;
                double t21434 = t21433*t21319*t21427*t21428;
                double t21435 = c0f*t21414*t21426*2.0;
                double t21436 = c0p*t21317*t21319*2.0;
                double t21437 = t21435-t21436;
                double t21438 = 1.0/pow(rho_b,1.0/3.0);
                double t21439 = c*t21438;
                double t21440 = sqrt(t21439);
                double t21441 = pow(t21439,3.0/2.0);
                double t21442 = 1.0/pow(rho_b,2.0/3.0);
                double t21443 = b1p*t21440;
                double t21444 = b3p*t21441;
                double t21445 = b4p*t21306*t21442;
                double t21446 = b2p*c*t21438;
                double t21447 = t21443+t21444+t21445+t21446;
                double t21448 = 1.0/t21447;
                double t21449 = t21308*t21448*(1.0/2.0);
                double t21450 = t21449+1.0;
                double t21451 = log(t21450);
                double t21452 = a1p*c*t21438;
                double t21453 = t21452+1.0;
                double t21454 = c0p*t21451*t21453*2.0;
                double t21455 = t21344*t21372*t21375*t21367*t21378;
                double t21456 = Aa*t21400*t21402*t21344*t21372*t21390*t21409*2.0;
                double t21457 = gcab*t21324;
                double t21458 = t21457+1.0;
                double t21459 = 1.0/t21458;
                double t21460 = 1.0/pow(rho_a,1.1E1/3.0);
                double t21461 = t21325*t21329;
                double t21462 = gcab*t21324*2.0;
                double t21463 = t21461+t21462+1.0;
                double t21464 = 1.0/t21463;
                double t21465 = 1.0/t21422;
                double t21466 = 1.0/(t21419*t21419);
                double t21467 = b4f*t21306*t21424*(2.0/3.0);
                double t21468 = b2f*c*t21423*(1.0/3.0);
                double t21469 = b1f*c*t21423*t21425*(1.0/6.0);
                double t21470 = b3f*c*t21304*t21423*(1.0/2.0);
                double t21471 = t21470+t21467+t21468+t21469;
                double t21472 = a1f*c*c0f*t21423*t21426*(2.0/3.0);
                double t21473 = a1p*c*c0p*t21423*t21317*(2.0/3.0);
                double t21474 = gamma_aa*gcaa*t21320;
                double t21475 = t21474+1.0;
                double t21476 = 1.0/t21475;
                double t21477 = ccaa1*gamma_aa*gcaa*t21320*t21476;
                double t21478 = gamma_aa*gcaa*t21320*2.0;
                double t21479 = t21321*t21322*t21323;
                double t21480 = t21478+t21479+1.0;
                double t21481 = 1.0/t21480;
                double t21482 = ccaa2*t21321*t21322*t21323*t21481;
                double t21483 = ccaa0+t21482+t21477;
                double t21484 = t21412*t21344*t21437;
                double t21485 = t21436+t21484;
                double t21486 = 1.0/pow(rho_a,1.9E1/3.0);
                v_rho_a[Q] += scale * (-t21483*(t21436+t21412*t21344*(t21435-c0p*t21317*t21319*2.0))-(ccab0+ccab1*gcab*t21324*t21459+ccab2*t21325*t21329*t21464)*(-t21436+t21455+t21456+t21377+t21330*(t21388-t21344*t21372*t21375*t21378*(t21388-(t21365*1.0/(t21359*t21359)*(b2f*c*t21341*(1.0/3.0)+b4f*t21306*t21379*(2.0/3.0)+b1f*c*t21341*t21380*(1.0/6.0)+b3f*c*t21341*t21333*(1.0/2.0)))/t21362+a1f*c*c0f*t21341*t21363*(2.0/3.0)-a1p*c*c0p*t21341*t21366*(2.0/3.0))-a1p*c*c0p*t21341*t21366*(2.0/3.0)+t21344*t21407*t21375*t21367*t21378-t21344*t21372*t21367*t21378*t21389*4.0+t21351*t21352*t21344*t21372*t21375*t21367*4.0-Aa*t21400*t21402*t21344*t21372*t21390*(t21378*t21389*4.0-t21351*t21352*t21375*4.0)*2.0+Aa*t21400*t21402*t21344*t21407*t21390*t21409*2.0+(t21402*t21344*t21372*t21390*t21409*1.0/(t21396*t21396)*(b2a*c*t21341*(1.0/3.0)+b4a*t21306*t21379*(2.0/3.0)+b1a*c*t21341*t21380*(1.0/6.0)+b3a*c*t21341*t21333*(1.0/2.0)))/t21399-Aa*a1a*c*t21400*t21341*t21344*t21372*t21390*t21409*(2.0/3.0))+rho_a*(-t21434+t21473+t21412*t21344*(t21434+t21472-t21414*t21471*t21465*t21466-a1p*c*c0p*t21423*t21317*(2.0/3.0)))-t21412*t21344*t21437)-(rho_a*t21485+rho_b*(t21454-t21412*t21344*(t21454-c0f*log((t21345*(1.0/2.0))/(b1f*t21440+b3f*t21441+b2f*c*t21438+b4f*t21306*t21442)+1.0)*(a1f*c*t21438+1.0)*2.0))-t21330*(t21455+t21456+t21377))*(ccab1*gamma_aa*gcab*t21460*t21459*(4.0/3.0)-ccab2*t21325*1.0/(t21463*t21463)*t21329*(gamma_aa*gcab*t21460*(8.0/3.0)+gamma_aa*t21324*t21325*t21460*(8.0/3.0))-ccab1*gamma_aa*t21324*t21325*t21460*1.0/(t21458*t21458)*(4.0/3.0)+ccab2*gamma_aa*t21324*t21325*t21460*t21464*(8.0/3.0))+rho_a*t21485*(ccaa1*gamma_aa*gcaa*t21460*t21476*(8.0/3.0)+ccaa2*t21321*t21322*t21481*t21486*(1.6E1/3.0)-ccaa1*t21321*t21322*1.0/(t21475*t21475)*t21486*(8.0/3.0)-ccaa2*t21321*t21322*t21323*1.0/(t21480*t21480)*(gamma_aa*gcaa*t21460*(1.6E1/3.0)+t21321*t21322*t21486*(1.6E1/3.0)))+rho_a*t21483*(-t21434+t21473+t21412*t21344*(t21434+t21472-t21473-t21414*t21471*t21465*t21466)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t21488 = 1.0/pow(rho_b,1.0/3.0);
                double t21489 = c*t21488;
                double t21490 = sqrt(t21489);
                double t21491 = pow(t21489,3.0/2.0);
                double t21492 = c*c;
                double t21493 = 1.0/pow(rho_b,2.0/3.0);
                double t21494 = 1.0/c0p;
                double t21495 = b1p*t21490;
                double t21496 = b3p*t21491;
                double t21497 = b4p*t21492*t21493;
                double t21498 = b2p*c*t21488;
                double t21499 = t21495+t21496+t21497+t21498;
                double t21500 = 1.0/t21499;
                double t21501 = t21500*t21494*(1.0/2.0);
                double t21502 = t21501+1.0;
                double t21503 = log(t21502);
                double t21504 = a1p*c*t21488;
                double t21505 = t21504+1.0;
                double t21506 = 1.0/pow(rho_b,8.0/3.0);
                double t21507 = gamma_bb*gamma_bb;
                double t21508 = gcaa*gcaa;
                double t21509 = 1.0/pow(rho_b,1.6E1/3.0);
                double t21512 = 1.0/pow(rho_a,8.0/3.0);
                double t21513 = gamma_aa*t21512*(1.0/2.0);
                double t21514 = gamma_bb*t21506*(1.0/2.0);
                double t21510 = t21513+t21514;
                double t21511 = gcab*gcab;
                double t21515 = t21510*t21510;
                double t21516 = rho_a+rho_b;
                double t21517 = 1.0/pow(t21516,1.0/3.0);
                double t21518 = c*t21517;
                double t21519 = sqrt(t21518);
                double t21520 = b1p*t21519;
                double t21521 = pow(t21518,3.0/2.0);
                double t21522 = b3p*t21521;
                double t21523 = 1.0/pow(t21516,2.0/3.0);
                double t21524 = b4p*t21523*t21492;
                double t21525 = b2p*c*t21517;
                double t21526 = t21520+t21522+t21524+t21525;
                double t21527 = 1.0/pow(t21516,4.0/3.0);
                double t21528 = two_13*2.0;
                double t21529 = t21528-2.0;
                double t21530 = 1.0/t21529;
                double t21531 = 1.0/c0f;
                double t21532 = 1.0/t21526;
                double t21533 = t21532*t21494*(1.0/2.0);
                double t21534 = t21533+1.0;
                double t21535 = a1p*c*t21517;
                double t21536 = t21535+1.0;
                double t21537 = rho_a-rho_b;
                double t21538 = t21537*t21537;
                double t21539 = 1.0/t21516;
                double t21540 = t21537*t21539;
                double t21541 = b1f*t21519;
                double t21542 = b3f*t21521;
                double t21543 = b4f*t21523*t21492;
                double t21544 = b2f*c*t21517;
                double t21545 = t21541+t21542+t21543+t21544;
                double t21546 = 1.0/t21545;
                double t21547 = t21531*t21546*(1.0/2.0);
                double t21548 = t21547+1.0;
                double t21549 = log(t21548);
                double t21550 = a1f*c*t21517;
                double t21551 = t21550+1.0;
                double t21552 = log(t21534);
                double t21563 = c0f*t21551*t21549*2.0;
                double t21564 = c0p*t21552*t21536*2.0;
                double t21553 = t21563-t21564;
                double t21554 = t21540+1.0;
                double t21555 = pow(t21554,4.0/3.0);
                double t21556 = -t21540+1.0;
                double t21557 = pow(t21556,4.0/3.0);
                double t21558 = t21555+t21557-2.0;
                double t21559 = 1.0/(t21516*t21516);
                double t21560 = t21537*t21559;
                double t21561 = t21560+t21539;
                double t21562 = 1.0/(t21516*t21516*t21516*t21516);
                double t21565 = t21538*t21538;
                double t21566 = 1.0/pow(t21516,5.0/3.0);
                double t21567 = 1.0/sqrt(t21518);
                double t21568 = 1.0/t21534;
                double t21569 = 1.0/(t21526*t21526);
                double t21570 = b4p*t21492*t21566*(2.0/3.0);
                double t21571 = b2p*c*t21527*(1.0/3.0);
                double t21572 = b1p*c*t21527*t21567*(1.0/6.0);
                double t21573 = b3p*c*t21527*t21519*(1.0/2.0);
                double t21574 = t21570+t21571+t21572+t21573;
                double t21575 = 1.0/(t21516*t21516*t21516*t21516*t21516);
                double t21576 = 1.0/d2fz0;
                double t21577 = 1.0/Aa;
                double t21578 = b1a*t21519;
                double t21579 = b3a*t21521;
                double t21580 = b4a*t21523*t21492;
                double t21581 = b2a*c*t21517;
                double t21582 = t21580+t21581+t21578+t21579;
                double t21583 = 1.0/t21582;
                double t21584 = t21583*t21577*(1.0/2.0);
                double t21585 = t21584+1.0;
                double t21586 = log(t21585);
                double t21587 = a1a*c*t21517;
                double t21588 = t21587+1.0;
                double t21589 = pow(t21554,1.0/3.0);
                double t21590 = t21561*t21589*(4.0/3.0);
                double t21591 = pow(t21556,1.0/3.0);
                double t21592 = t21590-t21561*t21591*(4.0/3.0);
                double t21593 = t21562*t21565;
                double t21594 = t21593-1.0;
                double t21595 = pow(2.0,1.0/3.0);
                double t21596 = t21595*2.0;
                double t21597 = t21596-2.0;
                double t21598 = a1f*c*t21488;
                double t21599 = t21598+1.0;
                double t21600 = b1f*t21490;
                double t21601 = b3f*t21491;
                double t21602 = b4f*t21492*t21493;
                double t21603 = b2f*c*t21488;
                double t21604 = t21600+t21601+t21602+t21603;
                double t21605 = 1.0/t21604;
                double t21606 = t21531*t21605*(1.0/2.0);
                double t21607 = t21606+1.0;
                double t21608 = 1.0/pow(rho_b,4.0/3.0);
                double t21609 = 1.0/pow(rho_b,5.0/3.0);
                double t21610 = 1.0/sqrt(t21489);
                double t21611 = log(t21607);
                double t21612 = 1.0/t21502;
                double t21613 = 1.0/(t21499*t21499);
                double t21614 = b4p*t21492*t21609*(2.0/3.0);
                double t21615 = b2p*c*t21608*(1.0/3.0);
                double t21616 = b1p*c*t21610*t21608*(1.0/6.0);
                double t21617 = b3p*c*t21490*t21608*(1.0/2.0);
                double t21618 = t21614+t21615+t21616+t21617;
                double t21619 = t21612*t21505*t21613*t21618;
                double t21620 = c0f*t21611*t21599*2.0;
                double t21621 = c0p*t21503*t21505*2.0;
                double t21622 = a1p*c*c0p*t21552*t21527*(2.0/3.0);
                double t21623 = 1.0/pow(rho_a,1.0/3.0);
                double t21624 = c*t21623;
                double t21625 = sqrt(t21624);
                double t21626 = pow(t21624,3.0/2.0);
                double t21627 = 1.0/pow(rho_a,2.0/3.0);
                double t21628 = b1p*t21625;
                double t21629 = b3p*t21626;
                double t21630 = b4p*t21492*t21627;
                double t21631 = b2p*c*t21623;
                double t21632 = t21630+t21631+t21628+t21629;
                double t21633 = 1.0/t21632;
                double t21634 = t21633*t21494*(1.0/2.0);
                double t21635 = t21634+1.0;
                double t21636 = log(t21635);
                double t21637 = a1p*c*t21623;
                double t21638 = t21637+1.0;
                double t21639 = c0p*t21636*t21638*2.0;
                double t21640 = t21620-t21621;
                double t21641 = t21530*t21553*t21562*t21565*t21558;
                double t21642 = Aa*t21530*t21558*t21576*t21594*t21586*t21588*2.0;
                double t21643 = gcab*t21510;
                double t21644 = t21643+1.0;
                double t21645 = 1.0/t21644;
                double t21646 = 1.0/pow(rho_b,1.1E1/3.0);
                double t21647 = t21511*t21515;
                double t21648 = gcab*t21510*2.0;
                double t21649 = t21647+t21648+1.0;
                double t21650 = 1.0/t21649;
                double t21651 = 1.0/t21607;
                double t21652 = 1.0/(t21604*t21604);
                double t21653 = b4f*t21492*t21609*(2.0/3.0);
                double t21654 = b2f*c*t21608*(1.0/3.0);
                double t21655 = b1f*c*t21610*t21608*(1.0/6.0);
                double t21656 = b3f*c*t21490*t21608*(1.0/2.0);
                double t21657 = t21653+t21654+t21655+t21656;
                double t21658 = a1f*c*c0f*t21611*t21608*(2.0/3.0);
                double t21659 = a1p*c*c0p*t21503*t21608*(2.0/3.0);
                double t21660 = gamma_bb*gcaa*t21506;
                double t21661 = t21660+1.0;
                double t21662 = 1.0/t21661;
                double t21663 = ccaa1*gamma_bb*gcaa*t21506*t21662;
                double t21664 = gamma_bb*gcaa*t21506*2.0;
                double t21665 = t21507*t21508*t21509;
                double t21666 = t21664+t21665+1.0;
                double t21667 = 1.0/t21666;
                double t21668 = ccaa2*t21507*t21508*t21509*t21667;
                double t21669 = ccaa0+t21663+t21668;
                double t21670 = t21530*t21640*t21597;
                double t21671 = t21621+t21670;
                double t21672 = 1.0/pow(rho_b,1.9E1/3.0);
                v_rho_b[Q] += scale * (-(ccab0+ccab1*gcab*t21510*t21645+ccab2*t21511*t21515*t21650)*(-t21621+t21641+t21642+t21564+rho_b*(-t21619+t21659+t21530*t21597*(t21619+t21658-t21651*t21652*t21657*t21599-a1p*c*c0p*t21503*t21608*(2.0/3.0)))-t21516*(t21622-t21536*t21574*t21568*t21569+t21530*t21553*t21562*t21565*t21592+t21530*t21553*t21565*t21575*t21558*4.0-t21530*t21562*t21565*t21558*(t21622-t21536*t21574*t21568*t21569+(t21551*1.0/(t21545*t21545)*(b2f*c*t21527*(1.0/3.0)+b4f*t21492*t21566*(2.0/3.0)+b1f*c*t21527*t21567*(1.0/6.0)+b3f*c*t21527*t21519*(1.0/2.0)))/t21548-a1f*c*c0f*t21527*t21549*(2.0/3.0))+t21530*t21553*t21562*t21537*t21538*t21558*4.0+Aa*t21530*t21558*t21576*t21586*t21588*(t21565*t21575*4.0+t21562*t21537*t21538*4.0)*2.0+Aa*t21530*t21592*t21576*t21594*t21586*t21588*2.0-(t21530*1.0/(t21582*t21582)*t21558*t21576*t21594*t21588*(b2a*c*t21527*(1.0/3.0)+b4a*t21492*t21566*(2.0/3.0)+b1a*c*t21527*t21567*(1.0/6.0)+b3a*c*t21527*t21519*(1.0/2.0)))/t21585+Aa*a1a*c*t21530*t21527*t21558*t21576*t21594*t21586*(2.0/3.0))-t21530*t21640*t21597)-t21669*(t21621+t21530*t21597*(t21620-c0p*t21503*t21505*2.0))-(rho_b*t21671+rho_a*(t21639-t21530*t21597*(t21639-c0f*log((t21531*(1.0/2.0))/(b1f*t21625+b3f*t21626+b2f*c*t21623+b4f*t21492*t21627)+1.0)*(a1f*c*t21623+1.0)*2.0))-t21516*(t21641+t21642+t21564))*(ccab1*gamma_bb*gcab*t21645*t21646*(4.0/3.0)-ccab2*t21511*t21515*1.0/(t21649*t21649)*(gamma_bb*gcab*t21646*(8.0/3.0)+gamma_bb*t21510*t21511*t21646*(8.0/3.0))-ccab1*gamma_bb*t21510*t21511*1.0/(t21644*t21644)*t21646*(4.0/3.0)+ccab2*gamma_bb*t21510*t21511*t21650*t21646*(8.0/3.0))+rho_b*t21671*(ccaa1*gamma_bb*gcaa*t21662*t21646*(8.0/3.0)+ccaa2*t21507*t21508*t21672*t21667*(1.6E1/3.0)-ccaa1*t21507*t21508*1.0/(t21661*t21661)*t21672*(8.0/3.0)-ccaa2*t21507*t21508*t21509*1.0/(t21666*t21666)*(gamma_bb*gcaa*t21646*(1.6E1/3.0)+t21507*t21508*t21672*(1.6E1/3.0)))+rho_b*t21669*(-t21619+t21659+t21530*t21597*(t21619+t21658-t21659-t21651*t21652*t21657*t21599)));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t21674 = 1.0/pow(rho_a,1.0/3.0);
                double t21675 = c*t21674;
                double t21676 = sqrt(t21675);
                double t21677 = pow(t21675,3.0/2.0);
                double t21678 = c*c;
                double t21679 = 1.0/pow(rho_a,2.0/3.0);
                double t21680 = 1.0/c0p;
                double t21681 = b1p*t21676;
                double t21682 = b3p*t21677;
                double t21683 = b4p*t21678*t21679;
                double t21684 = b2p*c*t21674;
                double t21685 = t21681+t21682+t21683+t21684;
                double t21686 = 1.0/t21685;
                double t21687 = t21680*t21686*(1.0/2.0);
                double t21688 = t21687+1.0;
                double t21689 = log(t21688);
                double t21690 = a1p*c*t21674;
                double t21691 = t21690+1.0;
                double t21692 = pow(2.0,1.0/3.0);
                double t21693 = t21692*2.0;
                double t21694 = t21693-2.0;
                double t21695 = two_13*2.0;
                double t21696 = t21695-2.0;
                double t21697 = 1.0/t21696;
                double t21698 = 1.0/c0f;
                double t21699 = 1.0/pow(rho_b,1.0/3.0);
                double t21700 = c*t21699;
                double t21701 = sqrt(t21700);
                double t21702 = pow(t21700,3.0/2.0);
                double t21703 = 1.0/pow(rho_b,2.0/3.0);
                double t21704 = b1p*t21701;
                double t21705 = b3p*t21702;
                double t21706 = b4p*t21703*t21678;
                double t21707 = b2p*c*t21699;
                double t21708 = t21704+t21705+t21706+t21707;
                double t21709 = 1.0/t21708;
                double t21710 = t21680*t21709*(1.0/2.0);
                double t21711 = t21710+1.0;
                double t21712 = log(t21711);
                double t21713 = a1p*c*t21699;
                double t21714 = t21713+1.0;
                double t21715 = c0p*t21712*t21714*2.0;
                double t21716 = rho_a+rho_b;
                double t21717 = 1.0/pow(t21716,1.0/3.0);
                double t21718 = c*t21717;
                double t21719 = sqrt(t21718);
                double t21720 = pow(t21718,3.0/2.0);
                double t21721 = 1.0/pow(t21716,2.0/3.0);
                double t21722 = b1p*t21719;
                double t21723 = b3p*t21720;
                double t21724 = b4p*t21721*t21678;
                double t21725 = b2p*c*t21717;
                double t21726 = t21722+t21723+t21724+t21725;
                double t21727 = 1.0/t21726;
                double t21728 = t21680*t21727*(1.0/2.0);
                double t21729 = t21728+1.0;
                double t21730 = log(t21729);
                double t21731 = a1p*c*t21717;
                double t21732 = t21731+1.0;
                double t21733 = c0p*t21730*t21732*2.0;
                double t21734 = rho_a-rho_b;
                double t21735 = t21734*t21734;
                double t21736 = 1.0/t21716;
                double t21737 = t21734*t21736;
                double t21738 = 1.0/(t21716*t21716*t21716*t21716);
                double t21739 = t21735*t21735;
                double t21740 = t21737+1.0;
                double t21741 = pow(t21740,4.0/3.0);
                double t21742 = -t21737+1.0;
                double t21743 = pow(t21742,4.0/3.0);
                double t21744 = t21741+t21743-2.0;
                double t21745 = 1.0/pow(rho_a,8.0/3.0);
                double t21746 = gamma_aa*t21745*(1.0/2.0);
                double t21747 = 1.0/pow(rho_b,8.0/3.0);
                double t21748 = gamma_bb*t21747*(1.0/2.0);
                double t21749 = t21746+t21748;
                double t21750 = gcab*t21749;
                double t21751 = t21750+1.0;
                double t21752 = gcab*gcab;
                double t21753 = t21749*t21749;
                double t21754 = t21752*t21753;
                double t21755 = gcab*t21749*2.0;
                double t21756 = t21754+t21755+1.0;
                double t21757 = c0p*t21691*t21689*2.0;
                double t21758 = b1f*t21676;
                double t21759 = b3f*t21677;
                double t21760 = b4f*t21678*t21679;
                double t21761 = b2f*c*t21674;
                double t21762 = t21760+t21761+t21758+t21759;
                double t21763 = 1.0/t21762;
                double t21764 = t21763*t21698*(1.0/2.0);
                double t21765 = t21764+1.0;
                double t21766 = log(t21765);
                double t21767 = a1f*c*t21674;
                double t21768 = t21767+1.0;
                double t21769 = t21757-c0f*t21766*t21768*2.0;
                double t21770 = t21757-t21694*t21697*t21769;
                double t21771 = gcaa*gcaa;
                double t21772 = 1.0/pow(rho_a,1.6E1/3.0);
                double t21773 = gamma_aa*gcaa*t21745;
                double t21774 = t21773+1.0;
                double t21775 = gamma_aa*gamma_aa;
                double t21776 = gamma_aa*gcaa*t21745*2.0;
                double t21777 = t21771*t21772*t21775;
                double t21778 = t21776+t21777+1.0;
                v_gamma_aa[Q] += scale * ((rho_a*t21770+rho_b*(t21715-t21694*t21697*(t21715-c0f*log((t21698*(1.0/2.0))/(b1f*t21701+b3f*t21702+b2f*c*t21699+b4f*t21703*t21678)+1.0)*(a1f*c*t21699+1.0)*2.0))-t21716*(t21733-t21744*t21738*t21739*t21697*(t21733-c0f*log((t21698*(1.0/2.0))/(b1f*t21719+b3f*t21720+b2f*c*t21717+b4f*t21721*t21678)+1.0)*(a1f*c*t21717+1.0)*2.0)+(Aa*t21744*t21697*log((1.0/2.0)/(Aa*(b1a*t21719+b3a*t21720+b2a*c*t21717+b4a*t21721*t21678))+1.0)*(t21738*t21739-1.0)*(a1a*c*t21717+1.0)*2.0)/d2fz0))*((ccab1*gcab*t21745*(1.0/2.0))/t21751-ccab2*t21752*t21753*1.0/(t21756*t21756)*(gcab*t21745+t21752*t21745*t21749)-ccab1*1.0/(t21751*t21751)*t21752*t21745*t21749*(1.0/2.0)+(ccab2*t21752*t21745*t21749)/t21756)-rho_a*t21770*((ccaa1*gcaa*t21745)/t21774-ccaa1*gamma_aa*t21771*t21772*1.0/(t21774*t21774)+(ccaa2*gamma_aa*t21771*t21772*2.0)/t21778-ccaa2*t21771*t21772*t21775*1.0/(t21778*t21778)*(gcaa*t21745*2.0+gamma_aa*t21771*t21772*2.0)));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t21781 = 1.0/pow(rho_a,1.0/3.0);
                double t21782 = c*t21781;
                double t21783 = sqrt(t21782);
                double t21784 = pow(t21782,3.0/2.0);
                double t21785 = c*c;
                double t21786 = 1.0/pow(rho_a,2.0/3.0);
                double t21787 = 1.0/c0p;
                double t21788 = b1p*t21783;
                double t21789 = b3p*t21784;
                double t21790 = b4p*t21785*t21786;
                double t21791 = b2p*c*t21781;
                double t21792 = t21790+t21791+t21788+t21789;
                double t21793 = 1.0/t21792;
                double t21794 = t21793*t21787*(1.0/2.0);
                double t21795 = t21794+1.0;
                double t21796 = log(t21795);
                double t21797 = a1p*c*t21781;
                double t21798 = t21797+1.0;
                double t21799 = pow(2.0,1.0/3.0);
                double t21800 = t21799*2.0;
                double t21801 = t21800-2.0;
                double t21802 = two_13*2.0;
                double t21803 = t21802-2.0;
                double t21804 = 1.0/t21803;
                double t21805 = 1.0/c0f;
                double t21806 = 1.0/pow(rho_b,1.0/3.0);
                double t21807 = c*t21806;
                double t21808 = sqrt(t21807);
                double t21809 = pow(t21807,3.0/2.0);
                double t21810 = 1.0/pow(rho_b,2.0/3.0);
                double t21811 = b1p*t21808;
                double t21812 = b3p*t21809;
                double t21813 = b4p*t21810*t21785;
                double t21814 = b2p*c*t21806;
                double t21815 = t21811+t21812+t21813+t21814;
                double t21816 = 1.0/t21815;
                double t21817 = t21816*t21787*(1.0/2.0);
                double t21818 = t21817+1.0;
                double t21819 = log(t21818);
                double t21820 = a1p*c*t21806;
                double t21821 = t21820+1.0;
                double t21822 = c0p*t21821*t21819*2.0;
                double t21823 = rho_a+rho_b;
                double t21824 = 1.0/pow(t21823,1.0/3.0);
                double t21825 = c*t21824;
                double t21826 = sqrt(t21825);
                double t21827 = pow(t21825,3.0/2.0);
                double t21828 = 1.0/pow(t21823,2.0/3.0);
                double t21829 = b1p*t21826;
                double t21830 = b3p*t21827;
                double t21831 = b4p*t21828*t21785;
                double t21832 = b2p*c*t21824;
                double t21833 = t21830+t21831+t21832+t21829;
                double t21834 = 1.0/t21833;
                double t21835 = t21834*t21787*(1.0/2.0);
                double t21836 = t21835+1.0;
                double t21837 = log(t21836);
                double t21838 = a1p*c*t21824;
                double t21839 = t21838+1.0;
                double t21840 = c0p*t21837*t21839*2.0;
                double t21841 = rho_a-rho_b;
                double t21842 = t21841*t21841;
                double t21843 = 1.0/t21823;
                double t21844 = t21841*t21843;
                double t21845 = 1.0/(t21823*t21823*t21823*t21823);
                double t21846 = t21842*t21842;
                double t21847 = t21844+1.0;
                double t21848 = pow(t21847,4.0/3.0);
                double t21849 = -t21844+1.0;
                double t21850 = pow(t21849,4.0/3.0);
                double t21851 = t21850+t21848-2.0;
                double t21852 = 1.0/pow(rho_b,8.0/3.0);
                double t21853 = 1.0/pow(rho_a,8.0/3.0);
                double t21854 = gamma_aa*t21853*(1.0/2.0);
                double t21855 = gamma_bb*t21852*(1.0/2.0);
                double t21856 = t21854+t21855;
                double t21857 = gcab*t21856;
                double t21858 = t21857+1.0;
                double t21859 = gcab*gcab;
                double t21860 = t21856*t21856;
                double t21861 = t21860*t21859;
                double t21862 = gcab*t21856*2.0;
                double t21863 = t21861+t21862+1.0;
                double t21864 = c0p*t21796*t21798*2.0;
                double t21865 = b1f*t21808;
                double t21866 = b3f*t21809;
                double t21867 = b4f*t21810*t21785;
                double t21868 = b2f*c*t21806;
                double t21869 = t21865+t21866+t21867+t21868;
                double t21870 = 1.0/t21869;
                double t21871 = t21805*t21870*(1.0/2.0);
                double t21872 = t21871+1.0;
                double t21873 = log(t21872);
                double t21874 = a1f*c*t21806;
                double t21875 = t21874+1.0;
                double t21876 = t21822-c0f*t21873*t21875*2.0;
                double t21877 = t21822-t21801*t21804*t21876;
                double t21878 = gcaa*gcaa;
                double t21879 = 1.0/pow(rho_b,1.6E1/3.0);
                double t21880 = gamma_bb*gcaa*t21852;
                double t21881 = t21880+1.0;
                double t21882 = gamma_bb*gamma_bb;
                double t21883 = gamma_bb*gcaa*t21852*2.0;
                double t21884 = t21882*t21878*t21879;
                double t21885 = t21883+t21884+1.0;
                v_gamma_bb[Q] += scale * ((rho_b*t21877+rho_a*(t21864-t21801*t21804*(t21864-c0f*log((t21805*(1.0/2.0))/(b1f*t21783+b3f*t21784+b2f*c*t21781+b4f*t21785*t21786)+1.0)*(a1f*c*t21781+1.0)*2.0))-t21823*(t21840-t21804*t21851*t21845*t21846*(t21840-c0f*log((t21805*(1.0/2.0))/(b1f*t21826+b3f*t21827+b2f*c*t21824+b4f*t21828*t21785)+1.0)*(a1f*c*t21824+1.0)*2.0)+(Aa*t21804*t21851*log((1.0/2.0)/(Aa*(b1a*t21826+b3a*t21827+b2a*c*t21824+b4a*t21828*t21785))+1.0)*(t21845*t21846-1.0)*(a1a*c*t21824+1.0)*2.0)/d2fz0))*((ccab1*gcab*t21852*(1.0/2.0))/t21858-ccab2*t21860*1.0/(t21863*t21863)*t21859*(gcab*t21852+t21852*t21856*t21859)+(ccab2*t21852*t21856*t21859)/t21863-ccab1*t21852*t21856*1.0/(t21858*t21858)*t21859*(1.0/2.0))-rho_b*t21877*((ccaa1*gcaa*t21852)/t21881-ccaa1*gamma_bb*1.0/(t21881*t21881)*t21878*t21879+(ccaa2*gamma_bb*t21878*t21879*2.0)/t21885-ccaa2*t21882*1.0/(t21885*t21885)*t21878*t21879*(gcaa*t21852*2.0+gamma_bb*t21878*t21879*2.0)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t21889 = 1.0/pow(rho_a,1.0/3.0);
                double t21890 = c*t21889;
                double t21891 = sqrt(t21890);
                double t21892 = pow(t21890,3.0/2.0);
                double t21893 = c*c;
                double t21894 = 1.0/pow(rho_a,2.0/3.0);
                double t21895 = 1.0/c0p;
                double t21896 = b1p*t21891;
                double t21897 = b3p*t21892;
                double t21898 = b4p*t21893*t21894;
                double t21899 = b2p*c*t21889;
                double t21900 = t21896+t21897+t21898+t21899;
                double t21901 = 1.0/t21900;
                double t21902 = t21901*t21895*(1.0/2.0);
                double t21903 = t21902+1.0;
                double t21904 = log(t21903);
                double t21905 = a1p*c*t21889;
                double t21906 = t21905+1.0;
                double t21907 = 1.0/pow(rho_a,8.0/3.0);
                double t21908 = gamma_aa*gamma_aa;
                double t21909 = gcaa*gcaa;
                double t21910 = 1.0/pow(rho_a,1.9E1/3.0);
                double t21911 = gamma_aa*gcaa*t21907;
                double t21912 = t21911+1.0;
                double t21913 = 1.0/pow(rho_a,1.6E1/3.0);
                double t21914 = 1.0/pow(rho_a,1.1E1/3.0);
                double t21915 = gamma_aa*gcaa*t21907*2.0;
                double t21916 = t21913*t21908*t21909;
                double t21917 = t21915+t21916+1.0;
                double t21920 = gamma_aa*t21907*(1.0/2.0);
                double t21921 = 1.0/pow(rho_b,8.0/3.0);
                double t21922 = gamma_bb*t21921*(1.0/2.0);
                double t21918 = t21920+t21922;
                double t21919 = gcab*gcab;
                double t21923 = t21918*t21918;
                double t21924 = rho_a+rho_b;
                double t21925 = 1.0/pow(t21924,1.0/3.0);
                double t21926 = c*t21925;
                double t21927 = sqrt(t21926);
                double t21928 = b1p*t21927;
                double t21929 = pow(t21926,3.0/2.0);
                double t21930 = b3p*t21929;
                double t21931 = 1.0/pow(t21924,2.0/3.0);
                double t21932 = b4p*t21931*t21893;
                double t21933 = b2p*c*t21925;
                double t21934 = t21930+t21932+t21933+t21928;
                double t21935 = 1.0/pow(t21924,7.0/3.0);
                double t21936 = 1.0/pow(t21924,8.0/3.0);
                double t21937 = 1.0/sqrt(t21926);
                double t21938 = a1p*c*t21925;
                double t21939 = t21938+1.0;
                double t21940 = 1.0/t21934;
                double t21941 = t21940*t21895*(1.0/2.0);
                double t21942 = t21941+1.0;
                double t21943 = 1.0/t21942;
                double t21944 = 1.0/pow(t21924,4.0/3.0);
                double t21984 = 1.0/pow(t21924,5.0/3.0);
                double t21986 = b4p*t21893*t21984*(2.0/3.0);
                double t21987 = b2p*c*t21944*(1.0/3.0);
                double t21988 = b1p*c*t21944*t21937*(1.0/6.0);
                double t21989 = b3p*c*t21944*t21927*(1.0/2.0);
                double t21945 = t21986+t21987+t21988+t21989;
                double t21946 = two_13*2.0;
                double t21947 = t21946-2.0;
                double t21948 = 1.0/t21947;
                double t21949 = 1.0/c0f;
                double t21950 = rho_a-rho_b;
                double t21951 = 1.0/t21924;
                double t21952 = t21950*t21951;
                double t21953 = b1f*t21927;
                double t21954 = b3f*t21929;
                double t21955 = b4f*t21931*t21893;
                double t21956 = b2f*c*t21925;
                double t21957 = t21953+t21954+t21955+t21956;
                double t21958 = 1.0/t21957;
                double t21959 = t21949*t21958*(1.0/2.0);
                double t21960 = t21959+1.0;
                double t21961 = log(t21960);
                double t21962 = a1f*c*t21925;
                double t21963 = t21962+1.0;
                double t21964 = log(t21942);
                double t21972 = c0f*t21961*t21963*2.0;
                double t21973 = c0p*t21964*t21939*2.0;
                double t21965 = t21972-t21973;
                double t21966 = t21950*t21950;
                double t21967 = t21952+1.0;
                double t21968 = pow(t21967,4.0/3.0);
                double t21969 = -t21952+1.0;
                double t21970 = pow(t21969,4.0/3.0);
                double t21971 = t21970+t21968-2.0;
                double t21974 = 1.0/(t21924*t21924);
                double t21978 = t21950*t21974;
                double t21975 = t21951-t21978;
                double t21976 = 1.0/(t21924*t21924*t21924*t21924);
                double t21977 = pow(t21967,1.0/3.0);
                double t21979 = t21975*t21977*(4.0/3.0);
                double t21980 = pow(t21969,1.0/3.0);
                double t22012 = t21980*t21975*(4.0/3.0);
                double t21981 = t21979-t22012;
                double t21982 = 1.0/(t21924*t21924*t21924*t21924*t21924);
                double t21983 = t21966*t21966;
                double t21985 = 1.0/(t21934*t21934);
                double t21990 = 1.0/t21960;
                double t21991 = 1.0/(t21957*t21957);
                double t21992 = b4f*t21893*t21984*(2.0/3.0);
                double t21993 = b2f*c*t21944*(1.0/3.0);
                double t21994 = b1f*c*t21944*t21937*(1.0/6.0);
                double t21995 = b3f*c*t21944*t21927*(1.0/2.0);
                double t21996 = t21992+t21993+t21994+t21995;
                double t21997 = t21943*t21945*t21939*t21985;
                double t21998 = a1f*c*c0f*t21961*t21944*(2.0/3.0);
                double t21999 = t21945*t21945;
                double t22000 = 1.0/pow(t21926,3.0/2.0);
                double t22001 = b4p*t21936*t21893*(1.0E1/9.0);
                double t22002 = b2p*c*t21935*(4.0/9.0);
                double t22003 = b1p*c*t21935*t21937*(2.0/9.0);
                double t22004 = b3p*c*t21935*t21927*(2.0/3.0);
                double t22005 = b3p*t21936*t21937*t21893*(1.0/1.2E1);
                double t22006 = t22001+t22002+t22003+t22004+t22005-b1p*t21936*t21893*t22000*(1.0/3.6E1);
                double t22007 = 1.0/(t21934*t21934*t21934);
                double t22008 = t21943*t21939*t21999*t22007*2.0;
                double t22009 = t21996*t21996;
                double t22010 = 1.0/(t21942*t21942);
                double t22011 = 1.0/(t21934*t21934*t21934*t21934);
                double t22100 = t21963*t21990*t21991*t21996;
                double t22101 = a1p*c*c0p*t21944*t21964*(2.0/3.0);
                double t22013 = t21997+t21998-t22100-t22101;
                double t22014 = t21974*2.0;
                double t22015 = 1.0/(t21924*t21924*t21924);
                double t22033 = t21950*t22015*2.0;
                double t22016 = t22014-t22033;
                double t22017 = t21975*t21975;
                double t22018 = a1p*c*c0p*t21935*t21964*(8.0/9.0);
                double t22019 = 1.0/(t21924*t21924*t21924*t21924*t21924*t21924);
                double t22020 = 1.0/d2fz0;
                double t22021 = 1.0/Aa;
                double t22022 = b1a*t21927;
                double t22023 = b3a*t21929;
                double t22024 = b4a*t21931*t21893;
                double t22025 = b2a*c*t21925;
                double t22026 = t22022+t22023+t22024+t22025;
                double t22027 = 1.0/t22026;
                double t22028 = t22021*t22027*(1.0/2.0);
                double t22029 = t22028+1.0;
                double t22030 = log(t22029);
                double t22031 = a1a*c*t21925;
                double t22032 = t22031+1.0;
                double t22034 = t21980*t22016*(4.0/3.0);
                double t22035 = 1.0/pow(t21967,2.0/3.0);
                double t22036 = t22017*t22035*(4.0/9.0);
                double t22037 = 1.0/pow(t21969,2.0/3.0);
                double t22038 = t22017*t22037*(4.0/9.0);
                double t22039 = t22034+t22036+t22038-t21977*t22016*(4.0/3.0);
                double t22040 = t21982*t21983*4.0;
                double t22052 = t21950*t21966*t21976*4.0;
                double t22041 = t22040-t22052;
                double t22042 = 1.0/t22029;
                double t22043 = t21983*t21976;
                double t22044 = t22043-1.0;
                double t22045 = 1.0/(t22026*t22026);
                double t22046 = b4a*t21893*t21984*(2.0/3.0);
                double t22047 = b2a*c*t21944*(1.0/3.0);
                double t22048 = b1a*c*t21944*t21937*(1.0/6.0);
                double t22049 = b3a*c*t21944*t21927*(1.0/2.0);
                double t22050 = t22046+t22047+t22048+t22049;
                double t22051 = t22050*t22050;
                double t22053 = t21943*t21939*t21985*t22006;
                double t22054 = pow(2.0,1.0/3.0);
                double t22055 = t22054*2.0;
                double t22056 = t22055-2.0;
                double t22057 = a1f*c*t21889;
                double t22058 = t22057+1.0;
                double t22059 = b1f*t21891;
                double t22060 = b3f*t21892;
                double t22061 = b4f*t21893*t21894;
                double t22062 = b2f*c*t21889;
                double t22063 = t22060+t22061+t22062+t22059;
                double t22064 = 1.0/t22063;
                double t22065 = t21949*t22064*(1.0/2.0);
                double t22066 = t22065+1.0;
                double t22067 = 1.0/pow(rho_a,4.0/3.0);
                double t22069 = 1.0/pow(rho_a,5.0/3.0);
                double t22070 = 1.0/sqrt(t21890);
                double t22076 = b4f*t21893*t22069*(2.0/3.0);
                double t22077 = b2f*c*t22067*(1.0/3.0);
                double t22078 = b1f*c*t22070*t22067*(1.0/6.0);
                double t22079 = b3f*c*t21891*t22067*(1.0/2.0);
                double t22068 = t22076+t22077+t22078+t22079;
                double t22081 = b4p*t21893*t22069*(2.0/3.0);
                double t22082 = b2p*c*t22067*(1.0/3.0);
                double t22083 = b1p*c*t22070*t22067*(1.0/6.0);
                double t22084 = b3p*c*t21891*t22067*(1.0/2.0);
                double t22071 = t22081+t22082+t22083+t22084;
                double t22072 = 1.0/t22066;
                double t22073 = 1.0/pow(rho_a,7.0/3.0);
                double t22074 = 1.0/t21903;
                double t22075 = 1.0/pow(t21890,3.0/2.0);
                double t22080 = t22068*t22068;
                double t22085 = t22071*t22071;
                double t22086 = log(t22066);
                double t22087 = 1.0/(t22063*t22063);
                double t22088 = 1.0/(t21900*t21900);
                double t22089 = 1.0/(t21900*t21900*t21900);
                double t22090 = t21906*t22074*t22085*t22089*2.0;
                double t22091 = b4p*t21907*t21893*(1.0E1/9.0);
                double t22092 = b2p*c*t22073*(4.0/9.0);
                double t22093 = b3p*t21907*t21893*t22070*(1.0/1.2E1);
                double t22094 = b1p*c*t22070*t22073*(2.0/9.0);
                double t22095 = b3p*c*t21891*t22073*(2.0/3.0);
                double t22159 = b1p*t21907*t21893*t22075*(1.0/3.6E1);
                double t22096 = t22091+t22092+t22093+t22094+t22095-t22159;
                double t22097 = 1.0/(t21903*t21903);
                double t22098 = 1.0/(t21900*t21900*t21900*t21900);
                double t22099 = a1p*c*c0p*t21904*t22073*(8.0/9.0);
                double t22102 = t21939*t21895*t21999*t22010*t22011*(1.0/2.0);
                double t22103 = a1p*c*t21943*t21944*t21945*t21985*(2.0/3.0);
                double t22104 = gcab*t21918;
                double t22105 = t22104+1.0;
                double t22106 = 1.0/t22105;
                double t22107 = t21923*t21919;
                double t22108 = gcab*t21918*2.0;
                double t22109 = t22107+t22108+1.0;
                double t22110 = 1.0/t22109;
                double t22111 = t21906*t22071*t22074*t22088;
                double t22112 = a1f*c*c0f*t22067*t22086*(2.0/3.0);
                double t22114 = a1p*c*c0p*t21904*t22067*(2.0/3.0);
                double t22117 = t22072*t22058*t22068*t22087;
                double t22113 = t22111+t22112-t22114-t22117;
                double t22115 = c0f*t22058*t22086*2.0;
                double t22116 = c0p*t21904*t21906*2.0;
                double t22118 = t21948*t22113*t22056;
                double t22119 = 1.0/t21912;
                double t22120 = 1.0/t21917;
                double t22121 = t22115-t22116;
                double t22122 = 1.0/pow(rho_b,1.0/3.0);
                double t22123 = c*t22122;
                double t22124 = sqrt(t22123);
                double t22125 = pow(t22123,3.0/2.0);
                double t22126 = 1.0/pow(rho_b,2.0/3.0);
                double t22127 = b1p*t22124;
                double t22128 = b3p*t22125;
                double t22129 = b4p*t21893*t22126;
                double t22130 = b2p*c*t22122;
                double t22131 = t22130+t22127+t22128+t22129;
                double t22132 = 1.0/t22131;
                double t22133 = t21895*t22132*(1.0/2.0);
                double t22134 = t22133+1.0;
                double t22135 = log(t22134);
                double t22136 = a1p*c*t22122;
                double t22137 = t22136+1.0;
                double t22138 = c0p*t22135*t22137*2.0;
                double t22139 = t21971*t21965*t21983*t21948*t21976;
                double t22140 = Aa*t21971*t21948*t22020*t22030*t22032*t22044*2.0;
                double t22141 = 1.0/(t22105*t22105);
                double t22142 = 1.0/pow(rho_a,2.2E1/3.0);
                double t22143 = gamma_aa*gcab*t21914*(8.0/3.0);
                double t22144 = gamma_aa*t21914*t21918*t21919*(8.0/3.0);
                double t22145 = t22143+t22144;
                double t22146 = 1.0/pow(rho_a,1.4E1/3.0);
                double t22147 = 1.0/(t22109*t22109);
                double t22148 = ccaa1*gamma_aa*gcaa*t21907*t22119;
                double t22149 = ccaa2*t21913*t21908*t21909*t22120;
                double t22150 = ccaa0+t22148+t22149;
                double t22151 = 1.0/(t22063*t22063*t22063);
                double t22152 = b4f*t21907*t21893*(1.0E1/9.0);
                double t22153 = b2f*c*t22073*(4.0/9.0);
                double t22154 = b3f*t21907*t21893*t22070*(1.0/1.2E1);
                double t22155 = b1f*c*t22070*t22073*(2.0/9.0);
                double t22156 = b3f*c*t21891*t22073*(2.0/3.0);
                double t22157 = t22152+t22153+t22154+t22155+t22156-b1f*t21907*t21893*t22075*(1.0/3.6E1);
                double t22158 = t22072*t22058*t22157*t22087;
                double t22160 = t21906*t22074*t22096*t22088;
                double t22161 = 1.0/(t22066*t22066);
                double t22162 = 1.0/(t22063*t22063*t22063*t22063);
                double t22163 = t21949*t22080*t22161*t22162*t22058*(1.0/2.0);
                double t22164 = t21906*t21895*t22085*t22097*t22098*(1.0/2.0);
                double t22165 = a1f*c*t22072*t22067*t22068*t22087*(2.0/3.0);
                double t22166 = a1p*c*t22071*t22074*t22067*t22088*(2.0/3.0);
                double t22167 = t21948*t22121*t22056;
                double t22168 = t22116+t22167;
                double t22169 = 1.0/(t21912*t21912);
                double t22170 = gamma_aa*gcaa*t21914*(1.6E1/3.0);
                double t22171 = t21910*t21908*t21909*(1.6E1/3.0);
                double t22172 = t22170+t22171;
                double t22173 = 1.0/(t21917*t21917);
                double t22174 = ccaa1*gamma_aa*gcaa*t21914*t22119*(8.0/3.0);
                double t22175 = ccaa2*t21910*t21908*t21909*t22120*(1.6E1/3.0);
                double t22176 = t22174+t22175-ccaa1*t21910*t21908*t21909*t22169*(8.0/3.0)-ccaa2*t21913*t21908*t21909*t22172*t22173;
                double t22177 = -t22111+t22114+t22118;
                v_rho_a_rho_a[Q] += scale * (t22150*t22177*2.0+t22176*(t22116+t21948*t22056*(t22115-c0p*t21904*t21906*2.0))*2.0+(rho_a*t22168+rho_b*(t22138-t21948*t22056*(t22138-c0f*log((t21949*(1.0/2.0))/(b1f*t22124+b3f*t22125+b2f*c*t22122+b4f*t21893*t22126)+1.0)*(a1f*c*t22122+1.0)*2.0))-t21924*(t21973+t22140+t22139))*(-ccab2*t21923*t21919*t22147*(gamma_aa*gcab*t22146*(8.8E1/9.0)+t21908*t21919*t22142*(3.2E1/9.0)+gamma_aa*t21918*t21919*t22146*(8.8E1/9.0))+ccab2*t21923*t21919*1.0/(t22109*t22109*t22109)*(t22145*t22145)*2.0+ccab1*gamma_aa*gcab*t22106*t22146*(4.4E1/9.0)+ccab2*t21908*t21919*t22110*t22142*(3.2E1/9.0)-ccab1*t21908*t21919*t22141*t22142*(3.2E1/9.0)+ccab2*gamma_aa*t21918*t21919*t22110*t22146*(8.8E1/9.0)-ccab1*gamma_aa*t21918*t21919*t22141*t22146*(4.4E1/9.0)-ccab2*gamma_aa*t21914*t21918*t21919*t22145*t22147*(1.6E1/3.0)+ccab1*gcab*t21908*t21918*t21919*1.0/(t22105*t22105*t22105)*t22142*(3.2E1/9.0))+(ccab1*gamma_aa*gcab*t21914*t22106*(4.0/3.0)-ccab2*t21923*t21919*t22145*t22147+ccab2*gamma_aa*t21914*t21918*t21919*t22110*(8.0/3.0)-ccab1*gamma_aa*t21914*t21918*t21919*t22141*(4.0/3.0))*(t21973+t22140-t22116+t22139+rho_a*t22177+t21924*(t21997-t22101-t21971*t21982*t21965*t21983*t21948*4.0+t21981*t21965*t21983*t21948*t21976-t21971*t21983*t21948*t21976*t22013+t21950*t21971*t21965*t21948*t21966*t21976*4.0-Aa*t21971*t21948*t22020*t22030*t22032*t22041*2.0+Aa*t21981*t21948*t22020*t22030*t22032*t22044*2.0+t21971*t21948*t22020*t22032*t22050*t22042*t22044*t22045-Aa*a1a*c*t21944*t21971*t21948*t22020*t22030*t22044*(2.0/3.0))-t21948*t22121*t22056)*2.0-(ccab0+ccab1*gcab*t21918*t22106+ccab2*t21923*t21919*t22110)*(rho_a*(t22160-t22090+t22164+t22166-t22099+t21948*t22056*(t22090+t22163+t22165+t22158+t22099-t21906*t22074*t22096*t22088-t22151*t22080*t22072*t22058*2.0-a1f*c*c0f*t22073*t22086*(8.0/9.0)-t21906*t21895*t22085*t22097*t22098*(1.0/2.0)-a1p*c*t22071*t22074*t22067*t22088*(2.0/3.0)))+t21924*(-t22102-t22103+t22008-t22053+t22018+t21971*t21983*t21948*t21976*(t22102+t22103-t22008+t22053-t22018+t21963*t21990*1.0/(t21957*t21957*t21957)*t22009*2.0-t21963*t21990*t21991*(b2f*c*t21935*(4.0/9.0)+b4f*t21936*t21893*(1.0E1/9.0)+b1f*c*t21935*t21937*(2.0/9.0)+b3f*c*t21935*t21927*(2.0/3.0)-b1f*t21936*t21893*t22000*(1.0/3.6E1)+b3f*t21936*t21937*t21893*(1.0/1.2E1))-1.0/(t21960*t21960)*t21963*1.0/(t21957*t21957*t21957*t21957)*t21949*t22009*(1.0/2.0)+a1f*c*c0f*t21961*t21935*(8.0/9.0)-a1f*c*t21944*t21990*t21991*t21996*(2.0/3.0))-t21981*t21982*t21965*t21983*t21948*8.0+t21971*t21965*t21948*t21966*t21976*1.2E1+t21971*t21982*t21983*t21948*t22013*8.0-t21981*t21983*t21948*t21976*t22013*2.0+t21971*t21965*t21983*t21948*t22019*2.0E1+t21965*t21983*t21948*t21976*t22039-t21950*t21971*t21982*t21965*t21948*t21966*3.2E1+t21950*t21981*t21965*t21948*t21966*t21976*8.0-t21950*t21971*t21948*t21966*t21976*t22013*8.0-Aa*t21981*t21948*t22020*t22030*t22032*t22041*4.0+Aa*t21948*t22020*t22030*t22032*t22044*t22039*2.0+Aa*t21971*t21948*t22020*t22030*t22032*(t21966*t21976*1.2E1+t21983*t22019*2.0E1-t21950*t21982*t21966*3.2E1)*2.0-t21971*t21948*t22020*t22032*t22041*t22050*t22042*t22045*2.0+t21981*t21948*t22020*t22032*t22050*t22042*t22044*t22045*2.0+t21971*t21948*t22020*t22032*t22042*t22051*1.0/(t22026*t22026*t22026)*t22044*2.0-t21971*t21948*t22020*t22032*t22042*t22044*t22045*(b2a*c*t21935*(4.0/9.0)+b4a*t21936*t21893*(1.0E1/9.0)+b1a*c*t21935*t21937*(2.0/9.0)+b3a*c*t21935*t21927*(2.0/3.0)-b1a*t21936*t21893*t22000*(1.0/3.6E1)+b3a*t21936*t21937*t21893*(1.0/1.2E1))+Aa*a1a*c*t21944*t21971*t21948*t22020*t22030*t22041*(4.0/3.0)+Aa*a1a*c*t21935*t21971*t21948*t22020*t22030*t22044*(8.0/9.0)-Aa*a1a*c*t21944*t21981*t21948*t22020*t22030*t22044*(4.0/3.0)-t21971*t21948*t22020*t22021*t22032*t22051*1.0/(t22026*t22026*t22026*t22026)*t22044*1.0/(t22029*t22029)*(1.0/2.0)-a1a*c*t21944*t21971*t21948*t22020*t22050*t22042*t22044*t22045*(2.0/3.0))+t21948*t22113*t22056*2.0+t21943*t21945*t21939*t21985*2.0-t21906*t22071*t22074*t22088*2.0-a1p*c*c0p*t21944*t21964*(4.0/3.0)+a1p*c*c0p*t21904*t22067*(4.0/3.0)-t21971*t21982*t21965*t21983*t21948*8.0+t21981*t21965*t21983*t21948*t21976*2.0-t21971*t21983*t21948*t21976*t22013*2.0+t21950*t21971*t21965*t21948*t21966*t21976*8.0-Aa*t21971*t21948*t22020*t22030*t22032*t22041*4.0+Aa*t21981*t21948*t22020*t22030*t22032*t22044*4.0+t21971*t21948*t22020*t22032*t22050*t22042*t22044*t22045*2.0-Aa*a1a*c*t21944*t21971*t21948*t22020*t22030*t22044*(4.0/3.0))+rho_a*t22150*(t22160-t22090+t22164+t22166-t22099-t21948*t22056*(t22160-t22090-t22163+t22164-t22165+t22166-t22158-t22099+t22151*t22080*t22072*t22058*2.0+a1f*c*c0f*t22073*t22086*(8.0/9.0)))-rho_a*t22168*(ccaa1*gamma_aa*gcaa*t22119*t22146*(8.8E1/9.0)+ccaa2*t21908*t21909*t22120*t22142*(3.04E2/9.0)-ccaa1*t21908*t21909*t22142*t22169*2.4E1-ccaa2*t21910*t21908*t21909*t22172*t22173*(3.2E1/3.0)-ccaa2*t21913*t21908*t21909*t22173*(gamma_aa*gcaa*t22146*(1.76E2/9.0)+t21908*t21909*t22142*(3.04E2/9.0))+ccaa2*t21913*t21908*1.0/(t21917*t21917*t21917)*t21909*(t22172*t22172)*2.0+ccaa1*gamma_aa*gcaa*1.0/pow(rho_a,1.0E1)*1.0/(t21912*t21912*t21912)*t21908*t21909*(1.28E2/9.0))-rho_a*t22176*t22177*2.0);
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t22179 = 1.0/pow(rho_a,1.0/3.0);
                double t22180 = c*t22179;
                double t22181 = sqrt(t22180);
                double t22182 = pow(t22180,3.0/2.0);
                double t22183 = c*c;
                double t22184 = 1.0/pow(rho_a,2.0/3.0);
                double t22185 = 1.0/c0p;
                double t22186 = b1p*t22181;
                double t22187 = b3p*t22182;
                double t22188 = b4p*t22183*t22184;
                double t22189 = b2p*c*t22179;
                double t22190 = t22186+t22187+t22188+t22189;
                double t22191 = 1.0/t22190;
                double t22192 = t22191*t22185*(1.0/2.0);
                double t22193 = t22192+1.0;
                double t22194 = log(t22193);
                double t22195 = a1p*c*t22179;
                double t22196 = t22195+1.0;
                double t22197 = pow(2.0,1.0/3.0);
                double t22198 = t22197*2.0;
                double t22199 = t22198-2.0;
                double t22200 = two_13*2.0;
                double t22201 = t22200-2.0;
                double t22202 = 1.0/t22201;
                double t22203 = 1.0/c0f;
                double t22204 = 1.0/pow(rho_b,1.0/3.0);
                double t22205 = c*t22204;
                double t22206 = sqrt(t22205);
                double t22207 = pow(t22205,3.0/2.0);
                double t22208 = 1.0/pow(rho_b,2.0/3.0);
                double t22209 = b1p*t22206;
                double t22210 = b3p*t22207;
                double t22211 = b4p*t22208*t22183;
                double t22212 = b2p*c*t22204;
                double t22213 = t22210+t22211+t22212+t22209;
                double t22214 = 1.0/t22213;
                double t22215 = t22214*t22185*(1.0/2.0);
                double t22216 = t22215+1.0;
                double t22217 = log(t22216);
                double t22218 = a1p*c*t22204;
                double t22219 = t22218+1.0;
                double t22220 = c0p*t22217*t22219*2.0;
                double t22221 = rho_a+rho_b;
                double t22222 = 1.0/pow(t22221,1.0/3.0);
                double t22223 = c*t22222;
                double t22224 = sqrt(t22223);
                double t22225 = pow(t22223,3.0/2.0);
                double t22226 = 1.0/pow(t22221,2.0/3.0);
                double t22227 = b1p*t22224;
                double t22228 = b3p*t22225;
                double t22229 = b4p*t22226*t22183;
                double t22230 = b2p*c*t22222;
                double t22231 = t22230+t22227+t22228+t22229;
                double t22232 = 1.0/t22231;
                double t22233 = t22232*t22185*(1.0/2.0);
                double t22234 = t22233+1.0;
                double t22235 = log(t22234);
                double t22236 = a1p*c*t22222;
                double t22237 = t22236+1.0;
                double t22238 = c0p*t22235*t22237*2.0;
                double t22239 = rho_a-rho_b;
                double t22240 = t22239*t22239;
                double t22241 = 1.0/t22221;
                double t22242 = t22241*t22239;
                double t22243 = 1.0/(t22221*t22221*t22221*t22221);
                double t22244 = t22240*t22240;
                double t22245 = t22242+1.0;
                double t22246 = pow(t22245,4.0/3.0);
                double t22247 = -t22242+1.0;
                double t22248 = pow(t22247,4.0/3.0);
                double t22249 = t22246+t22248-2.0;
                double t22250 = gcab*gcab;
                double t22251 = 1.0/pow(rho_a,1.1E1/3.0);
                double t22252 = 1.0/pow(rho_b,1.1E1/3.0);
                double t22253 = 1.0/pow(rho_a,8.0/3.0);
                double t22254 = gamma_aa*t22253*(1.0/2.0);
                double t22255 = 1.0/pow(rho_b,8.0/3.0);
                double t22256 = gamma_bb*t22255*(1.0/2.0);
                double t22257 = t22254+t22256;
                double t22258 = t22257*t22257;
                double t22259 = t22250*t22258;
                double t22260 = gcab*t22257*2.0;
                double t22261 = t22260+t22259+1.0;
                double t22262 = gamma_aa*gcab*t22251*(8.0/3.0);
                double t22263 = gamma_aa*t22250*t22251*t22257*(8.0/3.0);
                double t22264 = t22262+t22263;
                double t22265 = gamma_bb*gcab*t22252*(8.0/3.0);
                double t22266 = gamma_bb*t22250*t22252*t22257*(8.0/3.0);
                double t22267 = t22265+t22266;
                double t22268 = 1.0/(t22261*t22261);
                double t22269 = gcab*t22257;
                double t22270 = t22269+1.0;
                double t22271 = 1.0/(t22270*t22270);
                double t22272 = 1.0/t22261;
                double t22273 = 1.0/pow(t22221,4.0/3.0);
                double t22274 = b1f*t22224;
                double t22275 = b3f*t22225;
                double t22276 = b4f*t22226*t22183;
                double t22277 = b2f*c*t22222;
                double t22278 = t22274+t22275+t22276+t22277;
                double t22279 = 1.0/t22278;
                double t22280 = t22203*t22279*(1.0/2.0);
                double t22281 = t22280+1.0;
                double t22282 = log(t22281);
                double t22283 = a1f*c*t22222;
                double t22284 = t22283+1.0;
                double t22286 = c0f*t22282*t22284*2.0;
                double t22285 = t22238-t22286;
                double t22287 = 1.0/(t22221*t22221);
                double t22314 = t22239*t22287;
                double t22288 = t22241-t22314;
                double t22289 = 1.0/pow(t22221,5.0/3.0);
                double t22290 = 1.0/sqrt(t22223);
                double t22291 = 1.0/t22234;
                double t22292 = 1.0/(t22231*t22231);
                double t22293 = b4p*t22183*t22289*(2.0/3.0);
                double t22294 = b2p*c*t22273*(1.0/3.0);
                double t22295 = b1p*c*t22290*t22273*(1.0/6.0);
                double t22296 = b3p*c*t22224*t22273*(1.0/2.0);
                double t22297 = t22293+t22294+t22295+t22296;
                double t22298 = t22237*t22291*t22292*t22297;
                double t22299 = 1.0/d2fz0;
                double t22300 = 1.0/Aa;
                double t22301 = b1a*t22224;
                double t22302 = b3a*t22225;
                double t22303 = b4a*t22226*t22183;
                double t22304 = b2a*c*t22222;
                double t22305 = t22301+t22302+t22303+t22304;
                double t22306 = 1.0/t22305;
                double t22307 = t22300*t22306*(1.0/2.0);
                double t22308 = t22307+1.0;
                double t22309 = log(t22308);
                double t22310 = a1a*c*t22222;
                double t22311 = t22310+1.0;
                double t22312 = 1.0/(t22221*t22221*t22221*t22221*t22221);
                double t22313 = pow(t22245,1.0/3.0);
                double t22315 = t22313*t22288*(4.0/3.0);
                double t22316 = pow(t22247,1.0/3.0);
                double t22394 = t22316*t22288*(4.0/3.0);
                double t22317 = t22315-t22394;
                double t22318 = t22243*t22244;
                double t22319 = t22318-1.0;
                double t22320 = a1f*c*t22179;
                double t22321 = t22320+1.0;
                double t22322 = b1f*t22181;
                double t22323 = b3f*t22182;
                double t22324 = b4f*t22183*t22184;
                double t22325 = b2f*c*t22179;
                double t22326 = t22322+t22323+t22324+t22325;
                double t22327 = 1.0/t22326;
                double t22328 = t22203*t22327*(1.0/2.0);
                double t22329 = t22328+1.0;
                double t22330 = 1.0/pow(rho_a,4.0/3.0);
                double t22331 = 1.0/pow(rho_a,5.0/3.0);
                double t22332 = 1.0/sqrt(t22180);
                double t22333 = log(t22329);
                double t22334 = 1.0/t22193;
                double t22335 = 1.0/(t22190*t22190);
                double t22336 = b4p*t22331*t22183*(2.0/3.0);
                double t22337 = b2p*c*t22330*(1.0/3.0);
                double t22338 = b1p*c*t22330*t22332*(1.0/6.0);
                double t22339 = b3p*c*t22330*t22181*(1.0/2.0);
                double t22340 = t22336+t22337+t22338+t22339;
                double t22341 = t22340*t22334*t22335*t22196;
                double t22342 = c0f*t22321*t22333*2.0;
                double t22343 = c0p*t22194*t22196*2.0;
                double t22344 = Aa*t22202*t22311*t22309*t22319*t22249*t22299*2.0;
                double t22345 = 1.0/t22270;
                double t22346 = t22202*t22240*t22243*t22239*t22249*t22285*4.0;
                double t22347 = t22241+t22314;
                double t22348 = 1.0/t22281;
                double t22349 = 1.0/(t22278*t22278);
                double t22350 = b4f*t22183*t22289*(2.0/3.0);
                double t22351 = b2f*c*t22273*(1.0/3.0);
                double t22352 = b1f*c*t22290*t22273*(1.0/6.0);
                double t22353 = b3f*c*t22224*t22273*(1.0/2.0);
                double t22354 = t22350+t22351+t22352+t22353;
                double t22355 = a1f*c*c0f*t22273*t22282*(2.0/3.0);
                double t22356 = a1p*c*c0p*t22235*t22273*(2.0/3.0);
                double t22357 = t22312*t22244*4.0;
                double t22358 = t22313*t22347*(4.0/3.0);
                double t22393 = t22316*t22347*(4.0/3.0);
                double t22359 = -t22393+t22358;
                double t22360 = 1.0/t22308;
                double t22361 = 1.0/(t22305*t22305);
                double t22362 = b4a*t22183*t22289*(2.0/3.0);
                double t22363 = b2a*c*t22273*(1.0/3.0);
                double t22364 = b1a*c*t22290*t22273*(1.0/6.0);
                double t22365 = b3a*c*t22224*t22273*(1.0/2.0);
                double t22366 = t22362+t22363+t22364+t22365;
                double t22367 = Aa*a1a*c*t22202*t22273*t22309*t22319*t22249*t22299*(2.0/3.0);
                double t22368 = a1f*c*t22204;
                double t22369 = t22368+1.0;
                double t22370 = b1f*t22206;
                double t22371 = b3f*t22207;
                double t22372 = b4f*t22208*t22183;
                double t22373 = b2f*c*t22204;
                double t22374 = t22370+t22371+t22372+t22373;
                double t22375 = 1.0/t22374;
                double t22376 = t22203*t22375*(1.0/2.0);
                double t22377 = t22376+1.0;
                double t22378 = 1.0/pow(rho_b,4.0/3.0);
                double t22379 = 1.0/pow(rho_b,5.0/3.0);
                double t22380 = 1.0/sqrt(t22205);
                double t22381 = log(t22377);
                double t22382 = 1.0/t22216;
                double t22383 = 1.0/(t22213*t22213);
                double t22384 = b4p*t22183*t22379*(2.0/3.0);
                double t22385 = b2p*c*t22378*(1.0/3.0);
                double t22386 = b1p*c*t22380*t22378*(1.0/6.0);
                double t22387 = b3p*c*t22206*t22378*(1.0/2.0);
                double t22388 = t22384+t22385+t22386+t22387;
                double t22389 = t22219*t22382*t22383*t22388;
                double t22390 = t22220-c0f*t22381*t22369*2.0;
                double t22391 = 1.0/pow(t22221,7.0/3.0);
                double t22392 = 1.0/pow(t22221,8.0/3.0);
                double t22410 = t22354*t22284*t22348*t22349;
                double t22395 = -t22410+t22355-t22356+t22298;
                double t22396 = t22297*t22297;
                double t22397 = 1.0/pow(t22223,3.0/2.0);
                double t22398 = b4p*t22183*t22392*(1.0E1/9.0);
                double t22399 = b2p*c*t22391*(4.0/9.0);
                double t22400 = b1p*c*t22290*t22391*(2.0/9.0);
                double t22401 = b3p*c*t22224*t22391*(2.0/3.0);
                double t22402 = b3p*t22290*t22183*t22392*(1.0/1.2E1);
                double t22403 = t22400+t22401+t22402+t22398+t22399-b1p*t22183*t22392*t22397*(1.0/3.6E1);
                double t22404 = t22403*t22237*t22291*t22292;
                double t22405 = 1.0/(t22231*t22231*t22231);
                double t22406 = t22354*t22354;
                double t22407 = 1.0/(t22234*t22234);
                double t22408 = 1.0/(t22231*t22231*t22231*t22231);
                double t22409 = t22407*t22237*t22408*t22185*t22396*(1.0/2.0);
                double t22411 = t22410-t22355+t22356-t22298;
                double t22412 = 1.0/(t22221*t22221*t22221);
                double t22413 = a1p*c*t22273*t22291*t22292*t22297*(2.0/3.0);
                double t22414 = 1.0/(t22221*t22221*t22221*t22221*t22221*t22221);
                double t22415 = t22240*t22243*t22239*4.0;
                double t22416 = t22415+t22357;
                double t22417 = t22412*t22316*t22239*(8.0/3.0);
                double t22418 = 1.0/pow(t22245,2.0/3.0);
                double t22419 = t22418*t22347*t22288*(4.0/9.0);
                double t22420 = 1.0/pow(t22247,2.0/3.0);
                double t22421 = t22420*t22347*t22288*(4.0/9.0);
                double t22422 = t22421+t22417+t22419-t22313*t22412*t22239*(8.0/3.0);
                double t22423 = t22415-t22357;
                double t22424 = t22366*t22366;
                double t22425 = t22202*t22243*t22244*t22285*t22359;
                double t22426 = t22202*t22243*t22244*t22317*t22285;
                v_rho_a_rho_b[Q] += scale * ((ccab1*gamma_aa*gcab*t22251*t22345*(4.0/3.0)-ccab2*t22250*t22264*t22258*t22268-ccab1*gamma_aa*t22250*t22251*t22271*t22257*(4.0/3.0)+ccab2*gamma_aa*t22250*t22251*t22272*t22257*(8.0/3.0))*(-t22220+t22344+t22238+t22221*(t22425+t22346-t22356-t22367+t22298+t22202*t22312*t22244*t22249*t22285*4.0-t22202*t22243*t22244*t22249*t22395-Aa*t22202*t22311*t22416*t22309*t22249*t22299*2.0-Aa*t22202*t22311*t22309*t22319*t22359*t22299*2.0+t22202*t22311*t22360*t22361*t22319*t22249*t22366*t22299)+rho_b*(-t22389+t22202*t22199*(t22389-(1.0/(t22374*t22374)*t22369*(b2f*c*t22378*(1.0/3.0)+b4f*t22183*t22379*(2.0/3.0)+b1f*c*t22380*t22378*(1.0/6.0)+b3f*c*t22206*t22378*(1.0/2.0)))/t22377+a1f*c*c0f*t22381*t22378*(2.0/3.0)-a1p*c*c0p*t22217*t22378*(2.0/3.0))+a1p*c*c0p*t22217*t22378*(2.0/3.0))+t22202*t22390*t22199-t22202*t22243*t22244*t22249*(t22238-t22286))-(rho_b*(t22220-t22202*t22390*t22199)+rho_a*(t22343+t22202*t22199*(t22342-c0p*t22194*t22196*2.0))-t22221*(t22344+t22238-t22202*t22243*t22244*t22249*t22285))*(ccab2*t22250*1.0/(t22261*t22261*t22261)*t22264*t22258*t22267*-2.0+ccab1*gamma_aa*gamma_bb*t22250*t22251*t22252*t22271*(3.2E1/9.0)-ccab2*gamma_aa*gamma_bb*t22250*t22251*t22252*t22272*(3.2E1/9.0)+ccab2*gamma_aa*t22250*t22251*t22257*t22267*t22268*(8.0/3.0)+ccab2*gamma_bb*t22250*t22252*t22264*t22257*t22268*(8.0/3.0)+ccab2*gamma_aa*gamma_bb*(t22250*t22250)*t22251*t22252*t22258*t22268*(3.2E1/9.0)-ccab1*gamma_aa*gamma_bb*gcab*t22250*t22251*t22252*1.0/(t22270*t22270*t22270)*t22257*(3.2E1/9.0))-(ccab1*gamma_bb*gcab*t22252*t22345*(4.0/3.0)-ccab2*t22250*t22258*t22267*t22268-ccab1*gamma_bb*t22250*t22252*t22271*t22257*(4.0/3.0)+ccab2*gamma_bb*t22250*t22252*t22272*t22257*(8.0/3.0))*(t22343-t22344-t22238+t22221*(t22426+t22346+t22356+t22367-t22298+t22202*t22243*t22244*t22249*(t22355+t22298-t22354*t22284*t22348*t22349-a1p*c*c0p*t22235*t22273*(2.0/3.0))-t22202*t22312*t22244*t22249*t22285*4.0-Aa*t22202*t22311*t22317*t22309*t22319*t22299*2.0+Aa*t22202*t22311*t22309*t22249*t22299*(t22357-t22240*t22243*t22239*4.0)*2.0-t22202*t22311*t22360*t22361*t22319*t22249*t22366*t22299)-rho_a*(-t22341+t22202*t22199*(t22341-(t22321*1.0/(t22326*t22326)*(b2f*c*t22330*(1.0/3.0)+b4f*t22331*t22183*(2.0/3.0)+b1f*c*t22330*t22332*(1.0/6.0)+b3f*c*t22330*t22181*(1.0/2.0)))/t22329+a1f*c*c0f*t22330*t22333*(2.0/3.0)-a1p*c*c0p*t22330*t22194*(2.0/3.0))+a1p*c*c0p*t22330*t22194*(2.0/3.0))+t22202*t22199*(t22342-t22343)+t22202*t22243*t22244*t22249*t22285)-(ccab0+ccab1*gcab*t22345*t22257+ccab2*t22250*t22272*t22258)*(t22425-t22426-t22221*(t22404+t22413+t22409-t22405*t22237*t22291*t22396*2.0-a1p*c*c0p*t22235*t22391*(8.0/9.0)-t22202*t22243*t22244*t22249*(t22404+t22413+t22409-t22405*t22237*t22291*t22396*2.0+t22406*t22284*t22348*1.0/(t22278*t22278*t22278)*2.0-t22284*t22348*t22349*(b2f*c*t22391*(4.0/9.0)+b4f*t22183*t22392*(1.0E1/9.0)+b1f*c*t22290*t22391*(2.0/9.0)+b3f*c*t22224*t22391*(2.0/3.0)-b1f*t22183*t22392*t22397*(1.0/3.6E1)+b3f*t22290*t22183*t22392*(1.0/1.2E1))-t22203*t22406*1.0/(t22281*t22281)*t22284*1.0/(t22278*t22278*t22278*t22278)*(1.0/2.0)+a1f*c*c0f*t22282*t22391*(8.0/9.0)-a1p*c*c0p*t22235*t22391*(8.0/9.0)-a1f*c*t22273*t22354*t22348*t22349*(2.0/3.0))-t22202*t22411*t22243*t22244*t22317-t22202*t22312*t22244*t22317*t22285*4.0+t22202*t22411*t22243*t22244*t22359-t22202*t22422*t22243*t22244*t22285-t22202*t22240*t22243*t22249*t22285*1.2E1-t22202*t22312*t22244*t22249*t22395*8.0+t22202*t22312*t22244*t22285*t22359*4.0+t22202*t22414*t22244*t22249*t22285*2.0E1-t22202*t22240*t22243*t22317*t22239*t22285*4.0-t22202*t22240*t22243*t22239*t22285*t22359*4.0+Aa*t22202*t22311*t22422*t22309*t22319*t22299*2.0+Aa*t22202*t22311*t22317*t22416*t22309*t22299*2.0+Aa*t22202*t22311*t22423*t22309*t22359*t22299*2.0+Aa*t22202*t22311*t22309*t22249*t22299*(t22240*t22243*1.2E1-t22414*t22244*2.0E1)*2.0-t22202*t22311*t22360*t22423*t22361*t22249*t22366*t22299-t22202*t22311*t22360*t22361*t22317*t22319*t22366*t22299+t22202*t22311*t22360*t22361*t22416*t22249*t22366*t22299+t22202*t22311*t22360*t22361*t22319*t22366*t22359*t22299-t22202*t22311*1.0/(t22305*t22305*t22305)*t22360*t22424*t22319*t22249*t22299*2.0+t22202*t22311*t22360*t22361*t22319*t22249*t22299*(b2a*c*t22391*(4.0/9.0)+b4a*t22183*t22392*(1.0E1/9.0)+b1a*c*t22290*t22391*(2.0/9.0)+b3a*c*t22224*t22391*(2.0/3.0)-b1a*t22183*t22392*t22397*(1.0/3.6E1)+b3a*t22290*t22183*t22392*(1.0/1.2E1))+Aa*a1a*c*t22202*t22423*t22273*t22309*t22249*t22299*(2.0/3.0)+Aa*a1a*c*t22202*t22317*t22273*t22309*t22319*t22299*(2.0/3.0)-Aa*a1a*c*t22202*t22416*t22273*t22309*t22249*t22299*(2.0/3.0)-Aa*a1a*c*t22202*t22309*t22319*t22391*t22249*t22299*(8.0/9.0)-Aa*a1a*c*t22202*t22273*t22309*t22319*t22359*t22299*(2.0/3.0)+t22300*t22202*t22311*1.0/(t22305*t22305*t22305*t22305)*t22424*1.0/(t22308*t22308)*t22319*t22249*t22299*(1.0/2.0)+a1a*c*t22202*t22360*t22361*t22273*t22319*t22249*t22366*t22299*(2.0/3.0))+t22237*t22291*t22292*t22297*2.0-a1p*c*c0p*t22235*t22273*(4.0/3.0)+t22202*t22411*t22243*t22244*t22249*2.0+t22202*t22312*t22244*t22249*t22285*8.0+Aa*t22202*t22311*t22423*t22309*t22249*t22299*2.0+Aa*t22202*t22311*t22317*t22309*t22319*t22299*2.0-Aa*t22202*t22311*t22416*t22309*t22249*t22299*2.0-Aa*t22202*t22311*t22309*t22319*t22359*t22299*2.0+t22202*t22311*t22360*t22361*t22319*t22249*t22366*t22299*2.0-Aa*a1a*c*t22202*t22273*t22309*t22319*t22249*t22299*(4.0/3.0)));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t22428 = 1.0/pow(rho_b,1.0/3.0);
                double t22429 = c*t22428;
                double t22430 = sqrt(t22429);
                double t22431 = pow(t22429,3.0/2.0);
                double t22432 = c*c;
                double t22433 = 1.0/pow(rho_b,2.0/3.0);
                double t22434 = 1.0/c0p;
                double t22435 = b1p*t22430;
                double t22436 = b3p*t22431;
                double t22437 = b4p*t22432*t22433;
                double t22438 = b2p*c*t22428;
                double t22439 = t22435+t22436+t22437+t22438;
                double t22440 = 1.0/t22439;
                double t22441 = t22440*t22434*(1.0/2.0);
                double t22442 = t22441+1.0;
                double t22443 = log(t22442);
                double t22444 = a1p*c*t22428;
                double t22445 = t22444+1.0;
                double t22446 = 1.0/pow(rho_b,8.0/3.0);
                double t22447 = gamma_bb*gamma_bb;
                double t22448 = gcaa*gcaa;
                double t22449 = 1.0/pow(rho_b,1.9E1/3.0);
                double t22450 = gamma_bb*gcaa*t22446;
                double t22451 = t22450+1.0;
                double t22452 = 1.0/pow(rho_b,1.6E1/3.0);
                double t22453 = 1.0/pow(rho_b,1.1E1/3.0);
                double t22454 = gamma_bb*gcaa*t22446*2.0;
                double t22455 = t22452*t22447*t22448;
                double t22456 = t22454+t22455+1.0;
                double t22459 = 1.0/pow(rho_a,8.0/3.0);
                double t22460 = gamma_aa*t22459*(1.0/2.0);
                double t22461 = gamma_bb*t22446*(1.0/2.0);
                double t22457 = t22460+t22461;
                double t22458 = gcab*gcab;
                double t22462 = t22457*t22457;
                double t22463 = rho_a+rho_b;
                double t22464 = 1.0/pow(t22463,1.0/3.0);
                double t22465 = c*t22464;
                double t22466 = sqrt(t22465);
                double t22467 = b1p*t22466;
                double t22468 = pow(t22465,3.0/2.0);
                double t22469 = b3p*t22468;
                double t22470 = 1.0/pow(t22463,2.0/3.0);
                double t22471 = b4p*t22432*t22470;
                double t22472 = b2p*c*t22464;
                double t22473 = t22471+t22472+t22467+t22469;
                double t22474 = 1.0/pow(t22463,7.0/3.0);
                double t22475 = 1.0/pow(t22463,8.0/3.0);
                double t22476 = 1.0/sqrt(t22465);
                double t22477 = a1p*c*t22464;
                double t22478 = t22477+1.0;
                double t22479 = 1.0/t22473;
                double t22480 = t22434*t22479*(1.0/2.0);
                double t22481 = t22480+1.0;
                double t22482 = 1.0/t22481;
                double t22483 = 1.0/pow(t22463,4.0/3.0);
                double t22523 = 1.0/pow(t22463,5.0/3.0);
                double t22525 = b4p*t22432*t22523*(2.0/3.0);
                double t22526 = b2p*c*t22483*(1.0/3.0);
                double t22527 = b1p*c*t22483*t22476*(1.0/6.0);
                double t22528 = b3p*c*t22483*t22466*(1.0/2.0);
                double t22484 = t22525+t22526+t22527+t22528;
                double t22485 = two_13*2.0;
                double t22486 = t22485-2.0;
                double t22487 = 1.0/t22486;
                double t22488 = 1.0/c0f;
                double t22489 = rho_a-rho_b;
                double t22490 = 1.0/t22463;
                double t22491 = t22490*t22489;
                double t22492 = b1f*t22466;
                double t22493 = b3f*t22468;
                double t22494 = b4f*t22432*t22470;
                double t22495 = b2f*c*t22464;
                double t22496 = t22492+t22493+t22494+t22495;
                double t22497 = 1.0/t22496;
                double t22498 = t22488*t22497*(1.0/2.0);
                double t22499 = t22498+1.0;
                double t22500 = log(t22499);
                double t22501 = a1f*c*t22464;
                double t22502 = t22501+1.0;
                double t22503 = log(t22481);
                double t22511 = c0f*t22500*t22502*2.0;
                double t22512 = c0p*t22503*t22478*2.0;
                double t22504 = t22511-t22512;
                double t22505 = t22489*t22489;
                double t22506 = t22491+1.0;
                double t22507 = pow(t22506,4.0/3.0);
                double t22508 = -t22491+1.0;
                double t22509 = pow(t22508,4.0/3.0);
                double t22510 = t22507+t22509-2.0;
                double t22513 = 1.0/(t22463*t22463);
                double t22514 = t22513*t22489;
                double t22515 = t22514+t22490;
                double t22516 = 1.0/(t22463*t22463*t22463*t22463);
                double t22517 = pow(t22506,1.0/3.0);
                double t22518 = t22515*t22517*(4.0/3.0);
                double t22519 = pow(t22508,1.0/3.0);
                double t22552 = t22515*t22519*(4.0/3.0);
                double t22520 = -t22552+t22518;
                double t22521 = 1.0/(t22463*t22463*t22463*t22463*t22463);
                double t22522 = t22505*t22505;
                double t22524 = 1.0/(t22473*t22473);
                double t22529 = 1.0/t22499;
                double t22530 = 1.0/(t22496*t22496);
                double t22531 = b4f*t22432*t22523*(2.0/3.0);
                double t22532 = b2f*c*t22483*(1.0/3.0);
                double t22533 = b1f*c*t22483*t22476*(1.0/6.0);
                double t22534 = b3f*c*t22483*t22466*(1.0/2.0);
                double t22535 = t22531+t22532+t22533+t22534;
                double t22536 = t22502*t22530*t22535*t22529;
                double t22537 = a1p*c*c0p*t22503*t22483*(2.0/3.0);
                double t22553 = t22524*t22482*t22484*t22478;
                double t22554 = a1f*c*c0f*t22500*t22483*(2.0/3.0);
                double t22538 = -t22553+t22536-t22554+t22537;
                double t22539 = t22484*t22484;
                double t22540 = 1.0/pow(t22465,3.0/2.0);
                double t22541 = b4p*t22432*t22475*(1.0E1/9.0);
                double t22542 = b2p*c*t22474*(4.0/9.0);
                double t22543 = b1p*c*t22474*t22476*(2.0/9.0);
                double t22544 = b3p*c*t22474*t22466*(2.0/3.0);
                double t22545 = b3p*t22432*t22475*t22476*(1.0/1.2E1);
                double t22546 = t22541+t22542+t22543+t22544+t22545-b1p*t22432*t22540*t22475*(1.0/3.6E1);
                double t22547 = 1.0/(t22473*t22473*t22473);
                double t22548 = t22482*t22547*t22539*t22478*2.0;
                double t22549 = t22535*t22535;
                double t22550 = 1.0/(t22481*t22481);
                double t22551 = 1.0/(t22473*t22473*t22473*t22473);
                double t22555 = t22513*2.0;
                double t22556 = 1.0/(t22463*t22463*t22463);
                double t22557 = t22556*t22489*2.0;
                double t22558 = t22555+t22557;
                double t22559 = t22515*t22515;
                double t22560 = a1p*c*c0p*t22503*t22474*(8.0/9.0);
                double t22561 = 1.0/(t22463*t22463*t22463*t22463*t22463*t22463);
                double t22562 = 1.0/d2fz0;
                double t22563 = 1.0/Aa;
                double t22564 = b1a*t22466;
                double t22565 = b3a*t22468;
                double t22566 = b4a*t22432*t22470;
                double t22567 = b2a*c*t22464;
                double t22568 = t22564+t22565+t22566+t22567;
                double t22569 = 1.0/t22568;
                double t22570 = t22563*t22569*(1.0/2.0);
                double t22571 = t22570+1.0;
                double t22572 = log(t22571);
                double t22573 = a1a*c*t22464;
                double t22574 = t22573+1.0;
                double t22575 = t22517*t22558*(4.0/3.0);
                double t22576 = 1.0/pow(t22506,2.0/3.0);
                double t22577 = t22576*t22559*(4.0/9.0);
                double t22578 = 1.0/pow(t22508,2.0/3.0);
                double t22579 = t22559*t22578*(4.0/9.0);
                double t22580 = t22575+t22577+t22579-t22519*t22558*(4.0/3.0);
                double t22581 = t22505*t22516*t22489*4.0;
                double t22582 = t22521*t22522*4.0;
                double t22583 = t22581+t22582;
                double t22584 = 1.0/t22571;
                double t22585 = t22522*t22516;
                double t22586 = t22585-1.0;
                double t22587 = 1.0/(t22568*t22568);
                double t22588 = b4a*t22432*t22523*(2.0/3.0);
                double t22589 = b2a*c*t22483*(1.0/3.0);
                double t22590 = b1a*c*t22483*t22476*(1.0/6.0);
                double t22591 = b3a*c*t22483*t22466*(1.0/2.0);
                double t22592 = t22590+t22591+t22588+t22589;
                double t22593 = t22592*t22592;
                double t22594 = pow(2.0,1.0/3.0);
                double t22595 = t22594*2.0;
                double t22596 = t22595-2.0;
                double t22597 = a1f*c*t22428;
                double t22598 = t22597+1.0;
                double t22599 = b1f*t22430;
                double t22600 = b3f*t22431;
                double t22601 = b4f*t22432*t22433;
                double t22602 = b2f*c*t22428;
                double t22603 = t22600+t22601+t22602+t22599;
                double t22604 = 1.0/t22603;
                double t22605 = t22604*t22488*(1.0/2.0);
                double t22606 = t22605+1.0;
                double t22607 = 1.0/pow(rho_b,4.0/3.0);
                double t22609 = 1.0/pow(rho_b,5.0/3.0);
                double t22610 = 1.0/sqrt(t22429);
                double t22616 = b4f*t22432*t22609*(2.0/3.0);
                double t22617 = b2f*c*t22607*(1.0/3.0);
                double t22618 = b1f*c*t22610*t22607*(1.0/6.0);
                double t22619 = b3f*c*t22430*t22607*(1.0/2.0);
                double t22608 = t22616+t22617+t22618+t22619;
                double t22621 = b4p*t22432*t22609*(2.0/3.0);
                double t22622 = b2p*c*t22607*(1.0/3.0);
                double t22623 = b1p*c*t22610*t22607*(1.0/6.0);
                double t22624 = b3p*c*t22430*t22607*(1.0/2.0);
                double t22611 = t22621+t22622+t22623+t22624;
                double t22612 = 1.0/t22606;
                double t22613 = 1.0/pow(rho_b,7.0/3.0);
                double t22614 = 1.0/t22442;
                double t22615 = 1.0/pow(t22429,3.0/2.0);
                double t22620 = t22608*t22608;
                double t22625 = t22611*t22611;
                double t22626 = log(t22606);
                double t22627 = 1.0/(t22603*t22603);
                double t22628 = 1.0/(t22439*t22439);
                double t22629 = 1.0/(t22439*t22439*t22439);
                double t22630 = t22614*t22445*t22625*t22629*2.0;
                double t22631 = b4p*t22432*t22446*(1.0E1/9.0);
                double t22632 = b2p*c*t22613*(4.0/9.0);
                double t22633 = b3p*t22610*t22432*t22446*(1.0/1.2E1);
                double t22634 = b1p*c*t22610*t22613*(2.0/9.0);
                double t22635 = b3p*c*t22430*t22613*(2.0/3.0);
                double t22694 = b1p*t22432*t22615*t22446*(1.0/3.6E1);
                double t22636 = t22631+t22632+t22633+t22634+t22635-t22694;
                double t22637 = 1.0/(t22442*t22442);
                double t22638 = 1.0/(t22439*t22439*t22439*t22439);
                double t22639 = a1p*c*c0p*t22613*t22443*(8.0/9.0);
                double t22640 = gcab*t22457;
                double t22641 = t22640+1.0;
                double t22642 = 1.0/t22641;
                double t22643 = t22462*t22458;
                double t22644 = gcab*t22457*2.0;
                double t22645 = t22643+t22644+1.0;
                double t22646 = 1.0/t22645;
                double t22647 = t22611*t22614*t22445*t22628;
                double t22648 = a1f*c*c0f*t22607*t22626*(2.0/3.0);
                double t22650 = a1p*c*c0p*t22443*t22607*(2.0/3.0);
                double t22653 = t22612*t22608*t22627*t22598;
                double t22649 = -t22650-t22653+t22647+t22648;
                double t22651 = c0f*t22626*t22598*2.0;
                double t22652 = c0p*t22443*t22445*2.0;
                double t22654 = 1.0/t22451;
                double t22655 = 1.0/t22456;
                double t22656 = 1.0/pow(rho_a,1.0/3.0);
                double t22657 = c*t22656;
                double t22658 = sqrt(t22657);
                double t22659 = pow(t22657,3.0/2.0);
                double t22660 = 1.0/pow(rho_a,2.0/3.0);
                double t22661 = b1p*t22658;
                double t22662 = b3p*t22659;
                double t22663 = b4p*t22432*t22660;
                double t22664 = b2p*c*t22656;
                double t22665 = t22661+t22662+t22663+t22664;
                double t22666 = 1.0/t22665;
                double t22667 = t22434*t22666*(1.0/2.0);
                double t22668 = t22667+1.0;
                double t22669 = log(t22668);
                double t22670 = a1p*c*t22656;
                double t22671 = t22670+1.0;
                double t22672 = c0p*t22671*t22669*2.0;
                double t22673 = t22651-t22652;
                double t22674 = t22510*t22504*t22522*t22516*t22487;
                double t22675 = Aa*t22510*t22562*t22572*t22574*t22487*t22586*2.0;
                double t22676 = 1.0/(t22641*t22641);
                double t22677 = 1.0/pow(rho_b,2.2E1/3.0);
                double t22678 = gamma_bb*gcab*t22453*(8.0/3.0);
                double t22679 = gamma_bb*t22453*t22457*t22458*(8.0/3.0);
                double t22680 = t22678+t22679;
                double t22681 = 1.0/pow(rho_b,1.4E1/3.0);
                double t22682 = 1.0/(t22645*t22645);
                double t22683 = ccaa1*gamma_bb*gcaa*t22446*t22654;
                double t22684 = ccaa2*t22452*t22447*t22448*t22655;
                double t22685 = ccaa0+t22683+t22684;
                double t22686 = 1.0/(t22603*t22603*t22603);
                double t22687 = b4f*t22432*t22446*(1.0E1/9.0);
                double t22688 = b2f*c*t22613*(4.0/9.0);
                double t22689 = b3f*t22610*t22432*t22446*(1.0/1.2E1);
                double t22690 = b1f*c*t22610*t22613*(2.0/9.0);
                double t22691 = b3f*c*t22430*t22613*(2.0/3.0);
                double t22692 = t22690+t22691+t22687+t22688+t22689-b1f*t22432*t22615*t22446*(1.0/3.6E1);
                double t22693 = t22612*t22627*t22692*t22598;
                double t22695 = t22614*t22445*t22636*t22628;
                double t22696 = 1.0/(t22606*t22606);
                double t22697 = 1.0/(t22603*t22603*t22603*t22603);
                double t22698 = t22620*t22488*t22696*t22598*t22697*(1.0/2.0);
                double t22699 = t22434*t22445*t22625*t22637*t22638*(1.0/2.0);
                double t22700 = a1f*c*t22612*t22607*t22608*t22627*(2.0/3.0);
                double t22701 = a1p*c*t22611*t22614*t22607*t22628*(2.0/3.0);
                double t22702 = t22673*t22487*t22596;
                double t22703 = t22702+t22652;
                double t22704 = 1.0/(t22451*t22451);
                double t22705 = gamma_bb*gcaa*t22453*(1.6E1/3.0);
                double t22706 = t22447*t22448*t22449*(1.6E1/3.0);
                double t22707 = t22705+t22706;
                double t22708 = 1.0/(t22456*t22456);
                double t22709 = t22650+t22653-t22647-t22648;
                double t22710 = t22709*t22487*t22596;
                double t22711 = t22710-t22650+t22647;
                double t22712 = ccaa1*gamma_bb*gcaa*t22453*t22654*(8.0/3.0);
                double t22713 = ccaa2*t22447*t22448*t22655*t22449*(1.6E1/3.0);
                double t22714 = t22712+t22713-ccaa1*t22704*t22447*t22448*t22449*(8.0/3.0)-ccaa2*t22452*t22707*t22447*t22708*t22448;
                v_rho_b_rho_b[Q] += scale * (t22711*t22685*-2.0+t22714*(t22652+t22487*t22596*(t22651-c0p*t22443*t22445*2.0))*2.0+(ccab1*gamma_bb*gcab*t22453*t22642*(4.0/3.0)-ccab2*t22462*t22680*t22682*t22458+ccab2*gamma_bb*t22453*t22457*t22646*t22458*(8.0/3.0)-ccab1*gamma_bb*t22453*t22457*t22458*t22676*(4.0/3.0))*(t22512-t22652+t22674+t22675+rho_b*(t22650-t22647+t22487*t22649*t22596)-t22463*(-t22553+t22537+t22510*t22521*t22504*t22522*t22487*4.0+t22520*t22504*t22522*t22516*t22487-t22510*t22522*t22516*t22538*t22487+t22510*t22504*t22505*t22516*t22487*t22489*4.0+Aa*t22510*t22562*t22572*t22574*t22583*t22487*2.0+Aa*t22520*t22562*t22572*t22574*t22487*t22586*2.0-t22510*t22562*t22574*t22592*t22584*t22487*t22586*t22587+Aa*a1a*c*t22510*t22562*t22572*t22483*t22487*t22586*(2.0/3.0))-t22673*t22487*t22596)*2.0+(rho_b*t22703+rho_a*(t22672-t22487*t22596*(t22672-c0f*log((t22488*(1.0/2.0))/(b1f*t22658+b3f*t22659+b2f*c*t22656+b4f*t22432*t22660)+1.0)*(a1f*c*t22656+1.0)*2.0))-t22463*(t22512+t22674+t22675))*(-ccab2*t22462*t22682*t22458*(gamma_bb*gcab*t22681*(8.8E1/9.0)+t22447*t22458*t22677*(3.2E1/9.0)+gamma_bb*t22681*t22457*t22458*(8.8E1/9.0))+ccab2*t22462*(t22680*t22680)*1.0/(t22645*t22645*t22645)*t22458*2.0+ccab1*gamma_bb*gcab*t22642*t22681*(4.4E1/9.0)+ccab2*t22447*t22646*t22458*t22677*(3.2E1/9.0)-ccab1*t22447*t22458*t22676*t22677*(3.2E1/9.0)+ccab2*gamma_bb*t22681*t22457*t22646*t22458*(8.8E1/9.0)-ccab1*gamma_bb*t22681*t22457*t22458*t22676*(4.4E1/9.0)-ccab2*gamma_bb*t22453*t22680*t22457*t22682*t22458*(1.6E1/3.0)+ccab1*gcab*1.0/(t22641*t22641*t22641)*t22447*t22457*t22458*t22677*(3.2E1/9.0))+(ccab0+ccab1*gcab*t22642*t22457+ccab2*t22462*t22646*t22458)*(-rho_b*(t22701-t22630-t22639+t22695+t22699+t22487*t22596*(t22700+t22630+t22639+t22693+t22698-t22614*t22445*t22636*t22628-t22620*t22612*t22686*t22598*2.0-a1f*c*c0f*t22613*t22626*(8.0/9.0)-t22434*t22445*t22625*t22637*t22638*(1.0/2.0)-a1p*c*t22611*t22614*t22607*t22628*(2.0/3.0)))-t22463*(t22560+t22548-t22524*t22482*t22546*t22478-t22510*t22522*t22516*t22487*(t22560+t22548-t22524*t22482*t22546*t22478-t22502*t22529*t22549*1.0/(t22496*t22496*t22496)*2.0+t22502*t22530*t22529*(b2f*c*t22474*(4.0/9.0)+b4f*t22432*t22475*(1.0E1/9.0)+b1f*c*t22474*t22476*(2.0/9.0)+b3f*c*t22474*t22466*(2.0/3.0)-b1f*t22432*t22540*t22475*(1.0/3.6E1)+b3f*t22432*t22475*t22476*(1.0/1.2E1))+t22502*t22549*1.0/(t22496*t22496*t22496*t22496)*t22488*1.0/(t22499*t22499)*(1.0/2.0)-a1f*c*c0f*t22500*t22474*(8.0/9.0)-t22550*t22434*t22551*t22539*t22478*(1.0/2.0)+a1f*c*t22530*t22535*t22483*t22529*(2.0/3.0)-a1p*c*t22524*t22482*t22483*t22484*(2.0/3.0))+t22520*t22521*t22504*t22522*t22487*8.0+t22510*t22504*t22522*t22561*t22487*2.0E1+t22510*t22504*t22505*t22516*t22487*1.2E1-t22510*t22521*t22522*t22538*t22487*8.0+t22504*t22522*t22516*t22580*t22487-t22520*t22522*t22516*t22538*t22487*2.0-t22550*t22434*t22551*t22539*t22478*(1.0/2.0)+t22510*t22521*t22504*t22505*t22487*t22489*3.2E1+t22520*t22504*t22505*t22516*t22487*t22489*8.0-t22510*t22505*t22516*t22538*t22487*t22489*8.0-a1p*c*t22524*t22482*t22483*t22484*(2.0/3.0)+Aa*t22520*t22562*t22572*t22574*t22583*t22487*4.0+Aa*t22562*t22580*t22572*t22574*t22487*t22586*2.0+Aa*t22510*t22562*t22572*t22574*t22487*(t22522*t22561*2.0E1+t22505*t22516*1.2E1+t22521*t22505*t22489*3.2E1)*2.0-t22510*t22562*t22574*t22583*t22592*t22584*t22487*t22587*2.0-t22520*t22562*t22574*t22592*t22584*t22487*t22586*t22587*2.0+t22510*t22562*t22574*t22584*t22593*t22487*1.0/(t22568*t22568*t22568)*t22586*2.0-t22510*t22562*t22574*t22584*t22487*t22586*t22587*(b2a*c*t22474*(4.0/9.0)+b4a*t22432*t22475*(1.0E1/9.0)+b1a*c*t22474*t22476*(2.0/9.0)+b3a*c*t22474*t22466*(2.0/3.0)-b1a*t22432*t22540*t22475*(1.0/3.6E1)+b3a*t22432*t22475*t22476*(1.0/1.2E1))+Aa*a1a*c*t22510*t22562*t22572*t22483*t22583*t22487*(4.0/3.0)+Aa*a1a*c*t22510*t22562*t22572*t22474*t22487*t22586*(8.0/9.0)+Aa*a1a*c*t22520*t22562*t22572*t22483*t22487*t22586*(4.0/3.0)-t22510*t22562*1.0/(t22571*t22571)*t22563*t22574*t22593*t22487*1.0/(t22568*t22568*t22568*t22568)*t22586*(1.0/2.0)-a1a*c*t22510*t22562*t22483*t22592*t22584*t22487*t22586*t22587*(2.0/3.0))-t22487*t22649*t22596*2.0+t22611*t22614*t22445*t22628*2.0-t22524*t22482*t22484*t22478*2.0+a1p*c*c0p*t22503*t22483*(4.0/3.0)-a1p*c*c0p*t22443*t22607*(4.0/3.0)+t22510*t22521*t22504*t22522*t22487*8.0+t22520*t22504*t22522*t22516*t22487*2.0-t22510*t22522*t22516*t22538*t22487*2.0+t22510*t22504*t22505*t22516*t22487*t22489*8.0+Aa*t22510*t22562*t22572*t22574*t22583*t22487*4.0+Aa*t22520*t22562*t22572*t22574*t22487*t22586*4.0-t22510*t22562*t22574*t22592*t22584*t22487*t22586*t22587*2.0+Aa*a1a*c*t22510*t22562*t22572*t22483*t22487*t22586*(4.0/3.0))-rho_b*t22703*(ccaa1*gamma_bb*gcaa*t22654*t22681*(8.8E1/9.0)-ccaa1*t22704*t22447*t22448*t22677*2.4E1+ccaa2*t22447*t22448*t22655*t22677*(3.04E2/9.0)-ccaa2*t22707*t22447*t22708*t22448*t22449*(3.2E1/3.0)-ccaa2*t22452*t22447*t22708*t22448*(gamma_bb*gcaa*t22681*(1.76E2/9.0)+t22447*t22448*t22677*(3.04E2/9.0))+ccaa2*t22452*(t22707*t22707)*t22447*1.0/(t22456*t22456*t22456)*t22448*2.0+ccaa1*gamma_bb*gcaa*1.0/pow(rho_b,1.0E1)*1.0/(t22451*t22451*t22451)*t22447*t22448*(1.28E2/9.0))+rho_b*t22685*(t22701-t22630-t22639+t22695+t22699+t22487*t22596*(t22700-t22701+t22630+t22639+t22693-t22695+t22698-t22699-t22620*t22612*t22686*t22598*2.0-a1f*c*c0f*t22613*t22626*(8.0/9.0)))+rho_b*t22711*t22714*2.0);
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t23452 = 1.0/pow(rho_a,1.0/3.0);
                double t23453 = c*t23452;
                double t23454 = sqrt(t23453);
                double t23455 = pow(t23453,3.0/2.0);
                double t23456 = c*c;
                double t23457 = 1.0/pow(rho_a,2.0/3.0);
                double t23458 = 1.0/c0p;
                double t23459 = b1p*t23454;
                double t23460 = b3p*t23455;
                double t23461 = b4p*t23456*t23457;
                double t23462 = b2p*c*t23452;
                double t23463 = t23460+t23461+t23462+t23459;
                double t23464 = 1.0/t23463;
                double t23465 = t23464*t23458*(1.0/2.0);
                double t23466 = t23465+1.0;
                double t23467 = log(t23466);
                double t23468 = a1p*c*t23452;
                double t23469 = t23468+1.0;
                double t23470 = pow(2.0,1.0/3.0);
                double t23471 = t23470*2.0;
                double t23472 = t23471-2.0;
                double t23473 = two_13*2.0;
                double t23474 = t23473-2.0;
                double t23475 = 1.0/t23474;
                double t23476 = 1.0/c0f;
                double t23477 = 1.0/pow(rho_b,1.0/3.0);
                double t23478 = c*t23477;
                double t23479 = sqrt(t23478);
                double t23480 = pow(t23478,3.0/2.0);
                double t23481 = 1.0/pow(rho_b,2.0/3.0);
                double t23482 = b1p*t23479;
                double t23483 = b3p*t23480;
                double t23484 = b4p*t23481*t23456;
                double t23485 = b2p*c*t23477;
                double t23486 = t23482+t23483+t23484+t23485;
                double t23487 = 1.0/t23486;
                double t23488 = t23458*t23487*(1.0/2.0);
                double t23489 = t23488+1.0;
                double t23490 = log(t23489);
                double t23491 = a1p*c*t23477;
                double t23492 = t23491+1.0;
                double t23493 = c0p*t23490*t23492*2.0;
                double t23494 = rho_a+rho_b;
                double t23495 = 1.0/pow(t23494,1.0/3.0);
                double t23496 = c*t23495;
                double t23497 = sqrt(t23496);
                double t23498 = pow(t23496,3.0/2.0);
                double t23499 = 1.0/pow(t23494,2.0/3.0);
                double t23500 = b1p*t23497;
                double t23501 = b3p*t23498;
                double t23502 = b4p*t23456*t23499;
                double t23503 = b2p*c*t23495;
                double t23504 = t23500+t23501+t23502+t23503;
                double t23505 = 1.0/t23504;
                double t23506 = t23505*t23458*(1.0/2.0);
                double t23507 = t23506+1.0;
                double t23508 = log(t23507);
                double t23509 = a1p*c*t23495;
                double t23510 = t23509+1.0;
                double t23511 = c0p*t23510*t23508*2.0;
                double t23512 = rho_a-rho_b;
                double t23513 = t23512*t23512;
                double t23514 = 1.0/t23494;
                double t23515 = t23512*t23514;
                double t23516 = 1.0/(t23494*t23494*t23494*t23494);
                double t23517 = t23513*t23513;
                double t23518 = t23515+1.0;
                double t23519 = pow(t23518,4.0/3.0);
                double t23520 = -t23515+1.0;
                double t23521 = pow(t23520,4.0/3.0);
                double t23522 = t23521+t23519-2.0;
                double t23523 = gcab*gcab;
                double t23524 = 1.0/pow(rho_a,1.6E1/3.0);
                double t23525 = 1.0/pow(rho_a,8.0/3.0);
                double t23526 = gamma_aa*t23525*(1.0/2.0);
                double t23527 = 1.0/pow(rho_b,8.0/3.0);
                double t23528 = gamma_bb*t23527*(1.0/2.0);
                double t23529 = t23526+t23528;
                double t23530 = gcab*t23529;
                double t23531 = t23530+1.0;
                double t23532 = t23529*t23529;
                double t23533 = t23523*t23532;
                double t23534 = gcab*t23529*2.0;
                double t23535 = t23533+t23534+1.0;
                double t23537 = gcab*t23525;
                double t23538 = t23523*t23525*t23529;
                double t23536 = t23537+t23538;
                double t23539 = 1.0/(t23535*t23535);
                double t23540 = b1f*t23454;
                double t23541 = b3f*t23455;
                double t23542 = b4f*t23456*t23457;
                double t23543 = b2f*c*t23452;
                double t23544 = t23540+t23541+t23542+t23543;
                double t23545 = 1.0/t23544;
                double t23546 = t23545*t23476*(1.0/2.0);
                double t23547 = t23546+1.0;
                double t23548 = log(t23547);
                double t23549 = a1f*c*t23452;
                double t23550 = t23549+1.0;
                double t23551 = c0f*t23550*t23548*2.0;
                double t23552 = c0p*t23467*t23469*2.0;
                double t23553 = gcaa*gcaa;
                double t23554 = gamma_aa*gcaa*t23525;
                double t23555 = t23554+1.0;
                double t23556 = gamma_aa*gamma_aa;
                double t23557 = gamma_aa*gcaa*t23525*2.0;
                double t23558 = t23524*t23553*t23556;
                double t23559 = t23557+t23558+1.0;
                double t23561 = gcaa*t23525*2.0;
                double t23562 = gamma_aa*t23524*t23553*2.0;
                double t23560 = t23561+t23562;
                double t23563 = 1.0/(t23559*t23559);
                v_gamma_aa_gamma_aa[Q] += scale * (-(rho_a*(t23552+t23472*t23475*(t23551-c0p*t23467*t23469*2.0))+rho_b*(t23493-t23472*t23475*(t23493-c0f*log((t23476*(1.0/2.0))/(b1f*t23479+b3f*t23480+b2f*c*t23477+b4f*t23481*t23456)+1.0)*(a1f*c*t23477+1.0)*2.0))-t23494*(t23511-t23522*t23516*t23517*t23475*(t23511-c0f*log((t23476*(1.0/2.0))/(b1f*t23497+b3f*t23498+b2f*c*t23495+b4f*t23456*t23499)+1.0)*(a1f*c*t23495+1.0)*2.0)+(Aa*t23522*t23475*log((1.0/2.0)/(Aa*(b1a*t23497+b3a*t23498+b2a*c*t23495+b4a*t23456*t23499))+1.0)*(t23516*t23517-1.0)*(a1a*c*t23495+1.0)*2.0)/d2fz0))*(ccab1*1.0/(t23531*t23531)*t23523*t23524*(1.0/2.0)-(ccab2*t23523*t23524*(1.0/2.0))/t23535-ccab2*t23523*t23532*1.0/(t23535*t23535*t23535)*(t23536*t23536)*2.0+ccab2*(t23523*t23523)*t23532*t23524*t23539*(1.0/2.0)+ccab2*t23523*t23525*t23536*t23529*t23539*2.0-ccab1*gcab*1.0/(t23531*t23531*t23531)*t23523*t23524*t23529*(1.0/2.0))+rho_a*(t23552+t23472*t23475*(t23551-t23552))*(ccaa1*t23524*t23553*1.0/(t23555*t23555)*2.0-(ccaa2*t23524*t23553*2.0)/t23559+ccaa2*1.0/pow(rho_a,3.2E1/3.0)*(t23553*t23553)*t23563*t23556*2.0-ccaa1*gamma_aa*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t23553*1.0/(t23555*t23555*t23555)*2.0-ccaa2*t23524*(t23560*t23560)*t23553*t23556*1.0/(t23559*t23559*t23559)*2.0+ccaa2*gamma_aa*t23524*t23560*t23553*t23563*4.0));
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t23566 = 1.0/pow(rho_a,1.0/3.0);
                double t23567 = c*t23566;
                double t23568 = sqrt(t23567);
                double t23569 = pow(t23567,3.0/2.0);
                double t23570 = c*c;
                double t23571 = 1.0/pow(rho_a,2.0/3.0);
                double t23572 = 1.0/c0p;
                double t23573 = b1p*t23568;
                double t23574 = b3p*t23569;
                double t23575 = b4p*t23570*t23571;
                double t23576 = b2p*c*t23566;
                double t23577 = t23573+t23574+t23575+t23576;
                double t23578 = 1.0/t23577;
                double t23579 = t23572*t23578*(1.0/2.0);
                double t23580 = t23579+1.0;
                double t23581 = log(t23580);
                double t23582 = a1p*c*t23566;
                double t23583 = t23582+1.0;
                double t23584 = pow(2.0,1.0/3.0);
                double t23585 = t23584*2.0;
                double t23586 = t23585-2.0;
                double t23587 = two_13*2.0;
                double t23588 = t23587-2.0;
                double t23589 = 1.0/t23588;
                double t23590 = 1.0/c0f;
                double t23591 = 1.0/pow(rho_b,1.0/3.0);
                double t23592 = c*t23591;
                double t23593 = sqrt(t23592);
                double t23594 = pow(t23592,3.0/2.0);
                double t23595 = 1.0/pow(rho_b,2.0/3.0);
                double t23596 = b1p*t23593;
                double t23597 = b3p*t23594;
                double t23598 = b4p*t23570*t23595;
                double t23599 = b2p*c*t23591;
                double t23600 = t23596+t23597+t23598+t23599;
                double t23601 = 1.0/t23600;
                double t23602 = t23601*t23572*(1.0/2.0);
                double t23603 = t23602+1.0;
                double t23604 = log(t23603);
                double t23605 = a1p*c*t23591;
                double t23606 = t23605+1.0;
                double t23607 = c0p*t23604*t23606*2.0;
                double t23608 = rho_a+rho_b;
                double t23609 = 1.0/pow(t23608,1.0/3.0);
                double t23610 = c*t23609;
                double t23611 = sqrt(t23610);
                double t23612 = pow(t23610,3.0/2.0);
                double t23613 = 1.0/pow(t23608,2.0/3.0);
                double t23614 = b1p*t23611;
                double t23615 = b3p*t23612;
                double t23616 = b4p*t23613*t23570;
                double t23617 = b2p*c*t23609;
                double t23618 = t23614+t23615+t23616+t23617;
                double t23619 = 1.0/t23618;
                double t23620 = t23572*t23619*(1.0/2.0);
                double t23621 = t23620+1.0;
                double t23622 = log(t23621);
                double t23623 = a1p*c*t23609;
                double t23624 = t23623+1.0;
                double t23625 = c0p*t23622*t23624*2.0;
                double t23626 = rho_a-rho_b;
                double t23627 = t23626*t23626;
                double t23628 = 1.0/t23608;
                double t23629 = t23626*t23628;
                double t23630 = 1.0/(t23608*t23608*t23608*t23608);
                double t23631 = t23627*t23627;
                double t23632 = t23629+1.0;
                double t23633 = pow(t23632,4.0/3.0);
                double t23634 = -t23629+1.0;
                double t23635 = pow(t23634,4.0/3.0);
                double t23636 = t23633+t23635-2.0;
                double t23637 = 1.0/pow(rho_a,8.0/3.0);
                double t23638 = 1.0/pow(rho_b,8.0/3.0);
                double t23639 = gcab*gcab;
                double t23640 = gamma_aa*t23637*(1.0/2.0);
                double t23641 = gamma_bb*t23638*(1.0/2.0);
                double t23642 = t23640+t23641;
                double t23643 = t23642*t23642;
                double t23644 = t23643*t23639;
                double t23645 = gcab*t23642*2.0;
                double t23646 = t23644+t23645+1.0;
                double t23647 = 1.0/(t23646*t23646);
                double t23648 = gcab*t23637;
                double t23649 = t23642*t23637*t23639;
                double t23650 = t23648+t23649;
                double t23651 = gcab*t23638;
                double t23652 = t23642*t23638*t23639;
                double t23653 = t23651+t23652;
                double t23654 = gcab*t23642;
                double t23655 = t23654+1.0;
                v_gamma_aa_gamma_bb[Q] += scale * ((-rho_b*(t23607-t23586*t23589*(t23607-c0f*log((t23590*(1.0/2.0))/(b1f*t23593+b3f*t23594+b2f*c*t23591+b4f*t23570*t23595)+1.0)*(a1f*c*t23591+1.0)*2.0))+t23608*(t23625-t23630*t23631*t23636*t23589*(t23625-c0f*log((t23590*(1.0/2.0))/(b1f*t23611+b3f*t23612+b2f*c*t23609+b4f*t23613*t23570)+1.0)*(a1f*c*t23609+1.0)*2.0)+(Aa*t23636*t23589*log((1.0/2.0)/(Aa*(b1a*t23611+b3a*t23612+b2a*c*t23609+b4a*t23613*t23570))+1.0)*(t23630*t23631-1.0)*(a1a*c*t23609+1.0)*2.0)/d2fz0)+rho_a*(t23586*t23589*(c0p*t23581*t23583*2.0-c0f*log((t23590*(1.0/2.0))/(b1f*t23568+b3f*t23569+b2f*c*t23566+b4f*t23570*t23571)+1.0)*(a1f*c*t23566+1.0)*2.0)-c0p*t23581*t23583*2.0))*(ccab1*t23637*1.0/(t23655*t23655)*t23638*t23639*(1.0/2.0)-(ccab2*t23637*t23638*t23639*(1.0/2.0))/t23646+ccab2*t23650*t23642*t23638*t23647*t23639+ccab2*t23642*t23653*t23637*t23647*t23639-ccab2*t23650*t23643*t23653*1.0/(t23646*t23646*t23646)*t23639*2.0+ccab2*t23643*t23637*t23638*t23647*(t23639*t23639)*(1.0/2.0)-ccab1*gcab*t23642*t23637*1.0/(t23655*t23655*t23655)*t23638*t23639*(1.0/2.0)));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t23659 = 1.0/pow(rho_a,1.0/3.0);
                double t23660 = c*t23659;
                double t23661 = sqrt(t23660);
                double t23662 = pow(t23660,3.0/2.0);
                double t23663 = c*c;
                double t23664 = 1.0/pow(rho_a,2.0/3.0);
                double t23665 = 1.0/c0p;
                double t23666 = b1p*t23661;
                double t23667 = b3p*t23662;
                double t23668 = b4p*t23663*t23664;
                double t23669 = b2p*c*t23659;
                double t23670 = t23666+t23667+t23668+t23669;
                double t23671 = 1.0/t23670;
                double t23672 = t23671*t23665*(1.0/2.0);
                double t23673 = t23672+1.0;
                double t23674 = log(t23673);
                double t23675 = a1p*c*t23659;
                double t23676 = t23675+1.0;
                double t23677 = pow(2.0,1.0/3.0);
                double t23678 = t23677*2.0;
                double t23679 = t23678-2.0;
                double t23680 = two_13*2.0;
                double t23681 = t23680-2.0;
                double t23682 = 1.0/t23681;
                double t23683 = 1.0/c0f;
                double t23684 = 1.0/pow(rho_b,1.0/3.0);
                double t23685 = c*t23684;
                double t23686 = sqrt(t23685);
                double t23687 = pow(t23685,3.0/2.0);
                double t23688 = 1.0/pow(rho_b,2.0/3.0);
                double t23689 = b1p*t23686;
                double t23690 = b3p*t23687;
                double t23691 = b4p*t23663*t23688;
                double t23692 = b2p*c*t23684;
                double t23693 = t23690+t23691+t23692+t23689;
                double t23694 = 1.0/t23693;
                double t23695 = t23665*t23694*(1.0/2.0);
                double t23696 = t23695+1.0;
                double t23697 = log(t23696);
                double t23698 = a1p*c*t23684;
                double t23699 = t23698+1.0;
                double t23700 = c0p*t23697*t23699*2.0;
                double t23701 = rho_a+rho_b;
                double t23702 = 1.0/pow(t23701,1.0/3.0);
                double t23703 = c*t23702;
                double t23704 = sqrt(t23703);
                double t23705 = pow(t23703,3.0/2.0);
                double t23706 = 1.0/pow(t23701,2.0/3.0);
                double t23707 = b1p*t23704;
                double t23708 = b3p*t23705;
                double t23709 = b4p*t23706*t23663;
                double t23710 = b2p*c*t23702;
                double t23711 = t23710+t23707+t23708+t23709;
                double t23712 = 1.0/t23711;
                double t23713 = t23712*t23665*(1.0/2.0);
                double t23714 = t23713+1.0;
                double t23715 = log(t23714);
                double t23716 = a1p*c*t23702;
                double t23717 = t23716+1.0;
                double t23718 = c0p*t23715*t23717*2.0;
                double t23719 = rho_a-rho_b;
                double t23720 = t23719*t23719;
                double t23721 = 1.0/t23701;
                double t23722 = t23721*t23719;
                double t23723 = 1.0/(t23701*t23701*t23701*t23701);
                double t23724 = t23720*t23720;
                double t23725 = t23722+1.0;
                double t23726 = pow(t23725,4.0/3.0);
                double t23727 = -t23722+1.0;
                double t23728 = pow(t23727,4.0/3.0);
                double t23729 = t23726+t23728-2.0;
                double t23730 = gcab*gcab;
                double t23731 = 1.0/pow(rho_b,1.6E1/3.0);
                double t23732 = 1.0/pow(rho_a,8.0/3.0);
                double t23733 = gamma_aa*t23732*(1.0/2.0);
                double t23734 = 1.0/pow(rho_b,8.0/3.0);
                double t23735 = gamma_bb*t23734*(1.0/2.0);
                double t23736 = t23733+t23735;
                double t23737 = gcab*t23736;
                double t23738 = t23737+1.0;
                double t23739 = t23736*t23736;
                double t23740 = t23730*t23739;
                double t23741 = gcab*t23736*2.0;
                double t23742 = t23740+t23741+1.0;
                double t23744 = gcab*t23734;
                double t23745 = t23730*t23734*t23736;
                double t23743 = t23744+t23745;
                double t23746 = 1.0/(t23742*t23742);
                double t23747 = c0p*t23674*t23676*2.0;
                double t23748 = b1f*t23686;
                double t23749 = b3f*t23687;
                double t23750 = b4f*t23663*t23688;
                double t23751 = b2f*c*t23684;
                double t23752 = t23750+t23751+t23748+t23749;
                double t23753 = 1.0/t23752;
                double t23754 = t23753*t23683*(1.0/2.0);
                double t23755 = t23754+1.0;
                double t23756 = log(t23755);
                double t23757 = a1f*c*t23684;
                double t23758 = t23757+1.0;
                double t23759 = t23700-c0f*t23756*t23758*2.0;
                double t23760 = t23700-t23682*t23759*t23679;
                double t23761 = gcaa*gcaa;
                double t23762 = gamma_bb*gcaa*t23734;
                double t23763 = t23762+1.0;
                double t23764 = gamma_bb*gamma_bb;
                double t23765 = gamma_bb*gcaa*t23734*2.0;
                double t23766 = t23731*t23761*t23764;
                double t23767 = t23765+t23766+1.0;
                double t23769 = gcaa*t23734*2.0;
                double t23770 = gamma_bb*t23731*t23761*2.0;
                double t23768 = t23770+t23769;
                double t23771 = 1.0/(t23767*t23767);
                v_gamma_bb_gamma_bb[Q] += scale * ((rho_b*t23760+rho_a*(t23747-t23682*t23679*(t23747-c0f*log((t23683*(1.0/2.0))/(b1f*t23661+b3f*t23662+b2f*c*t23659+b4f*t23663*t23664)+1.0)*(a1f*c*t23659+1.0)*2.0))-t23701*(t23718-t23723*t23724*t23682*t23729*(t23718-c0f*log((t23683*(1.0/2.0))/(b1f*t23704+b3f*t23705+b2f*c*t23702+b4f*t23706*t23663)+1.0)*(a1f*c*t23702+1.0)*2.0)+(Aa*t23682*t23729*log((1.0/2.0)/(Aa*(b1a*t23704+b3a*t23705+b2a*c*t23702+b4a*t23706*t23663))+1.0)*(t23723*t23724-1.0)*(a1a*c*t23702+1.0)*2.0)/d2fz0))*((ccab2*t23730*t23731*(1.0/2.0))/t23742-ccab1*t23730*t23731*1.0/(t23738*t23738)*(1.0/2.0)+ccab2*t23730*1.0/(t23742*t23742*t23742)*(t23743*t23743)*t23739*2.0-ccab2*(t23730*t23730)*t23731*t23746*t23739*(1.0/2.0)-ccab2*t23730*t23734*t23743*t23736*t23746*2.0+ccab1*gcab*t23730*t23731*t23736*1.0/(t23738*t23738*t23738)*(1.0/2.0))+rho_b*t23760*(ccaa1*t23731*t23761*1.0/(t23763*t23763)*2.0-(ccaa2*t23731*t23761*2.0)/t23767+ccaa2*1.0/pow(rho_b,3.2E1/3.0)*(t23761*t23761)*t23771*t23764*2.0-ccaa1*gamma_bb*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*t23761*1.0/(t23763*t23763*t23763)*2.0-ccaa2*t23731*t23761*t23764*1.0/(t23767*t23767*t23767)*(t23768*t23768)*2.0+ccaa2*gamma_bb*t23731*t23761*t23771*t23768*4.0));
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t22716 = 1.0/pow(rho_a,1.0/3.0);
                double t22717 = c*t22716;
                double t22718 = sqrt(t22717);
                double t22719 = pow(t22717,3.0/2.0);
                double t22720 = c*c;
                double t22721 = 1.0/pow(rho_a,2.0/3.0);
                double t22722 = 1.0/c0p;
                double t22723 = b1p*t22718;
                double t22724 = b3p*t22719;
                double t22725 = b4p*t22720*t22721;
                double t22726 = b2p*c*t22716;
                double t22727 = t22723+t22724+t22725+t22726;
                double t22728 = 1.0/t22727;
                double t22729 = t22722*t22728*(1.0/2.0);
                double t22730 = t22729+1.0;
                double t22731 = log(t22730);
                double t22732 = a1p*c*t22716;
                double t22733 = t22732+1.0;
                double t22734 = pow(2.0,1.0/3.0);
                double t22735 = t22734*2.0;
                double t22736 = t22735-2.0;
                double t22737 = two_13*2.0;
                double t22738 = t22737-2.0;
                double t22739 = 1.0/t22738;
                double t22740 = 1.0/c0f;
                double t22741 = 1.0/pow(rho_b,1.0/3.0);
                double t22742 = c*t22741;
                double t22743 = sqrt(t22742);
                double t22744 = pow(t22742,3.0/2.0);
                double t22745 = 1.0/pow(rho_b,2.0/3.0);
                double t22746 = b1p*t22743;
                double t22747 = b3p*t22744;
                double t22748 = b4p*t22720*t22745;
                double t22749 = b2p*c*t22741;
                double t22750 = t22746+t22747+t22748+t22749;
                double t22751 = 1.0/t22750;
                double t22752 = t22722*t22751*(1.0/2.0);
                double t22753 = t22752+1.0;
                double t22754 = log(t22753);
                double t22755 = a1p*c*t22741;
                double t22756 = t22755+1.0;
                double t22757 = c0p*t22754*t22756*2.0;
                double t22758 = rho_a+rho_b;
                double t22759 = 1.0/pow(t22758,1.0/3.0);
                double t22760 = c*t22759;
                double t22761 = sqrt(t22760);
                double t22762 = pow(t22760,3.0/2.0);
                double t22763 = 1.0/pow(t22758,2.0/3.0);
                double t22764 = b1p*t22761;
                double t22765 = b3p*t22762;
                double t22766 = b4p*t22720*t22763;
                double t22767 = b2p*c*t22759;
                double t22768 = t22764+t22765+t22766+t22767;
                double t22769 = 1.0/t22768;
                double t22770 = t22722*t22769*(1.0/2.0);
                double t22771 = t22770+1.0;
                double t22772 = log(t22771);
                double t22773 = a1p*c*t22759;
                double t22774 = t22773+1.0;
                double t22775 = c0p*t22772*t22774*2.0;
                double t22776 = rho_a-rho_b;
                double t22777 = t22776*t22776;
                double t22778 = 1.0/t22758;
                double t22779 = t22776*t22778;
                double t22780 = 1.0/(t22758*t22758*t22758*t22758);
                double t22781 = t22777*t22777;
                double t22782 = t22779+1.0;
                double t22783 = pow(t22782,4.0/3.0);
                double t22784 = -t22779+1.0;
                double t22785 = pow(t22784,4.0/3.0);
                double t22786 = t22783+t22785-2.0;
                double t22787 = 1.0/pow(rho_a,1.1E1/3.0);
                double t22788 = 1.0/pow(rho_a,8.0/3.0);
                double t22789 = gamma_aa*t22788*(1.0/2.0);
                double t22790 = 1.0/pow(rho_b,8.0/3.0);
                double t22791 = gamma_bb*t22790*(1.0/2.0);
                double t22792 = t22791+t22789;
                double t22793 = gcab*t22792;
                double t22794 = t22793+1.0;
                double t22795 = gcab*gcab;
                double t22796 = t22792*t22792;
                double t22797 = t22795*t22796;
                double t22798 = gcab*t22792*2.0;
                double t22799 = t22797+t22798+1.0;
                double t22800 = 1.0/pow(rho_a,1.9E1/3.0);
                double t22801 = 1.0/(t22794*t22794);
                double t22802 = 1.0/t22799;
                double t22803 = 1.0/(t22799*t22799);
                double t22804 = gamma_aa*gcab*t22787*(8.0/3.0);
                double t22805 = gamma_aa*t22792*t22795*t22787*(8.0/3.0);
                double t22806 = t22804+t22805;
                double t22807 = gcab*t22788;
                double t22808 = t22792*t22795*t22788;
                double t22809 = t22807+t22808;
                double t22810 = b1f*t22718;
                double t22811 = b3f*t22719;
                double t22812 = b4f*t22720*t22721;
                double t22813 = b2f*c*t22716;
                double t22814 = t22810+t22811+t22812+t22813;
                double t22815 = 1.0/t22814;
                double t22816 = t22740*t22815*(1.0/2.0);
                double t22817 = t22816+1.0;
                double t22818 = log(t22817);
                double t22819 = a1f*c*t22716;
                double t22820 = t22819+1.0;
                double t22821 = c0f*t22820*t22818*2.0;
                double t22822 = c0p*t22731*t22733*2.0;
                double t22823 = gcaa*gcaa;
                double t22824 = 1.0/pow(rho_a,1.6E1/3.0);
                double t22825 = gamma_aa*gcaa*t22788;
                double t22826 = t22825+1.0;
                double t22827 = gamma_aa*gamma_aa;
                double t22828 = gamma_aa*gcaa*t22788*2.0;
                double t22829 = t22823*t22824*t22827;
                double t22830 = t22828+t22829+1.0;
                double t22831 = 1.0/t22794;
                double t22832 = 1.0/pow(t22758,4.0/3.0);
                double t22833 = b1f*t22761;
                double t22834 = b3f*t22762;
                double t22835 = b4f*t22720*t22763;
                double t22836 = b2f*c*t22759;
                double t22837 = t22833+t22834+t22835+t22836;
                double t22838 = 1.0/t22837;
                double t22839 = t22740*t22838*(1.0/2.0);
                double t22840 = t22839+1.0;
                double t22841 = log(t22840);
                double t22842 = a1f*c*t22759;
                double t22843 = t22842+1.0;
                double t22845 = c0f*t22841*t22843*2.0;
                double t22844 = -t22845+t22775;
                double t22846 = 1.0/(t22758*t22758);
                double t22874 = t22846*t22776;
                double t22847 = -t22874+t22778;
                double t22848 = t22845-t22775;
                double t22849 = 1.0/pow(t22758,5.0/3.0);
                double t22850 = 1.0/sqrt(t22760);
                double t22851 = 1.0/t22771;
                double t22852 = 1.0/(t22768*t22768);
                double t22853 = b4p*t22720*t22849*(2.0/3.0);
                double t22854 = b2p*c*t22832*(1.0/3.0);
                double t22855 = b1p*c*t22832*t22850*(1.0/6.0);
                double t22856 = b3p*c*t22832*t22761*(1.0/2.0);
                double t22857 = t22853+t22854+t22855+t22856;
                double t22858 = t22851*t22852*t22774*t22857;
                double t22859 = 1.0/d2fz0;
                double t22860 = 1.0/Aa;
                double t22861 = b1a*t22761;
                double t22862 = b3a*t22762;
                double t22863 = b4a*t22720*t22763;
                double t22864 = b2a*c*t22759;
                double t22865 = t22861+t22862+t22863+t22864;
                double t22866 = 1.0/t22865;
                double t22867 = t22860*t22866*(1.0/2.0);
                double t22868 = t22867+1.0;
                double t22869 = log(t22868);
                double t22870 = a1a*c*t22759;
                double t22871 = t22870+1.0;
                double t22872 = 1.0/(t22758*t22758*t22758*t22758*t22758);
                double t22873 = pow(t22782,1.0/3.0);
                double t22875 = t22873*t22847*(4.0/3.0);
                double t22876 = pow(t22784,1.0/3.0);
                double t22877 = t22875-t22847*t22876*(4.0/3.0);
                double t22878 = t22780*t22781;
                double t22879 = t22878-1.0;
                double t22880 = 1.0/pow(rho_a,4.0/3.0);
                double t22881 = 1.0/pow(rho_a,5.0/3.0);
                double t22882 = 1.0/sqrt(t22717);
                double t22883 = 1.0/t22730;
                double t22884 = 1.0/(t22727*t22727);
                double t22885 = b4p*t22720*t22881*(2.0/3.0);
                double t22886 = b2p*c*t22880*(1.0/3.0);
                double t22887 = b1p*c*t22880*t22882*(1.0/6.0);
                double t22888 = b3p*c*t22718*t22880*(1.0/2.0);
                double t22889 = t22885+t22886+t22887+t22888;
                double t22890 = t22733*t22883*t22884*t22889;
                double t22891 = t22821-t22822;
                double t22892 = t22736*t22891*t22739;
                double t22893 = Aa*t22871*t22739*t22786*t22859*t22869*t22879*2.0;
                double t22894 = t22822+t22892;
                double t22895 = 1.0/t22826;
                double t22896 = 1.0/t22830;
                double t22897 = 1.0/(t22826*t22826);
                double t22898 = 1.0/(t22830*t22830);
                double t22899 = gcaa*t22788*2.0;
                double t22900 = gamma_aa*t22823*t22824*2.0;
                double t22901 = t22900+t22899;
                double t22902 = gamma_aa*gcaa*t22787*(1.6E1/3.0);
                double t22903 = t22800*t22823*t22827*(1.6E1/3.0);
                double t22904 = t22902+t22903;
                double t22905 = 1.0/t22817;
                double t22906 = 1.0/(t22814*t22814);
                double t22907 = b4f*t22720*t22881*(2.0/3.0);
                double t22908 = b2f*c*t22880*(1.0/3.0);
                double t22909 = b1f*c*t22880*t22882*(1.0/6.0);
                double t22910 = b3f*c*t22718*t22880*(1.0/2.0);
                double t22911 = t22910+t22907+t22908+t22909;
                double t22912 = a1f*c*c0f*t22880*t22818*(2.0/3.0);
                double t22913 = a1p*c*c0p*t22731*t22880*(2.0/3.0);
                double t22914 = ccaa1*gcaa*t22895*t22788;
                double t22915 = ccaa2*gamma_aa*t22823*t22824*t22896*2.0;
                double t22916 = t22914+t22915-ccaa1*gamma_aa*t22823*t22824*t22897-ccaa2*t22901*t22823*t22824*t22827*t22898;
                v_rho_a_gamma_aa[Q] += scale * (-t22916*t22894-(ccab1*gcab*t22831*t22788*(1.0/2.0)-ccab1*t22801*t22792*t22795*t22788*(1.0/2.0)-ccab2*t22803*t22809*t22795*t22796+ccab2*t22802*t22792*t22795*t22788)*(-t22822+t22775-t22892+t22893+rho_a*(t22913-t22890+t22736*t22739*(t22912+t22890-t22820*t22911*t22905*t22906-a1p*c*c0p*t22731*t22880*(2.0/3.0)))-t22758*(-t22858+t22780*t22781*t22739*t22786*(t22858-(t22843*1.0/(t22837*t22837)*(b2f*c*t22832*(1.0/3.0)+b4f*t22720*t22849*(2.0/3.0)+b1f*c*t22832*t22850*(1.0/6.0)+b3f*c*t22832*t22761*(1.0/2.0)))/t22840+a1f*c*c0f*t22832*t22841*(2.0/3.0)-a1p*c*c0p*t22832*t22772*(2.0/3.0))+a1p*c*c0p*t22832*t22772*(2.0/3.0)-t22780*t22781*t22739*t22848*t22877+t22781*t22872*t22739*t22848*t22786*4.0+t22780*t22844*t22739*t22776*t22777*t22786*4.0+Aa*t22871*t22739*t22786*t22859*t22869*(t22781*t22872*4.0-t22780*t22776*t22777*4.0)*2.0-Aa*t22871*t22739*t22859*t22877*t22869*t22879*2.0-(t22871*t22739*1.0/(t22865*t22865)*t22786*t22859*t22879*(b2a*c*t22832*(1.0/3.0)+b4a*t22720*t22849*(2.0/3.0)+b1a*c*t22832*t22850*(1.0/6.0)+b3a*c*t22832*t22761*(1.0/2.0)))/t22868+Aa*a1a*c*t22832*t22739*t22786*t22859*t22869*t22879*(2.0/3.0))+t22780*t22781*t22739*t22848*t22786)-(rho_a*(t22822+t22736*t22739*(t22821-c0p*t22731*t22733*2.0))+rho_b*(t22757-t22736*t22739*(t22757-c0f*log((t22740*(1.0/2.0))/(b1f*t22743+b3f*t22744+b2f*c*t22741+b4f*t22720*t22745)+1.0)*(a1f*c*t22741+1.0)*2.0))-t22758*(t22775+t22893-t22780*t22781*t22844*t22739*t22786))*(ccab1*gcab*t22831*t22787*(4.0/3.0)-ccab2*t22803*t22795*t22796*(gcab*t22787*(8.0/3.0)+gamma_aa*t22800*t22795*(4.0/3.0)+t22792*t22795*t22787*(8.0/3.0))-ccab1*gamma_aa*t22800*t22801*t22795*(4.0/3.0)+ccab2*gamma_aa*t22800*t22802*t22795*(4.0/3.0)-ccab1*t22801*t22792*t22795*t22787*(4.0/3.0)+ccab2*t22802*t22792*t22795*t22787*(8.0/3.0)-ccab2*t22803*t22806*t22792*t22795*t22788+ccab2*t22806*t22809*t22795*t22796*1.0/(t22799*t22799*t22799)*2.0-ccab2*gamma_aa*t22803*t22809*t22792*t22795*t22787*(8.0/3.0)+ccab1*gamma_aa*gcab*t22800*t22792*1.0/(t22794*t22794*t22794)*t22795*(4.0/3.0))+rho_a*t22894*(ccaa1*gcaa*t22787*t22895*(8.0/3.0)-ccaa1*gamma_aa*t22800*t22823*t22897*8.0+ccaa2*gamma_aa*t22800*t22823*t22896*(3.2E1/3.0)-ccaa2*t22800*t22901*t22823*t22827*t22898*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a)*t22823*1.0/(t22826*t22826*t22826)*t22827*(1.6E1/3.0)-ccaa2*t22823*t22824*t22827*t22898*(gcaa*t22787*(1.6E1/3.0)+gamma_aa*t22800*t22823*(3.2E1/3.0))-ccaa2*gamma_aa*t22823*t22904*t22824*t22898*2.0+ccaa2*t22901*1.0/(t22830*t22830*t22830)*t22823*t22904*t22824*t22827*2.0)+rho_a*t22916*(t22913-t22890+t22736*t22739*(t22912-t22913+t22890-t22820*t22911*t22905*t22906)));
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t22919 = 1.0/pow(rho_a,1.0/3.0);
                double t22920 = c*t22919;
                double t22921 = sqrt(t22920);
                double t22922 = pow(t22920,3.0/2.0);
                double t22923 = c*c;
                double t22924 = 1.0/pow(rho_a,2.0/3.0);
                double t22925 = 1.0/c0p;
                double t22926 = b1p*t22921;
                double t22927 = b3p*t22922;
                double t22928 = b4p*t22923*t22924;
                double t22929 = b2p*c*t22919;
                double t22930 = t22926+t22927+t22928+t22929;
                double t22931 = 1.0/t22930;
                double t22932 = t22931*t22925*(1.0/2.0);
                double t22933 = t22932+1.0;
                double t22934 = log(t22933);
                double t22935 = a1p*c*t22919;
                double t22936 = t22935+1.0;
                double t22937 = pow(2.0,1.0/3.0);
                double t22938 = t22937*2.0;
                double t22939 = t22938-2.0;
                double t22940 = two_13*2.0;
                double t22941 = t22940-2.0;
                double t22942 = 1.0/t22941;
                double t22943 = 1.0/c0f;
                double t22944 = 1.0/pow(rho_b,1.0/3.0);
                double t22945 = c*t22944;
                double t22946 = sqrt(t22945);
                double t22947 = pow(t22945,3.0/2.0);
                double t22948 = 1.0/pow(rho_b,2.0/3.0);
                double t22949 = b1p*t22946;
                double t22950 = b3p*t22947;
                double t22951 = b4p*t22923*t22948;
                double t22952 = b2p*c*t22944;
                double t22953 = t22950+t22951+t22952+t22949;
                double t22954 = 1.0/t22953;
                double t22955 = t22925*t22954*(1.0/2.0);
                double t22956 = t22955+1.0;
                double t22957 = log(t22956);
                double t22958 = a1p*c*t22944;
                double t22959 = t22958+1.0;
                double t22960 = c0p*t22957*t22959*2.0;
                double t22961 = rho_a+rho_b;
                double t22962 = 1.0/pow(t22961,1.0/3.0);
                double t22963 = c*t22962;
                double t22964 = sqrt(t22963);
                double t22965 = pow(t22963,3.0/2.0);
                double t22966 = 1.0/pow(t22961,2.0/3.0);
                double t22967 = b1p*t22964;
                double t22968 = b3p*t22965;
                double t22969 = b4p*t22923*t22966;
                double t22970 = b2p*c*t22962;
                double t22971 = t22970+t22967+t22968+t22969;
                double t22972 = 1.0/t22971;
                double t22973 = t22925*t22972*(1.0/2.0);
                double t22974 = t22973+1.0;
                double t22975 = log(t22974);
                double t22976 = a1p*c*t22962;
                double t22977 = t22976+1.0;
                double t22978 = c0p*t22975*t22977*2.0;
                double t22979 = rho_a-rho_b;
                double t22980 = t22979*t22979;
                double t22981 = 1.0/t22961;
                double t22982 = t22981*t22979;
                double t22983 = 1.0/(t22961*t22961*t22961*t22961);
                double t22984 = t22980*t22980;
                double t22985 = t22982+1.0;
                double t22986 = pow(t22985,4.0/3.0);
                double t22987 = -t22982+1.0;
                double t22988 = pow(t22987,4.0/3.0);
                double t22989 = t22986+t22988-2.0;
                double t22990 = gcab*gcab;
                double t22991 = 1.0/pow(rho_a,1.1E1/3.0);
                double t22992 = 1.0/pow(rho_b,8.0/3.0);
                double t22993 = 1.0/pow(rho_a,8.0/3.0);
                double t22994 = gamma_aa*t22993*(1.0/2.0);
                double t22995 = gamma_bb*t22992*(1.0/2.0);
                double t22996 = t22994+t22995;
                double t22997 = gamma_aa*gcab*t22991*(8.0/3.0);
                double t22998 = gamma_aa*t22990*t22991*t22996*(8.0/3.0);
                double t22999 = t22997+t22998;
                double t23000 = t22996*t22996;
                double t23001 = t22990*t23000;
                double t23002 = gcab*t22996*2.0;
                double t23003 = t23001+t23002+1.0;
                double t23004 = gcab*t22992;
                double t23005 = t22990*t22992*t22996;
                double t23006 = t23004+t23005;
                double t23007 = 1.0/(t23003*t23003);
                double t23008 = gcab*t22996;
                double t23009 = t23008+1.0;
                double t23010 = c0p*t22934*t22936*2.0;
                double t23011 = 1.0/(t23009*t23009);
                double t23012 = 1.0/t23003;
                double t23013 = 1.0/pow(t22961,4.0/3.0);
                double t23014 = b1f*t22964;
                double t23015 = b3f*t22965;
                double t23016 = b4f*t22923*t22966;
                double t23017 = b2f*c*t22962;
                double t23018 = t23014+t23015+t23016+t23017;
                double t23019 = 1.0/t23018;
                double t23020 = t22943*t23019*(1.0/2.0);
                double t23021 = t23020+1.0;
                double t23022 = log(t23021);
                double t23023 = a1f*c*t22962;
                double t23024 = t23023+1.0;
                double t23026 = c0f*t23022*t23024*2.0;
                double t23025 = t22978-t23026;
                double t23027 = 1.0/(t22961*t22961);
                double t23054 = t22979*t23027;
                double t23028 = t22981-t23054;
                double t23029 = 1.0/pow(t22961,5.0/3.0);
                double t23030 = 1.0/sqrt(t22963);
                double t23031 = 1.0/t22974;
                double t23032 = 1.0/(t22971*t22971);
                double t23033 = b4p*t22923*t23029*(2.0/3.0);
                double t23034 = b2p*c*t23013*(1.0/3.0);
                double t23035 = b1p*c*t23030*t23013*(1.0/6.0);
                double t23036 = b3p*c*t22964*t23013*(1.0/2.0);
                double t23037 = t23033+t23034+t23035+t23036;
                double t23038 = t22977*t23031*t23032*t23037;
                double t23039 = 1.0/d2fz0;
                double t23040 = 1.0/Aa;
                double t23041 = b1a*t22964;
                double t23042 = b3a*t22965;
                double t23043 = b4a*t22923*t22966;
                double t23044 = b2a*c*t22962;
                double t23045 = t23041+t23042+t23043+t23044;
                double t23046 = 1.0/t23045;
                double t23047 = t23040*t23046*(1.0/2.0);
                double t23048 = t23047+1.0;
                double t23049 = log(t23048);
                double t23050 = a1a*c*t22962;
                double t23051 = t23050+1.0;
                double t23052 = 1.0/(t22961*t22961*t22961*t22961*t22961);
                double t23053 = pow(t22985,1.0/3.0);
                double t23055 = t23053*t23028*(4.0/3.0);
                double t23056 = pow(t22987,1.0/3.0);
                double t23057 = t23055-t23028*t23056*(4.0/3.0);
                double t23058 = t22983*t22984;
                double t23059 = t23058-1.0;
                double t23060 = a1f*c*t22919;
                double t23061 = t23060+1.0;
                double t23062 = b1f*t22921;
                double t23063 = b3f*t22922;
                double t23064 = b4f*t22923*t22924;
                double t23065 = b2f*c*t22919;
                double t23066 = t23062+t23063+t23064+t23065;
                double t23067 = 1.0/t23066;
                double t23068 = t22943*t23067*(1.0/2.0);
                double t23069 = t23068+1.0;
                double t23070 = 1.0/pow(rho_a,4.0/3.0);
                double t23071 = 1.0/pow(rho_a,5.0/3.0);
                double t23072 = 1.0/sqrt(t22920);
                double t23073 = log(t23069);
                double t23074 = 1.0/t22933;
                double t23075 = 1.0/(t22930*t22930);
                double t23076 = b4p*t22923*t23071*(2.0/3.0);
                double t23077 = b2p*c*t23070*(1.0/3.0);
                double t23078 = b1p*c*t23070*t23072*(1.0/6.0);
                double t23079 = b3p*c*t22921*t23070*(1.0/2.0);
                double t23080 = t23076+t23077+t23078+t23079;
                double t23081 = t22936*t23080*t23074*t23075;
                double t23082 = Aa*t22942*t22989*t23051*t23039*t23049*t23059*2.0;
                double t23083 = t23010-c0f*t23061*t23073*2.0;
                v_rho_a_gamma_bb[Q] += scale * ((rho_a*(t23010-t22942*t22939*t23083)+rho_b*(t22960-t22942*t22939*(t22960-c0f*log((t22943*(1.0/2.0))/(b1f*t22946+b3f*t22947+b2f*c*t22944+b4f*t22923*t22948)+1.0)*(a1f*c*t22944+1.0)*2.0))-t22961*(t22978+t23082-t22942*t22983*t22984*t22989*t23025))*(ccab2*t22990*t22992*t22996*t22999*t23007-ccab2*t22990*t22999*t23000*1.0/(t23003*t23003*t23003)*t23006*2.0+ccab1*gamma_aa*t22990*t22991*t22992*t23011*(4.0/3.0)-ccab2*gamma_aa*t22990*t22991*t22992*t23012*(4.0/3.0)+ccab2*gamma_aa*t22990*t22991*t22996*t23006*t23007*(8.0/3.0)+ccab2*gamma_aa*(t22990*t22990)*t22991*t22992*t23000*t23007*(4.0/3.0)-ccab1*gamma_aa*gcab*t22990*t22991*t22992*t22996*1.0/(t23009*t23009*t23009)*(4.0/3.0))-((ccab1*gcab*t22992*(1.0/2.0))/t23009-ccab1*t22990*t22992*t22996*t23011*(1.0/2.0)+ccab2*t22990*t22992*t22996*t23012-ccab2*t22990*t23000*t23006*t23007)*(t22978-t23010+t23082+rho_a*(-t23081+t22942*t22939*(t23081-(t23061*1.0/(t23066*t23066)*(b2f*c*t23070*(1.0/3.0)+b4f*t22923*t23071*(2.0/3.0)+b1f*c*t23070*t23072*(1.0/6.0)+b3f*c*t22921*t23070*(1.0/2.0)))/t23069+a1f*c*c0f*t23070*t23073*(2.0/3.0)-a1p*c*c0p*t22934*t23070*(2.0/3.0))+a1p*c*c0p*t22934*t23070*(2.0/3.0))-t22961*(-t23038+t22942*t22983*t22984*t22989*(t23038-(t23024*1.0/(t23018*t23018)*(b2f*c*t23013*(1.0/3.0)+b4f*t22923*t23029*(2.0/3.0)+b1f*c*t23030*t23013*(1.0/6.0)+b3f*c*t22964*t23013*(1.0/2.0)))/t23021+a1f*c*c0f*t23013*t23022*(2.0/3.0)-a1p*c*c0p*t22975*t23013*(2.0/3.0))+a1p*c*c0p*t22975*t23013*(2.0/3.0)+t22942*t22983*t22984*t23025*t23057-t22942*t22984*t22989*t23025*t23052*4.0+t22942*t22980*t22983*t22979*t22989*t23025*4.0+Aa*t22942*t22989*t23051*t23039*t23049*(t22984*t23052*4.0-t22980*t22983*t22979*4.0)*2.0-Aa*t22942*t23051*t23039*t23057*t23049*t23059*2.0-(t22942*t22989*t23051*1.0/(t23045*t23045)*t23039*t23059*(b2a*c*t23013*(1.0/3.0)+b4a*t22923*t23029*(2.0/3.0)+b1a*c*t23030*t23013*(1.0/6.0)+b3a*c*t22964*t23013*(1.0/2.0)))/t23048+Aa*a1a*c*t22942*t22989*t23013*t23039*t23049*t23059*(2.0/3.0))+t22942*t22939*t23083-t22942*t22983*t22984*t22989*t23025));
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t23085 = 1.0/pow(rho_a,1.0/3.0);
                double t23086 = c*t23085;
                double t23087 = sqrt(t23086);
                double t23088 = pow(t23086,3.0/2.0);
                double t23089 = c*c;
                double t23090 = 1.0/pow(rho_a,2.0/3.0);
                double t23091 = 1.0/c0p;
                double t23092 = b1p*t23087;
                double t23093 = b3p*t23088;
                double t23094 = b4p*t23090*t23089;
                double t23095 = b2p*c*t23085;
                double t23096 = t23092+t23093+t23094+t23095;
                double t23097 = 1.0/t23096;
                double t23098 = t23091*t23097*(1.0/2.0);
                double t23099 = t23098+1.0;
                double t23100 = log(t23099);
                double t23101 = a1p*c*t23085;
                double t23102 = t23101+1.0;
                double t23103 = pow(2.0,1.0/3.0);
                double t23104 = t23103*2.0;
                double t23105 = t23104-2.0;
                double t23106 = two_13*2.0;
                double t23107 = t23106-2.0;
                double t23108 = 1.0/t23107;
                double t23109 = 1.0/c0f;
                double t23110 = 1.0/pow(rho_b,1.0/3.0);
                double t23111 = c*t23110;
                double t23112 = sqrt(t23111);
                double t23113 = pow(t23111,3.0/2.0);
                double t23114 = 1.0/pow(rho_b,2.0/3.0);
                double t23115 = b1p*t23112;
                double t23116 = b3p*t23113;
                double t23117 = b4p*t23114*t23089;
                double t23118 = b2p*c*t23110;
                double t23119 = t23115+t23116+t23117+t23118;
                double t23120 = 1.0/t23119;
                double t23121 = t23120*t23091*(1.0/2.0);
                double t23122 = t23121+1.0;
                double t23123 = log(t23122);
                double t23124 = a1p*c*t23110;
                double t23125 = t23124+1.0;
                double t23126 = c0p*t23123*t23125*2.0;
                double t23127 = rho_a+rho_b;
                double t23128 = 1.0/pow(t23127,1.0/3.0);
                double t23129 = c*t23128;
                double t23130 = sqrt(t23129);
                double t23131 = pow(t23129,3.0/2.0);
                double t23132 = 1.0/pow(t23127,2.0/3.0);
                double t23133 = b1p*t23130;
                double t23134 = b3p*t23131;
                double t23135 = b4p*t23132*t23089;
                double t23136 = b2p*c*t23128;
                double t23137 = t23133+t23134+t23135+t23136;
                double t23138 = 1.0/t23137;
                double t23139 = t23091*t23138*(1.0/2.0);
                double t23140 = t23139+1.0;
                double t23141 = log(t23140);
                double t23142 = a1p*c*t23128;
                double t23143 = t23142+1.0;
                double t23144 = c0p*t23141*t23143*2.0;
                double t23145 = rho_a-rho_b;
                double t23146 = t23145*t23145;
                double t23147 = 1.0/t23127;
                double t23148 = t23145*t23147;
                double t23149 = 1.0/(t23127*t23127*t23127*t23127);
                double t23150 = t23146*t23146;
                double t23151 = t23148+1.0;
                double t23152 = pow(t23151,4.0/3.0);
                double t23153 = -t23148+1.0;
                double t23154 = pow(t23153,4.0/3.0);
                double t23155 = t23152+t23154-2.0;
                double t23156 = gcab*gcab;
                double t23157 = 1.0/pow(rho_b,1.1E1/3.0);
                double t23158 = 1.0/pow(rho_a,8.0/3.0);
                double t23159 = gamma_aa*t23158*(1.0/2.0);
                double t23160 = 1.0/pow(rho_b,8.0/3.0);
                double t23161 = gamma_bb*t23160*(1.0/2.0);
                double t23162 = t23161+t23159;
                double t23163 = gamma_bb*gcab*t23157*(8.0/3.0);
                double t23164 = gamma_bb*t23162*t23156*t23157*(8.0/3.0);
                double t23165 = t23163+t23164;
                double t23166 = t23162*t23162;
                double t23167 = t23156*t23166;
                double t23168 = gcab*t23162*2.0;
                double t23169 = t23167+t23168+1.0;
                double t23170 = gcab*t23158;
                double t23171 = t23162*t23156*t23158;
                double t23172 = t23170+t23171;
                double t23173 = 1.0/(t23169*t23169);
                double t23174 = gcab*t23162;
                double t23175 = t23174+1.0;
                double t23176 = c0p*t23100*t23102*2.0;
                double t23177 = 1.0/(t23175*t23175);
                double t23178 = 1.0/t23169;
                double t23179 = 1.0/pow(t23127,4.0/3.0);
                double t23180 = b1f*t23130;
                double t23181 = b3f*t23131;
                double t23182 = b4f*t23132*t23089;
                double t23183 = b2f*c*t23128;
                double t23184 = t23180+t23181+t23182+t23183;
                double t23185 = 1.0/t23184;
                double t23186 = t23109*t23185*(1.0/2.0);
                double t23187 = t23186+1.0;
                double t23188 = log(t23187);
                double t23189 = a1f*c*t23128;
                double t23190 = t23189+1.0;
                double t23192 = c0f*t23190*t23188*2.0;
                double t23191 = t23144-t23192;
                double t23193 = 1.0/(t23127*t23127);
                double t23194 = t23145*t23193;
                double t23195 = t23147+t23194;
                double t23196 = 1.0/pow(t23127,5.0/3.0);
                double t23197 = 1.0/sqrt(t23129);
                double t23198 = 1.0/t23140;
                double t23199 = 1.0/(t23137*t23137);
                double t23200 = b4p*t23196*t23089*(2.0/3.0);
                double t23201 = b2p*c*t23179*(1.0/3.0);
                double t23202 = b1p*c*t23179*t23197*(1.0/6.0);
                double t23203 = b3p*c*t23130*t23179*(1.0/2.0);
                double t23204 = t23200+t23201+t23202+t23203;
                double t23205 = 1.0/d2fz0;
                double t23206 = 1.0/Aa;
                double t23207 = b1a*t23130;
                double t23208 = b3a*t23131;
                double t23209 = b4a*t23132*t23089;
                double t23210 = b2a*c*t23128;
                double t23211 = t23210+t23207+t23208+t23209;
                double t23212 = 1.0/t23211;
                double t23213 = t23212*t23206*(1.0/2.0);
                double t23214 = t23213+1.0;
                double t23215 = log(t23214);
                double t23216 = a1a*c*t23128;
                double t23217 = t23216+1.0;
                double t23218 = 1.0/(t23127*t23127*t23127*t23127*t23127);
                double t23219 = pow(t23151,1.0/3.0);
                double t23220 = t23219*t23195*(4.0/3.0);
                double t23221 = pow(t23153,1.0/3.0);
                double t23222 = t23220-t23221*t23195*(4.0/3.0);
                double t23223 = t23150*t23149;
                double t23224 = t23223-1.0;
                double t23225 = t23204*t23143*t23198*t23199;
                double t23226 = a1f*c*t23110;
                double t23227 = t23226+1.0;
                double t23228 = b1f*t23112;
                double t23229 = b3f*t23113;
                double t23230 = b4f*t23114*t23089;
                double t23231 = b2f*c*t23110;
                double t23232 = t23230+t23231+t23228+t23229;
                double t23233 = 1.0/t23232;
                double t23234 = t23233*t23109*(1.0/2.0);
                double t23235 = t23234+1.0;
                double t23236 = 1.0/pow(rho_b,4.0/3.0);
                double t23237 = 1.0/pow(rho_b,5.0/3.0);
                double t23238 = 1.0/sqrt(t23111);
                double t23239 = log(t23235);
                double t23240 = 1.0/t23122;
                double t23241 = 1.0/(t23119*t23119);
                double t23242 = b4p*t23237*t23089*(2.0/3.0);
                double t23243 = b2p*c*t23236*(1.0/3.0);
                double t23244 = b1p*c*t23236*t23238*(1.0/6.0);
                double t23245 = b3p*c*t23112*t23236*(1.0/2.0);
                double t23246 = t23242+t23243+t23244+t23245;
                double t23247 = t23240*t23241*t23125*t23246;
                double t23248 = t23126-c0f*t23227*t23239*2.0;
                double t23249 = Aa*t23205*t23215*t23224*t23108*t23217*t23155*2.0;
                v_rho_b_gamma_aa[Q] += scale * (-((ccab1*gcab*t23158*(1.0/2.0))/t23175-ccab2*t23172*t23173*t23156*t23166-ccab1*t23162*t23156*t23158*t23177*(1.0/2.0)+ccab2*t23162*t23156*t23158*t23178)*(-t23126+t23144+t23249+t23127*(t23225-t23150*t23108*t23155*t23149*(t23225-(t23190*1.0/(t23184*t23184)*(b2f*c*t23179*(1.0/3.0)+b4f*t23196*t23089*(2.0/3.0)+b1f*c*t23179*t23197*(1.0/6.0)+b3f*c*t23130*t23179*(1.0/2.0)))/t23187+a1f*c*c0f*t23179*t23188*(2.0/3.0)-a1p*c*c0p*t23141*t23179*(2.0/3.0))-a1p*c*c0p*t23141*t23179*(2.0/3.0)+t23150*t23222*t23108*t23191*t23149+t23150*t23108*t23155*t23191*t23218*4.0+t23108*t23145*t23146*t23155*t23191*t23149*4.0-Aa*t23205*t23215*t23108*t23217*t23155*(t23150*t23218*4.0+t23145*t23146*t23149*4.0)*2.0-Aa*t23222*t23205*t23215*t23224*t23108*t23217*2.0+(1.0/(t23211*t23211)*t23205*t23224*t23108*t23217*t23155*(b2a*c*t23179*(1.0/3.0)+b4a*t23196*t23089*(2.0/3.0)+b1a*c*t23179*t23197*(1.0/6.0)+b3a*c*t23130*t23179*(1.0/2.0)))/t23214-Aa*a1a*c*t23205*t23215*t23224*t23108*t23155*t23179*(2.0/3.0))+rho_b*(-t23247+t23105*t23108*(t23247-(1.0/(t23232*t23232)*t23227*(b2f*c*t23236*(1.0/3.0)+b4f*t23237*t23089*(2.0/3.0)+b1f*c*t23236*t23238*(1.0/6.0)+b3f*c*t23112*t23236*(1.0/2.0)))/t23235+a1f*c*c0f*t23236*t23239*(2.0/3.0)-a1p*c*c0p*t23123*t23236*(2.0/3.0))+a1p*c*c0p*t23123*t23236*(2.0/3.0))+t23105*t23108*t23248-t23150*t23108*t23155*t23191*t23149)+(rho_b*(t23126-t23105*t23108*t23248)+rho_a*(t23176-t23105*t23108*(t23176-c0f*log((t23109*(1.0/2.0))/(b1f*t23087+b3f*t23088+b2f*c*t23085+b4f*t23090*t23089)+1.0)*(a1f*c*t23085+1.0)*2.0))-t23127*(t23144+t23249-t23150*t23108*t23155*t23191*t23149))*(ccab2*t23162*t23173*t23156*t23165*t23158-ccab2*t23172*t23156*t23165*t23166*1.0/(t23169*t23169*t23169)*2.0+ccab1*gamma_bb*t23156*t23157*t23158*t23177*(4.0/3.0)-ccab2*gamma_bb*t23156*t23157*t23158*t23178*(4.0/3.0)+ccab2*gamma_bb*t23162*t23172*t23173*t23156*t23157*(8.0/3.0)+ccab2*gamma_bb*t23173*(t23156*t23156)*t23157*t23166*t23158*(4.0/3.0)-ccab1*gamma_bb*gcab*t23162*t23156*t23157*1.0/(t23175*t23175*t23175)*t23158*(4.0/3.0)));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t23252 = 1.0/pow(rho_a,1.0/3.0);
                double t23253 = c*t23252;
                double t23254 = sqrt(t23253);
                double t23255 = pow(t23253,3.0/2.0);
                double t23256 = c*c;
                double t23257 = 1.0/pow(rho_a,2.0/3.0);
                double t23258 = 1.0/c0p;
                double t23259 = b1p*t23254;
                double t23260 = b3p*t23255;
                double t23261 = b4p*t23256*t23257;
                double t23262 = b2p*c*t23252;
                double t23263 = t23260+t23261+t23262+t23259;
                double t23264 = 1.0/t23263;
                double t23265 = t23264*t23258*(1.0/2.0);
                double t23266 = t23265+1.0;
                double t23267 = log(t23266);
                double t23268 = a1p*c*t23252;
                double t23269 = t23268+1.0;
                double t23270 = pow(2.0,1.0/3.0);
                double t23271 = t23270*2.0;
                double t23272 = t23271-2.0;
                double t23273 = two_13*2.0;
                double t23274 = t23273-2.0;
                double t23275 = 1.0/t23274;
                double t23276 = 1.0/c0f;
                double t23277 = 1.0/pow(rho_b,1.0/3.0);
                double t23278 = c*t23277;
                double t23279 = sqrt(t23278);
                double t23280 = pow(t23278,3.0/2.0);
                double t23281 = 1.0/pow(rho_b,2.0/3.0);
                double t23282 = b1p*t23279;
                double t23283 = b3p*t23280;
                double t23284 = b4p*t23281*t23256;
                double t23285 = b2p*c*t23277;
                double t23286 = t23282+t23283+t23284+t23285;
                double t23287 = 1.0/t23286;
                double t23288 = t23258*t23287*(1.0/2.0);
                double t23289 = t23288+1.0;
                double t23290 = log(t23289);
                double t23291 = a1p*c*t23277;
                double t23292 = t23291+1.0;
                double t23293 = c0p*t23290*t23292*2.0;
                double t23294 = rho_a+rho_b;
                double t23295 = 1.0/pow(t23294,1.0/3.0);
                double t23296 = c*t23295;
                double t23297 = sqrt(t23296);
                double t23298 = pow(t23296,3.0/2.0);
                double t23299 = 1.0/pow(t23294,2.0/3.0);
                double t23300 = b1p*t23297;
                double t23301 = b3p*t23298;
                double t23302 = b4p*t23256*t23299;
                double t23303 = b2p*c*t23295;
                double t23304 = t23300+t23301+t23302+t23303;
                double t23305 = 1.0/t23304;
                double t23306 = t23305*t23258*(1.0/2.0);
                double t23307 = t23306+1.0;
                double t23308 = log(t23307);
                double t23309 = a1p*c*t23295;
                double t23310 = t23309+1.0;
                double t23311 = c0p*t23310*t23308*2.0;
                double t23312 = rho_a-rho_b;
                double t23313 = t23312*t23312;
                double t23314 = 1.0/t23294;
                double t23315 = t23312*t23314;
                double t23316 = 1.0/(t23294*t23294*t23294*t23294);
                double t23317 = t23313*t23313;
                double t23318 = t23315+1.0;
                double t23319 = pow(t23318,4.0/3.0);
                double t23320 = -t23315+1.0;
                double t23321 = pow(t23320,4.0/3.0);
                double t23322 = t23321+t23319-2.0;
                double t23323 = 1.0/pow(rho_b,1.1E1/3.0);
                double t23324 = 1.0/pow(rho_a,8.0/3.0);
                double t23325 = gamma_aa*t23324*(1.0/2.0);
                double t23326 = 1.0/pow(rho_b,8.0/3.0);
                double t23327 = gamma_bb*t23326*(1.0/2.0);
                double t23328 = t23325+t23327;
                double t23329 = gcab*t23328;
                double t23330 = t23329+1.0;
                double t23331 = gcab*gcab;
                double t23332 = t23328*t23328;
                double t23333 = t23331*t23332;
                double t23334 = gcab*t23328*2.0;
                double t23335 = t23333+t23334+1.0;
                double t23336 = 1.0/pow(rho_b,1.9E1/3.0);
                double t23337 = 1.0/(t23330*t23330);
                double t23338 = 1.0/t23335;
                double t23339 = 1.0/(t23335*t23335);
                double t23340 = gamma_bb*gcab*t23323*(8.0/3.0);
                double t23341 = gamma_bb*t23331*t23323*t23328*(8.0/3.0);
                double t23342 = t23340+t23341;
                double t23343 = gcab*t23326;
                double t23344 = t23331*t23326*t23328;
                double t23345 = t23343+t23344;
                double t23346 = b1f*t23279;
                double t23347 = b3f*t23280;
                double t23348 = b4f*t23281*t23256;
                double t23349 = b2f*c*t23277;
                double t23350 = t23346+t23347+t23348+t23349;
                double t23351 = 1.0/t23350;
                double t23352 = t23351*t23276*(1.0/2.0);
                double t23353 = t23352+1.0;
                double t23354 = log(t23353);
                double t23355 = a1f*c*t23277;
                double t23356 = t23355+1.0;
                double t23426 = c0f*t23354*t23356*2.0;
                double t23357 = -t23426+t23293;
                double t23358 = t23293-t23272*t23275*t23357;
                double t23359 = gcaa*gcaa;
                double t23360 = 1.0/pow(rho_b,1.6E1/3.0);
                double t23361 = gamma_bb*gcaa*t23326;
                double t23362 = t23361+1.0;
                double t23363 = gamma_bb*gamma_bb;
                double t23364 = gamma_bb*gcaa*t23326*2.0;
                double t23365 = t23360*t23363*t23359;
                double t23366 = t23364+t23365+1.0;
                double t23367 = 1.0/t23330;
                double t23368 = 1.0/pow(t23294,4.0/3.0);
                double t23369 = b1f*t23297;
                double t23370 = b3f*t23298;
                double t23371 = b4f*t23256*t23299;
                double t23372 = b2f*c*t23295;
                double t23373 = t23370+t23371+t23372+t23369;
                double t23374 = 1.0/t23373;
                double t23375 = t23374*t23276*(1.0/2.0);
                double t23376 = t23375+1.0;
                double t23377 = log(t23376);
                double t23378 = a1f*c*t23295;
                double t23379 = t23378+1.0;
                double t23381 = c0f*t23377*t23379*2.0;
                double t23380 = t23311-t23381;
                double t23382 = 1.0/(t23294*t23294);
                double t23383 = t23312*t23382;
                double t23384 = t23314+t23383;
                double t23385 = 1.0/pow(t23294,5.0/3.0);
                double t23386 = 1.0/sqrt(t23296);
                double t23387 = 1.0/t23307;
                double t23388 = 1.0/(t23304*t23304);
                double t23389 = b4p*t23256*t23385*(2.0/3.0);
                double t23390 = b2p*c*t23368*(1.0/3.0);
                double t23391 = b1p*c*t23368*t23386*(1.0/6.0);
                double t23392 = b3p*c*t23368*t23297*(1.0/2.0);
                double t23393 = t23390+t23391+t23392+t23389;
                double t23394 = 1.0/d2fz0;
                double t23395 = 1.0/Aa;
                double t23396 = b1a*t23297;
                double t23397 = b3a*t23298;
                double t23398 = b4a*t23256*t23299;
                double t23399 = b2a*c*t23295;
                double t23400 = t23396+t23397+t23398+t23399;
                double t23401 = 1.0/t23400;
                double t23402 = t23401*t23395*(1.0/2.0);
                double t23403 = t23402+1.0;
                double t23404 = log(t23403);
                double t23405 = a1a*c*t23295;
                double t23406 = t23405+1.0;
                double t23407 = 1.0/(t23294*t23294*t23294*t23294*t23294);
                double t23408 = pow(t23318,1.0/3.0);
                double t23409 = t23408*t23384*(4.0/3.0);
                double t23410 = pow(t23320,1.0/3.0);
                double t23411 = t23409-t23410*t23384*(4.0/3.0);
                double t23412 = t23316*t23317;
                double t23413 = t23412-1.0;
                double t23414 = t23310*t23393*t23387*t23388;
                double t23415 = 1.0/pow(rho_b,4.0/3.0);
                double t23416 = 1.0/pow(rho_b,5.0/3.0);
                double t23417 = 1.0/sqrt(t23278);
                double t23418 = 1.0/t23289;
                double t23419 = 1.0/(t23286*t23286);
                double t23420 = b4p*t23416*t23256*(2.0/3.0);
                double t23421 = b2p*c*t23415*(1.0/3.0);
                double t23422 = b1p*c*t23415*t23417*(1.0/6.0);
                double t23423 = b3p*c*t23415*t23279*(1.0/2.0);
                double t23424 = t23420+t23421+t23422+t23423;
                double t23425 = t23424*t23292*t23418*t23419;
                double t23427 = Aa*t23322*t23404*t23413*t23406*t23275*t23394*2.0;
                double t23428 = t23426-t23293;
                double t23429 = 1.0/t23362;
                double t23430 = 1.0/t23366;
                double t23431 = 1.0/(t23362*t23362);
                double t23432 = 1.0/(t23366*t23366);
                double t23433 = gcaa*t23326*2.0;
                double t23434 = gamma_bb*t23360*t23359*2.0;
                double t23435 = t23433+t23434;
                double t23436 = gamma_bb*gcaa*t23323*(1.6E1/3.0);
                double t23437 = t23336*t23363*t23359*(1.6E1/3.0);
                double t23438 = t23436+t23437;
                double t23439 = 1.0/t23353;
                double t23440 = 1.0/(t23350*t23350);
                double t23441 = b4f*t23416*t23256*(2.0/3.0);
                double t23442 = b2f*c*t23415*(1.0/3.0);
                double t23443 = b1f*c*t23415*t23417*(1.0/6.0);
                double t23444 = b3f*c*t23415*t23279*(1.0/2.0);
                double t23445 = t23441+t23442+t23443+t23444;
                double t23446 = a1f*c*c0f*t23415*t23354*(2.0/3.0);
                double t23447 = a1p*c*c0p*t23415*t23290*(2.0/3.0);
                double t23448 = ccaa1*gcaa*t23326*t23429;
                double t23449 = ccaa2*gamma_bb*t23430*t23360*t23359*2.0;
                double t23450 = t23448+t23449-ccaa1*gamma_bb*t23431*t23360*t23359-ccaa2*t23360*t23432*t23363*t23435*t23359;
                v_rho_b_gamma_bb[Q] += scale * (-(ccab1*gcab*t23326*t23367*(1.0/2.0)-ccab2*t23331*t23332*t23345*t23339-ccab1*t23331*t23326*t23328*t23337*(1.0/2.0)+ccab2*t23331*t23326*t23328*t23338)*(t23311+t23427-t23293+t23294*(t23414-t23322*t23316*t23317*t23275*(t23414-(1.0/(t23373*t23373)*t23379*(b2f*c*t23368*(1.0/3.0)+b4f*t23256*t23385*(2.0/3.0)+b1f*c*t23368*t23386*(1.0/6.0)+b3f*c*t23368*t23297*(1.0/2.0)))/t23376+a1f*c*c0f*t23368*t23377*(2.0/3.0)-a1p*c*c0p*t23308*t23368*(2.0/3.0))-a1p*c*c0p*t23308*t23368*(2.0/3.0)+t23411*t23316*t23317*t23380*t23275+t23322*t23317*t23380*t23407*t23275*4.0+t23312*t23313*t23322*t23316*t23380*t23275*4.0-Aa*t23322*t23404*t23406*t23275*t23394*(t23317*t23407*4.0+t23312*t23313*t23316*4.0)*2.0-Aa*t23411*t23404*t23413*t23406*t23275*t23394*2.0+(1.0/(t23400*t23400)*t23322*t23413*t23406*t23275*t23394*(b2a*c*t23368*(1.0/3.0)+b4a*t23256*t23385*(2.0/3.0)+b1a*c*t23368*t23386*(1.0/6.0)+b3a*c*t23368*t23297*(1.0/2.0)))/t23403-Aa*a1a*c*t23322*t23404*t23413*t23275*t23394*t23368*(2.0/3.0))+rho_b*(-t23425+t23447+t23272*t23275*(t23425+t23446-t23440*t23445*t23356*t23439-a1p*c*c0p*t23415*t23290*(2.0/3.0)))-t23272*t23275*t23428-t23322*t23316*t23317*t23380*t23275)+(-rho_b*t23358+t23294*(t23311+t23427-t23322*t23316*t23317*t23380*t23275)+rho_a*(t23272*t23275*(c0p*t23267*t23269*2.0-c0f*log((t23276*(1.0/2.0))/(b1f*t23254+b3f*t23255+b2f*c*t23252+b4f*t23256*t23257)+1.0)*(a1f*c*t23252+1.0)*2.0)-c0p*t23267*t23269*2.0))*(ccab1*gcab*t23323*t23367*(4.0/3.0)-ccab2*t23331*t23332*t23339*(gcab*t23323*(8.0/3.0)+gamma_bb*t23331*t23336*(4.0/3.0)+t23331*t23323*t23328*(8.0/3.0))-ccab1*gamma_bb*t23331*t23336*t23337*(4.0/3.0)+ccab2*gamma_bb*t23331*t23336*t23338*(4.0/3.0)-ccab1*t23331*t23323*t23328*t23337*(4.0/3.0)+ccab2*t23331*t23323*t23328*t23338*(8.0/3.0)-ccab2*t23331*t23342*t23326*t23328*t23339+ccab2*t23331*t23332*t23342*1.0/(t23335*t23335*t23335)*t23345*2.0-ccab2*gamma_bb*t23331*t23323*t23345*t23328*t23339*(8.0/3.0)+ccab1*gamma_bb*gcab*1.0/(t23330*t23330*t23330)*t23331*t23336*t23328*(4.0/3.0))-t23450*t23358+rho_b*(t23293+t23272*t23275*t23428)*(ccaa1*gcaa*t23323*t23429*(8.0/3.0)-ccaa1*gamma_bb*t23431*t23336*t23359*8.0+ccaa2*gamma_bb*t23430*t23336*t23359*(3.2E1/3.0)-ccaa2*t23432*t23336*t23363*t23435*t23359*(1.6E1/3.0)+ccaa1*gcaa*1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b)*1.0/(t23362*t23362*t23362)*t23363*t23359*(1.6E1/3.0)-ccaa2*t23360*t23432*t23363*t23359*(gcaa*t23323*(1.6E1/3.0)+gamma_bb*t23336*t23359*(3.2E1/3.0))-ccaa2*gamma_bb*t23360*t23432*t23438*t23359*2.0+ccaa2*t23360*t23363*t23435*1.0/(t23366*t23366*t23366)*t23438*t23359*2.0)+rho_b*t23450*(-t23425+t23447+t23272*t23275*(t23425+t23446-t23447-t23440*t23445*t23356*t23439)));
            }
            
        }
    }
}

}
