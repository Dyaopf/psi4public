  /* These machine-generated functions compute a quartet of |hh) integrals */

#include "libint.h"

REALTYPE *_hrr3_build_hh_0(const REALTYPE *, REALTYPE *, REALTYPE *, REALTYPE *);
REALTYPE *_hrr3_build_hh_1(const REALTYPE *, REALTYPE *, REALTYPE *, REALTYPE *);

void hrr3_build_hh(const REALTYPE *CD, REALTYPE *vp, REALTYPE *I0, REALTYPE *I1, int ab_num)
{
  int ab;

  for(ab=0;ab<ab_num;ab++) {
    vp = _hrr3_build_hh_0(CD, vp, I0, I1);
    vp = _hrr3_build_hh_1(CD, vp, I0, I1);
    I0 += 420;
    I1 += 315;
  }
}

REALTYPE *_hrr3_build_hh_0(const REALTYPE *CD, REALTYPE *vp, REALTYPE *I0, REALTYPE *I1)
{
  const REALTYPE CD0 = CD[0];
  const REALTYPE CD1 = CD[1];
  const REALTYPE CD2 = CD[2];

    *(vp++) = I0[0] + CD0*I1[0];
    *(vp++) = I0[1] + CD0*I1[1];
    *(vp++) = I0[2] + CD0*I1[2];
    *(vp++) = I0[3] + CD0*I1[3];
    *(vp++) = I0[4] + CD0*I1[4];
    *(vp++) = I0[5] + CD0*I1[5];
    *(vp++) = I0[6] + CD0*I1[6];
    *(vp++) = I0[7] + CD0*I1[7];
    *(vp++) = I0[8] + CD0*I1[8];
    *(vp++) = I0[9] + CD0*I1[9];
    *(vp++) = I0[10] + CD0*I1[10];
    *(vp++) = I0[11] + CD0*I1[11];
    *(vp++) = I0[12] + CD0*I1[12];
    *(vp++) = I0[13] + CD0*I1[13];
    *(vp++) = I0[14] + CD0*I1[14];
    *(vp++) = I0[25] + CD1*I1[10];
    *(vp++) = I0[26] + CD1*I1[11];
    *(vp++) = I0[27] + CD1*I1[12];
    *(vp++) = I0[28] + CD1*I1[13];
    *(vp++) = I0[29] + CD1*I1[14];
    *(vp++) = I0[44] + CD2*I1[14];
    *(vp++) = I0[15] + CD0*I1[15];
    *(vp++) = I0[16] + CD0*I1[16];
    *(vp++) = I0[17] + CD0*I1[17];
    *(vp++) = I0[18] + CD0*I1[18];
    *(vp++) = I0[19] + CD0*I1[19];
    *(vp++) = I0[20] + CD0*I1[20];
    *(vp++) = I0[21] + CD0*I1[21];
    *(vp++) = I0[22] + CD0*I1[22];
    *(vp++) = I0[23] + CD0*I1[23];
    *(vp++) = I0[24] + CD0*I1[24];
    *(vp++) = I0[25] + CD0*I1[25];
    *(vp++) = I0[26] + CD0*I1[26];
    *(vp++) = I0[27] + CD0*I1[27];
    *(vp++) = I0[28] + CD0*I1[28];
    *(vp++) = I0[29] + CD0*I1[29];
    *(vp++) = I0[55] + CD1*I1[25];
    *(vp++) = I0[56] + CD1*I1[26];
    *(vp++) = I0[57] + CD1*I1[27];
    *(vp++) = I0[58] + CD1*I1[28];
    *(vp++) = I0[59] + CD1*I1[29];
    *(vp++) = I0[74] + CD2*I1[29];
    *(vp++) = I0[30] + CD0*I1[30];
    *(vp++) = I0[31] + CD0*I1[31];
    *(vp++) = I0[32] + CD0*I1[32];
    *(vp++) = I0[33] + CD0*I1[33];
    *(vp++) = I0[34] + CD0*I1[34];
    *(vp++) = I0[35] + CD0*I1[35];
    *(vp++) = I0[36] + CD0*I1[36];
    *(vp++) = I0[37] + CD0*I1[37];
    *(vp++) = I0[38] + CD0*I1[38];
    *(vp++) = I0[39] + CD0*I1[39];
    *(vp++) = I0[40] + CD0*I1[40];
    *(vp++) = I0[41] + CD0*I1[41];
    *(vp++) = I0[42] + CD0*I1[42];
    *(vp++) = I0[43] + CD0*I1[43];
    *(vp++) = I0[44] + CD0*I1[44];
    *(vp++) = I0[70] + CD1*I1[40];
    *(vp++) = I0[71] + CD1*I1[41];
    *(vp++) = I0[72] + CD1*I1[42];
    *(vp++) = I0[73] + CD1*I1[43];
    *(vp++) = I0[74] + CD1*I1[44];
    *(vp++) = I0[89] + CD2*I1[44];
    *(vp++) = I0[45] + CD0*I1[45];
    *(vp++) = I0[46] + CD0*I1[46];
    *(vp++) = I0[47] + CD0*I1[47];
    *(vp++) = I0[48] + CD0*I1[48];
    *(vp++) = I0[49] + CD0*I1[49];
    *(vp++) = I0[50] + CD0*I1[50];
    *(vp++) = I0[51] + CD0*I1[51];
    *(vp++) = I0[52] + CD0*I1[52];
    *(vp++) = I0[53] + CD0*I1[53];
    *(vp++) = I0[54] + CD0*I1[54];
    *(vp++) = I0[55] + CD0*I1[55];
    *(vp++) = I0[56] + CD0*I1[56];
    *(vp++) = I0[57] + CD0*I1[57];
    *(vp++) = I0[58] + CD0*I1[58];
    *(vp++) = I0[59] + CD0*I1[59];
    *(vp++) = I0[100] + CD1*I1[55];
    *(vp++) = I0[101] + CD1*I1[56];
    *(vp++) = I0[102] + CD1*I1[57];
    *(vp++) = I0[103] + CD1*I1[58];
    *(vp++) = I0[104] + CD1*I1[59];
    *(vp++) = I0[119] + CD2*I1[59];
    *(vp++) = I0[60] + CD0*I1[60];
    *(vp++) = I0[61] + CD0*I1[61];
    *(vp++) = I0[62] + CD0*I1[62];
    *(vp++) = I0[63] + CD0*I1[63];
    *(vp++) = I0[64] + CD0*I1[64];
    *(vp++) = I0[65] + CD0*I1[65];
    *(vp++) = I0[66] + CD0*I1[66];
    *(vp++) = I0[67] + CD0*I1[67];
    *(vp++) = I0[68] + CD0*I1[68];
    *(vp++) = I0[69] + CD0*I1[69];
    *(vp++) = I0[70] + CD0*I1[70];
    *(vp++) = I0[71] + CD0*I1[71];
    *(vp++) = I0[72] + CD0*I1[72];
    *(vp++) = I0[73] + CD0*I1[73];
    *(vp++) = I0[74] + CD0*I1[74];
    *(vp++) = I0[115] + CD1*I1[70];
    *(vp++) = I0[116] + CD1*I1[71];
    *(vp++) = I0[117] + CD1*I1[72];
    *(vp++) = I0[118] + CD1*I1[73];
    *(vp++) = I0[119] + CD1*I1[74];
    *(vp++) = I0[134] + CD2*I1[74];
    *(vp++) = I0[75] + CD0*I1[75];
    *(vp++) = I0[76] + CD0*I1[76];
    *(vp++) = I0[77] + CD0*I1[77];
    *(vp++) = I0[78] + CD0*I1[78];
    *(vp++) = I0[79] + CD0*I1[79];
    *(vp++) = I0[80] + CD0*I1[80];
    *(vp++) = I0[81] + CD0*I1[81];
    *(vp++) = I0[82] + CD0*I1[82];
    *(vp++) = I0[83] + CD0*I1[83];
    *(vp++) = I0[84] + CD0*I1[84];
    *(vp++) = I0[85] + CD0*I1[85];
    *(vp++) = I0[86] + CD0*I1[86];
    *(vp++) = I0[87] + CD0*I1[87];
    *(vp++) = I0[88] + CD0*I1[88];
    *(vp++) = I0[89] + CD0*I1[89];
    *(vp++) = I0[130] + CD1*I1[85];
    *(vp++) = I0[131] + CD1*I1[86];
    *(vp++) = I0[132] + CD1*I1[87];
    *(vp++) = I0[133] + CD1*I1[88];
    *(vp++) = I0[134] + CD1*I1[89];
    *(vp++) = I0[149] + CD2*I1[89];
    *(vp++) = I0[90] + CD0*I1[90];
    *(vp++) = I0[91] + CD0*I1[91];
    *(vp++) = I0[92] + CD0*I1[92];
    *(vp++) = I0[93] + CD0*I1[93];
    *(vp++) = I0[94] + CD0*I1[94];
    *(vp++) = I0[95] + CD0*I1[95];
    *(vp++) = I0[96] + CD0*I1[96];
    *(vp++) = I0[97] + CD0*I1[97];
    *(vp++) = I0[98] + CD0*I1[98];
    *(vp++) = I0[99] + CD0*I1[99];
    *(vp++) = I0[100] + CD0*I1[100];
    *(vp++) = I0[101] + CD0*I1[101];
    *(vp++) = I0[102] + CD0*I1[102];
    *(vp++) = I0[103] + CD0*I1[103];
    *(vp++) = I0[104] + CD0*I1[104];
    *(vp++) = I0[160] + CD1*I1[100];
    *(vp++) = I0[161] + CD1*I1[101];
    *(vp++) = I0[162] + CD1*I1[102];
    *(vp++) = I0[163] + CD1*I1[103];
    *(vp++) = I0[164] + CD1*I1[104];
    *(vp++) = I0[179] + CD2*I1[104];
    *(vp++) = I0[105] + CD0*I1[105];
    *(vp++) = I0[106] + CD0*I1[106];
    *(vp++) = I0[107] + CD0*I1[107];
    *(vp++) = I0[108] + CD0*I1[108];
    *(vp++) = I0[109] + CD0*I1[109];
    *(vp++) = I0[110] + CD0*I1[110];
    *(vp++) = I0[111] + CD0*I1[111];
    *(vp++) = I0[112] + CD0*I1[112];
    *(vp++) = I0[113] + CD0*I1[113];
    *(vp++) = I0[114] + CD0*I1[114];
    *(vp++) = I0[115] + CD0*I1[115];
    *(vp++) = I0[116] + CD0*I1[116];
    *(vp++) = I0[117] + CD0*I1[117];
    *(vp++) = I0[118] + CD0*I1[118];
    *(vp++) = I0[119] + CD0*I1[119];
    *(vp++) = I0[175] + CD1*I1[115];
    *(vp++) = I0[176] + CD1*I1[116];
    *(vp++) = I0[177] + CD1*I1[117];
    *(vp++) = I0[178] + CD1*I1[118];
    *(vp++) = I0[179] + CD1*I1[119];
    *(vp++) = I0[194] + CD2*I1[119];
    *(vp++) = I0[120] + CD0*I1[120];
    *(vp++) = I0[121] + CD0*I1[121];
    *(vp++) = I0[122] + CD0*I1[122];
    *(vp++) = I0[123] + CD0*I1[123];
    *(vp++) = I0[124] + CD0*I1[124];
    *(vp++) = I0[125] + CD0*I1[125];
    *(vp++) = I0[126] + CD0*I1[126];
    *(vp++) = I0[127] + CD0*I1[127];
    *(vp++) = I0[128] + CD0*I1[128];
    *(vp++) = I0[129] + CD0*I1[129];
    *(vp++) = I0[130] + CD0*I1[130];
    *(vp++) = I0[131] + CD0*I1[131];
    *(vp++) = I0[132] + CD0*I1[132];
    *(vp++) = I0[133] + CD0*I1[133];
    *(vp++) = I0[134] + CD0*I1[134];
    *(vp++) = I0[190] + CD1*I1[130];
    *(vp++) = I0[191] + CD1*I1[131];
    *(vp++) = I0[192] + CD1*I1[132];
    *(vp++) = I0[193] + CD1*I1[133];
    *(vp++) = I0[194] + CD1*I1[134];
    *(vp++) = I0[209] + CD2*I1[134];
    *(vp++) = I0[135] + CD0*I1[135];
    *(vp++) = I0[136] + CD0*I1[136];
    *(vp++) = I0[137] + CD0*I1[137];
    *(vp++) = I0[138] + CD0*I1[138];
    *(vp++) = I0[139] + CD0*I1[139];
    *(vp++) = I0[140] + CD0*I1[140];
    *(vp++) = I0[141] + CD0*I1[141];
    *(vp++) = I0[142] + CD0*I1[142];
    *(vp++) = I0[143] + CD0*I1[143];
    *(vp++) = I0[144] + CD0*I1[144];
    *(vp++) = I0[145] + CD0*I1[145];
    *(vp++) = I0[146] + CD0*I1[146];
    *(vp++) = I0[147] + CD0*I1[147];
    *(vp++) = I0[148] + CD0*I1[148];
    *(vp++) = I0[149] + CD0*I1[149];
    *(vp++) = I0[205] + CD1*I1[145];
    *(vp++) = I0[206] + CD1*I1[146];
    *(vp++) = I0[207] + CD1*I1[147];
    *(vp++) = I0[208] + CD1*I1[148];
    *(vp++) = I0[209] + CD1*I1[149];
    *(vp++) = I0[224] + CD2*I1[149];
    *(vp++) = I0[150] + CD0*I1[150];
    *(vp++) = I0[151] + CD0*I1[151];
    *(vp++) = I0[152] + CD0*I1[152];
    *(vp++) = I0[153] + CD0*I1[153];
    *(vp++) = I0[154] + CD0*I1[154];
    *(vp++) = I0[155] + CD0*I1[155];
    *(vp++) = I0[156] + CD0*I1[156];
    *(vp++) = I0[157] + CD0*I1[157];
    *(vp++) = I0[158] + CD0*I1[158];
    *(vp++) = I0[159] + CD0*I1[159];
    *(vp++) = I0[160] + CD0*I1[160];
  return vp;
}

REALTYPE *_hrr3_build_hh_1(const REALTYPE *CD, REALTYPE *vp, REALTYPE *I0, REALTYPE *I1)
{
  const REALTYPE CD0 = CD[0];
  const REALTYPE CD1 = CD[1];
  const REALTYPE CD2 = CD[2];

    *(vp++) = I0[161] + CD0*I1[161];
    *(vp++) = I0[162] + CD0*I1[162];
    *(vp++) = I0[163] + CD0*I1[163];
    *(vp++) = I0[164] + CD0*I1[164];
    *(vp++) = I0[235] + CD1*I1[160];
    *(vp++) = I0[236] + CD1*I1[161];
    *(vp++) = I0[237] + CD1*I1[162];
    *(vp++) = I0[238] + CD1*I1[163];
    *(vp++) = I0[239] + CD1*I1[164];
    *(vp++) = I0[254] + CD2*I1[164];
    *(vp++) = I0[165] + CD0*I1[165];
    *(vp++) = I0[166] + CD0*I1[166];
    *(vp++) = I0[167] + CD0*I1[167];
    *(vp++) = I0[168] + CD0*I1[168];
    *(vp++) = I0[169] + CD0*I1[169];
    *(vp++) = I0[170] + CD0*I1[170];
    *(vp++) = I0[171] + CD0*I1[171];
    *(vp++) = I0[172] + CD0*I1[172];
    *(vp++) = I0[173] + CD0*I1[173];
    *(vp++) = I0[174] + CD0*I1[174];
    *(vp++) = I0[175] + CD0*I1[175];
    *(vp++) = I0[176] + CD0*I1[176];
    *(vp++) = I0[177] + CD0*I1[177];
    *(vp++) = I0[178] + CD0*I1[178];
    *(vp++) = I0[179] + CD0*I1[179];
    *(vp++) = I0[250] + CD1*I1[175];
    *(vp++) = I0[251] + CD1*I1[176];
    *(vp++) = I0[252] + CD1*I1[177];
    *(vp++) = I0[253] + CD1*I1[178];
    *(vp++) = I0[254] + CD1*I1[179];
    *(vp++) = I0[269] + CD2*I1[179];
    *(vp++) = I0[180] + CD0*I1[180];
    *(vp++) = I0[181] + CD0*I1[181];
    *(vp++) = I0[182] + CD0*I1[182];
    *(vp++) = I0[183] + CD0*I1[183];
    *(vp++) = I0[184] + CD0*I1[184];
    *(vp++) = I0[185] + CD0*I1[185];
    *(vp++) = I0[186] + CD0*I1[186];
    *(vp++) = I0[187] + CD0*I1[187];
    *(vp++) = I0[188] + CD0*I1[188];
    *(vp++) = I0[189] + CD0*I1[189];
    *(vp++) = I0[190] + CD0*I1[190];
    *(vp++) = I0[191] + CD0*I1[191];
    *(vp++) = I0[192] + CD0*I1[192];
    *(vp++) = I0[193] + CD0*I1[193];
    *(vp++) = I0[194] + CD0*I1[194];
    *(vp++) = I0[265] + CD1*I1[190];
    *(vp++) = I0[266] + CD1*I1[191];
    *(vp++) = I0[267] + CD1*I1[192];
    *(vp++) = I0[268] + CD1*I1[193];
    *(vp++) = I0[269] + CD1*I1[194];
    *(vp++) = I0[284] + CD2*I1[194];
    *(vp++) = I0[195] + CD0*I1[195];
    *(vp++) = I0[196] + CD0*I1[196];
    *(vp++) = I0[197] + CD0*I1[197];
    *(vp++) = I0[198] + CD0*I1[198];
    *(vp++) = I0[199] + CD0*I1[199];
    *(vp++) = I0[200] + CD0*I1[200];
    *(vp++) = I0[201] + CD0*I1[201];
    *(vp++) = I0[202] + CD0*I1[202];
    *(vp++) = I0[203] + CD0*I1[203];
    *(vp++) = I0[204] + CD0*I1[204];
    *(vp++) = I0[205] + CD0*I1[205];
    *(vp++) = I0[206] + CD0*I1[206];
    *(vp++) = I0[207] + CD0*I1[207];
    *(vp++) = I0[208] + CD0*I1[208];
    *(vp++) = I0[209] + CD0*I1[209];
    *(vp++) = I0[280] + CD1*I1[205];
    *(vp++) = I0[281] + CD1*I1[206];
    *(vp++) = I0[282] + CD1*I1[207];
    *(vp++) = I0[283] + CD1*I1[208];
    *(vp++) = I0[284] + CD1*I1[209];
    *(vp++) = I0[299] + CD2*I1[209];
    *(vp++) = I0[210] + CD0*I1[210];
    *(vp++) = I0[211] + CD0*I1[211];
    *(vp++) = I0[212] + CD0*I1[212];
    *(vp++) = I0[213] + CD0*I1[213];
    *(vp++) = I0[214] + CD0*I1[214];
    *(vp++) = I0[215] + CD0*I1[215];
    *(vp++) = I0[216] + CD0*I1[216];
    *(vp++) = I0[217] + CD0*I1[217];
    *(vp++) = I0[218] + CD0*I1[218];
    *(vp++) = I0[219] + CD0*I1[219];
    *(vp++) = I0[220] + CD0*I1[220];
    *(vp++) = I0[221] + CD0*I1[221];
    *(vp++) = I0[222] + CD0*I1[222];
    *(vp++) = I0[223] + CD0*I1[223];
    *(vp++) = I0[224] + CD0*I1[224];
    *(vp++) = I0[295] + CD1*I1[220];
    *(vp++) = I0[296] + CD1*I1[221];
    *(vp++) = I0[297] + CD1*I1[222];
    *(vp++) = I0[298] + CD1*I1[223];
    *(vp++) = I0[299] + CD1*I1[224];
    *(vp++) = I0[314] + CD2*I1[224];
    *(vp++) = I0[225] + CD0*I1[225];
    *(vp++) = I0[226] + CD0*I1[226];
    *(vp++) = I0[227] + CD0*I1[227];
    *(vp++) = I0[228] + CD0*I1[228];
    *(vp++) = I0[229] + CD0*I1[229];
    *(vp++) = I0[230] + CD0*I1[230];
    *(vp++) = I0[231] + CD0*I1[231];
    *(vp++) = I0[232] + CD0*I1[232];
    *(vp++) = I0[233] + CD0*I1[233];
    *(vp++) = I0[234] + CD0*I1[234];
    *(vp++) = I0[235] + CD0*I1[235];
    *(vp++) = I0[236] + CD0*I1[236];
    *(vp++) = I0[237] + CD0*I1[237];
    *(vp++) = I0[238] + CD0*I1[238];
    *(vp++) = I0[239] + CD0*I1[239];
    *(vp++) = I0[325] + CD1*I1[235];
    *(vp++) = I0[326] + CD1*I1[236];
    *(vp++) = I0[327] + CD1*I1[237];
    *(vp++) = I0[328] + CD1*I1[238];
    *(vp++) = I0[329] + CD1*I1[239];
    *(vp++) = I0[344] + CD2*I1[239];
    *(vp++) = I0[240] + CD0*I1[240];
    *(vp++) = I0[241] + CD0*I1[241];
    *(vp++) = I0[242] + CD0*I1[242];
    *(vp++) = I0[243] + CD0*I1[243];
    *(vp++) = I0[244] + CD0*I1[244];
    *(vp++) = I0[245] + CD0*I1[245];
    *(vp++) = I0[246] + CD0*I1[246];
    *(vp++) = I0[247] + CD0*I1[247];
    *(vp++) = I0[248] + CD0*I1[248];
    *(vp++) = I0[249] + CD0*I1[249];
    *(vp++) = I0[250] + CD0*I1[250];
    *(vp++) = I0[251] + CD0*I1[251];
    *(vp++) = I0[252] + CD0*I1[252];
    *(vp++) = I0[253] + CD0*I1[253];
    *(vp++) = I0[254] + CD0*I1[254];
    *(vp++) = I0[340] + CD1*I1[250];
    *(vp++) = I0[341] + CD1*I1[251];
    *(vp++) = I0[342] + CD1*I1[252];
    *(vp++) = I0[343] + CD1*I1[253];
    *(vp++) = I0[344] + CD1*I1[254];
    *(vp++) = I0[359] + CD2*I1[254];
    *(vp++) = I0[255] + CD0*I1[255];
    *(vp++) = I0[256] + CD0*I1[256];
    *(vp++) = I0[257] + CD0*I1[257];
    *(vp++) = I0[258] + CD0*I1[258];
    *(vp++) = I0[259] + CD0*I1[259];
    *(vp++) = I0[260] + CD0*I1[260];
    *(vp++) = I0[261] + CD0*I1[261];
    *(vp++) = I0[262] + CD0*I1[262];
    *(vp++) = I0[263] + CD0*I1[263];
    *(vp++) = I0[264] + CD0*I1[264];
    *(vp++) = I0[265] + CD0*I1[265];
    *(vp++) = I0[266] + CD0*I1[266];
    *(vp++) = I0[267] + CD0*I1[267];
    *(vp++) = I0[268] + CD0*I1[268];
    *(vp++) = I0[269] + CD0*I1[269];
    *(vp++) = I0[355] + CD1*I1[265];
    *(vp++) = I0[356] + CD1*I1[266];
    *(vp++) = I0[357] + CD1*I1[267];
    *(vp++) = I0[358] + CD1*I1[268];
    *(vp++) = I0[359] + CD1*I1[269];
    *(vp++) = I0[374] + CD2*I1[269];
    *(vp++) = I0[270] + CD0*I1[270];
    *(vp++) = I0[271] + CD0*I1[271];
    *(vp++) = I0[272] + CD0*I1[272];
    *(vp++) = I0[273] + CD0*I1[273];
    *(vp++) = I0[274] + CD0*I1[274];
    *(vp++) = I0[275] + CD0*I1[275];
    *(vp++) = I0[276] + CD0*I1[276];
    *(vp++) = I0[277] + CD0*I1[277];
    *(vp++) = I0[278] + CD0*I1[278];
    *(vp++) = I0[279] + CD0*I1[279];
    *(vp++) = I0[280] + CD0*I1[280];
    *(vp++) = I0[281] + CD0*I1[281];
    *(vp++) = I0[282] + CD0*I1[282];
    *(vp++) = I0[283] + CD0*I1[283];
    *(vp++) = I0[284] + CD0*I1[284];
    *(vp++) = I0[370] + CD1*I1[280];
    *(vp++) = I0[371] + CD1*I1[281];
    *(vp++) = I0[372] + CD1*I1[282];
    *(vp++) = I0[373] + CD1*I1[283];
    *(vp++) = I0[374] + CD1*I1[284];
    *(vp++) = I0[389] + CD2*I1[284];
    *(vp++) = I0[285] + CD0*I1[285];
    *(vp++) = I0[286] + CD0*I1[286];
    *(vp++) = I0[287] + CD0*I1[287];
    *(vp++) = I0[288] + CD0*I1[288];
    *(vp++) = I0[289] + CD0*I1[289];
    *(vp++) = I0[290] + CD0*I1[290];
    *(vp++) = I0[291] + CD0*I1[291];
    *(vp++) = I0[292] + CD0*I1[292];
    *(vp++) = I0[293] + CD0*I1[293];
    *(vp++) = I0[294] + CD0*I1[294];
    *(vp++) = I0[295] + CD0*I1[295];
    *(vp++) = I0[296] + CD0*I1[296];
    *(vp++) = I0[297] + CD0*I1[297];
    *(vp++) = I0[298] + CD0*I1[298];
    *(vp++) = I0[299] + CD0*I1[299];
    *(vp++) = I0[385] + CD1*I1[295];
    *(vp++) = I0[386] + CD1*I1[296];
    *(vp++) = I0[387] + CD1*I1[297];
    *(vp++) = I0[388] + CD1*I1[298];
    *(vp++) = I0[389] + CD1*I1[299];
    *(vp++) = I0[404] + CD2*I1[299];
    *(vp++) = I0[300] + CD0*I1[300];
    *(vp++) = I0[301] + CD0*I1[301];
    *(vp++) = I0[302] + CD0*I1[302];
    *(vp++) = I0[303] + CD0*I1[303];
    *(vp++) = I0[304] + CD0*I1[304];
    *(vp++) = I0[305] + CD0*I1[305];
    *(vp++) = I0[306] + CD0*I1[306];
    *(vp++) = I0[307] + CD0*I1[307];
    *(vp++) = I0[308] + CD0*I1[308];
    *(vp++) = I0[309] + CD0*I1[309];
    *(vp++) = I0[310] + CD0*I1[310];
    *(vp++) = I0[311] + CD0*I1[311];
    *(vp++) = I0[312] + CD0*I1[312];
    *(vp++) = I0[313] + CD0*I1[313];
    *(vp++) = I0[314] + CD0*I1[314];
    *(vp++) = I0[400] + CD1*I1[310];
    *(vp++) = I0[401] + CD1*I1[311];
    *(vp++) = I0[402] + CD1*I1[312];
    *(vp++) = I0[403] + CD1*I1[313];
    *(vp++) = I0[404] + CD1*I1[314];
    *(vp++) = I0[419] + CD2*I1[314];
  return vp;
}
/* Total number of FLOPs = 882 * ab_num */
