#!/usr/bin/env python
from optparse import OptionParser

configuration = {
    "top_srcdir" : "/Users/masaaki/psi4",
    "top_objdir" : "/Users/masaaki/psi4",
    "CXX"      : "mpicxx",
    "CXXDEF"   : "",
    "CXXOPT"   : "-O2",
    "CXXOTH"   : " -fopenmp",
    "CXXDBG"   : "",
    "CXXINC"   : " -I. -I$(top_objdir)/include -I$(top_srcdir)/include -I$(top_srcdir)/src/lib -I$(top_objdir)/src/lib -I$(top_srcdir)/madness/include -I$(top_srcdir)/madness/src/lib -I$(top_objdir)/madness/include -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6 -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6",
    "CXXFLAGS" : " -O2   -fopenmp $(CPPFLAGS) $(PSICPPFLAGS)",
    "LDFLAGS"  : "  /Users/masaaki/lib/libgoto2_penrynp-r1.13.a -L/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/config -ldl -lpython2.6 -lpthread",
    "CPPFLAGS" : "",
    "PSICPPFLAGS" : "-I. -I$(top_objdir)/include -I$(top_srcdir)/include -I$(top_srcdir)/src/lib -I$(top_objdir)/src/lib -I$(top_srcdir)/madness/include -I$(top_srcdir)/madness/src/lib -I$(top_objdir)/madness/include"
}

parser = OptionParser()

parser.add_option("--compiler", action="store_true", dest="cxx", help="Which compiler was used to compile PSI4.")
parser.add_option("--defines",  action="store_true", dest="defines")
parser.add_option("--opt",      action="store_true", dest="opt")
parser.add_option("--other",    action="store_true", dest="other")
parser.add_option("--debug",    action="store_true", dest="debug")
parser.add_option("--includes", action="store_true", dest="includes")
parser.add_option("--flags",    action="store_true", dest="flags")
parser.add_option("--cppflags", action="store_true", dest="cppflags")
parser.add_option("--psicppflags", action="store_true", dest="psicppflags")
parser.add_option("--srcdir",   action="store_true", dest="srcdir")
parser.add_option("--objdir",   action="store_true", dest="objdir")

(options, args) = parser.parse_args()

if options.cxx:
    print configuration["CXX"],
elif options.defines:
    print configuration["CXXDEF"],
elif options.opt:
    print configuration["CXXOPT"],
elif options.other:
    print configuration["OTHER"],
elif options.debug:
    print configuration["CXXDBG"],
elif options.includes:
    print configuration["CXXINC"],
elif options.flags:
    print configuration["CXXFLAGS"],
elif options.cppflags:
    print configuration["CPPFLAGS"],
elif options.psicppflags:
    print configuration["PSICPPFLAGS"],
elif options.srcdir:
    print configuration["top_srcdir"],
elif options.objdir:
    print configuration["top_objdir"],
