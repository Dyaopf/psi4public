if (NOT DEFINED DEFAULT_C_FLAGS_SET OR RESET_FLAGS)

  if(CMAKE_C_COMPILER_ID MATCHES GNU)
	  set(CMAKE_C_FLAGS         "-std=c99 -DRESTRICT=${restrict_keyword} -DFUNDERSCORE=1 -fPIC")
	  set(CMAKE_C_FLAGS_DEBUG   "-O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ")
	  set(CMAKE_C_FLAGS_RELEASE "-O3")
	  set(CMAKE_C_LINK_FLAGS    " ")
          if(ENABLE_VECTORIZATION)                                                    
		  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${C_ARCHITECTURE_FLAGS} ${DEFINITIONS}")
          endif()	      
          if(ENABLE_CODE_COVERAGE)                                                             
		  set(CMAKE_C_FLAGS      "${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage")
		  set(CMAKE_C_LINK_FLAGS "${CMAKE_C_LINK_FLAGS} -fprofile-arcs -ftest-coverage")
          endif()
  endif()
  
  if(CMAKE_C_COMPILER_ID MATCHES Intel)
          set(CMAKE_C_FLAGS         "-Wall -Wuninitialized -restrict -DRESTRICT=${restrict_keyword} -vec-report0 -std=c99 -fPIC") 
          set(CMAKE_C_FLAGS_DEBUG   "-O0 -g -w3 -vec-report")
          set(CMAKE_C_FLAGS_RELEASE "-O3 -ip")
          set(CMAKE_C_LINK_FLAGS    "-shared-intel -fPIC")
          if(ENABLE_VECTORIZATION)                                                    
		  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${C_ARCHITECTURE_FLAGS} ${DEFINITIONS}")
          endif()	      
  endif()
  
  if(CMAKE_C_COMPILER_ID MATCHES Clang)
	  set(CMAKE_C_FLAGS         "-std=c99 -DRESTRICT=${restrict_keyword} -DFUNDERSCORE=1 -fPIC")
	  set(CMAKE_C_FLAGS_DEBUG   "-O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ")
	  set(CMAKE_C_FLAGS_RELEASE "-O3")
          if(ENABLE_VECTORIZATION)                                                    
		  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${C_ARCHITECTURE_FLAGS} ${DEFINITIONS}")
          endif()	      
  endif()

  save_compiler_flags(C)

endif()
